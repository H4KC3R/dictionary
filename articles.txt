See discussions, st ats, and author pr ofiles f or this public ation at : https://www .researchgate.ne t/public ation/257832553
A study of angular motion of the ChibisM microsatellite with threeaxis
ﬂywheel control
Article    in  Cosmic R esearch · No vember 2012
DOI: 10.1134/S0010952512060044
CITATIONS
11READS
42
3 author s, including:
Some o f the author s of this public ation ar e also w orking on these r elat ed pr ojects:
Large Sp ace Struct ures A ttitude Contr ol View pr oject
Studies of attit ude dynamics of small sat ellit es and attit ude c ontr ol alg orithms de velopment  View pr oject
Michael Y u. Ov chinnik ov
Keldysh Instit ute of Applied Mathematics of Russian Ac ademy of Scienc es
236 PUBLICA TIONS    1,530  CITATIONS    
SEE PROFILE
Stepan Tk ache v
Russian Ac ademy of Scienc es
67 PUBLICA TIONS    317 CITATIONS    
SEE PROFILE
All c ontent f ollo wing this p age was uplo aded b y Michael Y u. Ov chinnik ov on 31 May 2018.
The user has r equest ed enhanc ement of the do wnlo aded file.ISSN 00109525, Cosmic Research, 2012 , Vol. 50, No. 6, pp. 431–440. © Pleiades Publishing, Ltd., 2012.
Original Russian Text © M.Yu. Ovchinnikov, S.S. Tkachev, S.O. Karpenko, 2012, publishe d in Kosmicheskie Issledovaniya, 2012, Vo l. 50, No. 6, pp. 462–471.
431INTRODUCTION
The problem of attitude control is important for
most spacecraft. In this paper, we discuss the con
trolled motion of the ChibisM  microsatellite. It is
designed to study atmospheric lightning discharges.The scientific instrumentation of the satellite requires
its threeaxis orientation relative to the orbital refer
ence frame. Damping of the satellite’s initial angularvelocity after its separation from the carrier is realizedby electromagnetic coils interacting with the geomag
netic field. Then, the spacecraft is stabilized in the
required position by means of flywheels. A magnetom
eter, a set of solar sensors with linear CCD arrays
1, and
three singleaxis angular velocity sensors are used as
sensors of attitude determination.
The problem of spacecraft attitude control is solved
using a threeaxis flywheel attitude control system.
Flywheel control is based on the PD controller2,
which ensures the existence of the required equilibrium position and its asymptotic stability . This type of
control is widely used in the active flywheel control
[1–6]. This paper presents the method for selectingthe control parameters. We study the processes of evolution of the flywheel angular momentum on a long
time interval. The influence of various disturbances on
the spacecraft motion relative to the center of massclose to equilibrium position is analyzed.
1Specialized analog integrated chip  consisting of a lightsensitive
silicon photodiodes and using the CCD (chargecoupleddevice) technology .
2PD (proportional derivative) is the control according to a mis
match in position and velocity .1. THE EQUATIONS OF CONTROLLED 
MOTION
The following reference frames are used for study
ing the system's dynamics:
OY1Y2Y3 is the nonrotating frame: the axis OY2 is
perpendicular to the equatorial plane, OY3 is directed
to the vernal equinox, OY1 complements this system to
the righthanded orthogonal frame, the origin of coor
dinates O is located at the center of mass of the satel
lite;
Ox1x2x3 is the body frame, whose axes are the prin
cipal central axes of in ertia of the spacecraft;
OX1X2X3 is the orbital frame: the axis OX3 is directed
along local vertical, OX2 along normal to the orbit
plane, and OX1 complements the system to the right
handed orthogonal frame. This system rotates aroundthe axis 
OX2 with the angular velocity equal to ωorb. In
what follows we assume that the orbit is circular , and
therefore, ωorb = const.
The relationship between frames Ox1x2x3 and
OX1X2X3 is giv en in tw o ways: by a set of angles α, β,
and γ (Fig. 1) (Euler angles), and by matrix A of direc
tion cosines.
In the case of using the angles, a conversion from
the system OX1X2X3 to the system Ox1x2x3 is made
through three sequential rotations (Fig. 1). The first
rotation is realized relative to the axis OX2 by the angle
α, the second around the axis O (in which the axis
OX3 transfers after the first rotation) by the angle β,
and the third around the axis Ox1 by the angle γ.3'xA Study of Angular Motion of the ChibisM  Microsatellite 
with ThreeAxis Flywheel Control
M. Yu. Ovchinnikov1, S. S. Tkachev1, and S. O. Karpenko2
1 Keldysh Institute of Applied Mathematics, Russian Acad emy of Sciences, Miusskaya pl. 4, Moscow, 125047 Russia
2 ScanEx Research and Development Center, Moscow , ul. L’va Tolstogo 22/5, Moscow, 119021 Russia
email: stevens_L@mail.ru
Received October 13, 2011
Abstract —We study the controlled angular motion of the ChibisM microsatellite. Executive elements are
three pairs of flywheels, whose axes are mutually perpen dicular. The task of the control system is realization
of a required program motion and support of its asymptotic  stability . In this paper, we synthesize a control
algorithm and study the evolution of the angular momentum  of flywheels on long time intervals. The attitude
accuracy is estimated for the case when  disturbances act upon the spacecraft.
DOI: 10.1134/S0010952512060044432
COSMIC RESEARCH  V ol. 50  No. 6  2012OVCHINNIKOV  et al.
The matrix of direction cosines
whose elements are expressed in terms of introduced
angles, describes the conversion from the orbital coor
dinate system OX1X2X3 to the bodyfixed frame
Ox1x2x3.
The spacecraft motion is given by the Euler’s
dynamical equations
(1.1)
and by the kinematic relationships
(1.2a)
or
(1.2b)
Here, K = Jωabs is the angular momentum of the
spacecraft; ωabs = ωrel + Aω0 is the vector of its abso
lute angular velocity; J is the inertia tensor of the
spacecraft with flywheels; Mc is the control torque;
Mext is the external forces torque; ωrel = (ω1 ω2 ω3)T is
the angular velocity vector of the system Ox1x2x3 rela
tive to OX1X2X3 written in projections onto the axes of
the system Ox1x2x3; ω0 = (0, ωorb 0)T is the absolute
angular velocity vector of the orbital frame in projec
tions onto the axes of this system; the socalled angu
lar velocity matrix W has the form
Let us require that the control would realize the
equilibrium position ωrel = 0, A = diag(1; 1; 1)  and
ensure its asymptotic stab ility . As was already men
tioned, the control is based on the PD controller. In
order to specify a concrete type of controller we use
the following Lyapunov function:
(1.3)
Here, aii are diagonal elements of the matrix of direc
tion cosines ( i = 1, 2, 3); ka is a positive coefficient of
proportionality (its dimensionality [ ka] = Nm). Func
tion (1.3) satisfies the conditions, which are imposedon the Lyapunov function by conditions of the Bar
bashin–Krasovskii theorem [7], namely: V = 0 at
ωrel= 0 and  A = diag(1, 1, 1); V > 0 at all other values
of ωrel and A. We write  in view of equations (1.1) and
(1.2a)
(1.4)
Here, we have introduced the designation S = (a23 –
a32; a31 – a13; a12 – a21)T. We require that the control
ensured the fulfillment of the equality  = 
then all conditions of the Barbashin–Krasovskii theo
rem on asymptotic stability ( kω > 0, [ kω] = N m s) will
be met. Controlling torque ensuring this equality takes
on the form
Let us take into account the fact that the orbit is circu
lar, then
As was already mentioned, the controlling torque is
created by three mutually orthogonal flywheels. We
present the controlling torque in the form
As a result, the control must satisfy the equation
and the closed system of equations describing the con
trolled motion of the spacecraft with three flywheels
can be represented as
(1.5)
Here, the first and second equations describe the controlled motion and the third equation describes the
control realizing this motion.
Further analysis will use the equations in dimen
sionless parameters. Let us introduce the designations
(1.6)cos cos sin sin cos
cos sin cos sin sin cos cos sin sin cos cos sin ,
cos sin sin sin cos cos sin sin sin sin cos cosαβ β −αβ ⎛⎞
⎜⎟= −αβγ +αγ βγ αβγ + αγ⎜⎟⎜⎟α β γ +αγ −β γ − α β γ +αγ ⎝⎠A
аbs ext c+ω × = +KKM Md
dt
=AW A/dotnosp
()
()tg23
23
12 31cos sin ,cos
sin cos ,
cos sin .α= ω γ−ω γβ
β=ω γ+ω γ
γ=ω − βω γ−ω γ/dotnosp
/dotnosp
/dotnosp
32
31
210
0.
0ω− ω ⎛⎞
⎜⎟=− ω ω⎜⎟⎜⎟ω− ω⎝⎠W
()
[]rel rel
11 22 331,2
(1 ) (1 ) (1 ) .=
+ − +− +−J
aV
ka a aωωV/dotnosp
rel c ext abs
00(, [
]).=+ −
×− − −MM
KJ W A A S/dotnosp
/dotnospaV
kωω
ωω
V/dotnosprel2,ω−ωk
cr e l
abs ext00
0 .ω=− − +
++ × −MS A
JWA K M/dotnospa kkωω
ωω
cr e l a b s e x t 0 .ω=− − + + × −MS J W A K Ma kkωω ω
ca b s . =− − ×MH H /dotnospω
abs rel
abs ext 0 ,ω +× = +
−− × +HH S
JWA K M/dotnospa kk ωω
ωω
rel rel
abs rel
abs ext 00, ,
.ω
ω++ = =
+× =
+− −× +JS A W A
HH
SJ W A KM/dotnosp /dotnosp
/dotnospa
akk
k
kωω
ωω
ωω
0
0m a x m a x 0 ,, .HHH m H tm=== /dotnospC O SM I C  R E SE A R C H   V ol .  5 0   N o .  6   2 0 12A STUDY OF ANGULAR MOTION OF THE  CHIBISM MICROSATELLITE 433
Here, Hmax and  are characteristics of flywheels,
maximum angular momentum and maximum reac
tion moment created by the flywheel, respectively .Then, we go over to dimensionless variables and
parameters:
(1.7)
In these variables, the first equation from (1.4) takes
the form
(1.8)
where we introduced the designations  = 
 =  In further consideration, equation (1.8)
will be used in order to choose controlling parameters
Ka and Kω, and it will serve as a basis for estimating the
attitude accuracy at different disturbances.
2. THE CHOICE OF CONTROLLING 
PARAMETERS
In this section the choice of the control parameters
is considered. We look for the parameters, which
ensure the maximum degree of stability of the charac
teristic equation of the linearized system [8–11]. For
this purpose, we linearize equation (1.8) in the neigh
borhood of the equilibrium position
supplement it by linearized kinematic relations (1.2b)
and then obtain
(2.1)
Now the characteristic equation of this system has theform
Its roots aremaxH/dotnosp
()rel
orb00
0
11 2 0 01,, , ,
diag 1 , .=== = τ
=θ θ = ωHh H h
I/dotnosp/dotnosp Hm t tt
JωΩ
ωΩ
' 0,aKKω ++ =ISΩΩ
aK2
01 ,atk J
Kω 01 . tk Jω
()100
010, 000,
001A⎛⎞
⎜⎟==⎜⎟⎜⎟⎝⎠Ω
'' '11
12 2
23 3
23 1' 20 ,
' 20 ,
' 20 ,
,, .a
a
aKK
KK
KKω
ω
ωΩ+ Ω+ γ =
θΩ + Ω + α=
θΩ + Ω + β=
α= Ω β= Ω γ= Ω
22
1
2
2(2 ) ( 2 )
(2 ) 0 .ωω
ωλ + λ+ θλ + λ+
×θ λ+ λ + =aa
aKK KK
KK
2
1,2
2
3,4 1
11
2
5,6 2
22118,22
118,22
118.22a
a
aKK K
KKK
KKKωω
ω
ω
ω
ωλ= − ± −
λ= − ± − θθθ
λ= − ± − θθθLet us find such relations of controlling parameters
Ka and Kω that the rightmost root of the characteristic
equation would lie as much as possible to the left (to
reach the maximum degree of  stability). Let us divide
the range of parameters into four parts (we assume that
the condition θ2 > θ1 > 1 is fulfilled):
Let us consider sequentially these four ranges. Taking
into account that θ2 > θ1 > 1 and at  ≤ 8Ka, the
degree of stability is determined by the expression ξ1 =
When 8θ2Ka <  the degree of stability is deter
mined by the expression
When 8Ka <  ≤ 8θ2Ka, the degree of stability is equal
to either ξ1 or ξ2. The equality ξ1 = ξ2 is valid under the
condition
(2.2)
Thus, we can construct (Fig. 2) broken lines that
are isolines with equal degrees of stability . In Fig. 2,
found parabola (2.2) is also constructed.
The straight line in Fig. 2 describes the limitation
on the maximum control torque of flywheels. It is
specified by the equation
H0t0/J1 = 2δmaxKa + ΩmaxKω. (2.3)
Here, δmax and Ωmax are maximum deviations in orien
tation and angular velocity . Relation (2.3) gives the
estimation of the maximum control torque required22
1
22
12 208 , 8 8 ,
88 , 8 .aa a
aa aKK K K K
KK K KKωω
ωω<≤ <≤ θ
θ<≤ θ θ<
2Kω
2
22. Kωθ
2,Kω
2
2118.22a KK Kωω ξ= − + −
2Kω
2 2
2
221.
8aKKωθ−=
θX3
x1x'3
γ
β
αX2X1x3
x'2
x'1x2
βαγ
Fig. 1.  Euler aircraft angles.434
COSMIC RESEARCH  V ol. 50  No. 6  2012OVCHINNIKOV  et al.
for the spacecraft reorientation. It was obtained by lin
earization of the last equation of (1.5) taking into
account the smallness of the external forces torque. All
points on the plane ( Kω, Ka) should lie below this
straight line. Thus, desired values lie at the intersection
of parabola (2.2) and straight  line (2.3). In this case,
Kω is found from the expression
and Ka at known Kω can be found, for example, from
(2.2). Thus, the expressions for the parameters providing for the maximum degree of stability are found.
3. THE STUDY OF EVOLUTION 
OF THE ANGULAR MOMENTUM 
OF FLYWHEELS IN THE NOMINAL MODE
In the nominal mode, the axes of the bodyfixed
and orbital frames coincide. Therefore, the gravita
tional moment is equal to zero and we will consider asthe external disturbing torque the aerodynamic and
magnetic torques. Let us investigate their influence.
Since in this mode
the first and second equations of system (1.5) become
identities. Let us write the third equation. It describes2
max 2
max 2
222
00 22
max
max 2 1 22
21
124 ,21 21ωΩ θ=−δθ −
⎛⎞ θθ+Ω + ⎜⎟δθ −θ − ⎝⎠K
Ht
J
отн100
0, 0 1 0 ,
001⎛⎞
⎜⎟==⎜⎟⎜⎟⎝⎠ω Aevolution of the angular momentum of flywheels when
the spacecraft is hold in equilibrium position under theaction of the magnetic moment caused by the residualmagnetization and of the aerodynamic moment
(3.1)
Let us take the following expressions for the aero
dynamic and magnetic moments [12]
respectively . Here, ρ is the atmospheric density; Cx is
the satellite drag coefficient, S is the characteristic
area of its crosssection;  is the velocity of orbitalmotion; 
ra is the radius vector of the center of pressure
in the bodyfixed frame; L is the residual magnetic
moment of the spacecraft; B is the induction vector of
the external magnetic field (we use the direct dipolefield as a model of the geomagnetic field). We rewrite
(3.1) in the coordinate form
(3.2)ma 00 0 . +× = + −×HH M M J/dotnospωω ω
am1,2=− ρ × = ×Mr M L B vxaCS v
v
orb orb
orb
orb
orb
orb13 2 0 3 0
2
23 3 0
10
2
31 2
10 202s i n s i n c o s ,
1cos sin2
2s i n s i n ,
1
2
cos cos sin .+ω =− ω −
=− ρ + ω
+ω
−ω = ρ
+− ωv
v/dotnosp
/dotnosp
/dotnospxa
xaHH L B t i L B i
HC S r L Bt i
LB t i
HH C S r
LB i LB t i200
150100
50
0 40 35 30 25 20 5
10 15
KωKa
36
9
3
3
3
3
6
66
6.56.56.5
12
6
Fig. 2.  Broken lines represent isolines with equal degree of stability , the straight line shows the constraint on control, and dashed
line is a parabola on which the sought for parameters of control are located.C O SM I C  R E SE A R C H   V ol .  5 0   N o .  6   2 0 12A STUDY OF ANGULAR MOTION OF THE  CHIBISM MICROSATELLITE 435
The solution to this syst em can be written as fol
lows:
(3.3)
It allows us to estimate the time, in which saturation ofthe flywheel system is reached (in fact, this is time,
when one needs to unload the flywheels). Let us write
down separately expressions for the saturation time 
ta
specified by the aerodynamic moment and the saturation time 
tm specified by the residual magnetization
These formulas are used to estimate the saturation
time, while expressions (3.3) describe the exact (for
the adopted model of disturbances) evolution of the
angular momentum of flywheels in time.
4. ACCOUNTING FOR DISTURBANCES 
ACTING UPON THE SPACECRAFT
The control law in (1.5) suggests that the control
moment is formed taking into account the magnitude
of the external forces torque. However, as a rule, this
moment is either unknown or its determination
requires installation of additional sensors and creates
additional load on the onboard computer. In addition,
other disturbances may also affect the spacecraft
motion, for example, connected with natural inaccuracies introduced when manufacturing the spacecraft .
We rewrite expression (1.4) in the form
(4.1)
where Md is the disturbing torque, whose existence
may be caused by both external actions and internal() orb orb
orb2
10 2
11 0 0
00
30
30
0
20cos 1cos2
coscos 1 sin
1sin sin ,2⎛⎞ ρ=ω + + ⎜⎟ωω ⎝⎠
⎛⎞×ω − − + ω ⎜⎟ω ⎝⎠
−ωvxa LB i C S rHH t
LB itH t
LBt t i
()orb
orb2
23 3 0
0
10 2 0
011sin sin2
2sin cos 1 ,=− ρ − ωω
+ω − +ωvxa HC S r t L Bt i
LB i t H
()orb
orb orb
orb
orb2
10 2
31 0
00
30
30
0
20
20
0cos 1sin2
coscos cos 1
sin sin 13cos sin .22⎛⎞ ρ=+ + ω⎜⎟ωω ⎝⎠
+ω + ω −ω
ω+ω −ωvxa Bi C S rHH t
LB iHt t
LB t iLBt t i/H5223
am00
222,.sin==
ρvxHHttLB i CS r
()rel abs abs
rel d 0(, [
]) , ,=− + × +
×+ − +HH
KJ W A S M/dotnosp/dotnosp
aV
kωω ω
ωωfactors. The first summand of (4.1) includes the terms,
which are calculated on the basis of known informa
tion, the second summand is determined by the distur
bances. We will construct such control, which is calculated on the basis of the first summand of (4.1). Simi
larly , let us require the fulfillment of the equality
then the first summand in (4.1) will be less than zero.
This means that at 
Md = 0 the control ensures the
asymptotic stability of the nominal motion. Hence,
the control moment  has the form
(4.2)
In this case, the control is formed only on the basis of
information on the motion of the orbital frame
OX1X2X3 and the data on the motion of the body frame
Ox1x2x3 relative to OX1X2X3. The drawback of this con
trol is the fact that, approaching to the equilibrium
position, one cannot guarantee the validity of the
inequality  < 0, and hence, asymptotic stability of
the required position. One can make an estimation ofthe minimum angular velocity , at which the condition
 < 0 is still valid with guarantee. Let us write (4.2) in
the form
The worst case is when 
(ωrel, Md) =ωrelMd, then –kω  +
ωrelMd < 0.
Hence, we obtain an estimate ωrel > Md/kω. Here,
the case in point is absolute values, and Md is the max
imum disturbing torque.
Let us describe an approach, which is used in order
to estimate the attitude accuracy at acting distur
bances. We write system (1.5) in dimensionless variables(1.7) with a new control law taking into account the fact
that 
Md = μM(A, Ωrel, h)J1/ (μ  1) :
(4.3)
The motion of the system at μ = 0 and τ → ∞ will tend
to the motion described by the equalities
(4.4)
Here, q = (γ α β)T; h10, h20, and h30 are constants. This
follows from asymptotic stability of the position q = 0,
Ωrel = 0. In this case, as was shown in [13], at μ  1 theabs abs rel 0 ,ω +× +× + − =HHK J W A S/dotnospakk ωω ω ω
abs+×HH/dotnospω
abs rel abs 0.ω +× = + −× −HH SK J W A/dotnospa kk ωω ω ω
V/dotnosp
V/dotnosp
() rel rel d2,.ω=− + M /dotnospVk ωω
rel2ω
2
0t /H11270
rel rel rel
abs rel
orb abs abs 00(, ,) ,
,
.ω
ω++ = μτ
=τ
+× = +τ
−ω − ×IS M A h
AW A
hh S
IwA Ia
adKKd
d
d
dKKd
tΩΩ Ω
ΩΩ
ΩΩ Ω
rel
orb orb
orb orb11 0 3 0 2 2 0
31 0 3 00, 0,
cos sin , ,
sin cos .==
=Ω τ − Ω τ =
=Ω τ +Ω τq
hh h hh
hh hΩ
/H11270436
COSMIC RESEARCH  V ol. 50  No. 6  2012OVCHINNIKOV  et al.
motion of the disturbed system will tend to the motion
in the vicinity of the equilibrium position. T o con
struct this motion, we make use of the Poincare
method. The solution is sought in the form
(4.5)
Since q(0) = 0 and  = 0, the equations for  and
q(1) take the form
Or
(4.6)
Here, we introduced the designation E = diag(1, 1, 1).
Since the general solution to the homogeneous system
is damping on the strength of asymptotic stability q =
0, Ωrel = 0, then in order to estimate the accuracy it is
sufficient to find a particular solution to inhomoge
neous system (4.6) Let us now turn to concrete exam
ples.
4.1. The Influence of External Disturbances 
Firstly , we consider the influence of external distur
bances on the accuracy of the attitude control system.
As disturbing torque, we consider, as in chapter 3, the
aerodynamic and magnetic torques. Then, the dis
turbing torque
As a small parameter, we consider here the following
ratios
Both here and below , the smallness of parameters
means that the control moment prevails over disturbing
ones ( µ  1). Since the orbit is circular, v/  = (1 0 0)T, to
estimate the attitude accuracy we use, as a model of
the magnetic field, the model of the direct dipole field.In this case, the disturbing torque in (4.6) takes theformrel rel rel(0) (1)
(0) (1)
(0) (1)...
...
...=+ µ +
=+ µ +
=+ µ +qq q
hh hΩΩ Ω
rel(0)Ωrel(1)Ω
rel rel
rel(1) (1) (1) (0)
(1) (1)2( , 0 , ) ,
.ω++=τ
=τIq M h
qadKK Ed
d
dΩΩ
Ω
rel2(1) (1) (1) (0)
2
(1) (1)
0, 02( , 0 , ) ,
0, 0.ω++ =τ τ
==Iq q q M h
qaddKK Ed d
Ω
( ) d2
2 0
11.2=− ρ × + × Me A l b vvxa atCS r L BJv
22
2 00
12
111,.2xattCS r L BJJμ= −ρ μ= v
/H11270 v
( )
()
()20 3
30 1 0
12 02s i n s i n c o s
1c o s s i n 2 s i n s i n .
1 cos cos sinlt i l i
lt i l t i
li l t i−ω− ⎛⎞
⎜⎟=−+ ω + ω⎜⎟⎜⎟+− ω ⎝⎠MAs was already mentioned, the estimation of the accu
racy of orientation is determined by the partial solu
tion to (4.6)
Here,
 
 
Thus, the obtained final formulas allow us to esti
mate the attitude accuracy at existing external distur
bances.
4.2. The Influence of Offdiagonal Elements
of the Inertia Tensor 
Let us now consider the case, when the inertia ten
sor of the spacecraft has offdiagonal elements. In
practice, this situation arises due to the fact that theprincipal axes of the spacecraft are determined inac
curately , which leads to an error in the realization of
control. In this chapter, we consider the influence of
such an error on the attitude accuracy . Let us present
the inertia tensor
in the form 
J = Jp + Jcent,
where  and 
We assume that the offdiagonal elements are much
smaller than the principal moments of inertia, i.e., J =
J1(Ip + µ1Icent).
For the sake of simplicity of calculations, we
assume that
In this case, K = J1(Ip + µ1Icent)ωabs + H.() 1orb orb
d
orb orb222 2cos sin,1 , 2 , 3 .22ωΩτ + Ωτ=+ =
−Ω + + Ωqii i
aiaab ciKIK K
()
()orb
orb orb
orb2
2
22 3 1
2
322s i n
2 sin 2 sin ,
2s i nω
ω⎛⎞Ω⎜⎟
⎜⎟ =μ − Ω + − Ω
⎜⎟
⎜⎟ −− Ω +⎝⎠aa
alK i
IK li l K i
IK li
( )
()orb
orb orb
orb2
2
2
21 2 3
222 s i n
2 sin 2 sin ,
sinω
ω⎛⎞ −Ω +
⎜⎟
⎜⎟ =μ − Ω + − Ω
⎜⎟
−Ω ⎜⎟⎝⎠ba
aKl i
li I Kl K i
lK i
23
1
12 1cos
.
cosli
li−μ⎛⎞
⎜⎟=− μ⎜⎟⎜⎟μ+ μ⎝⎠c
11 2 1 3
12 2 23
13 23 3JJJ
JJ J
JJJ−− ⎛⎞
⎜⎟=− −⎜⎟⎜⎟−−⎝⎠J
p1
2
300
00 ,
00⎛⎞
⎜⎟=⎜⎟⎜⎟⎝⎠JJ
J
Jcent12 13
12 23
13 230
0.
0−− ⎛⎞
⎜⎟=− −⎜⎟⎜⎟−−⎝⎠JJJ
JJ
JJ
13 23 12
3
1111.JJ J
JJJ=== µ /H11270C O SM I C  R E SE A R C H   V ol .  5 0   N o .  6   2 0 12A STUDY OF ANGULAR MOTION OF THE  CHIBISM MICROSATELLITE 437
Equations of motion (4.3), in this case, can be writ
ten in the form
Here, when deriving the disturbing torque, we use a
series expansion [14]
and retain in the equation only terms of first order in
µ3. Let us designate µ4 = µ3
Let us write the disturbing torque for (4.6)
Similarly to the previous case, we obtain
Thus, we have obtained estimates of the attitude
accuracy in the case of a noncoincidence of the con
struction and principal axes of inertia of the space
craft.
4.3. The Influence of Deviation of the Flywheel 
Axis from a Specified Position 
Let us study the influence of deviation of the fly
wheel axis relative to a specified position on the
dynamics of angular motion of the spacecraft. We con
sider that the angular momentum of the flywheels can
be written in the form
where H is the angular momentum, which is calcu
lated based on equation (4.2), matrix N contains only
offdiagonal elements, and parameter µ5  1  is
responsible for characteristic  values of the deviations.
In this case, the disturbing torque in (4.3) takes on the
form
and in (4.6)p rel rel cent p cent p rel
abs cent абс orb cent
abs rel
orb p abs p abs21 1
30
00
00(
),
,
.−−
ω
ω++ = μ +
−× − ω
=
+× = +
−ω − ×I S II II
II w A
AW A
hh S
Iw A I/dotnosp
/dotnosp
/dotnospaa
aKK t K S
t
KK
tΩΩ Ω
ΩΩ Ω
ΩΩ
ΩΩ Ω
( ) pc e n t pc e n t111
33 ...,−−−+µ = −µ +EI I I I E
orb22
0 .ωt
cent 00 . =− ×MIΩΩ
d440.22⎛⎞μμ=−⎜⎟⎝⎠qT
aaKK
( ) d 5 , =+ µHEN H
/H11270
abs rel
orb abs abs abs5
00 5(
),ω =− μ − × + +
−ω − × −μ ×MN h S
IwA I Nha KK
tΩΩ
ΩΩ Ω Ω
( )(0) (0)
00 . =× − ×MN h N h ΩΩFor simplicity of calculations, we assume that
matrix N has the form
Then, a partial solution to inhomogeneous equation
(4.6) determining the estimation of accuracy has the
form
Here,
  
It is seen that except for the dependence of the atti
tude accuracy on a small parameter, there exists a
dependence on the value of accumulated angular
momentum of the flywheels H10, H20, and H30.
4.4. The Influence of Errors in Determining Orientation 
and Angular Velocity 
Let us consider the influence of systematic errors in
determining the state vector on the accuracy of thespacecraft orientation. Let the vector of absolute
angular velocity be determined to a systematic error
Δω:
and the orientation to a systematic error Δα = Δβ =
Δγ: Ameas = A + ΔA, where ΔA = +   +
In this case, control (4.2) takes the form
then, the dimensionless disturbing torque looks like001
100.
010⎛⎞
⎜⎟=⎜⎟⎜⎟⎝⎠N
orb orb orb orb
orb orb
orb orb orb orb
orb orb2
22 2 2
2
22 2 2() s i n c o s
()
sin ( )cos
()
,1 , 2 , 3 .2ω
ω
ω
ω⎛⎞ω− ω −ω ω=⎜⎟ω− +ω ⎝⎠
⎛⎞ωω + ω − ω+⎜⎟ω− +ω ⎝⎠
+=ia
ii
ia
ia
i
ia
i
aJk t k tqa
Jk k
kt J k tb
Jk k
cik
10
01 0
30,H
H
H−⎛⎞
⎜⎟=ω⎜⎟⎜⎟⎝⎠a30
10
30,H
H
H⎛⎞
⎜⎟=⎜⎟⎜⎟⎝⎠b20
0.
0H−⎛⎞
⎜⎟=⎜⎟⎜⎟⎝⎠c
meas
abs abs=+ Δ ωωω ,
∂Δα∂αA ∂Δβ∂βA
.∂Δγ∂γA
( ) ( )
( ) () ()
() ( )abs rel
abs abs0
0,ω =− +Δ × + +Δ −Δ
++ Δ −+ Δ × + Δ
−+ Δ + ΔHH A
SS J
JW W A A/dotnosp
ak
kωω ωω ω
ωω ωω
ω
( ) d
abs abs0
00(
).ω =μΔ × − Δ −Δ − Δ
−Δ × − × Δ − Δ − ΔMh A S
JJ J w A J w Aa KK ΩΩ Ω
ΩΩ Ω Ω Ω Ω438
COSMIC RESEARCH  V ol. 50  No. 6  2012OVCHINNIKOV  et al.
Here, μ = t0Δω = Δα = Δβ = Δγ is the quantity char
acterizing an error (it is accepted Δω1 = Δω2 = Δω3 in
order to reduce calculations). The disturbing torque inequation (4.6) can be written as
.
This expression can be rewritten as follows:
Here, ΔM is a part of the disturbing torque that does
not depend on time. The first term gives the forced
oscillations and, as a result, an estimate of the accu
racy is as follows:
Here,
  
As in the previous chapter, there are forced oscilla
tions, whose amplitude depends on values of the accu
mulated angular momentum.
5. ANALYSIS OF THE ANGULAR MOTION OF 
CHIBISM  MICROSATELLITE
Let us illustrate the obtained results by calculations
for the ChibisM  satellite [15]. The tensor of inertia of
the spacecraft is J = diag(1.03 1.51 1.75) kg m2. The
inclination of the orbit is i = 56.7 °, and its altitude h =
550 km. Since the predamping is executed, at the
instant of the flywheel activation the magnitude of ini
tial relative angular velocity does not exceed 1 deg/s.Flywheel parameters are 
H0 = 0.072 N m s and m =
0.00023 N m.
Let us first calculate the control parameters. For
small velocities and deviations δmax = 0.1 rad, ωmax =()(0)
0
00 0 .ω =Δ × − Δ −Δ − Δ −Δ
×− × Δ − ΔMh A S
JJ J wa KK ΩΩ ΩΩ
ΩΩ Ω Ω
(0). =Δ × +ΔMh MΩ
orb orb orb orb
orb orb
orb orb orb orb
orb orb2
22 2 2
2
22 2 2() s i n c o s
()
sin ( )cos
()
,1 , 2 , 3 .22ω
ω
ω
ω⎛⎞ω− ω −ω ω=⎜⎟ω− +ω ⎝⎠
⎛⎞ωω + ω − ω+⎜⎟ω− +ω ⎝⎠
Δ++ =ia
ii
ia
ia
i
ia
ii
aaJk t k tqa
Jk k
kt J k tb
Jk k
cMikk
10 1
10 1 30 3
30 2,H
HH
HΔω ⎛⎞
⎜⎟=− Δ ω − Δ ω⎜⎟⎜⎟Δω ⎝⎠a30 2
10 3 30 1
10 2,H
HH
HΔω ⎛⎞
⎜⎟=Δ ω − Δ ω⎜⎟⎜⎟−Δ ω ⎝⎠b
20 3
20 10.H
H−Δ ω⎛⎞
⎜⎟=⎜⎟⎜⎟Δω ⎝⎠c0.001 s–1, whuch corresponds to the motion in the
vicinity of the equilibrium position
These parameters will be used to make estimations. In
order to estimate the attitu de accuracy we accept the
following values: Cx = 2.1, S = 0.1 m2. We consider that
the center of pressure is shifted from the center of mass by10% of the characteristic size, which is determined by the
characteristic area 
ra = 0.05 m. As the density of the atmo
sphere, we choose the average density for an orbit of the
altitude of 550 km, ρ = 2.86 ⋅ 10–13 kg/m3. The residual
dipole moment L = 0.1 A m2. The magnetic field
strength B = 5 ⋅ 10–5 T . Then, estimations of the atti
tude accuracy under the ac tion of external distur
bances are as follows:
T o calculate the estimations of the accuracy of ori
entation in the case of offdiagonal inertia tensor let us
accept μ1 = 0.01 ( ωоrbt0 ≈ 0.34, μ ≈ 0.001) . This corre
sponds to the accuracy of determination of the princi
pal central axes of inertia of the ChibisM  satellite. In
this case, our calculations give 
When calculating an estimation of the attitude
accuracy in the case of deviation of the flywheel axes
from the rated positions, we take H10 = H20 = H30 =
Hmax = 0.072 N m s.
In this case, the attitude accuracy is a quantity of
order of 0.03°. For calculations we used a value μ1 =
0.01 (this corresponds to deviation of the axis by 0.6°,
μ ≈ 0.003 ).
In the latter case, for an error of determination of
the angular velocity Δω = 0.01 deg/s and orientation
Δα = Δβ = Δγ = 1°, the maximum deviation from the
equilibrium position being about 2.5°.
Thus, among the above disturbances the largest
influence on deviation from the equilibrium position2
max 2
max 2
22 22
0 22
max
max 2 1 22
21
124 2 2 . 1 ,21 21ωΩ θ=−δθ −
⎛⎞ θθ+Ω + ≈ ⎜⎟δθ − θ − ⎝⎠K
mt
J
Nms, Nm. 50.8 , 0.07 0.00053ω ≈≈ =aaKk k
( )
( )2
0
2
0
0110.25 ,22
110.25 ,22
10.25 .2xa
a
xa
a
aCS r L Bk
CS r L Bk
LBkα= ρ + ≈ °
β= ρ + ≈ °
γ= ≈ °v
v
orb
orbdeg
deg2
4 1
00
2
4 1
00, 5 10 ,2
51 0 .2−
−ωα= β= μ ≈ ⋅
ωγ= − μ ≈ −⋅a
aJ
k
J
kC O SM I C  R E SE A R C H   V ol .  5 0   N o .  6   2 0 12A STUDY OF ANGULAR MOTION OF THE  CHIBISM MICROSATELLITE 439
have errors in determining orientation and angular
velocity . In addition, external disturbances apprecia
bly influence the attitude accuracy .
Let us now find the time, in which the flywheel sat
uration occurs owing to external disturbances. In view
of the fact that flywheels have the maximum angular
momentum H0 = 0.072 N m s, the saturation time is
tm≈ 8 h, and ta ≈ 4.5 days. Figure 3 shows the plots
illustrating the evolution of the angular momentum of
flywheels (2.7).
It is clear that the time to reach maximum angular
momentum of the flywheels is small. This is connected
with too large magnitude of the residual magneticmoment. One can find the way out of this situation, for
example, compensating it by a moment created by
electromagnetic coils.
CONCLUSIONS
In this paper, we have investigated the controlled
motion of the 
ChibisM  satellite with flywheels. We
have found parameters of the control algorithm of the
flywheel system. The final relationships are obtained
allowing us to estimate the attitude accuracy under
acting disturbances. Estimations are made for thegiven parameters of the 
ChibisM  microsatellite. These
estimations have shown that at given parameters of the
microsatellite the major influence on a deviation from
the required position will have errors in determining
the orientation and angular velocity .
The processes of evolution of the angular momenta
of flywheels over long time intervals are studied. As a
result of the calculations, it was found that for specified values of the residual magnetic moment of the
spacecraft, the saturation time of the flywheel can be
only a few hours.
ACKNOWLEDGMENTS
This work was performed according to an order of
ScanEx Research and Development Center (contract
no. 9/0506SP) and supported by the Russian Foun
dation for Basic Research (project no. 090100431)
and the Ministry of Education and Science (project
no. 02.740.11.0860 and no. 13.G25.31.0028). We are
grateful to V.N. Branets for valuable comments.
REFERENCES
1. Branets, V.N. and Shmyglevskii, I.P ., Primenenie
kvaternionov v zadachakh orientatsii tverdogo tela
(Application of Quaternions in Problems of Orientation of Solid Bodies), Moscow: Nauka, 1973.
2. Wie, B. and Lu, J., Feedback Control Logic for Space
craft Eigenaxis Rotations under Slew Rate and ControlConstraint, 
J. of Guidance, Control, and Dynamics ,
1995, vol. 18, no. 6, pp. 1372–1379.
3. Wie, B. and Barba, P .M., Quaternion Feedback for
Spacecraft Large Angle Maneuvers, J. of Guidance Con
trol, and Dynamics , 1985, vol. 8, no. 3, pp. 360–365.
4. Kim, S. and Kim, Y., SpinAxis Stabilization of a Rigid
Spacecraft Using T wo Reaction Wheels, J. of Guidance,
Control, and Dynamics , 2001, vol. 24, no. 5, pp. 1046–
1049.
5. Si Mohammed, A.M., Benyettou, M., Bentoutou, Y.,
et al., ThreeAxis Active Control System for GravityGradient Stabilized Microsatellite,
 Acta Astronaut. ,
2009, vol. 64, nos 78, pp. 796–809.
0.1
0
–0.1
5.0 4.5 4.0 3.5 3.0 2.5 0 2.0 1.5 0.5 1.0H2, N m s H3, N m s
Time, orbits0.02
0
–0.02 H1, N m s0.1
0
–0.1
Fig. 3.  Evolution of the angular momenta of fl ywheels in the established regime under the action of an aerodynamic moment.440
COSMIC RESEARCH  V ol. 50  No. 6  2012OVCHINNIKOV  et al.
6. Aoustin, Y., Formal’sky , A., and Martynenko, Yu., Sta
bilization of Unstable Equilibrium Postures of a T woLink Pendulum Using a Flywheel, 
J. of Computer and
Systems Sciences International , 2006, vol. 45, no. 2,
pp. 204–211.
7. Barbashin, E.A. and Krasovskii, N.N., Stability of
Motion in the Large, Dokl. Akad. Nauk SSSR , 1952,
vol. 86, no. 3, pp. 453–456.
8. Tsypkin, Ya.Z. and Bromberg, P .V., Od Degree of Sta
bility of Linear Systems, Izv. Akad. Nauk SSSR, Otd.
Tekh. Nauk , 1945, no. 12, pp. 1163–1168.
9. Mirer, S.A. and Sarychev , V.A., Optimal Parameters of
SpinStabilized Satellite with a PendulumLikeDamper, 
Kosm. Issled. , 1997, vol. 35, no. 6, pp. 651–
658. [ Cosmic Research , pp. 609–615].
10. Sarychev , V.A., Pen’kov , V.I., and Yakovlev , N.I., Opti
mization of Parameters of Linear Systems, Preprint ofKeldysh Inst. of Applied Math., Russ. Acad. Sci. , Mos
cow , 1975, no. 124.
11. Sarychev , V.A. and Sazonov , V.V., Optimal Parameters
of Passive Attitude Control Systems for Satellites,
Kosm. Issled. , 1976, vol. 14, no. 2, pp. 198–208.
12. Sarychev , V.A., Issues of Attitude Control of Satellites,
vol. 11 of Itogi Nauki Tekh.: Ser. Issled. Kosmich. Prostr. ,
Moscow: VINITI, 1978.
13. Malkin, I.G., Teoriya ustoichivosti dvizheniya  (Theory
of Motion Stability), Moscow: Editorial URSS, 2004.
14. Gantmakher, F .R., Teoriya matrits (Theory of Matri
ces), Moscow: Nauka, 1966.
15. Ivanov , D.S., Karpenko, S.O., Ovchinnikov , M.Yu.,
Roldugin, D.S., and Tkachev , S.S., Laboratory T ests ofControl Algorithms for Microsatellite 
ChibisM, Pre
print of Keldysh Inst. of Applied Math., Russ. Acad. Sci. ,
Moscow , 2011, no. 40.
View publication statsCitation: Roldugin, D.; Tkachev, S.;
Ovchinnikov, M. Asymptotic Motion
of a Satellite under the Action of Sdot
Magnetic Attitude Control. Aerospace
2022 ,9, 639. https://doi.org/
10.3390/aerospace9110639
Academic Editor: Fabio Celani
Received: 9 September 2022
Accepted: 21 October 2022
Published: 24 October 2022
Publisher’s Note: MDPI stays neutral
with regard to jurisdictional claims in
published maps and institutional afﬁl
iations.
Copyright: © 2022 by the authors.
Licensee MDPI, Basel, Switzerland.
This article is an open access article
distributed under the terms and
conditions of the Creative Commons
Attribution (CC BY) license (https://
creativecommons.org/licenses/by/
4.0/).
aerospace 
Article
Asymptotic Motion of a Satellite under the Action of Sdot
Magnetic Attitude Control
Dmitry Roldugin *
 , Stepan Tkachev
 and Mikhail Ovchinnikov
Keldysh Institute of Applied Mathematics, Miusskaya Sq. 4, 125047 Moscow, Russia
*Correspondence: rolduginds@gmail.com
Abstract: Satellite angular motion under the action of the Sdot oneaxis magnetic control algorithm is
analyzed. Sdot control stabilizes the maximum moment of inertia axis towards the Sun. Evolutionary
equations that avoid singularity in the required position are derived. Linearization of equations
is performed and new variables that describe the maximum moment of inertia axis oscillations
amplitudes are introduced. The resulting equations are suitable for the averaging method application.
Evolutionary equations for slow variables are solved. Simpliﬁed evolutionary expressions are veriﬁed
with numerical simulation.
Keywords: magnetic attitude control; Sdot; Sun stabilization; spinning satellite
1. Introduction
An Sdot magnetic attitude control algorithm was proposed in [ 1]. This oneaxis control
was designed for the ChibisM satellite [ 2] to provide solar panels attitude towards the Sun
in emergency situation of the reaction wheels failure. Control was successfully used during
the extended mission lifetime in this particular situation [ 3]. The Sdot control has distinct
advantages and disadvantages. As an emergency control algorithm, it beneﬁts from a very
simple formulation, thus requiring negligible computation efforts in the commanded dipole
moment calculation. Moreover, this control directly utilizes the difference between two
consecutive Sun sensor measurements in a way similar to Bdot [ 4,5], thus avoiding attitude
determination routines. The disadvantages are ambiguity in the stabilization direction and
low expected accuracy compared to a typical oneaxis spin stabilization concept [ 6–13].
Sdot leads to the satellite rotation. There is no control over the rotation rate since Sun
sensors cannot provide information about the rotation around the Sun direction. Sdot
may be considered as a simple low performance version of spin stabilization suitable for
the Sun’s acquisition in an emergency situation. Similar approach is developed in [ 14]
where Sun sensors and magnetometer measurements are used for the Sun acquisition on
a Sunsynchronous orbit. In [ 15], only two magnetorquers are used. In [ 16], an intuitive
approach is centered around the solar panels’ current output for the control construction.
In [17] the Sun direction vector is utilized for the dipole calculation.
The present paper supplements results developed in [ 1]. Namely, paper [ 1] analyzes
the satellite motion in the Sun acquisition phase, which is far from the required one axis
stabilization. Asymptotic behavior is investigated showing that the satellite settles at the
rotation around the maximum moment of inertia axis while this axis aligns with the Sun’s
direction. However, the equations of motion used in [ 1] have singularity in the required
attitude. Attitude angles of the satellite and its angular momentum that are convenient for
the transient motion analysis cannot be used for the investigation of the motion near the
required attitude. The present paper ﬁlls this gap by introducing different evolutionary
equations that are free from singularity in the required attitude. These equations are further
linearized and new variables are introduced to represent the amplitudes of oscillations
near the Sun’s direction. Linearization is widely used to analyze stability with Floquet
Aerospace 2022 ,9, 639. https://doi.org/10.3390/aerospace9110639 https://www.mdpi.com/journal/aerospaceAerospace 2022 ,9, 639 2 of 17
theory, design speciﬁc magnetic attitude control, or to ﬁnd an approximate solution to the
equations of motion [ 18–22]. In the present paper, the evolution of amplitudes in linear
approximation is investigated using the averaging technique [ 23,24]. This technique is
well suited for the considered problem. The satellite settles at a constant rotation around
one axis and the control depends on the periodically varying geomagnetic ﬁeld. Both
situations are extensively studied [ 25–27] with the averaging approach to establish the
essential evolutionary dynamics of the satellite. The developed approximate solution is
veriﬁed with the numerical simulation in the paper.
2. Evolutionary Equations of Motion
Paper [ 1] utilizes classic evolutionary variables that are also commonly called Beletsky
Chernousko variables [ 28]. These variables include the angular momentum magnitude
and two sets of attitude angles describing the momentum vector and satellite position.
Evolutionary equations are convenient for the analysis of spinning satellite dynamics.
The rotation rate is characterized by a single variable. A single angle represents the
angular momentum vector attitude relative to the designated direction in the inertial
space. Similarly, a single nutation angle represents the discrepancy between the angular
momentum vector and the maximum moment of the inertia axis. However, the equations
exhibit singularity when any of these angles is close to zero. Therefore these equations are
well suited for the Sun acquisition motion analysis, but cannot be used in a Sun tracking
mode near the required attitude.
To overcome this problem, another set of angles is introduced in the paper. The general
approach remains the same. First, the angular momentum vector attitude in the inertial
space is established using two angles. Second, the satellite attitude relative to the angular
momentum vector is described with three angles. The difference with classic evolutionary
variables is that two pairs of angles represent the deviation of the angular momentum from
the required direction and the maximum moment of inertia axis deviation from the angular
momentum. As a result, this set of angles is less convenient to represent essential motion
characteristics, but at the same time the singularity is avoided.
2.1. Angular Momentum Vector Attitude
First the inertial reference frame OY 1Y2Y3is introduced. The origin is placed at the
Earth’s center (its motion is neglected on a short time interval of a few hours). Axis OY 3is
directed along the satellite orbit normal, and axis OY 1is directed towards the ascending
node of a keplerian orbit. This reference frame is used to introduce the geomagnetic
induction vector model.
Angular momentum motion is described relative to the inertial reference frame
OX 1X2X3. This frame has its OX 3axis directed towards the Sun. This direction is consid
ered constant since the dynamic analysis is conﬁned to a few hours and Earth’s motion
around the Sun can be neglected. Axes OX 1and OX 2may be chosen at will. Equations
of motion utilize satellite attitude with respect to the OXframe whereas the geomagnetic
induction vector is represented in the OYframe. Constant matrix C:OY!OXis used for
the transition between these frames. This matrix depends on the current Sun position OX 3
relative to the satellite orbit which is described by OYframe axes.
Reference frame OL1L2L3is associated with the satellite angular momentum. Axis
OL3is aligned with the momentum vector. The choice of OL1and OL2axes is somewhat
arbitrary for the singleaxis stabilized satellite. In the present paper this choice is governed
by the requirement of no singularity in the equations of motion when axes OL3and OX 3
coincide. To construct the OL1axis, consider the OX 1L3plane (Figure 1). The direction that
is perpendicular to OL3in this plane is designated as OL1. As there are two perpendicular
directions in this plane, the angle between OL1and OX 1L3should be acute for unambiguity
of the reference frame construction. Axis OL2is constructed to complement the right
handed reference frame. The transition from OXreference frame to OLframe is deﬁned by
two consecutive rotations. Corresponding angles are deﬁned in Figure 1. The ﬁrst rotationAerospace 2022 ,9, 639 3 of 17
is performed around the OX 1axis. This rotation aligns OX 2along OL2axis, and the rotation
angle is designated as r. A second rotation by the angle saround the OL2axis aligns the
intermediate third axis with the angular momentum direction OL3. The angle between
the angular momentum vector and the maximum moment of inertia axis is deﬁned as
cosb=cosqcosj.
Aerospace  2022 , 9, 639  3 of 20 
 
 of the reference frame construction. Axis OL 2 is constructed to complement the 
right handed reference frame. The t ransition from OX reference frame to OL frame is de
fined by two consecutive rotations. Corresponding angles are defi ned in Figure 1. The first 
rotation is performed around the OX 1 axis. This rotation aligns OX 2 along OL 2 axis, and the 
rotation angle is designated as 
 . A second rotation by the angle 
  around  the OL 2 axis 
aligns the intermediate third axis with the angular momentum direction OL 3. The angle 
between the angular momentum vector and the maximum moment of inertia axis is de
fined as 
  = cos cos cos . 
 
Figure 1. Angular momentum vector attitude in  the inertial space . 
The required Sun facing satellite attitude corresponds to the alignment of the an
gular momentum vector OL 3 with the Sun direction OX 3 which is characterized by angles 
== 0
. Unlike classic evolutionary variables, there is no single angle between OL 3 and 
OX 3. This complicates the interpretation of the dynamics. On the other hand, this elimi
nates singularity in the equations of motions. To derive these equations, the transition 
matrix OL → OX is established,  

    
    
=−
−cos 0 sin
sin sin cos sin cos
cos sin sin cos cosQ
. (1) 
Designating the angular momentum vector as 
L  and its magnitude as 
L  one ar
rives at a simple expression 
()=0,0,LL L  in OL frame. Angular momentum vector in the 
inertial frame OX is therefore  
()( )      =  = − 0,0, sin , sin cos ,cos cos .XLL LQ
  
Subscript X refers to the vector expressed in OX frame. Likewise other subscripts 
define vectors expressed in different frames further on.  
Taking the derivat ives of the momentum vector components in the inertial space 
and solving for 
L , 
, and 
  derivatives, equations that represent behavior of the an
gular momentum vector magnitude and its attitude in the inertial space are obtained,  
Figure 1. Angular momentum vector attitude in the inertial space.
The required Sunfacing satellite attitude corresponds to the alignment of the angular
momentum vector OL3with the Sun direction OX 3which is characterized by angles
r=s=0. Unlike classic evolutionary variables, there is no single angle between OL3
and OX 3. This complicates the interpretation of the dynamics. On the other hand, this
eliminates singularity in the equations of motions. To derive these equations, the transition
matrix OL!OXis established,
Q=0
@coss 0 sin s
sinrsins cosr sinrcoss
 cosrsinssinr cosrcoss1
A. (1)
Designating the angular momentum vector as Land its magnitude as Lone arrives at
a simple expression LL=(0, 0, L)inOLframe. Angular momentum vector in the inertial
frame OXis therefore
LX=Q(0, 0, L)=L(sins, sinrcoss, cosrcoss).
Subscript Xrefers to the vector expressed in OXframe. Likewise other subscripts
deﬁne vectors expressed in different frames further on.
Taking the derivatives of the momentum vector components in the inertial space
and solving for L,r, and sderivatives, equations that represent behavior of the angular
momentum vector magnitude and its attitude in the inertial space are obtained,
dL
dt=M3,
dr
dt= 1
LcossM2,
ds
dt=1
LM1,(2)
where Mkare the torque components in the angular momentum reference frame OLin the
following analysis.Aerospace 2022 ,9, 639 4 of 17
2.2. Satellite Attitude Relative to the Angular Momentum
Satelliteﬁxed reference frame Oz1z2z3is deﬁned by the principal central axes of inertia.
Satellite reference frame attitude relative to the angular momentum reference frame OLis
represented by the rotation angles y,q,jwith rotation sequence 321 (Figure 2).
Aerospace  2022 , 9, 639  4 of 20 
 
 
3
2
1,
1,cos
1,dLMdt
dMdt L
dMdt L

=
=−
= (2) 
where 
kM  are the torque components in the angular momentum reference frame OL in 
the following analysis.  
2.2. Satellite Attitude Relative to the Angular Momentum  
Satellite fixed reference frame Oz 1z2z3 is defined by the principal central axes of in
ertia. Satellite reference frame attitude relative to the angular momentum reference frame 
OL is represented by the rotation angles 
 , 
, 
 with rotation sequence 3 21 (Figure 
2). 
 
Figure 2. Satellite attitude relative to the angular momentum . 
The rotation matrix Oz→OL is 
           
           
     − + 
= + −
−cos cos sin cos sin cos sin cos cos sin sin sin
sin cos sin sin sin cos cos cos sin sin sin cos .
sin sin cos cos cosA
 (3) 
Axis Oz 3 is the maximum moment of inertia one further on. As the satellite settles at 
the rotation around the maximum moment of inertia axis in the Sun acquisition phase [1], 
this means that Oz 3 aligns with OL 3. The required attitude is therefore 
== 0 . Analo
gous to the angular momentum attitude, the maximum moment of inertia axis attitude 
relative to the angular momentum vector is defined by two angles instead of one in clas
sic evolutionary equations. However, the equations of motion do not exhibit singularity 
in the required position.  
Equations for the attitude angles require expressions for the angul ar velocity com
ponents. Projecting derivatives of angles depicted in Figures 1 and 2 on Oz frame axes 
yields  
( )       = = + + + +
131 31 11 31 21cos sin ,zLa a a a aA
  
Figure 2. Satellite attitude relative to the angular momentum.
The rotation matrix Oz!OLis
A=0
@cosycosqsinjcosysinq cosjsinycosjcosysinq+sinjsiny
sinycosqsinjsinysinq+cosjcosycosjsinysinq sinjcosy
 sinq sinjcosq cosjcosq1
A. (3)
Axis Oz3is the maximum moment of inertia one further on. As the satellite settles at
the rotation around the maximum moment of inertia axis in the Sun acquisition phase [1],
this means that Oz3aligns with OL3. The required attitude is therefore j=q=0.
Analogous to the angular momentum attitude, the maximum moment of inertia axis
attitude relative to the angular momentum vector is deﬁned by two angles instead of one in
classic evolutionary equations. However, the equations of motion do not exhibit singularity
in the required position.
Equations for the attitude angles require expressions for the angular velocity compo
nents. Projecting derivatives of angles depicted in Figures 1 and 2 on Ozframe axes yields
wz1=L
Aa31=.
ya31+.j+.r(cossa11+sinsa31)+.sa21,
wz2=L
Ba32=.
ya32+.
qcosj+.r(cossa12+sinsa32)+.sa22,
wz3=L
Ca33=.
ya33 .
qsinj+.r(cossa13+sinsa33)+.sa23,
where A,B,Care the principal moments of inertia of the satellite, aijare matrix Acompo
nents, wkare angular velocity components along Ozframe axes. Derivatives of the angular
momentum attitude angles r,sare given by (2). Solving equations for the satellite attitude
angles derivatives provides
dj
dt=Lsinq 
 1
A+sin2j
B+cos2j
C!
+1
Lcosq( M1siny+M2cosy),Aerospace 2022 ,9, 639 5 of 17
dy
dt=L 
sin2j
B+cos2j
C!
+1
LM2(cosytanq+tans) 1
LM1sinytanq, (4)
dq
dt=Lsinjcosjcosq1
B 1
C
 1
L(M1cosy+M2siny).
Equations (2)–(4) fully describe the angular momentum behavior in the inertial space
and satellite rotation relative to the angular momentum.
3. Satellite Environment
The satellite motion is considered in two different scenarios. The ﬁrst simpliﬁed
scenario is utilized to obtain the approximate evolutionary dynamics of the satellite. It is
subjected to the control torque only. Evolutionary equations of motion are solved with an
averaging technique revealing expressions that describe the satellite dynamics. In order
to verify this result, a second scenario is developed. The satellite is exposed to various
disturbance sources in the numerical simulation of initial equations of motion.
3.1. Control Law and Geomagnetic Field Model in Simpliﬁed Scenario
The control torque is
M=mB, (5)
where mis the control dipole moment, Bis the geomagnetic induction vector. Sdot control
law expression is [1]
m=kcos(!S), (6)
where kis a positive control gain, Sis the direction to the Sun, ais the angle between the
Sun direction and geomagnetic induction vector.
The direct dipole model is used for the geomagnetic ﬁeld representation. The induction
vector in OYframe is [29,30]
BY=B0
 3
2sin 2w0tsini,3
2cos 2w0t 1
2
sini, cos i
=B0(B1Y,B2Y,B3Y), (7)
where w0is orbital rate, B0=m/r3,m7.7245106Tkm3,ris the satellite radius vector.
Note that the induction vector magnitude is not constant. Its magnitude is
jBj=B0c(t), (8)
where c(t) =p
1+3 sin2w0tsin2iwith ibeing the orbit inclination. Unit induction vector
bYand its components are introduced according to
bY=BY/B0c(t),bkY=BkY/c. (9)
Despite not being exactly the induction vector magnitude, constant B0is used as a
general measure of the ﬁeld intensity (note that 1 c2).
Control torque, control dipole moment, and geomagnetic induction expressions com
plete the dynamical model (2)–(4).
3.2. Satellite Motion Framework in the Numerical Simulation
A numerical simulation is performed with classic Euler angles and quaternion
kinematics [31],
Jd!/dt+!J!=M,
.q0.q
=1
2q0
q
0
!
,Aerospace 2022 ,9, 639 6 of 17
where “” is the quaternion multiplication and Jis the satellite inertia tensor. The satellite
is subjected to the control torque, gravitational torque, aerodynamic torque, torque due to
the residual dipole moment, and disturbing torque due to the unknown or complex factors.
The control dipole moment (6) is simpliﬁed taking into account that dS/dt !S
for almost constant inertial Sun direction. Further simplifying the derivative as a ﬁnite
difference, the actual control becomes
m= kcosaSk Sk 1
Dt
where two Sun sensor measurements on two consecutive control steps are used. An IGRF
model [ 32] is used to represent the Earth’s magnetic ﬁeld for the control torque calculation.
Gravitational torque assumes a central Earth ﬁeld [ 31]. Aerodynamic torque is cal
culated as the sum of torques acting on the sides of a parallelepiped satellite facing the
incoming ﬂow [ 28]. The residual dipole moment has the constant value of the speciﬁed
magnitude along each satellite axis and periodic part with approximately orbital frequency.
Other factors, for example solar radiation pressure, Earth’s oblateness, etc. are generalized
under constant and periodic torques, the latter having orbital and double orbital rates.
Finally, the Sun’s direction is determined with constant bias and normally distributed noise.
4. Evolutionary Equations near the Required Attitude
Equations of motion (2)(4) are linearized near the required attitude characterized by
small angles j,q,r,s,
dL
dt=M3,dr
dt= 1
LM2,ds
dt=1
LM1,
dj
dt=Lq1
C 1
A
+1
L( M1siny+M2cosy),
dy
dt=L
C+1
LM2(qcosy+s) 1
LM1qsiny,
dq
dt=Lj1
B 1
C
 1
L(M1cosy+M2siny).
Linearization implies that quantities of the second order of small angles are ignored in
the series expansion of cosine function and third order is ignored in sine function. As a
result the direction cosines matrices (1) and (3) in the linear approximation become
Q=0
@1 0 s
0 1 r
 s r 11
A,A=0
@cosy siny q cosy+jsiny
siny cosy q siny jcosy
 q j 11
A. (10)
Speciﬁc expressions for the control dipole moment (6) and control torque (5) are
required to fully expand equations. Recalling that evolutionary equations utilize torque
components in OLframe, the Sun’s direction is calculated as
SL=QT(0, 0, 1 )=( s,r, 1).
Note that linearized matrix Q(10) is used. The angular velocity vector in OLframe is
related to the velocity vector in Ozframe as !L=A!z. The angular momentum vector
inOzframe is related to the angular velocity in the Ozframe and momentum in the OL
frame as Lz=J!z=AT(0, 0, L). Solving for the velocity in OLframe and using linearized
matrix Aprovides
!L=L0
@ 1
Aqcosy 1
Bjsiny+1
C(qcosy+jsiny)
 1
Aqsiny+1
Bjcosy+1
C(qsiny jcosy)
1
C1
A. (11)Aerospace 2022 ,9, 639 7 of 17
The linearized control dipole moment is therefore
mL=kcosa0
@w2L rw3L
 w1L sw3L
01
A,
where the angular velocity components wkLare given by (11). Angle abetween the Sun
direction and geomagnetic induction vector is calculated in the inertial reference frame.
The unit geomagnetic induction vector bXinOXframe is introduced according to (8) as
BX=B0c(t)bX. Speciﬁc expressions for the induction vector components are given in the
OYframe (7). Transition to the OXframe is performed according to bX=CbY. Without
expanding the transformation expression, bXcomponents are further designated as bkfor
the majority of the analysis. Note that the subscript “ X” that designates vector components
in the OXframe is omitted for brevity in bk.
Recalling that the Sun is directed along the OX 3axis and taking into account that
bkconstitute a unit vector bX, the angle between the Sun direction and the geomagnetic
induction vector is calculated as cosa=b3. The induction vector in the OLframe is
required for the torque calculation,
BL=QTBX=B0c0
@b1 sb3
b2+rb3
b3+sb1 rb21
A.
Substituting the dipole moment and induction vector in the control torque expression
(5) provides
ML=kB0cb3L0
@ (sw3L+w1L)b3
(rw3L w2L)b3
(sw3L+w1L)b1 (rw3L w2L)b21
A.
Introducing this along with wkLexpressions (11) into the linearized equations of
motion yields
dL
dt=kB0cb3Lh
b1n
1
C(s+qcosy+jsiny) 1
Aqcosy 1
Bjsinyo
 
b2n
1
C(r qsiny+jcosy)+1
Aqsiny 1
Bjcosyoi
,
dr
dt=kB0cb2
31
C( r+qsiny+jcosy) 1
Aqsiny+1
Bjcosy
,
ds
dt= kB0cb2
31
C(s+qcosy+jsiny) 1
Aqcosy 1
Bjsiny
,
dj
dt=Lq1
C 1
A
+kB0cb2
31
C(ssiny+rcosy)+j1
C 1
B
,
dy
dt=L
C,
dq
dt=Lj1
B 1
C
+kB0cb2
31
C(scosy rsiny)+j1
C 1
A
.
Note that bkandcare timevarying and periodic.
Further analysis of the equations of motion requires small parameter introduction and
dimensionless time. Angular momentum magnitude L0and attitude angles are constant in
the absence of the torque. The satellite rotates uniformly in this case,
dy
dt=L0
C=constAerospace 2022 ,9, 639 8 of 17
The undisturbed rotation rate L0/Cand corresponding rotation period are used as a
base for the dimensionless time t=L0/Ct. Small parameter #=kB0/L0characterizes
the change of the angular momentum relative to its magnitude. The relative change is
slow if the control torque is weak enough, and #1. Finally, the dimensionless angular
momentum magnitude is expressed in terms of the undisturbed value as l=L/L0. Fully
dimensionless equations of motion are
.
l=#clb3h
b1n
s+qcosy+jsiny C
Aqcosy C
Bjsinyo
 
b2n
r qsiny+jcosy+C
Aqsiny C
Bjcosyoi
,
.r=#cb2
3
 r+qsiny+jcosy C
Aqsiny+C
Bjcosy
,
.s= #cb2
3
s+qcosy+jsiny C
Aqcosy C
Bjsiny
, (12)
.j=lq
1 C
A
+#cb2
3
ssiny+rcosy+j
1 C
B
,
.
y=l,
.
q=ljC
B 1
+#cb2
3
scosy rsiny+j
1 C
A
.
5. Linearized Equations Analysis
Equation (12) includes small parameters and therefore l,r, and sare slow variables,
whereas the rotation angle yis fast. Angles jandqrepresent the maximum moment of
inertia axis attitude relative to the angular momentum vector. Intuitively, the angle between
the maximum moment of inertia axis and the angular momentum changes slowly. This is
formalized in derivatives of jandqbeing proportional to their values, which are small
in linear approximation. However, the structure of the equations of motion requires slow
variable derivatives to be proportional to small parameter #for the averaging technique
application. Equation (12) does not satisfy this requirement. The additional change of
variables is performed to modify these equations.
5.1. Maximum Moment of Inertia Oscillations Amplitude
Angles jandqshould be replaced with new slow variables. Consider the torque free
motion of the satellite for this purpose. In this case #= 0 and
.j= l2
jq,
.
q=l2
qj,(13)
where l2
j=l(C/A 1),l2
q=l(C/B 1), and the angular momentum magnitude lis
constant. Note that Cis the maximum moment of inertia. The solution for (13) is
j=acos 
ljlqt blj
lqsin 
ljlqt
,
q=alq
ljsin 
ljlqt+bcos 
ljlqt
,(14)
where a=j(0),b=q(0).Aerospace 2022 ,9, 639 9 of 17
Torque inﬂuence on motion (14) results in change of amplitudes a,band frequency
ljlq. To ﬁnd this change, the derivative of the expression for jis introduced to (12)
leading to
.j=.acos 
ljlqt atdljlq
dtsin 
ljlqt aljlqsin 
ljlqt .
blj
lqsin 
ljlqt blj
lqtdljlq
dtcos 
ljlqt blj
lqcos 
ljlqt=
 l2
j
alq
ljsin 
ljlqt+bcos 
ljlqt
+#Mj+
#cb2
3
1 C
B
acos 
ljlqt blj
lqsin 
ljlqt
,
where Mj=cb2
3(ssiny+rcosy). Note that expressions (14) are used for jandqin (12).
The frequency derivative is
dljlq
dt=d
dt
lq
(C/A 1)(C/B 1)
=#xMl,
where x=p
(C/A 1)(C/B 1),Mlis given by the right side of the ﬁrst equation in (12).
Simplifying yields
.acos 
ljlqt .
blj
lqsin 
ljlqt=#xtaM lsin 
ljlqt+#xtbM llj
lqcos 
ljlqt+
#Mj+#cb2
3
1 C
B
acos 
ljlqt blj
lqsin 
ljlqt
.
Performing similar operations with qprovides
.alq
ljsin 
ljlqt+.
bcos 
ljlqt= #xtaM llq
ljcos 
ljlqt+#xtbM lsin 
ljlqt+
#Mq+#cb2
3
1 C
A
alq
ljsin 
ljlqt+bcos 
ljlqt
,
where Mq=cb2
3(scosy rsiny).
Finally solving for the amplitudes derivatives
.a=#xtblj
lqMl+#Ma+#cab2
3
1 C
Bcos2 
ljlqt C
Asin2 
ljlqt
+
#cbb2
3lj
lq
C
B C
A
sin 
ljlqt
cos 
ljlqt
,
.
b= #xtaM l+#Mb+#cbb2
3
1 C
Bsin2 
ljlqt C
Acos2 
ljlqt
+
#cab2
3lq
lj
C
B C
A
sin 
ljlqt
cos 
ljlqt
,
Ma=Mjcos 
ljlqt+lj
lqMqsin 
ljlqt
,
where
Mb= lq
ljMjsin 
ljlqt+Mqcos 
ljlqt
.
Unlike derivatives of jandq, derivatives of aand bare proportional to the small
parameter. Treating (14) as the change of variables j,q!a,bthe equations of motion are
represented in the form
.
l=#clb3h
b1n
s+qcosy+jsiny C
Aqcosy C
Bjsinyo
 
b2n
r qsiny+jcosy+C
Aqsiny C
Bjcosyoi
,
.r=#cb2
3
 r+qsiny+jcosy C
Aqsiny+C
Bjcosy
,Aerospace 2022 ,9, 639 10 of 17
.s= #cb2
3
s+qcosy+jsiny C
Aqcosy C
Bjsiny
,
.a=#xtblj
lqMl+#Ma+#cab2
3
1 C
Bcos2 
ljlqt C
Asin2 
ljlqt
+ (15)
#cbb2
3lj
lqC
B C
A
sin 
ljlqt
cos 
ljlqt
,
.
b= #xtaM l+#Mb+#cbb2
3
1 C
Bsin2 
ljlqt C
Acos2 
ljlqt
+
#cab2
3lq
lj
C
B C
A
sin 
ljlqt
cos 
ljlqt
,
.
y=l,
Note that (15) retain jandqin the right side of three ﬁrst equations for brevity.
Expression (14) provides relevant dependency j(a,b)andq(a,b).
5.2. Averaged Equations of Motion
Equation (15) is suitable for averaging. It contains one fast variable ythat represents
the satellite rotation around the maximum moment of inertia. Slow variables are the
angular momentum magnitude, its attitude angles in the inertial space, and the amplitudes
of oscillations of the maximum moment of inertia axis relative to the angular momentum
vector. Note that Equation (15) also contains time in bkandc. However, the geomagnetic
induction vector changes with the orbital rate. Considering that the satellite rotation rate
is signiﬁcantly higher, Equation (15) is averaged over ytreating timedependent terms as
slowly varying parameters,.
l=#clb3(b1s b2r),
.r= #cb2
3r,
.s= #cb2
3s,
.a=#xtblj
lqMl+#cab2
3
1 C
Bcos2 
ljlqt C
Asin2 
ljlqt
+ (16)
#cbb2
3lj
lqC
B C
A
sin 
ljlqt
cos 
ljlqt
,
.
b= #xtaM l+#cbb2
3
1 C
Bsin2 
ljlqt C
Acos2 
ljlqt
+
#cab2
3lq
lj
C
B C
A
sin 
ljlqt
cos 
ljlqt
,
where Ml=clb3(b1s b2r).
Equations for the angular momentum attitude angles randshas the form dx/x=f(t)dt
and therefore can be directly solved. The exact expression f(t)and its integral depend
on the geomagnetic induction vector in the OXframe. Recalling from Section 2.1 that
BY=B0c(t)bY,BX=CBY, and expression (7), we arrive at
cb2
3=cB3X
c2
=1
c3
å
k=13
å
m=1c3kc3mBkYBmY (17)
Here ckmare transition matrix Celements. Induction vector components BkYare
introduced in (7). However, without specifying the Sun’s direction in the OYframe and
therefore coefﬁcients ckmit is evident that both angles exponentially tend to zero. The
angular momentum magnitude lcan be found after randsdirectly integrating the ﬁrst
equation in (16). As randstend to zero, the angular momentum magnitude tends to the
constant value. Overall, the angular momentum vector behavior is fully described by the
three ﬁrst equations in (16), which are independent from the last two equations.Aerospace 2022 ,9, 639 11 of 17
5.3. Maximum Moment of Inertia Oscillations Amplitudes Evolution
The maximum moment of inertia axis motion is described by the last two equations in
(16) and expressions (14). Unlike the ﬁrst three equations in (16), the equations for aand b
cannot be directly solved. However, the asymptotic stability of a=b=0equilibria can be
established. First, we assume that the angular momentum vector already settled near the
Sun’s direction, so angles randsare close to zero and therefore Ml0. Omitting the ﬁrst
term in equations for aand bprovides
.a=#cab2
3
1 C
Bcos2 
ljlqt C
Asin2 
ljlqt
+
#cbb2
3lj
lq
C
B C
A
sin 
ljlqt
cos 
ljlqt
,
.
b=#cbb2
3
1 C
Bsin2 
ljlqt C
Acos2 
ljlqt
+
#cab2
3lq
lj
C
B C
A
sin 
ljlqt
cos 
ljlqt
.(18)
These equations are independent from the equations describing the angular momen
tum evolution. The following change of variables is introduced,
a=as
lq
lj,b=bs
lj
lq(19)
Equation (18) is expressed as
 .a.
b!
=#cb2
3
1 C
2A C
2B1 0
0 1a
b
+
+1
2#cb2
3
C
B C
A cos 
2ljlqt
sin 
2ljlqt
sin 
2ljlqt
cos 
2ljlqta
b
.(20)
The next nonsingular change of variables is
a
b
=cos 
ljlqt
sin 
ljlqt
 sin 
ljlqt
cos 
ljlqtu
v
. (21)
Equation (20) in new variables are
.u.v
=#cb2
3
1 C
2A C
2B1 0
0 1u
v
+1
2#cb2
3
C
B C
A 1 0
0 1u
v
+
+ljlq0 1
1 0u
v
.
The Lyapunov candidate function for this equation is
V=1
2
u2+v2
.
The derivative of this function is
.
V=#cb2
3
1 C
B
u2+#cb2
3
1 C
A
v2.
This derivative is negative if Cis the maximum moment of inertia except for the
origin u=v=0. Therefore, the origin is asymptotically stable. Moreover, as changes of
variables (19) and (21) are afﬁne, the initial Equation (18) is stable at origin as well.
Equation (18) may be further simpliﬁed by applying averaging over time, thus leading
to double averaged equations. Expression cb2
3is expanded according to (17). The induc
tion vector components BkY, as well as c, periodically depend on time with frequencyAerospace 2022 ,9, 639 12 of 17
h=2w0C/L0. The averaging of Equation (18) requires right side expansion into a series of
trigonometric functions. Therefore, 1/ cshould be expanded. To do so, expression
1
c2=1
1+3 sin2(1/2ht)sin2i=1p
1+3 sin2i 
1+2¥
å
j=1k2jcosjht!
, (22)
where k=p
1+3 sin2i 1p
3 sin i2
is established ﬁrst [ 33]. Note that parameter kis relatively
small. For example, it is close to1
4for inclination 51.7. This parameter is present in powers
2jin (22). Only the ﬁrst term in (22) is retained since even this term is noticeably small due
tok20.055 . The root of (22) provides expression for 1/c. Decomposing the root in a
Tailor series with respect to small parameter k2yields
1/c=(1+3 sin i) 1/4
1+k2cosht
+O
k4
.
This expression, as well as expressions (7) for BkY, are introduced in (18), providing
.a=#a 
1+3 sin2i 1/4 
1+k2cosht(b0+b1cosht+fT(jht))
1 C
2B C
2A+fT(zt)
+
#b 
1+3 sin2i 1/4 
1+k2cosht(b0+b1cosht+fT(jht))
lj
lq
C
B C
A
fT(zt),
.
b=#b 
1+3 sin2i 1/4 
1+k2cosht(b0+b1cosht+fT(jht))
1 C
2B C
2A+fT(zt)
+
#a 
1+3 sin2i 1/4 
1+k2cosht(b0+b1cosht+fT(jht))
lq
lj
C
B C
A
fT(zt).
Here j=1, 2,z=ljlq,fTare trigonometric functions, parameters
b0=a2
0+1/2a2
1+1/2a2
2,
b1=2a0a1,
a0=c33cosi 1/2c32sini,
a1= 3/2c31sini,
a2=3/2c32sini
are derived from (7).
Functions fT(jht),fT(zt), as well as their products with cosht, are zero on average
provided that zandhare incommensurable. Therefore the double averaged equations are
.a=# 
1+3 sin2i 1/4
b0+1
2k2b1
1 C
2B C
2A
a,
.
b=# 
1+3 sin2i 1/4
b0+1
2k2b1
1 C
2B C
2A
b.(23)
These equations are independent. They are directly solved revealing the exponential
decay of the maximum moment of inertia axis oscillations amplitudes.
6. Numerical Simulation
Two numerical simulation scenarios are utilized. The ﬁrst one corresponds to the
simpliﬁed framework summarized in Section 3.1 and is used throughout the motion
analysis. The goal of this simulation is to verify simpliﬁcations adopted in the analysis
methodology, which is linearization of the equations of motion and their subsequent single
or double averaging. A second simulation scenario is based on the framework of Section 3.2Aerospace 2022 ,9, 639 13 of 17
and includes disturbance sources. This veriﬁes the applicability of developed approximate
results to the realistic formulation of satellite motion.
6.1. Simpliﬁed Scenario Simulation
Independent simulations of initial evolutionary Equations (2)(4), linear Equation (15),
averaged Equation (16), and double averaged Equation (23) are performed. The following
parameters are utilized:
 Inertia moments of the satellite 1.1, 1.3, 1.5 kg m2;
 Orbit inclination 51.7, altitude 550 km (derived parameters are B024,000 nT, orbital
ratew010 3s 1);
 The Sun’s direction in reference frame OYis deﬁned by two angles, rSandsS, equal
to 50 degrees each. These angles are introduced similarly to the angular momentum
vector attitude angles randsin Section 2.1, Figure 1. Accordingly, expression (1) is
used for the transition matrix Ccalculation;
 Control gain k= 60 kgm2/sT.
One of the simpliﬁcations utilized in the motion analysis is linearization of the equa
tions of motion. Attitude matrices Qand Aare linearized as well in (10). However, unlike
initial proper transition matrices, the linearized matrices are no longer orthonormal. There
fore, each time a transition between the reference frame is performed the transformed
vector is slightly “stretched”. Typically, this does not lead to noticeable errors since the
variables tend to zero in linear approximation anyway. In this paper one of the variables
is the angular momentum magnitude which is essentially nonzero in terminal motion.
Instead, it settles at a constant magnitude. This magnitude differs in linear and nonlinear
equations due to the stretching of the momentum vector in linear approximation. The
difference does not exceed the overall accuracy of the linearization assumption. However,
the difference may be reduced by adjusting the initial angular momentum magnitude.
Namely, the initial momentum magnitude is set to be identical in the inertial reference
frame OXin linear and initial equations of motion. Using nonlinear momentum as a base
one, recalling transformation rule LX=QL L, and momentum expression in OLframe
LL(0) = (0, 0, L(0)), the relation between initial conditions becomes
Llinear (0) =Lnonlinear (0)/kqk3k=Lnonlinear (0)/q
1+s2(0) +r2(0),
where matrix Qelements qk3are calculated in linear approximation. Another adjustment
of initial conditions is sometimes required for the averaged equations of motion. Initial
and averaged variables are generally not equal at t=0, and the averaging procedure is in
fact a change of variables. However, in the present case this adjustment turned out to be
unnecessary while requiring relatively bulky calculations.
Moving to the simulation results, Figure 3 provides the angular momentum magnitude.
Note that the angular momentum behavior is fully covered by the ﬁrst three averaged
equations in (16). It does not depend on the motion of the maximum moment of inertia
axis oscillations. Therefore, the angular momentum behavior is the same for averaged and
double averaged equations and the latter are not present in Figures 3 and 4.
The angular momentum magnitude remains almost constant according to Figure 3.
The satellite motion in the paper is considered near the required attitude, so it is close to the
required rotation and mainly wobble suppression is performed. The difference between the
averaged and initial equation may seem considerable in Figure 3. However, this difference
doesn’t exceed #2, which is the general averaging method accuracy.
Angular momentum attitude angles are provided in Figure 4.
Figure 4 indicates good accuracy of averaged equations in describing the angular
momentum evolutionary motion.
Oscillations of the maximum moment of inertia axis relative to the angular momentum
vector are revealed with Figure 5. Note that initial equations of motion (2)–(4) are absentAerospace 2022 ,9, 639 14 of 17
in Figure 5 since they lack the oscillations amplitudes and operate with original attitude
angles jandqinstead.
Aerospace  2022 , 9, 639  15 of 20 
 
 Independent simulations of initial evolutionary Equations (2)(4), linear Equation  
(15), averaged Equation  (16), and double averaged Equation (23) are performed. The 
following parameters are utilized:  
• Inertia moments of the satellite 1.1, 1.3, 1.5 kg·m2; 
• Orbit inclination 51.7°, altitude 550 km (derived parameters are 
0B ≈ 24000 nT, or
bital rate 
0  ≈ 10−3 s−1); 
• The S un's direction in reference frame OY is defined by two angles , 
S and 
S , 
equal to 50 degrees each. These angles are introduced similarly to the angular mo
mentum vector attitude angles 
  and 
  in Section 2 .1, Figure 1. Accordingly, 
expression (1) is used for the transition matrix 
C  calculation;  
• Control gain 
k  = 60 kg·m2/s·T. 
One of the simplifications utilized in the motion analysis is linearization of the 
equations of motion. Attitude matrices 
Q  and 
A  are linearized as well in  (10). How
ever, unlike initial proper transition ma trices, the linearized matrices are no longer or
thonormal. Therefore, each time a transition between the reference frame is performed 
the transformed vector is slightly “stretched”. Typically , this does not lead to noticeable 
errors since the variables tend to zero in linear approximation anyway. In this paper one 
of the variables is the angular momentum magnitude which is essentially non zero in 
terminal motion. Instead, it settles at a consta nt magnitude. This magnitude differs in 
linear and nonlinear equations due to the stretching of the momentum vector in linear 
approximation. The difference does not exceed the overall accuracy of the linearization 
assumption. However, the difference may be  reduced by adjusting the initial angular 
momentum magnitude. Namely, the initial momentum magnitude is set to be identical in 
the inertial reference frame OX in linear and initial equations of motion. Using nonlinear 
momentum as a base one, recalling tran sformation rule 
=XLL QL , and momentum ex
pression in OL frame 
()()() =0 0,0, 0LL L , the relation between initial conditions becomes  
()() ()()()  = = + +22
30 0 0 1 0 0 ,linear nonlinear k nonlinearL L L q
  
where matrix 
Q  elements 
3kq  are calculated in linear approximation. Another ad
justment of initial conditions is sometimes required for the averaged equations of motion. 
Initial and averaged variables are generally not equal at 
0t= , and  the averaging pro
cedure is in fact a change of variables. However, in the present case this adjustment 
turned out to be unnecessary while requiring relatively bulky calculations.  
Moving to the simulation results, Figure 3 provides the angular momentum mag
nitude. Note that the angular momentum behavior is fully covered by the first three av
eraged equations in  (16). It does not depend on the motion of the maximum moment of 
inertia axis oscillations. Therefore, the angular momentum behavior is the same for av
eraged and double averaged equations and the latter are not present in Figures 3 and 4.  
 
Figure 3. Angular momentum magnitude.
Aerospace  2022 , 9, 639  16 of 20 
 
 Figure 3. Angular momentum magnitude . 
The a ngular momentum magnitude remains almost constant according to Figure 3. 
The satellite motion in the paper is considered ne ar the required attitude, so it is close to 
the required rotation and mainly wobble suppression is performed. The difference be
tween the averaged and initial equation may seem considerable in Figure 3. However, 
this difference doesn’t exceed 
2 , which is the general averaging method accuracy.  
Angular momentum attitude angles are provided in Figure 4.  
 
Figure 4. Angular momentum attitude angles . 
Figure 4 indicates good accuracy of averaged equations in describing the angular 
momentum evolutionary motion.  
Oscillations of the maximum moment of inertia axis relative to the angular mo
mentum vector are revealed with Figure 5. Note that initial equations of motion  (2)(4) 
are absent in Figure 5 since they lack the oscillations ampli tudes and operate with origi
nal attitude angles 
  and 
  instead.  
 
Figure 5. Satellite oscillations amplitudes relative to the angular momentum . 
Figure 5 indicates that the simplest double averaged Equation  (23) may be used to 
analyze satellite dynamics relative to the angular momentum vector. Equation (23) and 
expressions (14) allow angle 
  between the angular momentum and the maximum 
moment of inertia axis (see Figure 1) calculation for the initial nonlinear equations of 
motion. Figure 6 presents a comparison of this angle in four simulation scenarios.  
Figure 4. Angular momentum attitude angles.
Aerospace  2022 , 9, 639  16 of 20 
 
 Figure 3. Angular momentum magnitude . 
The a ngular momentum magnitude remains almost constant according to Figure 3. 
The satellite motion in the paper is considered ne ar the required attitude, so it is close to 
the required rotation and mainly wobble suppression is performed. The difference be
tween the averaged and initial equation may seem considerable in Figure 3. However, 
this difference doesn’t exceed 
2 , which is the general averaging method accuracy.  
Angular momentum attitude angles are provided in Figure 4.  
 
Figure 4. Angular momentum attitude angles . 
Figure 4 indicates good accuracy of averaged equations in describing the angular 
momentum evolutionary motion.  
Oscillations of the maximum moment of inertia axis relative to the angular mo
mentum vector are revealed with Figure 5. Note that initial equations of motion  (2)(4) 
are absent in Figure 5 since they lack the oscillations ampli tudes and operate with origi
nal attitude angles 
  and 
  instead.  
 
Figure 5. Satellite oscillations amplitudes relative to the angular momentum . 
Figure 5 indicates that the simplest double averaged Equation  (23) may be used to 
analyze satellite dynamics relative to the angular momentum vector. Equation (23) and 
expressions (14) allow angle 
  between the angular momentum and the maximum 
moment of inertia axis (see Figure 1) calculation for the initial nonlinear equations of 
motion. Figure 6 presents a comparison of this angle in four simulation scenarios.  
Figure 5. Satellite oscillations amplitudes relative to the angular momentum.
Figure 5 indicates that the simplest double averaged Equation (23) may be used to
analyze satellite dynamics relative to the angular momentum vector. Equation (23) and
expressions (14) allow angle bbetween the angular momentum and the maximum moment
of inertia axis (see Figure 1) calculation for the initial nonlinear equations of motion. Figure 6
presents a comparison of this angle in four simulation scenarios.Aerospace 2022 ,9, 639 15 of 17
Aerospace  2022 , 9, 639  17 of 20 
 
  
Figure 6. Angle between the angular momentum and maximum moment of inertia axis . 
Figure 6 presents simulation results for different initial conditions. This was per
formed to assess the range of applicability of the linearization assumption. Close up №2 
in Figure 6 indicates that the approxim ate amplitudes derived from  (23)(14) provide 
very accurate prediction of the satellite maximum moment of inertia axis motion for 
small attitude angles up to 15 degrees. The accuracy is fairly accurate up to 30 degrees 
and linear approximation loses its ap plicability at about 40 degrees deviation. Close up 
№ 1 shows this situation. It is clearly seen that linear equations of motion diverge sig
nificantly from the nonlinear very quickly . Together with the angular momentum be
havior reported in Figure 4, Figure  6 provides overall confirmation of the applicability of 
the analysis method and the results adopted in Sections 4  and 5. 
  
Figure 6. Angle between the angular momentum and maximum moment of inertia axis.
Figure 6 presents simulation results for different initial conditions. This was performed
to assess the range of applicability of the linearization assumption. Closeup №2 in Figure 6
indicates that the approximate amplitudes derived from (23)–(14) provide very accurate
prediction of the satellite maximum moment of inertia axis motion for small attitude angles
up to 15 degrees. The accuracy is fairly accurate up to 30 degrees and linear approximation
loses its applicability at about 40 degrees deviation. Closeup №1 shows this situation.
It is clearly seen that linear equations of motion diverge signiﬁcantly from the nonlinear
very quickly. Together with the angular momentum behavior reported in Figure 4, Figure 6
provides overall conﬁrmation of the applicability of the analysis method and the results
adopted in Sections 4 and 5.
6.2. Simulation in a Realistic Scenario
Simpliﬁed results are further veriﬁed with the simulation of satellite motion with
various disturbance sources outlined in Section 3.2. The following parameters are used:
 aerodynamic torque calculation:
 satellite parallelepiped sides are 0.2, 1.1, 1.8 m. This is a simpliﬁed geometry of
ChibisM satellite which was equipped with solar panels;
 center of mass displacement relative to the center of pressure is 4, 6, 8 cm along satellite
frame axes;
 atmosphere density is 1.8 10 13kg/m3which corresponds to average solar activity
for 550 km orbit;
 residual dipole moment value is approximately 2 10 3Am2. This corresponds to
its possible estimation accuracy [34–36];
 Sun direction determination error is 1 degree, both for the constant bias and noise;
 unknown disturbance value is approximately half of the gravitational torque;
 control torque calculation and numerical integration steps are one second each;
 orbit is slightly elliptical with eccentricity 0.01.
The simulation result is provided in Figure 7 for the angle between the maximum
moment of inertia axis and the Sun’s direction.
Figure 7 indicates that averaged equations of motion adequately describe satellite
dynamics near the required attitude. Note that disturbance parameters strongly affect this
fact. For example, aerodynamic torque may have a lot higher magnitude during maximum
solar activity. Doubling its magnitude signiﬁcantly reduces the quality of the approximate
result compared to the numerical simulation. Clearly, the higher that the disturbances
magnitude is, the less is the accuracy of nodisturbance dynamics analysis. Extensive
numerical simulation of satellite motion under Sdot control with signiﬁcant disturbances
inﬂuence is present in [37].Aerospace 2022 ,9, 639 16 of 17
Aerospace  2022 , 9, 639  18 of 20 
 
 6.2. Simulation in a Realistic Scenario  
Simplified results are further verified with the simulation of satellite motion with 
various  disturbance sources outlined in Section 3.2. The f ollowing parameters are used:  
• aerodynamic torque calculation:  
• satellite parallelepiped sides are 0.2, 1.1, 1.8 m. This is a simplified geometry of 
Chibis M satellite which was equipped with solar panels;  
• center of mass displacement relative to the center of pressure is 4, 6, 8 cm along sat
ellite frame axes;  
• atmosphere density is 1.8  × 10−13 kg/m3 which corresponds to average solar activity 
for 550 km orbit;  
• residual dipole moment value is approxima tely 2  × 10−3 A·m2. This corresponds to its 
possible estimation accuracy [34–36]; 
• Sun direction determination error is 1 degree, both for the constant bias and noise;  
• unknown disturbance value is approximately half of the gravitational torque;  
• control torque calculation and numerical integration steps are one second each;  
• orbit is slightly elliptical with eccentricity 0.01.  
The s imulation result is provided in Figure 7 for the angle between the maximum 
moment of inertia axis and the Sun's directi on. 
 
Figure 7. Solar panels attitude relative to the Sun . 
Figure 7 indicates that averaged equations of motion adequately describe satellite 
dynamics near the required attitude. Note that disturbance parameters strongly affect this 
fact. For example, aerodynamic torque may have a lot higher magnitude during maxim um 
solar activity. Doubling its magnitude significantly reduces the quality of the approximate 
result compared to the numerical simulation. Clearly, the higher that the disturbances 
magnitude  is, the less is the accuracy of no disturbance dynamics analysis . Extensive nu
merical simulation of satellite motion under Sdot control with significant disturbances in
fluence is present in [37]. 
7. Conclusions  
Satellite motion in the Sun tracking mode is investigated. An Sdot magnetic attitude 
control algorithm is utilized. Equations of motion suitable for the analysis of satellite 
motion near the required attitude are derived. Satellite dynamics is analyzed in linear 
approximation with an averaging technique. Simplified e quations of motion that can be 
directly integrated are obtained. Attitude evolution towards the required motion is de
scribed with an accuracy of less than a degree if initial deviation is in the linear range. 
Simplified results are tested against the numer ical simulation results for the satellite 
dynamics with various disturbance sources showing an accuracy of a few degrees and 
the overall successful prediction of satellite evolutionary motion.  
Figure 7. Solar panels attitude relative to the Sun.
7. Conclusions
Satellite motion in the Sun tracking mode is investigated. An Sdot magnetic attitude
control algorithm is utilized. Equations of motion suitable for the analysis of satellite
motion near the required attitude are derived. Satellite dynamics is analyzed in linear
approximation with an averaging technique. Simpliﬁed equations of motion that can
be directly integrated are obtained. Attitude evolution towards the required motion is
described with an accuracy of less than a degree if initial deviation is in the linear range.
Simpliﬁed results are tested against the numerical simulation results for the satellite dy
namics with various disturbance sources showing an accuracy of a few degrees and the
overall successful prediction of satellite evolutionary motion.
Author Contributions: Conceptualization, M.O. and D.R.; methodology, D.R.; software, S.T.; formal
analysis, D.R.; writing—original draft preparation, D.R.; writing—review and editing, S.T. and M.O.
All authors have read and agreed to the published version of the manuscript.
Funding: This research received no external funding.
Data Availability Statement: Not applicable.
Conﬂicts of Interest: The authors declare that they have no conﬂicts of interest.
References
1. Karpenko, S.; Ovchinnikov, M.; Roldugin, D.; Tkachev, S. Oneaxis attitude of arbitrary satellite using magnetorquers only. Cosm.
Res. 2013 ,51, 478–484. [CrossRef]
2. Zelenyi, L.; Gurevich, A.; Klimov , S.; Angarov , V .; Batanov , O.; Bogomolov , A.; Bogomolov , V .; Bodnar, L.; V avilov , D.; Vladimirova, G.; et al.
The academic ChibisM microsatellite. Cosm. Res. 2014 ,52, 87–98. [CrossRef]
3. Ovchinnikov, M.; Roldugin, D.; Tkachev, S.; Karpenko, S. New oneaxis onesensor magnetic attitude control theoretical and
inﬂight performance. Acta Astronaut. 2014 ,105, 12–16. [CrossRef]
4. Stickler, A.C. A Magnetic Control System for Attitude Acquisition ; NASACR130145; NTRS: Washington, DC, USA, 1972.
5. Stickler, A.; Alfriend, K. Elementary Magnetic Attitude Control System. J. Spacecr. Rocket. 1976 ,13, 282–287. [CrossRef]
6. Shigehara, M. Geomagnetic attitude control of an axisymmetric spinning satellite. J. Spacecr. Rocket. 1972 ,9, 391–398. [CrossRef]
7. Thomson, W. Spin stabilization of attitude against gravity torque. J. Astronaut. Sci. 1962 ,9, 31–33.
8. Zavoli, A.; Giulietti, F.; Avanzini, G.; De Matteis, G. Spacecraft Dynamics Under the Action of Ydot Magnetic Control Law. Acta
Astronaut. 2016 ,122, 146–158. [CrossRef]
9. Avanzini, G.; de Angelis, E.; Giulietti, F. Spinaxis pointing of a magnetically actuated spacecraft. Acta Astronaut. 2014 ,94, 493–501.
[CrossRef]
10. de Ruiter, A. A faulttolerant magnetic spin stabilizing controller for the JC2SatFF mission. Acta Astronaut. 2011 ,68, 160–171.
[CrossRef]
11. Wheeler, P . Spinning Spacecraft Attitude Control via the Environmental Magnetic Field. J. Spacecr. Rocket. 1967 ,4, 1631–1637.
[CrossRef]
12. Soken, H.; Sakai, S.; Asamura, K.; Nakamura, Y.; Takashima, T.; Shinohara, I. FilteringBased ThreeAxis Attitude Determination
Package for Spinning Spacecraft: Preliminary Results with Arase. Aerospace 2020 ,7, 97. [CrossRef]
13. Aleksandrov, A.; Tikhonov, A. Monoaxial Electrodynamic Stabilization of an Artiﬁcial Earth Satellite in the Orbital Coordinate
System via Control With Distributed Delay. IEEE Access 2021 ,9, 132623–132630. [CrossRef]Aerospace 2022 ,9, 639 17 of 17
14. You, H.; Jan, Y. Sun Pointing Attitude Control with Magnetic Torquers Only. In Proceedings of the 57th International Astronautical
Congress, Valenica, Spain, 2–6 October 2006; p. IAC06C1.2.01.
15. Jan, Y.; Tsai, J.R. Active control for initial attitude acquisition using magnetic torquers. Acta Astronaut. 2005 ,57, 754–759.
[CrossRef]
16. Kim, J.; Worrall, K. Sun tracking controller for UKube1 using magnetic torquer only. IFAC Proc. Vol. 2013 ,46, 541–546. [CrossRef]
17. Ignatov, A.; Sazonov, V . Stabilization of the Solar Orientation Mode of an Artiﬁcial Earth Satellite by an Electromagnetic Control
System. Cosm. Res. 2018 ,56, 388–399. [CrossRef]
18. Morozov, V .; Kalenova, V . Stabilization of Satellite Relative Equilibrium Using Magnetic Moments and Aerodynamic Forces.
Cosm. Res. 2022 ,60, 213–219. [CrossRef]
19. Ergin, E.; Wheeler, P . Magnetic attitude control of a spinning satellite. J. Spacecr. Rocket. 1965 ,2, 846–850. [CrossRef]
20. Sorensen, J. A Magnetic Attitude Control System for an Axisymmetric Spinning Spacecraft. J. Spacecr. Rocket. 1971 ,8, 441–448.
[CrossRef]
21. Zhou, B. Lyapunov differential equations and inequalities for stability and stabilization of linear timevarying systems. Automatica
2021 ,131, 109785. [CrossRef]
22. Malkin, I. Theory of Stability of Motion ; U.S. Atomic Energy Commission, Technical Information Service: Oak Ridge, TN, USA, 1952.
23. Arnold, V .; Kozlov, V .; Neishtadt, A. Dynamical Systems III: Mathematical Aspects of Classical and Celestial Mechanics ; Springer:
Berlin/Heidelberg, Germany, 2007.
24. Bogoliubov, Y.; Mitropolsky, N. Asymptotic Methods in the Theory of Nonlinear Oscillations ; Gordon and Breach: Philadelphia,
PA, USA, 1961; ISBN 067720051X.
25. Celani, F. Robust threeaxis attitude stabilization for inertial pointing spacecraft using magnetorquers. Acta Astronaut. 2015 ,107,
87–96. [CrossRef]
26. Benson, C.; Scheeres, D. Averaged Solar Torque Rotational Dynamics for Defunct Satellites. J. Guid. Control. Dyn. 2021 ,44,
749–766. [CrossRef]
27. Aleksandrov, A.; Tikhonov, A. Averaging technique in the problem of Lorentz attitude stabilization of an Earthpointing satellite.
Aerosp. Sci. Technol. 2020 ,104, 105963. [CrossRef]
28. Beletsky, V . Motion of an Artiﬁcial Satellite about Its Center of Mass ; Israel Program for Scientiﬁc Translation: Jerusalem, Israel, 1966.
29. Ovchinnikov, M.; Penkov, V .; Roldugin, D.; Pichuzhkina, A. Geomagnetic ﬁeld models for satellite angular motion studies. Acta
Astronaut. 2018 ,144, 171–180. [CrossRef]
30. Antipov, K.; Tikhonov, A. Multipole models of the geomagnetic ﬁeld: Construction of the Nth approximation. Geomagn. Aeron.
2013 ,53, 257–267. [CrossRef]
31. Wertz, J. Spacecraft Attitude Determination and Control ; Springer: Dordrecht, Netherlands, 1990.
32. Alken, P .; Th ébault, E.; Beggan, C.; Amit, H.; Aubert, J.; Baerenzung, J.; Bondar, T.; Brown, W.; Califf, S.; Chambodut, A.; et al.
International Geomagnetic Reference Field: The thirteenth generation. Earth Planets Space 2021 ,73, 49. [CrossRef]
33. Ovchinnikov, M.; Roldugin, D. Magnetic attitude control and periodic motion for the inorbit rotation of a dualspin satellite.
Acta Astronaut. 2021 ,186, 203–210. [CrossRef]
34. Inamori, T.; Sako, N.; Nakasuka, S. Compensation of timevariable magnetic moments for a precise attitude control in nano and
microsatellite missions. Adv. Space Res. 2011 ,48, 432–440. [CrossRef]
35. Inamori, T.; Sako, N.; Nakasuka, S. Magnetic dipole moment estimation and compensation for an accurate attitude control in
nanosatellite missions. Acta Astronaut. 2011 ,68, 2038–2046. [CrossRef]
36. Busch, S.; Bangert, P .; Dombrovski, S.; Schilling, K. UWE3, inorbit performance and lessons learned of a modular and ﬂexible
satellite bus for future picosatellite formations. Acta Astronaut. 2015 ,117, 73–89. [CrossRef]
37. Roldugin, D.; Tkachev, S.; Ovchinnikov, M. Satellite Angular Motion under the Action of SDOT Magnetic One Axis Sun
Acquisition Algorithm. Cosm. Res. 2021 ,59, 529–536. [CrossRef]Intelligent Control and Automation , 2013 , 4, 313326 
http://dx.doi.org/ 10.4236/ica.2013.43037  Published Online August  2013 (http://www. scirp .org/journal/ica) 
Copyright  © 2013  SciRes.                                                                                  ICA  
Attitude Control of a Flexible Satellite by Using Robust 
Control Design Methods  
Reza Mohsenipour1, Hossein Nemati2, Mehrzad Nasirian1, Abdolreza  Kashani  Nia1 
1Malekashtar University of Technology, Tehran, Iran  
2East Tehran (QiamDasht) Branch , Islamic Azad University, Tehran, Iran  
Email: mohsenipour.r@tescooil.com , c.nemati@gmail.com , nasirian@mut.ac.ir , akashaninia@aut.ac.ir  
 
Received  April 1, 2013; revised May 1, 2013; accepted May 8,  2013 
 
Copyright © 2013 Reza Mohsenipour  et al. This is an open access ar ticle distributed under the Creative Commons Attribution L i
cense, which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly c ited. 
ABSTRACT  
The increase of satellite’ s dimensions has caused flexibi lity and formation of uncertainty in their model. This is because 
of space missions being more complex and using light moving structures in satellites. Satellites are also encountered 
with various circumferential disturbance torques. This uncertainty in mo del and disturbance torques will cause undesi r 
able performance of satellites ’ attitude control system. So, for attitude control of these satellites, those methods should 
be used which are robust to uncertainty of the plant ’s model and can reject the effects of disturbances and the measur e 
ment noise. One of these methods is the robust control design method. But, because of pole ’s place of these satellite ’s 
dynamics equations, the designing procedure of robust control will face difficulties. In this paper , by using an internal 
feedback as a novel idea, the satellite ’s dynamics equations are changed in such a way that the poles will be placed in 
proper locations. Then, for these new equations, by regarding the effects of flexibility as uncertainty and consi dering the 
uncertainty in inertia matrix of satellite, an  H∞ controller has been designed and for better performance, a μcontroller 
has been improved. Afterwards, these two controllers are analyzed and compared for the original dynamic equations, 
not for the modified ones. Also, for comparison, a classic controll er has been also designed for the original plant and 
eventually all these three controllers are compared with each other.  
 Keywords : Attitude Control of Satellite; Robust Control; Flexible Satellite; Uncertainty  
1. Introduction  
Designing satellites with v arious missions such as cl i 
matic, military, geology and astrological missions will 
cause the payloads being increased and as a result, the 
increase of their dimensions, weight and consumed po w
er. So, for more energy absorption, the effective sec  tion 
surface of satellite should be increased to installing more 
solar panels. On the other side, the existent limita  tions 
on satellites ’ launch will cause the restriction on their 
volume and weight. To decrease the volume of sat  el
lites, they are designed as a concentrated structure with 
some supplemental parts which are fastened before 
launch and are opened after settlement in orbit, and to 
decrease the weight of satellites, the light materials are 
used in designing structures. The whole of these factors; 
means light weight, low volume and large section surface 
will cause the flexibility of satellites ’ structure. In this 
case, preserving correct direction of main body and flexi  
ble parts encounter  with many challenges. A ccording to 
these realities, many theor etical researches have been  done to identify and con trol flexible structures [1,2].  
In the past three decades, the flexible satellites which 
are known as big spatial structures in some articles are 
considered a lot. In some NASA reports, the effect of satellites ’ flexibility in attitude control system, as u n 
usual acts, has been mentioned [3]. More researches on this issue have specified that the reason of this strange act is the flexibility of the structure which will be i nten 
sified in some cases by at titude contro l system [4].  
Before 70 ’s decade, the attitude control and stab iliza 
tion systems of satellites were designed according to d y 
namic modeling of rigid bodies and Single Input Si ngle 
Output (SISO) controllers. Along with the development of sp atial sciences in the late 70 ’s, big satellites which 
have flexible parts and include many sensors and a ctua 
tors were considered. So, the need for using co mplex 
control laws and Multi Input Multi Output (MIMO) con  
trol sy stems for satellites were found to be essential [5]. 
For high accuracy performance in pointing, three axis 
attitude control will be used for satellites which lead to a 
MIMO control system. Generally, satel lites are exposed R. MOHSENIPOUR   ET  AL . 
Copyright  © 2013  SciRes.                                                                                  ICA  314 
to various circumferential disturbances such as solar pre  
ssure torques, magnetic torques, aer odynamic torques 
and celestial dust. Moreover, in most cases the inertia 
matrix of satellite isn ’t specified exactly. So, designing 
the control system for flexible satellites will be e ncoun  
tered with a lot of problems [6]. T hree main issues in 
designing attitude control of satellite are the space env i 
ronmental disturbance, uncertainty in flexible stru cture 
and inertia matrix of satellite as well as  control input 
constraints [7].  
A review of using robust control for satellites is as fo l 
lows. In [8], designing of an optimal low order robust 
control with alpha shift for attitude control of a spac e 
craft with solar electric propulsion has been discussed. In 
this article, a new method of block shift for replacing 
different set s of closed loop eigenvalues by different 
values has been introduced. In [9], a mixed 2HH∞ 
controller is designed which considers both stability r o 
bustness and root mean square performance and is of 
particular interest for attitude control of microsatellites. 
The mixed 2HH∞ controller shows a remarkable ca  
pability of achieving a balanced tradeoff between 2H and H∞ performances. The authors in [10] describe 
modeli ng of a flexible structure and three axis controller 
design process. Also, they demonstrate the suitable pe r 
formance of this design in maneuverability by applying it 
to a large flexible spacecraft model. In [7], a mixed 
2HH∞ output feedback controller has been proposed 
for microsatellite attitude control with pole placement 
constraints against the internal uncertainty of m oment  
ofinertia variation and space environmental di sturbances. 
The simulation results demonstrate that the pre sented 
mixed 2HH∞ control system is robust stable and o p 
timal in the sense of 2H norm, and has good steady  
state and dynamic performance against parameter u ncer 
tainties and various disturbances for the mic rosate llite 
attitude control system. In [11], an optimiz ationbased 
approach is proposed for the robustness analysis of an attitude and orbit control system ( AOCS) for flexible 
satellites.  
In this paper, it is intended to design robust attitude 
control for  a flexible satellite with a desirable accuracy 
and performance against the uncertainty in the satellite ’s 
model and inertia matrix and with the existence of co n 
trol input constraints and in the presence of environ  
mental disturbances and measurement no ise. The rest of 
this paper is as follows. In Section 2, the dynamic equ a 
tions of a flexible satellite ’s attitude and the actuator of 
reaction wheel has been derived and the disturbances of space environment are discussed. Since the desirable 
attitude of  satellite ’ tracking has small angles around 
zero, the extracted equations of the satellite will be li n 
earized and combined with the equations of reaction 
wheel. In Section 3, it is shown that the original lin  earized equations of the satellite causes s ome problem in 
the robust control design procedure. So by using two unit 
feedbacks, its poles will be placed in a more proper place 
and new equations will be obtained. Also, in this section 
a nominal model for the satellite and needed weight 
functions for designing robust controller will be selected. 
In Section 4, a classical controller, based on Euler angels 
errors, for the original equations and an 
H∞ controller, 
by using the new idea of internal feedback, for the mod i 
fied equati ons will be designed. But, neither will achieve 
the desired robust performance for the original plant. 
Afterwards, to improve the performance of attitude co n 
trol, a μ controller for the modified equations will be 
designed to ensure the robust performance  for the or igin 
nal plant. Using the obtained results for all three co ntrol 
lers, the paper will be concluded in Se ction 5. 
2. System and Disturbances Modeling  
2.1. Satellite ’s Attitude and Reaction Wheel  
Modeling  
The kinematic equations of satellite ’s attitude are as b e 
low, 
[ ]
[ ]sin cos tan
cos sin
sin cos secpq r
qr
qrφ φ φθ
θ φφ
ψ φ φθ= ++
= −
= +

          (1) 
in which φ, θ and ψ are roll, pitch and yaw and 
[]T,,B
RB pqr=ω  is the angular velocity vector of orbital 
reference frame with respect to body frame stated in 
body frame. According to the definition, the orbit r efer 
ence frame ’s center conforms to satellite ’s center of mass, 
RZ axis is towards the earth center, RX axis is in d i 
rection of satellite ’s velocity and RY axis is vertical to 
plane of orbit so that transform the frame to a right hand 
orthogonal frame. The body frame will be selected in a way that its axes conform to main axes of  inertia. Vector 
B
RBω satisfies the equation  
0BB
BR RI
B
BRCS
CC SSS
SC CSSθψ
ω φψ φθψ
φψ φθψ= +
⋅ 
= − ⋅ +⋅⋅
−⋅ + ⋅⋅ωω ω
ω     (2)  
in which ω0 is the angular velocity of orbit, C and S 
are accordingly for cos and sin and 
T,,xyzωωω=ω  is the angular velocity of body frame  
with respect to inertial frame which will be obtained 
from Euler ’s moment equations. Assuming that body 
frame axes conforming to main inertial axes, Euler ’s 
moment equations is as  R. MOHSENIPOUR   ET  AL . 
Copyright  © 2013  SciRes.                                                                                  ICA  315 
( )( )
( )( )
( )( )dG
x wx y z z y y wz z wy
y wy z x x z z wx x wz
z wz x y y x x wy y wxhh h h h h
hh h h h h
hh h h h hωω ω ω
ωω ω ω
ωω ω ω+
++ − + −

=++ − + −
++ − + −

TT
    (3) 
in which dT is disturbance moment, h is angular 
momentum vector of satellite ’s rigid body, wh is the 
angular momentum vector of  reaction wheel and GT is 
the gravity gradient moment which will be obtained by 
Equation (4).  
()
()
()22
0
2
0
2
01.5 sin 2 cos
1.5 sin 2 cos
1.5 sin 2 sinzy
G zx
xyII
II
IIω φθ
ω θφ
ω θφ −

= −
− T        (4) 
Equations (1) to (4) form the dynamic nonlinear equa  
tions of satellite ’s attitude [12].  
Here, to pr oduce the moment, three reaction wheels 
will be used in direction of body axes. The block diagram of reaction wheel to control the attitude of satellite is as Figure 1 . In this figure u  is the output of controller and 
wh is the exer ted torque to satellite in direction of r e lated axis [12].  
Transfer function of Figure 1  is approximately as fo l 
lows [12].  
()1whsu≈
                  (5) 
So, the combination of the satellite ’s equations and the 
actuators is approximat ely the same satellite ’s equations, 
and the controller for satellite ’s equations will be d e 
signed apart from reaction wheel equations. Since the desirable angle which the satellite should track is around the zero angles and also to use the concepts of li near 
control and simplifying the analysis, the Equations (1)  
(4) can be linearized. By linearizing these equations around zero point, linear state space form of dynamic equations of satellite ’s attitude will be obtained as  
X AX Bu
y CX Du= +
= +
                (6) 
in which T,, ,,, , , ,wx wy wzhhh φθψφθψ= X , 
T,,wx wy wzhhh= u  and 
 
() ( )
()
()( )2
0 00
2
0
2
00 00 0 0 1 0 0 0 00
0 0 0 0 1 0 0 00
0 0 0 0 0 1 0 00
40 0 0 0 00
30 0 0 0 0 0 00
0 0 0 0 00
0 0 0 0 0 0 0 00
0 0 0 0 0 0 0 00
0 0 0 0 0 0 0 00yz xyz
x xx
xz
y
yx xzy
zz zII IIII II
III
II IIIII Iω ωω
ω
ωω ω



− − −+
− − =

 −− −− +− 




A  
000
000
000
100
100000000100 , 010000000 , 0
001000000
100
100
010
001x
y
zI
I
I




−
  − = = =  
 −



BC D
 R. MOHSENIPOUR   ET  AL . 
Copyright  © 2013  SciRes.                                                                                  ICA  316 
 
Figure 1. The block diagram of reaction wheel to control the attitude of satellite [12].  
 
Satellite ’s configuration  is as Figure 2 . The system 
response of satellite ’ attitude with given specifications in 
Table 1 , to one step with amplitude 510 m N−⋅ has been 
shown in Figure 3 . As it could be seen, the system is 
unstable in each three channels of roll, pitch and yaw.  
2.2. Disturbances Modeling  
One of the key issues in attitude control of satellites is 
the environment disturbances which deflect the attitude of sate llite from its desirable state and ignoring these 
disturbances make the designed controller completely use  
less. 
Magnetic torque : a magnetic torque will affect on sa t 
ellite ’s configure because of earth ’s magnetic field and 
satellite ’s magnetic materials. This torque will be o b 
tained by  
m= ×T MB                 (7) 
in which  M is the residual magnetic moments of the 
satellite caused by permanent and induced magnetism and the satellite generated current loops and B  is the geo  
centric magnetic flux density. Vector  B will be o btained, 
in orbit reference s ystem, by  
0
3
0cos sin
cos
2sin cosm
f
m
mti
i
tiωµ
ω
=B
r               ( 8) 
in which 157.9 10  Wb mfµ= ×⋅  and r is the beam of 
satellite ’s orbit and mi is the angle of satellite ’s orbit 
with respect to geomagnetic equator [ 13]. 
Aerodynamic torque : because of satellite ’s move  
ment in upper atmosphere of earth, an aerodynamic tor  
que will affect on satellite. This torque can be o btained as  
()2 1
2a d a a cpCAρ= × T v us           (9) 
in which ρ is the atm ospheric density, v is the v e 
locity of satellite, dC is the drag coefficient, au is the  
 
Figure 2.  The satellite’s configuration.  
 
Table 1. Satellite physical and orbital characte ristics.  
Parameter  value  
Size of satellite rigid body  (m)  0.75 × 0.75 ×0.75 
Size of a solar panel  (m) 3 × 0.75 
Weight (kg) 15 
Moment of inertia (kg∙m2) [1 4 2 ]  
Mean anomaly  (degree)  207.2033  
Eccentricity  0.0143013  
Inclination (degree)  55.5535  
Argument of perigee (degree)  153.6389  
Right ascension of ascending node (degree)  315.2281  
 
unit vector along velocity direction, aA is the area of 
vertical surface on au and cps is a vector from sate l 
lite’ center of mass to center of pressure [9].  
Solar torque : because of the contact of solar radiation 
particles with satellite, a dist urbance force will exert on 
satellite. This force can be obtained approximately by  
()13671 cosss s Aqcγ = +Fu         (10) 
in which c is the velocity of light, sA is the area o p 
posed to sun radiation, q is the reaction coefficient, γ 
is the radiation angle, su is the unit vector along sun 
radiation direction and cpC is the distance from the sat  
ellite ’s center o f mass to the solar pressure center [12].  
Now, by considering the dynamic equations of satel  
lite’s attitude and reaction wheel, the object is to design 
an attitude control system as shown in Figure 4 . R. MOHSENIPOUR   ET  AL . 
Copyright  © 2013  SciRes.                                                                                  ICA  317 
 
 
Figure 3.  Response of open loop system.  
 
 
Figure  4. The block diagram of satellite attitude control system.  
 
3. Selection of Nominal Model and Needed  
Weight Functions  
The modeling of flexible satellite will be done in a way 
that a nominal model ()0Ps  will be selected and flex i 
bility effects will be considered as uncertainty around the 
nominal model. These uncertainties lead to the pe rturbed 
models ()Ps . Equations (6) with nominal amounts of 
Table 1  will be considered as nominal model.  To co n 
sider flexibilit y effects, it is assumed that the inertia 
moments of satellite have 30 percentage of uncertainty. 
Since the system has unmodelled flexible parts, the u n 
certainty will be considered as multiplicative u nstruc  
tured. For a SISO system, the pe rturbed model structure 
of ()Ps  based on nominal model of ()0Ps , mult ipli 
cative unstructured uncertainty block of ()s∆  and un  
certainty weight fun ction of () Ws  is as 
()()()()0 1 Ps sW s P s= +∆       (11) 
which its block diagram is shown in Figure 5 . 
The weight function of () Ws  should be selected in a 
way that relation  
()()
()0:1PswsPsω∀ ≥−            (12) 
by condition 1∞∆≤  will be esta blished for all pe r 
turbed models of ()Ps  [14]. The transfer function m a 
trix of li nearized system is obtained as follows  
 
Figure 5. Block diagram of the perturbed model of P with 
multiplicative unstructured uncertainty.  
 
()() ()
()
() ()11 13
22
31 3300
00
000
00
0Ps Ps
Ps P s
Ps Ps
=
        (13) 
The satellite ’ attitude is a MIMO system, so for each 
element of this matrix, a weight function of ()ijws  
should be selected in such a way that, it satisfies the rela  
tion (12) for i , j = 1, 2, 3 . For elem ents with zero value, 
the uncertainty weight function could be equal to 1. Bode 
diagram of ()()01ij ijPs P s − for the non zero el ements  
of Equation (13) has been shown in Figure 6 . It could be 
seen that except for the ()()0 22 22 1 P sP s −, other fi g 
ures have big overshoots because of placement of some poles on imaginary axis. So, the weight func tions of 
()ijws  corresponding to those which should satisfy the 
relation (12), have also same overshoots and this will cause the issue of robust controller design face difficul  
ties [14]. The poles of non zero elements of Equation (13) 
are as  
66
1 2,3 4,5 0,  1.508 10 ,  9.308 10ppi pi−−== ±× = ±×  
One of the ways for elimination of this problem is di s  R. MOHSENIPOUR   ET  AL . 
Copyright  © 2013  SciRes.                                                                                  ICA  318 
 
10410310210120015010050050100150200250300Magnitude (dB)Bode Diagram P13/P1301
Frequency  (rad/s) 
 
104103102350300250200150100500Magnitude (dB)Bode Diagram P22/P2201
Frequency  (rad/s) 
 
1041031021014003002001000100200300Magnitude (dB)Bode Diagram P31/P3101
Frequency  (rad/s) 
 
10510410310210120015010050050100150200250Magnitude (dB)Bode Diagram P33/P3301
Frequency  (rad/s) 
Figure 6. Bode diagram of ()()−
01ij ijPs P s  for the non zero elements of Equation (13).  R. MOHSENIPOUR   ET  AL . 
Copyright  © 2013  SciRes.                                                                                  ICA  319 
 
placement of poles slightly [8]. But, here the amounts of 
inertia moments of satellite are so that the system’s poles which are on imaginary axis are very close to the origin and the problem won’t be s olved by this displacement, 
too. 
For overcoming this problem, equations should be 
changed in a way that poles go sufficiently away from imaginary axis. With a new idea, according to  Figure 7 ,  two unit internal feedbacks in the main nonlinear plant 
will b e made from roll and yaw outputs to first and third 
inputs respectively. So, the state space’s form of the 
modified linearized plant will be obtained as  
new X A X Bu
y CX Du′ = +′ = +
               ( 14) 
where  
 
()( )
()
()( )new
2
000
2
0
2
0000 0 0 1 0 0 0 00
0 0 0 0 1 0 0 00
0 0 0 0 0 1 0 00
41
0 0 0 0 00
30 0 0 0 0 0 00
1
0 0 0 0 00
0 0 0 0 0 0 0 00
0 0 0 0 0 0 0 00
0 0 0 0 0 0 0 00yz
xyz
x xx
xz
y
yx
xyz
zz zA
II
IIII II
III
II
IIIII Iω ωω
ω
ω ωω




− −+−+ 

− − =


− −+  −−−+ 




 
 and Figure 4  will ch ange to Figure 8 . 
The matrix of transfer function of the modified plant is 
as Equation (15).  
()() ()
()
() ()11 13
22
31 3300
00
000
00
0ss
ss
ss

=


       (15) 
The poles of non zero elements of Equation (15) are  
1 2,3 4,5 0,  1,  0.7071pp p= = ±= ± . 
Bode diagram of ()()01ij ijss −   for the non zero 
elements of Equation (15) are shown in Figure 9 . It can 
be seen that overshoots are eliminated. Now, weight 
functions of ()ijws  will be selected in a way that sati s 
fies the Equation (12) for the modified plant. This is done 
and shown in Figure 9 . 
The condition of robust stability for a SISO system is  
()() 1 wsT s∞<                (16) 
in which ()Ts  is the transfer function of desirable 
closed loop system and ()ws  is the weight function of 
unce rtainty [15]. Since the elements of Equation (15) are 
not reachable separately, the matrix of weight function 
will be s elected as  ()()
()
()1
2
300
00
00ws
Ws w s
ws
=
          (17) 
where  
() ()
1,2,3: maxi ijjws w sω
=∀≥          (18) 
So, weight functions will be obtained as Equations 
(19).  
()( )()
()()( )
()( )()5
220
1
18
20
2
3
2202
2
310 0.8
10.0025
0.02
0.0010 0.0005
10 0. 5 8Ws s
S
ss
Ws S
Ws s−
−
−+
+
+= +
= +
= + 
The condition of nominal performance for a SISO sy s  
 
 
Figure 7.  To make internal feedback in the main system.  R. MOHSENIPOUR   ET  AL . 
Copyright  © 2013  SciRes.                                                                                  ICA  320 
 
 
Figure 8. Block diagram of satellite attitude control with interna l feedback.  
 
tem is as  
()() 1sw sss∞<              (20) 
in which ()ss  is transfer function of the error to refer  
ence input and ()sws  is the sensitivity weight func tion 
[15]. Here, it’s desirable tha t the output of closed loop 
system track a sinus route with minimum control effort 
and error less than 2 ˚. So, the matrix of sensitivity weight 
function for the discussed system with trial and error will be selected as  
()()
()
()1
2
300
00
00s
ss
sws
Ws w s
ws

=

        (21)  
where  
()
()()21.5 2.25,  1, 2, 310.015 1.5 115isSSWs i
SS s++= =
+++  (22) 
For limiting the controller output, beside the weight 
functions of uncertainty and sensitivity, a related weight 
function will be selected as ()s 0.001Uw= . 
4. Controller Design  
In this part, for the Equations of original plant (6), a cla s 
sical controller, based on Euler angles errors, and for the Equati ons of the modified plant (14), two robust con trol 
lers 
H∞ and µ will be designed. Eventually, the ori  
ginal nonli near system, described by Equations (1) (4), 
will be simulated with each of three controlle rs in closed  
loop form. In simulations, the inertia moments of sate l 
lites have 30 percent of uncertainty as shown in Figure 10. The simulation of the closed loop system has done in 
two cases. In one case, the closed loop system response 
is obtained to z ero reference input and with 
dT equal to 
disturbance pulse, which is shown in Figure 11 . In the 
other case, the closed loop system response to a r efer 
ence sinus input with the amplitude of 15 degree in roll channel, 10 degree in p itch channel and 5 degree in yaw 
channel and 20  Hz frequency in the presence of space 
physical disturbances and measurement noise, is obtained to examine the performance of system in trac king. The 
RMS amount of attitude sensors ’ noise of and their error 
are considered equal to 0.01 ˚. 4.1. Classical Controller  
When a classical controller is designed for the equations of rigid body of a satellite, although it can be robust somehow against the uncertainty, but there isn ’t any gua  
rantee to have a desirable performance for a practical plant. Here, for the original plant with Equations (6), a classical controller has been designed based on Euler angles ’ errors and the control laws are as Equations (23) 
with coefficients  
2.25xK= , 1.5xdK= , 9yK=, 
6ydK=, 4.5zK=  and 3yzK= [12].  
()
()
()1
2
3x r xd
y r yd
z r yzuK K
uK K
uK Kφφ φ
θθ θ
ψψ ψ= −+
= −+
= −+

          (23) 
The closed loop system response to disturbance pulse 
for this controller has drawn in Figure 12 . Its pe rform 
ance in tracking and control effort has also been shown 
in Figures 13  and 14 respectively. Tracking er ror’s norm 
is about 5 ˚. 
4.2. H ∞ Suboptimal Controller  
Interconnections of system for designing H∞ subopt i 
mal controller, rega rding to selected weight functions, 
are as Figure 15 . In this figure, d is the disturbance 
and inp and outp are the input and output of unce r 
tainty  block, r espectively. By considering Figure 16 , the 
object is to find the controller ()Ks  which satisfies 
Equation (24). In this equation, ()Gs  is the generalized 
system [14].  
() stabilising min ,Kl F GK∞            (24)  
Designing H∞ suboptimal controller could be done 
in MATLAB by using the hinsyn command. This com  
mand will design an  H∞ suboptimal controller for the 
open loop system in Figure 15  [16]. Here, by using this 
command, an  H∞ suboptimal controller with the degree 
of 22 is obtained.  
For the closed loop system analysis with the H∞ sub 
optimal controller, from the aspect of robust stability, no  
minal performance and robust performance, the structure shown in Figure 17 , will be used. In this figure, the un  
certainty has been gathered in  Δ block which is con  
sidered as Equation ( 25). R. MOHSENIPOUR   ET  AL . 
Copyright  © 2013  SciRes.                                                                                  ICA  321 
 
104103102101100101300250200150100500Magnitude (dB)Bode Diagram P11/P1101 and W11
Frequency  (rad/s)           W11
           P11/P1101
 
104103102101100101300250200150100500Magnitude (dB)Bode Diagram P13/P1301 and W13
Frequency  (rad/s)          W13
          P13/P1301
 
105104103102101350300250200150100500Magnitude (dB)Bode Diagram P22/P2201 and W22
Frequency  (rad/s)           W22
           P22/P2201
 
104103102101100101300250200150100500Magnitude (dB)Bode Diagram P31/P3101 and W31
Frequency  (rad/s)           W31
           P31/P3101
 
104103102101100101300250200150100500Magnitude (dB)Bode Diagram P33/P3301 and W33
Frequency  (rad/s)           W33
           P33/P3301
 
Figure 9. Bode diagram of ()()−
01ij ijPs P s for the non zero elements of Equation (15).  R. MOHSENIPOUR   ET  AL . 
Copyright  © 2013  SciRes.                                                                                  ICA  322 
 
 
Figure  10. Changes of satellite inertia moments with 30 pe r 
centage of uncertainty.  
 
 
(N∙m) 
 
Figure 11. Disturbance p ulse input in simulation of the 
closed loop system response to disturbance.  
 
Closed Loop System to Disturbance  with Kclassic 
 
Figure 12.  The closed loop system response with K classic to 
the disturbance pulse of Figure 11.  
 
Closed Loop System to Tracking with Kclassic 
 
Figure 13. The closed loop system performance in tracking 
with Kclassic. Control Effort with K classic 
0 5 10 15 20 25 30 35 401.510.500.511.5
Time(sec)Amplitude(volt)   
  
roll
pitch
yaw
 
Figure 14.  The control effort of closed loop system with 
Kclassic in tracking.  
 
 
Figure 15.  The standard H ∞ configuration.  
 
 
Figure 16.  Closed loop LFT structure in H ∞ design.  
 
 
Figure 17.  Structure of closed loop system for  μ analysis.  R. MOHSENIPOUR   ET  AL . 
Copyright  © 2013  SciRes.                                                                                  ICA  323 
33 66 0:,0S
SF
F×× ∆  ∆= ∆ ∈ ∆ ∈ ∆      (25) 
The upper bound and low bound frequency response 
of µ for H∞ control ler is shown in Figure 18 . Re 
garding that for robust stability, the condition  
() ( )()1
00, ,1 WI FP K FP K−
∞+ ∆ ∆<      (26)  
should be established [14], it could be seen clearly that 
the closed loop system with hinK has guaranteed the ro  
bust stability.  
For nominal and robust performances, the Equations 
(27) and (28) should be established, respectively [14].  
() ( )1
0,1sW I FP K−
∞+∆ <              (27) 
() ( )()
() ( )
() ( )1
00
1
0
1
0,,
,1
,s
UWI FP K FG K
W I FP K
W I FP K−
−
−
∞+∆ ∆
+∆ <
+∆    (28) 
The frequency response of nominal and robust per  
formance s is shown in Figure 19 . It’s shown that the 
system with hinK has the nominal performance but 
hasn’t guaranteed the robust performance.  
The closed loop system ’s response with hinK to dis  
turbance pulse is drawn in Figure 20 . As it can be 
considered, the system in each three channels has eli  
minated the disturbance with lower overshoot than the classical controller. Its performance in tracking has been also shown in Figure 21 . In each three channels, the 
H∞ controller has better performance than the classical 
controller. The control effort in tracking, has been also drawn in Figure 22 . This control signal is smaller than 
the corresponding signal for classical controller.  
4.2. μ Synthesis: D K Iteration Method  
The block diagram of the closed loop system which is 
used in µsynthesis is as Figure 17 . In D K iteration 
method, a controller will be obtained from Equation (29).  
 
Robust Stability  with Khin 
10210110010110210300.010.020.030.040.05
Frequency (rad/s)µ   
  
upper bound
lower bound
 
Figure 18. Robus t stability of Khin. Normal Performance and Robust Performance with Khin 
1021011001011021030.70.80.911.1
Frequency (rad/s)µ      
  
nominal performance
robust performance
 
Figure 19. Nominal and robust performance of K hin. 
 
Closed Loop System Response to Disturbance with K hin 
 
Figure 20.  The closed loop system response with Khin to 
disturbance pulse in Figure 11.  
 
Closed Loop System Response to Disturbance with K hin 
 
Figure 21. The closed loop system performance in tracking 
with Khin. 
 
Control Effort with Khin 
0 5 10 15 20 25 30 35 401.510.500.511.5
Time(sec)Amplitude(volt)   
  
roll
pitch
yaw
 
Figure 22.  The control effort of closed loop system with K hin 
in tracking.  
 
()()()()()1
   ,
stabilising stabl,
min. phasemin min ,
lrK lL r DsD sD s F GK D s−
∞  (29) 
The object of  μsynthesis is to find a stabilizing con  R. MOHSENIPOUR   ET  AL . 
Copyright  © 2013  SciRes.                                                                                  ICA  324 
troller of ()Ks  so that the condition (30), is esta blished 
[14].  
()() ,1LF GK jµω∆ <            (30) 
By using MATLAB [16], after 6 repetitions, the µ 
controller  has been obtained with 0.993µ∆= . But, the 
obtained controller is with the degree of 52, which its 
implementation can be problematic. Usually, a r educed  
order controller is preferred. Here for reducing the degree 
of controller, Hanckel norm approximation is used [14].  
The reduced order controller from the main contro ller is 
with the degree of 19. The frequency r esponse of main 
µcontroller and reduced controller muK has been 
shown in Figure 23. It can be seen that the fr equency 
response of both controllers are completely on each ot h
er. 
The robust stability and robust performance analysis of 
muK controller are shown in Figures 24  and 25, r espec 
tively. It could be consi dered that contrary to the H∞ 
controller, this controller has guaranteed the robust pe r 
formance, in addition to robust stability.  
The response of the closed loop system with muK to 
disturbance pulse is drawn  in Figure 26 . According to 
this figure, the system has eliminated the disturbance in each three channels, well. Its performance in tracking 
and the control effort are shown in Figures 27  and 28, 
respectively, which are approximately the same as closed  
loop system with 
hinK. 
 
102101100101102103100102104Log Magnitude
Frequency (radians/sec)Bode plots of full and reducedorder controllers
  
102101100101102103101Phase (deg)
Frequency (radians/sec)fullorder controller
reducedorder controller
 
Figure 23.  Frequency responses of full  and reduced order 
controllers.  
 
Robust stability with K mu 
10210110010110210300.0050.010.0150.02
Frequency (rad/s)µ y  
  
upper bound
lower bound
 
Figure 24. Robust stability of K mu. Nominal Performance and Robust Performance with K mu  
  
 
Figure 25. Nominal and robust performance of  Kmu. 
 
ClosedLoop System Response to Disturbance  with K mu 
 
Figure 26.  The closed loop system response with K mu to di s
turbance pulse in Figure11.  
 
Closed Loop System Tracking  with Kmu 
 
Figure 27. The clos edloop system performance in trac king 
with Kmu. 
 
Control  Effort with Kmu 
0 5 10 15 20 25 30 35 401.510.500.511.5
Time(sec)Attitude(deg)   
  
roll
pitch
yaw
 
Figure 28.  The control effort of closed loop system with  Khin 
in tracking.  
 
In Figure 29 , the performance of two controllers, H∞ 
and µ, are compared with increasing of uncertainty 
norm. This figure shows that µcontroller will guara n R. MOHSENIPOUR   ET  AL . 
Copyright  © 2013  SciRes.                                                                                  ICA  325 
tee the robust performance for uncertainties with the 
magnitude of 1.012. For H∞ controller, the pe rform 
ance of closed loop will degrade more rapidly with the 
increase of uncertainty amplitude and won ’t guara ntee 
the robust performance for uncertainties more than the magnitude 0.9335.  
Three designed controllers have been compared with 
each other in Table 2. According to this table, the 
H∞ 
and µ robust controllers have better performance than 
the classical controller. Although H∞ and µ control 
lers perfor mance are approximately the same, but the 
most important criteria is to guarantee the robust pe rfor 
mance. According to Figure 29  and Table 2 , only the 
µcontroller satisfies this criteria; and also the degree of 
this controller is low er than the H∞ controller. So, it 
can be concluded that the µcontroller is the best option 
for this system comparing to the other controllers.  
5. Conclusion  
The aim of this paper is attitude control of a flexible sa t 
ellite by using robust controllers. To do so, a classical controller based on Euler degrees ’ errors and two robust 
controllers of 
H∞ and μ, by using the new idea of inter  
nal feedback to resolve robust controller design problem, 
were designed. The simulation results show that the H∞ 
and μ robust controllers are better than classical co ntrol 
ler, both in elimination  of disturbance and in tracking. 
The two H∞ and μ controllers have approximately the  
same performance regarding the disturbance elimin ation 
 
Performance Degradation Curve for K hin and with K mu 
 
Khin 
Kmu 
 
Figure 29.  Performance degradation for two controllers . 
 
Table 2. Comparing three designed controllers.  
muK hinK classicK   
0.987  1.0173  Value of  μ in robust performance  
analysis  
8.0311 7.5880 20.5475  Overshoot of response to distu rbance  
(deg)  
11.5372  10.3090  9.6297 Duration of  disturbance elimin ation  
with error 0.2 degree (sec)  
1.5852 1.5292 5.3089 Error norm in tracking (deg)  
27.8978  30.6285  35.8124  Control signal norm in tracking (volt)  and tr acking error. But, the  μcontroller guarantees the 
robust performance for the original plant, contrary to the 
H∞ controller and has a better performance regar ding 
the robustness against uncertainty of flexible stru cture of 
satellite. Furthermore, it has t he best performance to sat  
isfy control effort limitations. It has also of lower order in comparison to 
H∞ controller. Therefore, it could be 
concluded that the  μcontroller is the best choice among 
the other controllers . 
REFERENCE S 
[1] D. C. Hyland, J. L. Junkins and R. W. Longman, “Active 
Control Technology for Large Space Structures ,” Journal 
of Guidance , Contro l and Dynamics , Vol. 16, No. 5, 1993, 
pp. 801 821. doi:10.2514/ 3.21087  
[2] O. Morgul, “Control and Stabilization of a Flexible Beam Attached to a Rigid Body ,” International Journal of Con  
trol, Vol. 51, No. 1, 1990, pp. 11 31. 
doi:10.1080/00207179008934048
 
[3] R. B. Noll, J. Zvava and J. J. Deyst, “Effect of Structural Flexibility on Spacecraft Control Systems ,” Journal of 
Spacecraft and Rockets , 1969.  
[4] T. siamak, “On Attitude Recovery of Spacecraft Using Nonlinear Control ,” Ph.D. Thesis, Concordia Univer sity, 
Montreal , 2005 . 
[5] O. Z. Hayrani, “Dynamics and Control in Modal Space of 
Flexible Spacecraft ,” Ph.D. Thesis, Virginia Polytechnic 
Institute and State University, Blacksburg , 1979.  
[6] G.X. Li, J. Zhou and F.Q. Zhou, “Variable Structure 
Control for Flexib le Spacecraft ,” Proceedings of the  25th 
Chinese Control Conference , Harbin,  711 August 2006, 
pp. 943 946. 
[7] B. Wu, X. Cao and Z. Li, “Multi Objective Output  
Feedback Control for Microsatellite Attitude Control: An LMI Approach, ” Acta Astronautica, Vol. 64, No. 11 12, 
2009, pp.  1021 1031 . doi:10.1016/j.actaastro.2008.12.012
 
[8] M. SeetharamaBhat, A.  G. Sreenatha and S.  K. Shrivas  
tava, “Robust Low Order Dynamic Controller for Flexible  
Spacecraft ,” IEE Proceedings D, Vol. 138, No. 5, 1991 , 
pp. 460 468. 
[9] C. D. Yang and Y. P. Sun, “Mixed H 2/H∞ State Feedback 
Design for Microsatellite Attitude Control, ” Control E n 
gineering Practice, Vol. 10, No. 9, 2002, pp.  951970. 
doi:10.1016/S0967 0661(02)000497  
[10] J. S. Chae and T. W. Park, “Dynamic Modeling and Con  
trol of Flexible Space Structures ,” KSME International 
Journal , Vol. 17, No. 12, 2003, pp. 1912 1921.  
[11] W. Wang, P. P. Menon, D. G. Bates and S. Bennani, “Ro  
bustness Analysis of Attitude and Orbit Control Systems for Flexible Satellites ,” IET Control Theory & Applica 
tions , Vol. 4, No. 12, 2010, pp. 2958 2970 . 
doi:10.1049/iet cta.2009.0531
 
[12] M. J. Sidi, “Spacecraft Dynamics and Control a Practical Engineering Approach, ” Cambridge University Press, 
New York, 1997.  R. MOHSENIPOUR   ET  AL . 
Copyright  © 2013  SciRes.                                                                                  ICA  326 
[13] J. Kulkarni and M. Campbell, “An Approach to Magnetic 
Torque Attitude Control of Satel lites via H ∞ Control for 
LTV Systems ,” 43rd IEEE Conference on Decision and 
Control , Bahamas, 1417 December 2004, pp. 273277.  
[14] S. Skogestad and I. Postlethwaite, “Multivariable Feed  
back Control Analysis and Design, ” John Wiley & Sons, Hoboken, 2001 . 
[15] K. Zuou and J.  Doyle, “Essentials of Robust Control ,” 
Prentice Hall , Upper Saddle River , 1998 . 
[16] D.W. Gu, P. Hr. Petkov and M. M. Konstantinov, “R o 
bust Control Design with Matlab ,” Springer, Berlin, 2005.  
 
 Trans. JSASS Aerospace Tech. Japan
V ol. 16, No. 5, pp. 405411, 2018
DOI: 10.2322/tastj.16.405405Copyright© 2018 by the Japan Society for Aeronautical and Space Sciences and ISTS. All rights reserved.Attitude Contr ol Using Three Control Moment Gyros
By Andrew M ELDRUM,1)ShoNONOMURA ,2)KatsuhikoY AMADA,2)and Yasuhiro S HOJI2)
1)School of Engineering, Osaka University, Suita, Japan
2)Graduate School of Engineering, Osaka University, Suita, Japan
(ReceivedJune 27th, 2017)
In the case of threeaxis attitude control of spacecraft by control moment gyros (CMG), more than three CMGs are typically
used for redundancy. Even when one CMG fails and the redundancy is lost, the attitude control must be maintained. In this paper,
by focusing on attitude control with three CMGs, suitable steering laws are considered. In order to use the full angular momentumworkspace of three CMGs, singularity problems occur. The problems occur more severely than four CMG case. Two steering lawsforthefourCMGpyramidconfiguratio withoneCMGfailureareproposed;InverseKinematicsSteeringLogic(IKSL)andForward
And Backward Reaching Inverse Kinematics (FABRIK). The aim of each steering law is to provide gimbal rates from the calculation
of gimbal angles by inverse kinematics of the CMGs. IKSL exactly solves the inverse kinematics of the system, whereas FABRIKusesaheuristicapproachtofindin anapproximatesolutionoftheinversekinematicsproblem. Numericalsimulationsareperformedto validatethe eﬀectivenessof the proposed steering lawsas compared with the Singular Direction Avoidance(SDA)steering law.
Key Words: Spacecraft, Attitude Control, CMG, InverseKinematics, FABRIK
Nomenclature
A : Jacobian from gimbal rates to torque
hi: angular momentum of CMGi
htotal : total angular momentum of CMGs
hw : magnitude of wheel angular momentum
ˆgi: unit vectoralong gimbal axis of CMGi
β : skewangle
θ : gimbal angles
τs: attitude control torque
Subscripts
0 : initial
f : fina
r : reference
1. Introduction
For communication and observation purposes, attitude con
trol systems are needed to perform missions in space. Con
trol moment gyros (CMGs) are momentum exchange devices
to provide agile and precise attitude control of spacecraft with
out the use of fuel. Although they can produce a large outputtorque from a small input torque, they suﬀer singularity problems. CMGs are mainly classifie into three categories: sin
gle gimbal control moment gyros (SGCMGs), double gimbal
control moment gyros (DGCMGs), and variable speed control
moment gyros (VSCMGs).
1)Because of their simple mechan
ical structures, SGCMGs are often used for spacecraft. Be
causeaSGCMGhasonlyonedegreeoffreedom,threeormore
SGCMGs are necessary for threeaxis control. Usually an ar
rayoffourormoreCMGsisusedtoprovideredundancyintheeventofafailure. Themostpopularconfiguratio isapyramid
type SGCMG system (using four SGCMGs).
2,3)Merits of this
configuratio are redundancy and threeaxis symmetry of out
puttorque. Whilemuchresearchhasbeenconductedonitsnor
mal operation, limited research has been presented in the case
where one CMG fails and redundancy is lost. This paper willfocuson these topics.
CMG arrays are subject to singularities, where a set of gim
bal angles cannot realize the threeaxis control torque. These
singularstatesappearassurfacesinthemomentumspaceofthe
CMG system. The redundancy of four CMGs allows for smallgimbalmotiontopassthroughtheinnersingularsurfacesinthe
momentum space. However, in the case of three CMGs, larger
discontinuities in the gimbal angles often occur when crossing
thesesurfaces. Theseissuesmaybeavoidedbyreducingthean
gular momentum workspace not to encounter the singular surfaces,wheretheinversecalculationoftheJacobianmatrixfrom
the gimbal rates to threeaxis control torque cannot be calcu
lated. However, research shows that for the commonly usedskew angle of 54.7 degrees, to achieve singularity free opera
tion, the workspace is severely limited when one CMG fails.
4)
Althoughthisrestrictionisrelaxedbychangingtheskewangle,
the skew angle is usually fi ed to an optimal value for the four
CMG configuration Other research has investigated the fail
case with magnetic torquers used in conjuction,5)but the mag
nitudeofthecontroltorqueislimited. Toprovideagilecontrol,
the entire momentum workspace should be utilized without al
teringthe skewangle or the use of additional actuators.
The spacecraft cannot easily be repaired and refilled When
oneCMGfails,itswheelisspundownandattitudecontrolwiththe remaining CMGs becomes necessary. The current controlmethods depending on the redundancy sometimes cannot be
applied to the failure case. In this paper, therefore, two steer
ing laws are proposed to provide the control when one CMGin the pyramidtype SGCMG system fails: Inverse KinematicsSteering Logic (IKSL) and Forward And Backward ReachingInverse Kinematics (FABRIK) steering law.
6)In IKSL, the ex
act gimbal angles are determined from the inverse kinematics
of the system to realize a desired torque. When crossing the
singularsurfaces,discontinuitiesinthegimbalanglesmaygiverisetolargegimbalratesandmomentarytorqueerrors. Eveninthis case, this steering law is rather accurate and its logic does
not have singularities. However, IKSL is computationally exTrans. JSASS Aerospace Tech. Japan V ol. 16, No. 5 (2018)406pensive and complex. On the other hand, the FABRIK steering
law applies a heuristic method to solving the inverse kinemat
ics of CMG system. Unlike IKSL which firs find all exactsolutions to the inverse kinematics, FABRIK searches for onlyone approximate solution. It is an iterative method, where eachiteration often provides an output torque closer to the desiredtorque. Hence,thenumberofiterationsprovidesatradeo ﬀbe
tweenaccuracyandcomputationtime. WhileitcannotgivethesametrackingperformanceasIKSL,itiscomparablysimpleinitsimplementation.
The remainder of this paper is organized as follows: In Sec
tion2,thespacecraftmodelisintroducedwiththepyramidconfiguratio offourCMGswhereoneCMGfailsandisremoved.
In Section 3, two new steering laws are introduced and the de
tails of their algorithms are described. In Section 4, the resultsof the numerical simulations of the spacecraft attitude controlwith the proposed steering laws are shown and the characteristics of the simulation results are discussed. In Section 5, theconclusionsof the paper are presented.
2. Spacecraft Model
Here, an attitude control system using three CMGs shown in
Fig. 1isfocusedon. Thisconfiguratio assumesoneCMGfails
inthe popular pyramidconfiguratio of four CMGs.
𝒛𝒛
𝒚𝒚
𝒙𝒙 𝒈𝒈3
 𝒈𝒈1 𝒈𝒈2
Fig.1. Configuratio of three CMGs.
By using the skew angle βand gimbal angle of CMGi (ith
CMG), θi, the unit vector along the gimbal axis and that along
theangularmomentumofCMG iaredenoted ˆgiandˆhi,respec
tively. These vectorsare expressedas
[
ˆg1ˆg2ˆg3]
=sβ0−sβ
0sβ0
cβ cβ cβ, (1)
[ˆh1ˆh2ˆh3]
=−s1cβ −c2 s3cβ
c1−s2cβ−c3
s1sβ s2sβ s3sβ,(2)
where sin θi, cos θi, sin β, and cos βare abbreviated as si,ci,sβ,
andcβ, respectively. The magnitude of the angular momentum
of each CMG is the same for all CMGs and is denoted by hw.
The total angular momentum of three CMGs, htotal, is givenby
htotal=hw(ˆh1+ˆh2+ˆh3)
. (3)
The unit vector along the torque of CMGi is denoted by ˆτi=
ˆgi×ˆhi. The Jacobian matrix Afrom the gimbal rates to thecontroltorque is givenby
A=[
ˆτ1ˆτ2ˆτ3]
=−c1cβ s2 c3cβ
−s1−c2cβ s3
c1sβ c2sβ c3sβ.(4)
By using the Jacobian A, the attitude control torque τsgener
atedby the CMGs is givenby
τs=−hwA˙θ,θ=θ1
θ2
θ3. (5)
The gimbal rates of the CMGs, ˙θ, can be calculated directly
fromEq. (5),
˙θ=−1
hwA−1τs. (6)
WhendetA=0,A−1cannot be calculated and the CMGs are
in the singular state. In this paper, in order to avoid the sin
gularity issues, ˙θis obtained by using inverse kinematics that
calculates the gimbal angles from the total angular momentumofthe CMGs.
3. Steering Laws
Although most steering laws for attitude control the CMGs
havesingularityissues,inversekinematicsmethodshavenosin
gularities because these methods calculate ˙θfrom the gimbal
angles θ. In the following section, two steering laws are intro
duced. One is a comparatively analytical and accurate method
by a complex calculation. Another is a heuristic method by a
simplecalculation.
3.1. Inverse kinematics steering logic
2)
Inverse kinematics steering logic (IKSL) uses the inverse
kinematics of CMGs. Generally, the inverse kinematics pro
vides the inputs from the given outputs. In the CMG case, out
puts are total angular momentum of CMGs whereas inputs are
the gimbal angles of the CMGs. The solutions are numerically
calculatedbecause the analytical solution cannot be obtained.3.1.1. Algorithm
As described above, the inverse kinematics of CMGs is to
finθfrom the given h
total. The elements of the given htotalis
expressed by htotal=hw[
hxhyhz]T. The problem is to fin
thesolution of the followingequations:
−s1cβ−c2+s3cβ=hx, (7)
c1−s2cβ−c3=hy, (8)
s1sβ+s2sβ+s3sβ=hz. (9)
From Eqs. (7)(9), the following equation for s2andc2is ob
tainedby eliminating s1,c1,s3, and c3as:
(
hy+s2cβ)2+(hx+c2
cβ)2(
hy+s2cβ)2+(hz−s2sβ
sβ)2
=4(
hy+s2cβ)2(10)
Thisequationisreducedtoaneighthorderpolynomialequation
fors2. Because the equation cannot be solved analytically, the
solution for s2is obtained numerically. Once the solution forTrans. JSASS Aerospace Tech. Japan V ol. 16, No. 5 (2018)407s2isobtained, the solutions for c2,s1,c1,s3, and c3are easily
calculated from the followingequations:
s2
1+c21=1, (11)
s22+c22=1, (12)
s23+c23=1, (13)
s1=−(s2cβ+c2+hx)sβ+hzcβ
2sβcβ, (14)
s3=(−s2cβ+c2+hx)sβ+hzcβ
2sβcβ, (15)
c1−c3=hy+s2cβ. (16)
Thegimbal angle θiis uniquely calculated from each set of si
andci, and θhas at most eight solutions.
3.1.2. Gimbal rate limitation
Inthefeedbackattitudecontrol,areferencequaternionanda
reference angular velocity of the spacecraft are generated first
The attitude control torque τsis calculated from the di ﬀerence
between the current and the reference states. The time intervaland the variation of the total angular momentum of CMGs at
each interval are denoted by ∆tand∆h
total, respectively. The
targetvalueof the total angular momentum ˜htotalisgivenby
˜htotal=htotal+∆htotal=htotal−τs∆t.(17)
Because the inverse kinematics has eight or fewer solutions,
the selection among the obtained solutions is needed. Thepresentgimbalanglesandthesolutionoftheinversekinematics
for˜h
totalare denoted by θand˜θ, respectively. Here, ∥˜θ−θ∥is
minimized to select the appropriate solution. The variation of
the gimbal angle is calculated by ∆θ=˜θ−θ. If the CMG state
is in the inner impassable singular surfaces, the ideal ˜θcannot
be realized because ∆θbecomes too large for one sampling in
terval. In such a case, by using the limit of ∥∆θ∥,∆θmax,˙θis
determinedas follows:
˙θ=1
∆tmin(∆θmax,∥∆θ∥)∆θ
∥∆θ∥. (18)
When˙θisgiven by Eq. (18), θdoes not reach ˜θin one sam
pling interval. Even in this case, IKSL helps the CMGs to pass
throughthe inner impassable singular state.
3.2. FABRIK steering logic
In this subsection, a heuristic iterative method, Forward And
Backward Reaching Inverse Kinematics (FABRIK),6)is intro
duced and modifie for the inverse kinematics of CMGs. In
the case of IKSL, because the solutions are obtained directly
from a complicated equation (8th order polynomial equation),
thesolutionsareaccuratebuttheprocedureiscomplicated. Es
peciallywhentheCMGconfiguratio hasadditionaldegreesof
freedom, it is rather diﬃcult to select the best solution. Us
ing FABRIK, the solutions are not always accurate but simple.FABRIKcancalculatethesolutioneasilyinthesamewayevenifthe configuratio has four or more CMGs.3.2.1. Algorithm
Atemporaryangularmomentum p
iisdefine bythesumma
tionof the angular momentum of each CMG as follows:
p1=0, (19)
p2=hwˆh1, (20)
p3=hw(ˆh1+ˆh2)
, (21)
p4=hw(ˆh1+ˆh2+ˆh3)
. (22)
The initial values of p0andp4are set at 0and˜htotal, respec
tively; p1=0,p4=˜htotal. In FABRIK, these two equations are
alternatelysubstitutedinthebackwardandforwardprocedures,and each procedure is calculated as follows: The distance between each p
iis firstl define by ri=pi+1−pi. First, let p4
be˜htotaland the backward calculation is executed. The vector
riis modifie so that piis realized by the angular momentum
hi. The new distance riis calculated by projecting rionto an
orthogonal plane to giand changing the size to the magnitude
ofangularmomentumofeachCMG, hw. Thatis, riismodifie
asfollows:
ri=hwˆri,ˆri=ri−(ri·gi)gi
∥ri−(ri·gi)gi∥. (23)
Thegimbal angle of CMG −iis calculated from ri. The di ﬀer
ence angle between the calculated gimbal angle of CMG iand
the current one, θidif,is obtained from
sinθidif=(ˆhi×ˆri)·ˆgi,cosθidif=ˆhi·ˆri.(24)
Ifθidifis larger than the limited value, riis recalculated as fol
lows:
ri={ri |θidif|≤θmax
hw(
cmˆhi+sign(θ idif)smˆgi×ˆhi)
|θidif|>θmax(25)
where θmaxis the allowable magnitude of θidifand sin θmaxand
cosθmaxare abbreviated as smandcm, respectively. Then, piis
redefine as pi+1−ri. This calculation is executed from i=3
toi=2. Second, let p1be0and the forward calculation is exe
cutedfrom i=1toi=2. Asshowninthebackwardprocedure,
riiscalculatedbyprojecting pi+1−piontoanorthogonalplane
toˆgiandchangingthesizetothemagnitudeofangularmomen
tumofeachCMG, hw. Ifthedi ﬀerenceangle θidifislargerthan
the limited value, Eq. (25) is also applied in this procedure.Then, p
i+1is redefine as pi+ri. Therefore, piis calculated in
thebackwardand forwardprocedure as follows:
Backwardprocedure : pi=pi+1−ri(26)
Forwardprocedure : pi+1=pi+ri(27)
By repeating the backward and forward procedures a certainnumber of times, p
4is finall calculated and it becomes posi
tioned near the target. The angular momentum of each CMG−iiscalculatedfrom p
i+1andpi,andthewholeprocedureofFAB
RIKis shownin Fig. 2.Trans. JSASS Aerospace Tech. Japan V ol. 16, No. 5 (2018)4083.2.2.Modiﬁcation of initial θ
In this subsection, initial setting of θis considered. FAB
RIK can get only one solution near the current gimbal angles
because it searches the solution within the limit value from thecurrent gimbal angles. In the singular state, it sometimes takesa lot of time to pass through the singular surface. In FABRIK,
the selection of the initial gimbal angles is important to obtain
the proper gimbal angle solution in an allowable number of it
erations.
Here, the initial angular momentum is calculated from the
modifie gimbal angles k
iniθ. The parameter kiniis a constant
value for changing the initial gimbal angles from θ, and in the
case of kini<1, the solution search is started from the smaller
gimbalanglesthanthecurrentones. InthecaseofthreeCMGs,there are only a limited number of solutions since the configuration has no redundancy. Although the terminal gimbal statein the attitude maneuver is diﬀerent from the initial one unlessspecificall devised, the terminal state sometimes becomes the
same as the initial state in FABRIK with k
ini<1. This is be
causethesolutionof θislikelytobesmallinthecaseof kini<1.
Returning to the initial condition is desirable in the case of the
repetition of attitude maneuvers, and in some cases (but not always),setting k
ini<1helpstheterminalgimbalanglesbecome
thesame as the initial ones.
3.3. Modiﬁcation to threeCMG conﬁguration
In this subsection, modification of the algorithms of IKSL
and FABRIK from those of the four CMG pyramid configu
ration to those of three CMG configuratio are summarized.When one CMG fails in the four CMG configuration the re
mainingdegreesoffreedomisthreeandthecontrolredundancy
is lost. In the case of IKSL, there are infinit solutions for the
gimbal angles in the inverse kinematics of the four CMG con
figuration whereasthereareatmosteightsolutionsofthethree
CMG configuration In the case of the four CMG configura
tion, there must be an optimization procedure to select the bestsolution among the infinit solutions. Therefore, the IKSL al
gorithm is simpler in the three CMG configuratio than that
in the four CMG configuration In the case of FABRIK, the
computation procedure is almost the same in the four and three
CMGconfigurations ThisisoneofthemeritsofFABRIK,andthe computation time is almost proportional to the number of
CMGs.
4. Numerical Simulations
Inthissection,maneuversimulationsareexecutedinorderto
examinethecapabilitiesofIKSLandFABRIK.Forthecompar
ison,asimplesteeringlawnamedSingularDirectionAvoidance
(SDA)
7)isalso applied.
4.1. Attitude control
ThespacecraftattitudeisexpressedbyEulerparameters. Eu
ler parameters qare define by the rotation angle θsaround the
Euleraxis ˆaas follows:
q(θs,a)=[
S(q)
V(q)]
=[
cosθs
2
ˆasinθs
2]
, (28)
where S(q)andV(q)refertothescalarpartandthevectorpart,
respectively. In the simulations, the spacecraft is controlled byCalculate 𝒉𝒉𝑖𝑖from kini𝜽𝜽
𝑖𝑖=3
Caｌculate𝒓𝒓𝑖𝑖𝒑𝒑4= 𝒉𝒉total
𝑖𝑖=2?
𝑖𝑖=1
Calculate 𝒓𝒓𝑖𝑖𝒑𝒑1=𝟎𝟎
𝑖𝑖=2?
Calculate 𝒑𝒑𝟒𝟒𝒑𝒑𝑖𝑖=𝒑𝒑𝑖𝑖+1−𝒓𝒓𝑖𝑖
𝒑𝒑𝑖𝑖+1=𝒑𝒑𝑖𝑖+𝒓𝒓𝑖𝑖
Complete final 
iteration?Y
N
YN
YN
Calculate 𝜽𝜽from 𝒑𝒑𝒊𝒊𝑖𝑖=𝑖𝑖−1
𝑖𝑖=𝑖𝑖−1
Fig.2. Flowchartof FABRIK.
aPDcontrollawsothatitsEulerparametersandangularveloc
ity follow the reference Euler parameters qr, and the reference
angularvelocity ωr,respectively. Let qrandωrbeexpressedby
thehalf rotation time, tf,ˆa,and θsas follows:
ωr(t)=θsf
t2
fˆatt <tf
2θsf
tfˆa−θsf
t2
fˆattf<t<2tf
0 2tf<t(29)
˙qr(t)=1
2qr(t)⊗ωr(t), (30)
where ⊗denotesa quaternion multiplication. An example of
timehistoriesof qrandωrisshowninFig. 3where tf,ˆa,and θs
are set at the valuesin Table1.
The proportional gain and the derivative gain are described
bykpandkd, respectively. The attitude control torque τsis de
fine bytheerroroftheEulerparameters qeandtheerroroftheTrans. JSASS Aerospace Tech. Japan V ol. 16, No. 5 (2018)409   
7LPH>V@(XO HU 3DUDP HW HUV

[
\
]
Eulerparameter qr.   
7LPH>V@%RG\ 5DW H > GHJ V@

[
\
]
Angularvelocity ωr.
Fig. 3. Reference trajectories.
angularvelocity ωeas follows:
τs=−kpV(qe)−kdωe, (31)
where
qe=q†
r⊗q, (32)
ωe=ω−ωr, (33)
andq†
rdenotes the conjugate quaternion of qr. In the proposed
steeringlaws,IKSLandFABRIK,theangularmomentumcom
mand˜htotalis givenby Eq. (17).
In order to compare the performances of the steering laws in
the singular state, a tracking maneuver is designed so that the
totalangularmomentumpassesthroughanimpassablesingular
surface. The moment of inertia of the spacecraft, J, is set as
follows:
J=0.5541 0.0130 0.0183
0.0130 0.5447 −0.0149
0.0183 −0.0149 0 .6289[kgm2].(34)
Theparameters of the simulations are specifie in Table1.
Table1. Parametersof the simulation.
Items Values
Momentof inertia J
Wheel angular momentum hw=0.0576[Nms]
Skewangle of each CMG β=45[deg]
Initial gimbal angles θ=[−45,0,45]T[deg]
Eular axis ˆa=[−2/3, −2/3, −1/3]T
Proportional gain kp=10[Nm]
Derivativegain kd=5 [Nms/rad]
Initial Euler angle θs0=0[deg]
Final Euler angle θsf=40 [deg]
Half rotation time tf=10 [s]
Maximum gimbal rate ˙θmax=2 [rad/s]
Timeinterval ∆t=0.01[s]
Parameterin SDA α0=0.1
Parameterin SDA kσ=10
Parameterin IKSL ∆θmax=0.02 [rad]
Parameterin FABRIK kini=0.8
Parameterin FABRIK θmax=0.02[rad]
4.2. SDA steering logic
The SDA steering logic is also tested in the simulations. Let
thesingular valuedecomposition of matrix Abe expressedby
A=USVT. (35)
In SDA, by using matrices U,S, and V, the inverse matrix of
matrix Ais calculated as follows:
A−1
SDA=VS−1SDAUT. (36)Inthe aboveequation, S−1
SDAiscalculated as follows:
S−1
SDA=diag1
s11,1
s22,s33
s2
33+α, (37)
where siimeansthesingularvalueofmatrix A,thatis,the( i,i)
th component of matrix S, and the inequality s11≥s22≥s33
is assumed. The positive parameter αavoids the sigularity of
inversematrix A−1inthecaseofsingularstates,andisgivenby
α=α0e−kσs2
33, (38)
where α0andkσare positiveconstants.
Thetorqueerrorsareproducedbytheparameter αinthesin
gular direction expressed by the third column of matrix Uand
itseﬀectsbecomelargernearthesingularsurface. Onthesingu
larsurface,thegimbalratesbecomezerosinthesingulardirec
tion, and thus, passing through the singular surface sometimes
becomesdi ﬃcultin SDA.
4.3. Simulation results
Figures 4  6 show the simulation results of SDA, IKSL, and
FABRIK, respectively. In each figure the firs subfigur shows
vector part of the Euler parameters V(q). The second shows
vectorpartoftheerrorEulerparameters V(qe). Thethirdshows
angular velocity ω. The fourth shows gimbal angles θ. The
fift showsgimbalangle rates ˙θ. The sixth showsthe condition
numberof A.
In the case of SDA in Fig. 4, the condition number shows
that the CMGs encounter a singular state at t=10 [s] and can
not escape until t=25 [s]. In the singular state, the gimbal
angle motion is suppressed and it takes a longer time to escapefromthesingularstate. WhiletheCMGsarestuckinthesingu
lar state, small torque errors resulting from parameter αin the
singular direction accumulate, which makes the attitude errorandthe angular velocityerror largerthan those of other cases.
InthecaseofIKSLinFig. 5,thegimbalanglesmoverapidly
att=9 [s] and t=11 [s]. From the condition number, the
CMGs encounter the singular state at these times but little time
is spent in the singular state. Although momentary errors are
observedintheangularvelocityatthesetimingsofthesingular
state, IKSL is best able to follow the reference trajectory withthesmallest peak errors.
InthecaseofFABRIKinFig. 6,theconditionnumbershows
that the CMGs are not close to the singular state. The gimbal
anglemotionisvisiblysmootherandthegimbalangleratesare
alsosmall. AlthoughtheattitudeerrorinFABRIKisaslargeasthatofSDA,thegimbalangleratesaremuchsmallerthanthoseofSDA.
All steering laws produce identical motion until a singular
surface is encountered. For this trajectory, IKSL and FABRIKcan return the gimbal angles to their initial state. Many othertrajectories have been tested by FABRIK with k
ini<1, and in
many cases, the fina gimbal angles return to the initial statethough they do not always return to the initial one. These char
acteristicsare regardedas one of the merits of FABRIK.
The singular states of CMGs are classifie into passable and
impassablestates,wheretheCMGscannotescapefromtheim
passable singular states directly by continuous gimbal angle
motion. In the three CMG configuration the singular statesbecome impassable because of lack of redundancy. In the sim
ulationcase,theidealgimbalmotionwhichrealizestheangularTrans. JSASS Aerospace Tech. Japan V ol. 16, No. 5 (2018)410   
7LPH>V@(XO HU 3DUDP HW HUV

[
\
]
Vectorpart of q.   
7LPH>V@(XO HU 3DUDP HW HUV (UURU

[
\
]
Vectorpart of qe.
   
7LPH>V@%RG\ 5DW H > GHJ V@

[
\
]
Angularvelocity ω.   
7LPH>V@*L P EDO  $QJO HV > UDG@

θ
θ
θ
Gimbalangles θ.
   
7LPH>V@*L P EDO  5DW HV > UDG V@

θ
θ
θ
Gimbalangles rates ˙θ.   
7LPH>V@&RQGL W L RQ 1XP EHU
Condition number of A.
Fig. 4. Attitude control simulation (SDA).
   
7LPH>V@(XO HU 3DUDP HW HUV

[
\
]
Vectorpart of q.   
7LPH>V@(XO HU 3DUDP HW HUV (UURU

[
\
]
Vectorpart of qe.
   
7LPH>V@%RG\ 5DW H > GHJ V@

[
\
]
Angularvelocity ω.   
7LPH>V@*L P EDO  $QJO HV > UDG@

θ
θ
θ
Gimbalangles θ.
   
7LPH>V@*L P EDO  5DW HV > UDG V@

θ
θ
θ
Gimbalangles rates ˙θ.   
7LPH>V@&RQGL W L RQ 1XP EHU
Condition number of A.
Fig. 5. Attitude control simulation (IKSL).   
7LPH>V@(XO HU 3DUDP HW HUV

[
\
]
Vectorpart of q.   
7LPH>V@(XO HU 3DUDP HW HUV (UURU

[
\
]
Vectorpart of qe.
   
7LPH>V@%RG\ 5DW H > GHJ V@

[
\
]
Angularvelocity ω.   
7LPH>V@*L P EDO  $QJO HV > UDG@

θ
θ
θ
Gimbalangles θ.
   
7LPH>V@*L P EDO  5DW HV > UDG V@

θ
θ
θ
Gimbalangles rates ˙θ.   
7LPH>V@&RQGL W L RQ 1XP EHU
Condition number of A.
Fig.6. Attitude control simulation (FABRIK).
    
7LPH>V@*L P EDO  $QJO HV > UDG@

θ
θ
θ
IKSL.    
7LPH>V@*L P EDO  $QJO HV > UDG@

θ
θ
θ
FABRIK.
Fig.7. Gimbal angles θnear singular states.
Table2. Timefor steering laws.
Steeringlaw Averagetime [µs] Maximum time [µs]
SDA 13.82 52.28
IKSL 221.97 523.12
FABRIK 54.56 138.81
velocity in Eq. (29) encounters two impassable singular states.
Figure 7 shows the gimbal angle behaviors near the singular
states. Figure 7 shows the gimbal angle behavior of IKSL and
that of FABRIK. In each figure the thick lines show the ideal
gimbalmotionandthethinlinesshowthesimulatedonewhichisidenticalwiththegimbalanglemotionsinFigs. 5and6. Theideal gimbal angle motion jumps at t=8.68 [s] and t=11.37
[s] when the CMGs encounter the impassable singular states.InthecaseofIKSL,thesimulatedgimbalanglesalmostfollow
theidealgimbalanglesexceptforthevicinityoftheimpassable
singular states. In the vicinity of the singular states, the sim
ulated gimbal angles deviate from the ideal ones because thegimbalratesarerestrictedwithinthegimbalratelimitasshowninEq. (18). However,thisdeviationissmallandtheCMGscanTrans. JSASS Aerospace Tech. Japan V ol. 16, No. 5 (2018)411escapefrom the impassable singular states smoothly. On the
other hand, in the case of FABRIK, the simulated gimbal an
gles deviate more largely than the case of IKSL, and therefore,the attitude errors in the vicinity of the singular states becomelarger. In this case, the CMGs avoid the impassable singularstatesby the largedeviationof the gimbal angles.
To summarize the performances of the steering laws, IKSL
produced the best results. However, IKSL needs much morecomputations than the other methods. Average and maximumcomputation time among these steering laws are shown in Table 2 when they are run on MATLAB with an i76700 CPU. Inthis table, the number of the iterations in FABRIK is 10 whichis also used in the simulations. As shown in Table 2, the com
putation time of IKSL is almost four times larger than that of
FABRIK,and is ten times more largerthan that of SDA.
5. Conclusions
This paper investigates the attitude control of spacecraft us
ing three CMGs where one CMG fails in the pyramid configu
ration of four CMGs. Two steering laws based on inverse kinematics which calculates the gimbal angles of the CMGs from
the total angular momentum are proposed; Inverse Kinemat
ics Steering Logic (IKSL) and Forward And Backward Reaching Inverse Kinematics (FABRIK). IKSL is a method to ob
tain exact gimbal angle solutions from an eighthorder polyno
mial equation. The method realizes accurate attitude motion,
but the computational burden is larger than FABRIK. On theotherhand,FABRIKisaheuristicmethodtoobtaintheapproximate solution by an iterative procedure. Some modification
are added to the original FABRIK to be suitable for the inverse
kinematics of the CMGs. Although the accuracy of the attitudemotion is inferior to that of IKSL, FABRIK is easy in implementationandthecomputationalburdenisalsolessthanIKSL.These steering laws are examined by numerical simulation incomparisonwiththeSingularDirectionAvoidancesteeringlaw
(SDA).Thesimulationresultsshowthevalidityoftheproposed
steeringlawsin escaping from the singular state.
References
1) Jikuya, I., Fujii, K., and Yamada, K.: Attitude Maneuver of Space
craft with a VariableSpeed DoubleGimbal Control Moment Gyro,
Advances in Space Research ,58(2016),pp. 13031317.
2) Yamada, K., Asai, T., and Jikuya, I.: Inverse Kinematics in Pyramid
Type SingleGimbal Control Moment Gyro System, J. Guidance,
Control, and Dynamics, 39(2016),pp. 18971907.
3) Yamada, K. and Jikuya, I.: Directional Passability and Quadratic
SteeringLogicforPyramidTypeSingleGimbalControlMomentGy
ros,Acta Astronautica, 102(2014), pp. 103–123.
4) Sands, T., Kim, J. J., and Agrawal, B. N.: Nonredundant Single
Gimbaled Control Moment Gyroscopes, J. Guidance, Control, and
Dynamics, 35(2016),pp. 578587.
5) Meng,T.and Matunaga,S.: FailureTolerantControl for SmallAgile
SatellitesUsingSingleGimbalControlMomentGyrosandMagneticTorquers, Acta Mechanica Sinica ,28(2012),pp. 551558.
6) Aristidou, A. and Lasenby, J.: FABRIK: A Fast, Iterative Solver for
the Inverse Kinematics Problem, Graphical Models ,73(2011), pp.
243260.
7) Ford, K. and Hall, C.: Singular Direction Avoidance Steering for
ControlMoment Gyros, J. Guidance, Control, and Dynamics ,23
(2000), pp. 648656.ALGERIAN  JOURNAL OF SIGNALS AND SYSTEMS (AJSS)  
 
Vol. 6, Issue 3, September2021| ISSN: 25433792 EISSN:26761548  163 
 BangBang Attitude Control During EastWest 
Station Keeping For Geostationary Satellite 
Elhassen BENFRIHA(1)*, Jalel Eddine BENMANSOUR(1), Abdellatif Bellar(1) 
(1) Département de recherche en mécanique spatiale, Centre de Développement des Satellites, 
Oran, ALGERIA . 
*Corresponding author: hassen_ing@yahoo.fr 
Abstract: This paper investigates the EastWest station keeping strategy of geostationary satellites which 
must be performed to correct the drift caused by natural perturbation forces. The attitude control requirements 
as well as the pointing accuracy must be maintained during the stationkeeping maneuver in order to assure 
the mission services. The propulsion system (chemical thrusters) is used to control both the orbit control 
(station keeping) and the attitude control where the ON/OFF thrusters pulses are managed using BangBang 
controller with deadband technique. Simulation results can clearly illustrate the feasibility and the 
effectiveness of the proposed control strategy. 
 
Keywords: Geostationary satellite, Thruster attitude control, Station keeping, BangBang, Deadband 
1. INTRODUCTION 
The Communication satellites in 
geostationary orbit are subjected to several 
natural perturbations, which can affect the 
required position of satellite. For this 
purpose, station keeping (SK) maneuvers are 
periodically performed using the propulsion 
system in order to correct the orbit drift and 
maintain the satellite in its control box [1], [2]. 
The northsouth station keeping (NSSK) 
is performed to correct the inclination drift in 
latitude due to lunisolar perturbations, whilst, 
the eastwest station keeping (EWSK) is 
performed to correct the semi major axis/ 
eccentricity drift in longitude due to earth 
gravitational force and solar radiation 
pressure perturbations [3]. 
Otherwise, the attitude control as well as 
the satellite pointing should be assured 
during all satellite mission, 
momentum/reaction wheels are usually used 
for applying torques so that the satellite 
keeps its required orientation. However, in 
order to maintain the satellite in its control 
box the thrusters are used to compensate the 
orbit drift and modify the changes in the 
osculating orbit parameters, for this purpose, 
thruster control strategy is proposed by 
combining the attitude control and orbit 
control using only thrusters as actuators 
[4],[5]. 
Chemical thrusters generally operate in 
ON/OFF mode which impose severe 
restrictions represented in limiting the control 
authority. Furthermore, the performance of these actuators as well as their lifetime can 
be affected by the thruster switching 
frequency.  
In order to reject disturbances and to 
ensure minimum thruster firing time, The 
used ON/ OFF thrusters for spacecraft 
pointing and stabilization requires a switching 
controller as a kind of pulse modulation [6], 
[7], [8].  
The BangBang controller is widely 
proposed in thruster attitude control in 
various cases such as in the case of single 
axis [9] and the case of small angle 
maneuvers [10],  
However, other techniques must be 
combined to BangBang controller in order to 
minimize the switching frequency and the fuel 
consumption, that permits to achieve best 
efficiency.  
In the present paper, BangBang 
controller with deadband technique has 
been applied to manage the thruster firing 
control in order to insure both the attitude 
control and the orbit control (station keeping) 
simultaneously.  
Finally, the obtained results can demonstrate 
the feasibility and the effectiveness of the 
proposed methods. 
2. SPACECRAFT DESCRIPTION 
Communication satellites in geostationary 
orbit are generally composed of the following 
subsystems [11]: ALGERIAN  JOURNAL OF SIGNALS AND SYSTEMS (AJSS)
 
Vol. 6, Issue 3, September 2021
  Attitude and Orbit Control
(AOCS) 
 Electrical Power Subsystem (EPS)
 Unified Propulsion Subsystem (UPS)
 Telemetry, Commanding and Ranging 
subsystem 
 Repeater Subsystem 
 Thermal Control Subsystem (TCS)
2.1 Attitude and orbit control subsystem:
The AOCS is composed of sets of sensors 
and actuators [11].  
The used sensors are:  
 Sun sensors: 2 redundant sets each 
composed of 4 sensor heads.
 Earth sensors: two units for only roll 
and pitch measurement.
 Rate integrated gyroscope assembly: 
two redunda nt sets of gyros each 
gyro is composed of three 
gyroscopes. 
The satellite actuators are:  
 Momentum wheel assembly (MWA) 
 10 N Thrusters : Twelve 10N thrusters 
are used to correct and maintain the 
satellite attitude and orbit, redundant 
branches of thrusters
each composed of six thrusters 
where branch A is the nominal one 
and branch B is the redundant one.
The thruster’s configuration is presented in 
the figure below:  
Fig.1 Thruster’s configuration
ALGERIAN  JOURNAL OF SIGNALS AND SYSTEMS (AJSS)
2021| ISSN: 25433792 EISSN:26761548  Attitude and Orbit Control  System 
Electrical Power Subsystem (EPS)  
Unified Propulsion Subsystem (UPS)  
Telemetry, Commanding and Ranging 
Thermal Control Subsystem (TCS)  
Attitude and orbit control subsystem:  
The AOCS is composed of sets of sensors 
sensors: 2 redundant sets each 
composed of 4 sensor heads.  
Earth sensors: two units for only roll 
and pitch measurement.  
Rate integrated gyroscope assembly: 
nt sets of gyros each 
gyro is composed of three 
Momentum wheel assembly (MWA)  
: Twelve 10N thrusters 
to correct and maintain the 
satellite attitude and orbit, redundant 
branches of thrusters  are formed 
each composed of six thrusters 
where branch A is the nominal one 
and branch B is the redundant one.  
The thruster’s configuration is presented in 
 
Thruster’s configuration  The components of thruster force via the 
spacecraft three axis can be concluded from 
Figure 2 as follow [11]: 
F FThruster
cosFFx
cosFFy
sinFFz
 
 
Fig.2 Thruster forces
3. SATELLITE STATION KE
 
The most geostationary satellites are used
communication services due of the features of 
this kind of orbit, which permits the revolution 
with the same earth rotation period. However, 
the external perturbations can modify the 
satellite orbit, creating the orbit drift that can 
affect the covera ge area and the signal 
quality as well as the mission services, 
therefore it is necessary to correct the orbit 
within specified limits and maintain the 
satellite in its desired position.
3.1. Station keeping requirements
Station keeping maneuver should be 
performed to maintain the satellite longitude 
and latitude around the nominal point within 
specified limits called control box (station 
keeping window) [1].  
Fig. 3 Station keeping window
Control box: longitude ±0.1°, Latitude ±0.1°
Latitude (North)
0Δi = 0.1° ALGERIAN  JOURNAL OF SIGNALS AND SYSTEMS (AJSS)  
 164 The components of thruster force via the 
spacecraft three axis can be concluded from 
NF10                (1) 
cos                 (2) 
sin                (3) 
sin                      (4) 
 
Thruster forces  
SATELLITE STATION KE EPING 
The most geostationary satellites are used  for 
communication services due of the features of 
this kind of orbit, which permits the revolution 
with the same earth rotation period. However, 
the external perturbations can modify the 
satellite orbit, creating the orbit drift that can 
ge area and the signal 
quality as well as the mission services, 
therefore it is necessary to correct the orbit 
within specified limits and maintain the 
satellite in its desired position.  
Station keeping requirements  
Station keeping maneuver should be 
performed to maintain the satellite longitude 
and latitude around the nominal point within 
specified limits called control box (station 
 
Station keeping window  
Control box: longitude ±0.1°, Latitude ±0.1°  
Latitude (North)  
Longitude(E
ast) 
0 
SL 
 
0.1° ALGERIAN  JOURNAL OF SIGNALS AND SYSTEMS (AJSS)  
 
Vol. 6, Issue 3, September2021| ISSN: 25433792 EISSN:26761548  165 
 In stationkeeping mode the attitude errors 
should be less than: Roll: ±0.1°, Pitch: ±0.1°, 
Yaw: ±0.2°   
After the transfer orbit the satellite will be 
located in its desired position, then the orbit 
control will consume the remaining propellant 
which be mainly used for station keeping 
maneuvers. 
3.2. Longitudinal drift 
EWSK is generally performed to correct 
two kinds of drift: the longitude drift caused by 
the Earth nonspherical perturbation and the 
eccentricity drift caused by the solar radiation 
pressure perturbation.  
The EWSK consists of two kind of 
maneuvers westward control or eastward 
control. Under the natural perturbations, the 
satellite position (longitude) can define the 
direction of the satellite drift (Figure 4). 
 
Fig.4 Longitudinal drift  
In Figure 4 it can be observed that the 
orbit contains two stable positions and two 
unstable positions, the satellite will drift 
toward the near stable point, for example if a 
satellite in the position 20°E will drift toward 
the near stable point 75.1°E, hence, eastward 
control will be needed. 
3.3. Station keeping strategy 
The aim of EWSK is to maintain the mean 
longitude in the drift interval
  0 0. 
The EWSK can be designed as follow[1]:  
Under the natural perturbations, the satellite 
moves taking the curve direction
CBA . When the satellite reaches 
the curve west limit Cwestward control will be 
applied to decrease the orbit semimajor axis that will change the satellite moving direction 
to be from AC that is the EWSK period. 
 
Fig.5 Station keeping strategy 
 
4. THRUSTER ATTITUDE CONTROL 
4.1. Satellite dynamics 
The general satellite dynamics equation 
can be given as follow [12][13]: 
ThhII               (5)  
Where I is the satellite inertia matrix, his the 
angular momentum provided by the actuator, 
his the control output.  
The satellite attitude (orientation) in 
complex environments can be affected 
byaerodynamic torquedT, gravity gradient 
torquegT, geomagnetic torquemT and solar 
radiation pressuresrpT.   
The total environmental disturbance 
torque can be expressed as [12]: 
srpmgd TTTTT                  (6)  
 T
zyxTTTT the external perturbation. 
 T
zyxhhhh  
zyxIIIdiagI ,,   
And the angular velocity with can be given by: 
ALGERIAN  JOURNAL OF SIGNALS AND SYSTEMS (AJSS)
 
Vol. 6, Issue 3, September 2021
 







000

                       
Where,  and  are respectively the 
rollpitch and yaw satellite attitude angles and 
0 is the orbital velocity.  
Finally the simplified dynamics equations of a 
rigid spacecraft can be expressed as follo
[14]: 
 
  
   

xzy y xyzyy z xyxzyy zyx
IIIhIIITh h hIIIIhIII
02
00 002
0
  

 4.2. Thruster model  
The actuators used in EWSK are 
thrusters, the satellite orbital position is 42°E, 
hence, the satellite will drift in East direction 
(see Fig4).  
Eastward force must be generated
this drift, according the thruster configuration 
in Figure 1. The thruster pair 2A and 3A (in 
nominal case, 4B and 5B in redundant case) 
will be used all along the orbital maneuver, 
however all six thrusters of branch A (nominal 
branch 2A7A) w ill be used in the attitude 
control during all station keeping mode. 
The Thrusters work in ON/OFF mode than 
their model can be presented in the figure 
below [14]: 
Fig.6 Thruster model
ALGERIAN  JOURNAL OF SIGNALS AND SYSTEMS (AJSS)
2021| ISSN: 25433792 EISSN:26761548                         (7) 
are respectively the 
rollpitch and yaw satellite attitude angles and 
Finally the simplified dynamics equations of a 
rigid spacecraft can be expressed as follo w 

 
zxz yxzx y
ThhhThhh
0 00 0


(8) 
The actuators used in EWSK are 
thrusters, the satellite orbital position is 42°E, 
the satellite will drift in East direction 
Eastward force must be generated  to correct 
this drift, according the thruster configuration 
in Figure 1. The thruster pair 2A and 3A (in 
nominal case, 4B and 5B in redundant case) 
will be used all along the orbital maneuver, 
however all six thrusters of branch A (nominal 
ill be used in the attitude 
control during all station keeping mode.  
The Thrusters work in ON/OFF mode than 
their model can be presented in the figure 
 
Thruster model   
4.3. Bang Bang controller with dead
For the attitude and orbit control using the 
thrusters as actuators, the appropriate control 
method is the PID controller, which provides a 
simple and reliable control solution respecting 
all mission requirements and performances. 
Furthermore, a Bang 
associated to the classical PID controller to 
manage the ON/OFF thruster pulses
Indeed, a dead band is implemented
the simple Bang Bang controller, which 
avoids the controller to generate output 
before the input reaches a certain threshold; 
this effect permits to minimize the switching 
frequency and the fuel consumption. 
Hence, the proposed controller equation 
can be expressed as follow:
   
trsignUtu0
The following figure illustrates the Bang
Bang controller layout with dead
Fig.7  Bang Bang controller with Dead
5. NEMERICAL SIMULATION
 
Numerical simulations have 
using Matlab/Simulink environment in order to 
demonstrate the effectiveness of the 
proposed method. The obtained results use 
the parameters illustrated in Table 1.
Table 1 Satellite simulation parameters
Parameter 
 
Inertia matrix  2.mkg 
Initial attitudes  
Initial angular rates  s/
 
Orbital velocity srad/ 
ALGERIAN  JOURNAL OF SIGNALS AND SYSTEMS (AJSS)  
 166 Bang controller with dead band 
For the attitude and orbit control using the 
thrusters as actuators, the appropriate control 
method is the PID controller, which provides a 
simple and reliable control solution respecting 
all mission requirements and performances. 
Bang technique is 
associated to the classical PID controller to 
manage the ON/OFF thruster pulses [15]. 
band is implemented  in 
Bang controller, which 
avoids the controller to generate output 
before the input reaches a certain threshold; 
this effect permits to minimize the switching 
frequency and the fuel consumption.  
Hence, the proposed controller equation 
be expressed as follow:  
 
 
ONON
UtrifUtrif
(9) 
The following figure illustrates the Bang 
Bang controller layout with dead band:  
 
Bang controller with Dead band 
NEMERICAL SIMULATION S 
Numerical simulations have been performed 
using Matlab/Simulink environment in order to 
demonstrate the effectiveness of the 
proposed method. The obtained results use 
the parameters illustrated in Table 1.  
Satellite simulation parameters  
Value 




40200007300003770
 
 T03.02.01.0   
 T000  
52722.7e 
ALGERIAN  JOURNAL OF SIGNALS AND SYSTEMS (AJSS)  
 
Vol. 6, Issue 3, September2021| ISSN: 25433792 EISSN:26761548  167 
  
External Torque mN.  
 
 
 

t Tt Tt T
zyx
050405
cos10.5cos10sin110.2

 
 
 
The aim of the control is to maintain the 
desired attitude during the orbital maneuver 
(station keeping), the simulation results are 
shown in figure 813. 
 
Fig.8 Roll attitude angle 
 
 
Fig.9 Pitch attitude angle 
 
 
Fig.10 Yaw attitude angle 
 The time response of the attitude angles 
can be shown in figures 810, where the 
attitude accuracy has been reached, 
moreover, the errors have been reduced to 
the lowest, from this it can be noticed how the 
control system brings the satellite’s attitude 
from the initial simulation values to ±0.03°, 
±0.01° ±0.06° for roll, pitch and yaw attitude 
respectively, which meets the mission 
requirements   (±0.1°, ±0.1° and ±0.2° for roll, 
pitch and yaw, respectively). This result 
shows that the control system manages the 
system response in east/west station keeping. 
 
Fig.11  Xaxis torque 
 
 
Fig.12 Yaxis torque 
 
 
Fig.13 Zaxis torque 
 0 1000 2000 3000 4000 5000
time(s)0.10.0500.050.1Attitude angle (°)Roll attitude angle
0 1000 2000 3000 4000 5000
time(s)0.10.0500.050.1Attitude angle (°)Pitch attitude angle
0 1000 2000 3000 4000 5000
time(s)0.10.0500.050.1Attitude angle (°)Yaw attitude angle0 100 200 300 400 500
time(s)15105051015Torque (Nm)X axis torque
0 100 200 300 400 500
time(s)201001020Torque (Nm)Y axis torque
0 100 200 300 400 500
time(s)024681012Torque (Nm)Z axis torqueALGERIAN  JOURNAL OF SIGNALS AND SYSTEMS (AJSS)  
 
Vol. 6, Issue 3, September2021| ISSN: 25433792 EISSN:26761548  168 
 Figures 1113 represent the resulting 
thruster’s actuations that accumulates the six 
thrusters generated torques in x, y and zaxis 
respectively. The generated actuations are 
managed by BangBang controller with dead
band technique for ON/OFF thruster’s pulses, 
which permits to maintain the attitude control 
within the three axes, hence, respecting the 
pointing accuracy. 
 
6. CONCLUSION  
Attitude and orbit control during east west 
station keeping maneuver have been 
addressed using BangBang techniquewith 
deadband to manage ON/OFF thrusters 
pulses. The proposed strategy allows 
correcting the orbit drift without degrading the 
attitude control requirements as well as the 
pointing accuracy.  
Numerical Simulations have been 
performed using MATLAB/SIMULINK 
environment. The simulation results show 
clearly the convergence of the attitude angles 
during the stationkeeping maneuver, the 
controller can maintain perfectly the required 
pointing accuracy. Simulation results can also 
illustrate the feasibility and the effectiveness 
of the proposed methods that provide a useful 
and promising way for the attitude control of 
rigid spacecraft. 
Some perspectives of this work can be 
also oriented toward the optimization of the 
controller gains and the fuel consumption, 
study of the case of electric or hybrid 
propulsion, development of other modulations 
techniques with better performance, design 
another technique which takes into account 
inertia uncertainties problem.  
References 
 
[1] Borissov, Stoian, Yunhe Wu, and Daniele 
Mortari. "East–west GEO satellite station
keeping with degraded thruster response." 
Aerospace 2.4 (2015): 581601. 
[2] Losa, D., Lovera, M., Marmorat, J. P., 
Dargent, T., & Amalric, J. (2006, October). 
"Station keeping of geostationary satellites 
with onoff electric thrusters". In 2006 IEEE 
Conference on Computer Aided Control 
System Design, 2006 IEEE International 
Conference on Control Applications, 2006 IEEE International Symposium on Intelligent 
Control (pp. 28902895). IEEE. 
[3] Romero, P., Gambi, J. M., Patiño, E., et al. 
"Optimal station keeping for geostationary 
satellites with electric propulsion systems 
under eclipse constraints". In Progress in 
Industrial Mathematics at ECMI 2006. 
Springer, Berlin, Heidelberg, 2008. p. 260
264. 
[4] G. Campan, F. Alby, and H. Gautier, "Les 
techniques de maintien a` poste de satellites 
geostationnaires", in ´ Mecanique spatiale ´ , 
CNES, Ed. Toulouse, France: Cepadu  es 
Editions, 1995, ch. 15, pp. 983–1085. 
[5] M. Sidi, "Spacecraft Dynamics and Control". 
Cambridge University Press, 1997. 
[6] Kienitz, K. H., “Attitude stabilization with 
actuators subject to switching restrictions: an 
approach via exact relay control methods,” 
IEEE Transactions on Aerospace and 
Electronic Systems, Vol. 42, No. 4, 2006, pp. 
1485–1492. 
[7] Brown, T., “Inflight tuning of the Cassini RCS 
attitude controller,” AIAA Guidance, 
Navigation, and Control Conference, 
Portland, Oregon, 2011. 
[8] Jeon, S. W. and Jung, S., “Hardwareinthe
loop simulation for the reaction control system 
using PWMbased limit cycle analysis,” IEEE 
Transactions on Control Systems 
Technology, Vol. 20, No. 2, 2012, pp. 538–
545  
[9] Agrawal, B. N. and Bang, H., “Robust Closed
Loop Control Design for Spacecraft Slew 
Maneuver Using Thrusters,” Journal of 
Guidance, Control, and Dynamics, Vol. 18, 
No. 6, 1995, pp. 1336–1344. 
[10] Burdick, G. M., Lin, H.S., and Wong, E. C., 
"A Scheme for Target Tracking and Pointing 
During Small Celestial Body Encounters,” 
Journal of Guidance, Control, and Dynamics, 
Vol. 7, No. 4, 1984, pp. 450–457. 
[11] Derman, Hakki Özgür. "3Axis attitude control 
of a geostationary satellite". Diss. MSc 
Thesis, Turkey, Middle East Technical 
University, 1999. 
[12] Benmansour, J. E., Benfriha, E., & Roubache, 
R. "Satellite Attitude Control Based Adaptive 
sliding Mode Method", Algerian Journal of 
Engineering Research, Volume 4, Numéro 1, 
Pages 611, 2019. 
[13] Benmansour, J. E., Khouane, B., & Rima, R. 
(2018). "High Precision Roll/Yaw Attitude 
Stabilization for Flexible communication 
satellite". Algerian Journal of Signals and 
Systems, 3(2), 8188. 
[14] Salomón, Montenegro, and Amézquita 
Kendrick. "Accomplishing Station Keeping 
Mode for Attitude Orbit Control Subsystem 
Designed for TSAT." The Sixth International 
Symposium on Neural Networks (ISNN 2009). 
Springer, Berlin, Heidelberg, 2009. 
[15] Bekir, Esmat. "A tutorial on bangbang 
algorithm for attitude control system". Usak 
University Journal of Engineering Sciences, 
2018, vol. 1, no 2, p. 5665. 
 
 
 
 Citation: Roldugin, D.; Okhitina, A.;
Monakhova, U.; Ovchinnikov, M.
Comparison of Feedback ThreeAxis
Magnetic Attitude Control Strategies.
Aerospace 2023 ,10, 975. https://
doi.org/10.3390/aerospace10120975
Academic Editor: Dario Modenini
Received: 20 October 2023
Revised: 16 November 2023
Accepted: 17 November 2023
Published: 21 November 2023
Copyright: © 2023 by the authors.
Licensee MDPI, Basel, Switzerland.
This article is an open access article
distributed under the terms and
conditions of the Creative Commons
Attribution (CC BY) license (https://
creativecommons.org/licenses/by/
4.0/).
aerospace 
Article
Comparison of Feedback ThreeAxis Magnetic Attitude
Control Strategies
Dmitry Roldugin *
 , Anna Okhitina
 , Uliana Monakhova
 and Mikhail Ovchinnikov
Keldysh Institute of Applied Mathematics, Miusskaya Sq. 4, 125047 Moscow, Russia; anna.ohitina@mail.ru (A.O.);
monakhova@phystech.edu (U.M.); ovchinni@keldysh.ru (M.O.)
*Correspondence: rolduginds@gmail.com
Abstract: In this article, ﬁve feedback magnetic attitude control algorithms are compared in terms
of stabilization accuracy and implementation problems. The control strategies are classic Lyapunov
control with scalar gain; the same control strategy with matrix gain and a speciﬁc gaintuning
procedure; sliding control with a variable surface; a linear quadratic regulator constructed for
a special timeinvariant system of a higher degree than the initial timevarying system; and a
special controllable trajectory developed using particle swarm optimization. A new sliding surface
construction method is proposed in this paper. Surface parameters were changed in every control
iteration to ensure that the required control torque component along the geomagnetic induction
vector was small. The advantages and drawbacks of the considered methods and their applicability
for different target attitudes are discussed.
Keywords: magnetic attitude control; threeaxis control; feedback control; sliding control; linear
quadratic regulator
1. Introduction
Magnetic attitude control systems signiﬁcantly reduce satellite resource usage com
pared to reaction wheels. As such, their implementation in CubeSats is a longsought
goal. Threeaxis stabilization suffers from low terminal accuracy both in the orbital (local
vertical) and inertial reference frames. Magnetic control systems excel at certain speciﬁc
tasks. Angular velocity damping can be effectively performed after a satellite’s separation
from the launch vehicle [ 1,2]. Likewise, it is used for the unloading of the reaction wheels’
angular momentum. Magnetic damping may be used to achieve semipassive stabilization
along the local vertical frame, together with gravitational [ 3] torque; along the velocity of
the satellite, together with aerodynamic torque [ 4,5]; and along the geomagnetic induction
vector [ 6]. Spinstabilized satellites [ 7–9], including stabilization towards the sun [ 10–12]
for battery charging, provide highaccuracy solutions but only for one axis of a satellite.
Threeaxis magnetic control is technically not restricted at terminal attitude, and this
system is theoretically controllable [ 13–15]. In practice, achieving an arbitrary—far from the
gravitational equilibrium—attitude in the orbital reference frame is challenging, and overall
pointing accuracy is very low. The present paper compares ﬁve different control approaches
for the threeaxis stabilization of a satellite in the orbital reference frame. Although different,
all control strategies essentially implement a feedback law.
The ﬁrst considered control system is the simplest feedback law based on the Lyapunov
function (Lyapunov control, denoted as LC throughout the text). Originally, this type of
control was developed in both the inertial [ 16,17] and orbital [ 18,19] reference frames.
The original Lyapunov control ensures asymptotic stability of the required attitude. Its
magnetic counterpart, which is essentially the projection of the required torque on the
plane perpendicular to the geomagnetic induction vector, does not beneﬁt from global
asymptotic stability properties. Careful control gain selection provides an asymptotically
Aerospace 2023 ,10, 975. https://doi.org/10.3390/aerospace10120975 https://www.mdpi.com/journal/aerospaceAerospace 2023 ,10, 975 2 of 13
stable position [ 20]. However, the gain values and the resulting control torque are relatively
low [ 21]. Stability is extremely sensitive to uncertainties in inertia tensor knowledge [ 22].
The gain can be found if the inertia moments and uncertainty are bounded [ 23]. Signiﬁcant
problems are encountered by satellites with elongated or diskshaped ellipsoids of inertia.
Among these are 3U CubeSats. This problem is leveraged using matrix control gain,
distinguishing it from the second feedback control scheme considered in this paper (matrix
Lyapunov control—MLC). This approach was ﬁrst introduced in [ 18]. The gain selection
procedure elaborated in [24] is utilized in the present paper.
The third control scheme is the sliding mode with special surface construction. Sliding
control (SC) was ﬁrst proposed for a magnetically actuated satellite in [ 25,26]. In [ 27,28],
the respective authors introduce a sliding surface with an integral term representing control
torque projection on the induction vector direction. This term is designed to minimize the
inaccessible control component. This idea was directly investigated in [ 29] with varying
sliding surface parameters. The sliding surface changes so that the resulting stabilizing
torque lies almost within the plane perpendicular to the induction vector. However, ter
minal stabilization cannot be maintained with the developed procedure, which ampliﬁes
the typical chattering problem of sliding control. Therefore, the control is switched to the
simple feedback law near the required attitude. The present paper introduces a new proce
dure for sliding surface construction. Compared to that reported in [ 29], this procedure
minimizes the torque projection on the induction vector instead of directly restricting it so
that it is equal to zero, thus leading to more robust behavior.
The fourth feedback method is based on the control construction procedure elaborated
in [14]. The equations of motion are linearized in the vicinity of the required attitude.
Linear equations of motion with periodic coefﬁcients are transformed into timeinvariant
equations by changing the variables with larger state vectors. A linear quadratic regulator
(LQR) is constructed for the timeinvariant system. This directly provides the control dipole
moment, not the control torque. It is then converted into initial variables to obtain the
feedback for the timevarying system.
The ﬁfth method generalizes the sliding surface construction idea into a direct search
for the angular trajectory of the satellite near the required attitude. Each speciﬁc trajectory
implies the need to account for speciﬁc control torque to satisfy the equations of motion.
This torque projection on the induction vector is minimized using the particle swarm
optimization method [ 30,31] to ﬁnd the “most controllable” trajectory (particle swarm opti
mization control—PSO). Furthermore, simple feedback control is additionally introduced
to settle on this trajectory. The trajectory near the required attitude has an inherent attitude
error. However, the resulting error (the speciﬁc trajectory difference from the required
attitude and the error in this trajectory maintenance) may be lower than the error of direct
stabilization for the required attitude.
Each of the discussed feedback methods has its own advantages in different situations
and inherent disadvantages. Simulation results are compared below to summarize the
features of the ﬁve control methods and provide conclusions regarding the favorable
application conditions of each method.
2. Equations of Motion and Environment Models
The satellite is stabilized in the orbital reference frame OX 1X2X3. Its ﬁrst axis lies in
the orbital plane, and it is directed toward the satellite’s velocity vector in a near circular
orbit. The second axis is positioned along the satellite’s normal orbit. The third axis is the
radius vector of the satellite. The satellite reference frame OX 1X2X3is characterized by the
principal central axes of inertia.
Euler’s equations of motion are shown below
Jd!/dt+!J!=Mgg+Maero+Mdist+M, (1)
where the symbol denotes a cross product; J=diag (A,B,C)denotes the satellite inertia
tensor; Mgg,Maero, and Mdistare the gravitational, aerodynamic, and disturbing torqueAerospace 2023 ,10, 975 3 of 13
of an unknown nature; and Mis the control torque from the magnetic control system.
Absolute angular velocity !is related to the velocity relative to the orbital reference frame
Was represented below
!=W+A!orb, (2)
where!orbis the orbital angular velocity and worb=j!orbjis the orbital rate, while Ais
the transition matrix from the orbital to the satellite reference frame. Note that throughout
the text, bold letters correspond to matrices and vectors, while normal letters correspond
to scalar values. The kinematics of the satellite are described in terms of the attitude
quaternion (q0,q)derivative:
dq0/dt
dq/dt
=1
2q0
q
0
W
,a
a
c
c
=ac (a,c)
ac+ca+ac
. (3)
The control torque is expressed as
M=mB,
where mis the control dipole moment. The geomagnetic induction vector Bwas calculated
using the IGRF model [ 32] in the numerical examples. The dipole model [ 33] was utilized
in the feedback control gain adjustment procedure.
Gravitational torque is expressed as
Mgg=3w2
orbe3Je3,
where e3is the unit radius vector in the satellite reference frame.
Aerodynamic torque is calculated as the net torque acting on satellite surfaces facing
the incoming ﬂow. Atmospheric rotation with respect to the Earth is not considered. For
the side with the normal vector n, the force magnitude is expressed as
Fn= 1/2cSrjVj(nV)/jnj,
where cis the drag coefﬁcient, Sis surface area, ris atmospheric density, and Vis the
satellite’s velocity relative to the incoming ﬂow. The torque acting on the side is expressed
as follows:
Maero(n)=Fn( d+n)fn.
The direction of the force fn=A(sinworbt, cosworbt, 0)is calculated according to
the satellite’s attitude. Vector dis the centerofmass displacement relative to the center
of pressure.
Other disturbing effects of a lower magnitude—solar radiation pressure, gravitational
torque modiﬁcation due to the Earth’s oblateness, etc.—are modelled as periodic torque of
orbital and double orbital frequencies
Mdist=Mval
dist(a0+a1sinu+b1cosu+a2sin 2 u+b2cos 2 u),
where u=worbtis the argument regarding latitude. Coefﬁcients akandbkare uniformly dis
tributed in the range  1, 1. The magnitude Mval
distis ﬁtted so that the unknown disturbance
is approximately one order of magnitude less than the gravitational torque magnitude.
The ﬁnal important disturbance source is the inertia tensor uncertainty at the level of
approximately 5% of the principal inertia moment values.
3. New Sliding Surface Design (SC Construction)
Sliding control [ 34] was utilized by the authors to create a control torque that is almost
perpendicular to the geomagnetic induction vector [ 29]. The proposed surface was derived
from the abovementioned condition MTB=0. Thus, the control torque and therefore the
sliding surface are signiﬁcantly restricted in their parameters. This, in turn, leads to theAerospace 2023 ,10, 975 4 of 13
signiﬁcant deterioration of the control performance near the required attitude and for some
speciﬁc mutual attitudes of the satellite and geomagnetic induction vector. To address this
problem, a new sliding surface was developed, as shown below.
First, the equation of the surface is considered in the classic form
x=W+J 1L(q,W,t)J 1q=0, (4)
where the attitude error is expressed as the vector part of quaternion qin this paper.
Coefﬁcient J 1is introduced to simplify the resulting expressions. The positive deﬁnite
matrix Lis variable, which is the major property of the proposed methodology. It depends
on the current satellite attitude and the geomagnetic induction vector attitude, which,
in turn, depend on time. This variation is necessary to achieve a “controllable” angular
trajectory of the satellite characterized by MTB0. Matrix Lis referred to as the surface
parameter below. Equation (4) operates using the relative angular velocity W. The satellite
is stabilized in the orbital reference frame in speciﬁc numerical examples provided in the
paper. The same procedure was established for stabilization in the inertial space, and no
signiﬁcant difference was observed. The surface equation should evolve according to
.x= J 1Px, (5)
where Pis a positive deﬁnite matrix. Substituting the surface Equation (4) into (5) leads to
J.
W|{z}
1+LJ 1.q|{z}
2+.
LJ 1q= P
W+J 1LJ 1q
. (6)
The ﬁrst derivative in Equation (6) is deﬁned by the Euler equations of motion (1). The
second derivative is deﬁned by the kinematic relations (3). Note, however, that Equation (1)
was derived for the absolute angular velocity, whereas Equation (6) requires the relative
velocity derivative. Utilizing the relationship between the absolute and relative velocity (2),
the following equations were derived for the latter,
J.
W+WJW=eM+Mgg+Maero+Mdist+M, (7)
whereeM= JWWA!orb WJA!orb A!orbJ(W+A!orb), and WWis a skew
symmetric (cross product) matrix. Substituting (7) into (6) leads to
M=WJW eM Mgg .
LJ 1q LJ 1.q PW PJ 1LJ 1q, (8)
where only gravitational torque is considered and compensated for during the control construc
tion process. The attitude error derivative.qis calculated from (3) as.q=1/2(q0W+qW).
The surface parameter Lderivative is approximated as a simple difference from two
consecutive control iterations
.
LL(k) L(k 1)
Dt.
Equation (8) is then formulated in the following form:
a L(k)J 1q=M, (9)
a=
WJW eM Mgg 1/2L(k 1)J 1(q0W+qW) PW PJ 1L(k 1)J 1q
Dt+L(k 1)J 1q.
The left side of the Equation (9) has one unknown—the surface parameter in the
current iteration L(k). Its value deﬁnes the control torque M. Vector acontains known
parameters: current satellite attitude and angular velocity and the surface parameter in the
previous iteration.Aerospace 2023 ,10, 975 5 of 13
The sliding control scheme developed in [ 29] suffers from rapid growth in the surface
parameter when the condition MTB=0is difﬁcult to achieve. To avoid this situation, an
optimization problem is formulated in this paper. First, a vector of the surface parameter
matrix elements is introduced as =(L11,L22,L33,L12,L13,L23). This vector contains
only six parameters since matrix Lis symmetric. The cost function is shown below:
F=kFk(k) (k 1)k+k(k)k.
The ﬁrst term indicates that the surface parameter should change as slowly as possible.
The second term indicates that its elements should possibly decrease. Coefﬁcient kFequals
100 in the example below.
The optimization problem utilizes three conditions:
1.L(k)>0—the surface parameter is a positive deﬁnite matrix (moreover, eigenvalues
should be less than a predeﬁned threshold);
2. MTB/jMjjBj<cos(80)—the control torque deviates from the plane perpendicular
to the geomagnetic induction vector by no more than 10 degrees;
3.kmk¥<0.1 Am2—the dipole moments are bounded.
Due to the typical values of the matrix L(k)elements, its eigenvalues are multiplied
by 105to ensure that the expressions in conditions 1 and 2 have approximately the same
order. After the surface parameter matrix in the current iteration is calculated, the con
trol torque is also calculated according to (9). It is then used to ﬁnd the control dipole
moment as a projection on the plane perpendicular to the geomagnetic induction vector
m=BM/jBj2. The same procedure is used during the optimization process to ﬁnd the
dipole moment in condition 3. The resulting control torque Mreal=mBslightly differs
from the calculated one M. According to condition 2, the angle between the calculated and
deﬁned torques does not exceed 10 degrees. If the optimization procedure fails to ﬁnd a
feasible surface parameter and therefore the control torque with the deﬁned restrictions,
the control scheme is not implemented.
4. Description of the Feedback Laws Utilized for Comparison
Below is a brief description of four (excluding the sliding control scheme described
above) feedback control strategies that are utilized in the comparison of their performance.
4.1. Lyapunov Control—LC
The simplest feedback control scheme is
m= kwB! kaBS, (10)
where S=(a23 a32,a31 a13,a12 a21), and anmdenotes the direction cosine ma
trixAelements. This control scheme is derived from the Lyapunov function candidate
V=1/2!TJ!+kaå(1 akk)and represents the simplest possible solution for threeaxis
satellite stabilization. Control scheme (10) does not ensure asymptotic stability for any
positive control gain values. Gain should be carefully selected for each tensor of inertia and
satellite orbit (altitude and inclination). A relevant procedure developed by this paper’s
authors in [ 35] is used to ﬁnd the gain values in the next section. In essence, the equations
of motion are linearized near the required attitude:
dW1
du= kwB2
0
Aworbh
B2
2+B2
3
W1 B1B2W2 B1B3W3i
 2kaB2
0
Aw2
orbh
 B1B2a B1B3b+
B2
2+B2
3
gi
+W2+B C
A 
W2+g
,
dW2
du= kwB2
0
Bworbh
 B1B2W1+
B2
1+B2
3
W2 B2B3W3i
 2kaB2
0
Bw2
orbh
B2
1+B2
3
a B2B3b B1B2gi
 W1+C A
B 
W1 4a
, (11)
dW3
du= kwB2
0
Cworbh
 B1B3W1 B2B3W2+
B2
1+B2
2
W3i
 2kaB2
0
Cw2
orbh
 B2B3a+
B2
1+B2
2
b B1B3gi
+3A B
Cb,
da
du=W2,db
du=W3,dg
du=W1.Aerospace 2023 ,10, 975 6 of 13
Here, u=worbt,W1=Wk/worb,a,b, and gare the attitude angles (rotation sequence
231), while B0=m/r3,m7.7245106Tkm3, and Bk(u)are periodic components of the
geomagnetic induction vector in the dipole model. The linearized equations with periodic
coefﬁcients are examined for stability using Floquet theory [36].
4.2. Matrix Lyapunov Control—MLC
The natural extension of the feedback law (10) MLC scheme utilizes matrix con
trol gain:
m= KwB! KaBS. (12)
The derivation of the control law (10) from the Lyapunov function allows for positive
deﬁnite matrix control gain. A gain search procedure for diagonal matrices was devel
oped by the authors in [ 24]. This procedure uses the periodic linear Equation (11) and
Floquet theory. However, each equation for dWn/duhas its own gain kn
wand kn
aon the
right side. Control scheme (10) allows for convenient stability area visualization for two
types of gain, whereas control scheme (12) operates with six parameters. Characteristic
multiplier visualization with respect to gain is impossible. Therefore, an automatic pro
cedure was established to ﬁnd gain values that ensure the minimum possible number of
characteristic multipliers.
4.3. Linear Quadratic Regulator—LQR
Special change of variables is used in the next control approach to turn the time
varying linear equations into timeinvariant ones [ 14]. The general strategy of this method
is as follows. The initial timevarying linear equations are
.x=Ax+Bc(u)m. (13)
State vector xcomprises the attitude angles and velocity components. The speciﬁc
expressions for the matrices in (13) for a magnetically actuated satellite can be found in [ 14].
Control matrix Bc(u)is periodic. Through the change in variables from x!y
x=eiuy(1)+e iuy(2)+y(3)
timeinvariant equations can be obtained. These equations have more dimensions: instead
of six variables, there are eighteen. However, some of these variables are uncontrollable or
do not affect the initial system. Finally, a timeinvariant system can be obtained:
.
ey=eAey+eBcem.
Here,ey2R8and m2R2, so only two magnetorquers are required for stabilization.
A linear quadratic regulator is constructed for this system, deﬁned as em= Key, where
the gain matrix Kis calculated via solving the classic Riccati equation. The vector of
the initial variable xis augmented with two auxiliary variables, ex7= ey5sint+ey7cost
andex8= ey6sint+ey8cost, soex=(x1, . . .x6,ex7,ex8). This is necessary to construct a
scheme for the proper univocal change in variables ex=T(t)eyand the following ﬁnal
control scheme:
em= KT 1(u)ex,T=diag (T1,T2),T1=E4,T2=cosuE2 sinuE2
 sinuE2cosuE2
. (14)
Note that this method retains two auxiliary variables, ex7andex8, in the ﬁnal form of the
equations of motion with control. These two variables are in essence the control parameters.
They are calculated for each control step according to speciﬁc equations.Aerospace 2023 ,10, 975 7 of 13
4.4. Particle Swarm Optimization—PSO
Finally, a special angular trajectory construction procedure is considered. The required
satellite motion is parametrized as
are f=a1sinu+a2cosu +a3sin 2 u+a4cos2u,
bre f=b1sinu+b2cosu +b3sin 2 u+b4cos2u, (15)
gre f=g1sinu+g2cosu +g3sin 2 u+g4cos2u,
where coefﬁcients ak,bk, and gkshould be found according to two main rules. First, they
must be small, a few degrees each, to allow for precise stabilization. Second, the control
torque that stabilizes the satellite in this trajectory should be as close as possible to the
plane perpendicular to the geomagnetic induction vector, so MTB!min. This generally
leads to the formulation of an optimization problem with constraints.
To solve this problem, a particle swarm optimization routine [ 37] was established. The
cost function is
F=1
NvuutN
å
n=1f2n!min, fn=_
M/_
M,B/jBj
,
where Nis the number of control iterations, and the required control torque_
Mis calculated
from (1) as
_
M=Jd!re f/dt+!re fJ!re f Mgg
are f,bre f,gre f
. (16)
The gravitational torque is calculated for the reference trajectory (15). The reference
angular velocity !re fis essentially the derivative of the trajectory. The attitude angles in
(15) are used to calculate the attitude quaternion and then calculate the relative reference
velocity Wre ffrom the quaternion kinematics (3). The relationship between the absolute
and relative velocities (2) is used to ﬁnd !re f. Aerodynamic torque is not included in the
control scheme’s construction, as the examples below are presented for a 550 km orbit.
Control scheme (16) only ensures the existence of the required trajectory (15). To settle on
this trajectory, control scheme (10) is utilized in the form given below
m= kwBDW kaBDS, (17)
where Ddeﬁnes the difference between the actual angular velocity or attitude and the
reference one. The control gain of the feedback law (17) is found using another particle
swarm optimization routine. The optimization objective is to minimize the maximum
characteristic multiplier.
5. Simulation Results for Different Control Strategies
Simulations of satellite motion were performed using the following parameters:
 Satellite inertia moments of 0.15 (Case 1) or 0.2 (Case 2), 0.13, and 0.11 kg m2(the
satellite is stabilized in the unstable gravitational equilibrium position);
 Orbit altitude of 550 km, inclination of 57, and eccentricity equal to 0.01;
 Aerodynamic torque calculation:
# Satellite size is 10 2030 cm;
# Centerofmass displacement is 1 cm along the second satellite axis (aerodynamic
torque is essentially non zero in the required attitude);
# Atmospheric density is 1.8 10 13kg/m3;
 Principal moments of inertia are subject to 5% error.Aerospace 2023 ,10, 975 8 of 13
These parameters refer to a generic small satellite launched in a low Earth orbit. The
results on the circumpolar (sunsynchronous) orbit are generally the same. Orbit altitude
has a signiﬁcant impact on the stabilization results. A 550 km orbit was chosen to impose
a relatively strong aerodynamic torque inﬂuence. At the same time, it does not lead to
the drastic deterioration in the control performance that is observed in a 350 km orbit.
Two inertia tensors are considered to represent satellites with relatively uniform mass
distributions and with signiﬁcant unbalance, where the moment of inertia along the ﬁrst
axis is close to the sum of two other moments. First, the control gain for the LC feedback
law (10) should be established. Characteristic multipliers of the linearized equations of
motion are presented in Figure 1 for Case 2.
Aerospace 2023 , 10, x FOR PEER REVIEW 8 of 14 
 
 velocity refΩ from the quaternion kinematics (3). The relationship between the absolute 
and relative velocities (2) is used to ﬁnd refω. Aerodynamic torque is not included in the 
control scheme’s construction, as the exampl es below are presented for a 550 km orbit. 
Control scheme (16) only ensures the existe nce of the required trajectory (15). To se ttle on 
this trajectory, control scheme (10) is utilized in the form given below 
akkω=− ×Δ − ×ΔmB Ω BS , (17)
where Δ deﬁnes the di ﬀerence between the actual angular velocity or a ttitude and the 
reference one. The control gain of the feedba ck law (17) is found using another particle 
swarm optimization routine. The optimization objective is to minimize the maximum 
characteristic multiplier. 
5. Simulation Results for Di ﬀerent Control Strategies 
Simulations of satellite motion were pe rformed using the fo llowing parameters: 
• Satellite inertia moments of 0.15 (Case 1) or 0.2 (Case 2), 0.13, and 0.11 kg·m2 (the 
satellite is stabilized in the unstable gravitational equilibrium position); 
• Orbit altitude of 550 km, inclination of 57°, and eccentricity equal to 0.01; 
• Aerodynamic torque calculation: 
o Satellite size is 10 × 20 × 30 cm; 
o Centerofmass displacement is 1 cm along the second satellite axis 
(aerodynamic torque is essentially non zero in the required a ttitude); 
o Atmospheric density is 1.8·10−13 kg/m3; 
• Principal moments of inertia are subject to 5% error. 
These parameters refer to a generic small satellite launched in a low Earth orbit. The 
results on the circumpolar (sunsynchronous) orbit are generally the same. Orbit altitude 
has a signi ﬁcant impact on the stabilization results. A 550 km orbit was chosen to impose 
a relatively strong aerodynamic torque in ﬂuence. At the same time, it does not lead to the 
drastic deterioration in the control performance that is observed in a 350 km orbit. Two 
inertia tensors are considered to represent satellites with relatively uniform mass 
distributions and with signi ﬁcant unbalance, where the moment of inertia along the ﬁrst 
axis is close to the sum of two other moments.  First, the control gain for the LC feedback 
law (10) should be established. Characteristic multipliers of the linearized equations of 
motion are presented in Figure 1 for Case 2. 
 
Figure 1. Control gain of LC for the satellite with signi ﬁcantly uneven mass distribution, Case 2. 
Figure 1. Control gain of LC for the satellite with signiﬁcantly uneven mass distribution, Case 2.
The simulations below utilize control gain values of kw= 460/ worbNm/T2,
ka= 150 Nm/T2for Case 1 and kw= 360/ worbNm/T2,ka= 220 Nm/T2for Case 2.
Damping gain kwis signiﬁcantly shifted to the left compared to the theoretically best
positions in terms of the degree of stability. The best characteristic multipliers are shown at
kw900/ worbNm/T2in Figure 1, whereas the manually adjusted “best” value is
360/ worbNm/T2.
In Figure 2, the results for the LC (10) and SC are compared for the settling period,
when the satellite approaches the required attitude. The brown line in Figure 2 represents the
feedback law (10) results. The black line corresponds to the sliding control (9). The vertical, red,
dotted line indicates the switching moment, when the satellite is close to the required attitude
and SC is replaced with LC. Figure 2 reveals a decrease in the settling time duration for
the sliding control. Lyapunov magnetic control is always characterized by a small control
dipole moment. This is due to the fact that the designed control torque is not directly
implemented—only its projection on the plane perpendicular to the geomagnetic induction
vector. The sliding surface construction procedure ensures that MTB0(although no
feasible point was found in approximately 10% of iterations in the considered example).
The control torque (9) was implemented almost exactly as it was designed, with a difference
of no more than 10 degrees. As a result, the control dipole moment was higher by a factor
in the sliding control scheme presented in Section 3. However, it has its own disadvantages
compared to the simple Lyapunov feedback law (10). The optimization routine requires
extensive computational effort. The control scheme is signiﬁcantly nonsmooth, which can
be examined by referring to the angular velocity curve in Figure 2. Most importantly, the
developed sliding control cannot be used near the required attitude, so the ﬁnal accuracy
is the same as that for control scheme (10) or whichever control scheme is used near the
required attitude.Aerospace 2023 ,10, 975 9 of 13
Aerospace 2023 , 10, x FOR PEER REVIEW 9 of 14 
 
 The simulations below utilize control gain values of kω = 460/orbω N·m/T2, ak = 150 
N·m/T2 for Case 1 and kω = 360/orbω N·m/T2, ak = 220 N·m/T2 for Case 2. Damping gain 
kω is signi ﬁcantly shifted to the left compared to the theoretically best positions in terms 
of the degree of stability. The best characteristic multipliers are shown at kω ≈ 900/orbω 
N·m/T2 in Figure 1, whereas the manually adjusted “best” value is 360/orbω N·m/T2. 
In Figure 2, the results for the LC (10) and SC are compared for the se ttling period, 
when the satellite approaches the required a ttitude. The brown line  in Figure 2 represents 
the feedback law (10) results. The black line  corresponds to the sliding control (9). The 
vertical, red, do tted line  indicates the switching moment, when the satellite is close to the 
required a ttitude and SC is replaced with LC. Figure 2 reveals a decrease in the se ttling 
time duration for the sliding control. Lyapunov magnetic control is always characterized 
by a small control dipole moment. This is due to the fact that the designed control torque 
is not directly implemented—only its proj ection on the plane perpendicular to the 
geomagnetic induction vector. The sliding su rface construction procedure ensures that 
0T≈ MB  (although no feasible point was found in approximately 10% of iterations in the 
considered example). The control torque (9) was implemented almost exactly as it was 
designed, with a di ﬀerence of no more than 10 degrees. As a result, the control dipole 
moment was higher by a factor in the sliding control scheme presented in Section 3. 
However, it has its own disadvantages compar ed to the simple Lyapunov feedback law 
(10). The optimization routine requires extensive computational e ﬀort. The control 
scheme is signi ﬁcantly nonsmooth, which can be exam ined by referring to the angular 
velocity curve in Figure 2. Most importantly, the developed sliding control cannot be used 
near the required a ttitude, so the ﬁnal accuracy is the same as that for control scheme (10) 
or whichever control scheme is used near the required a ttitude. 
 
Figure 2. Comparison of LC and SC, Case 1. 
Figure 3 provides the results for the LC feed back law (10) for satellite Case 2 with a 
notable di ﬀerence in inertia moments. Figure 4 sh ows the results for the same situation 
but also with uncertainty in inertia tensor knowledge. 
Figure 2. Comparison of LC and SC, Case 1.
Figure 3 provides the results for the LC feedback law (10) for satellite Case 2 with a
notable difference in inertia moments. Figure 4 shows the results for the same situation but
also with uncertainty in inertia tensor knowledge.
Aerospace 2023 , 10, x FOR PEER REVIEW 10 of 14 
 
  
Figure 3. Lyapunov control, Case 2. 
 
Figure 4. Lyapunov control with inertia moment uncertainty, Case 2. 
The stabilization accuracy for an uneven mass distribution is around 11–12 degrees, 
whereas Case 1 provides 7degree accuracy. Final accuracy is signi ﬁcantly aﬀected by the 
relations between the moments of inertia. In some speci ﬁc situations, control scheme (10) 
may completely fail. For example, a 3U CubeSat with two large moments of inertia and one small moment of inertia quite often cannot be stabilized with simple Lyapunov 
control. A comparison of Figures 3 and 4 highlights the in ﬂuence of even small uncertainty 
in inertia tensor knowledge. The control gain in (10) is highly sensitive to satellite inertia, 
and Figure 1 may change signi ﬁcantly even after a small change in the inertia moment. 
Low accuracy, high sensitivity to inertia moment uncertainty, and low performance for satellites with highly uneven mass distribu tions are notable disadvantages of Lyapunov 
control scheme (10). However, it is very simple and transparent. 
Its modi ﬁcation, MLC (12), shows lower stabilization accuracy. 
The stabilization accuracy in Figure 5 is only 30 degrees. This is the main 
disadvantage of the considered control strategy. Theoretically, matrix control gain includes scalar gain as a special case. As such , control scheme (12) is  capable of exhibiting 
at least the same performance as control scheme (10). However, the gain values utilized in 
Figures 2–4 di ﬀer signi ﬁcantly from theoretically best gain in Figure 1. The lowest 
characteristic multiplier is characterized by the best degree of stability. This does not 
necessarily mean the best stabilization accura cy. Figure 1 provides the area of sensible 
control gain, which is then manually adjusted. This cannot be performed manually with 
matrix gain. However, control scheme (12) has distinct advantages over (10). Matrix gain 
Figure 3. Lyapunov control, Case 2.
Aerospace 2023 , 10, x FOR PEER REVIEW 10 of 14 
 
  
Figure 3. Lyapunov control, Case 2. 
 
Figure 4. Lyapunov control with inertia moment uncertainty, Case 2. 
The stabilization accuracy for an uneven mass distribution is around 11–12 degrees, 
whereas Case 1 provides 7degree accuracy. Final accuracy is signi ﬁcantly aﬀected by the 
relations between the moments of inertia. In some speci ﬁc situations, control scheme (10) 
may completely fail. For example, a 3U CubeSat with two large moments of inertia and one small moment of inertia quite often cannot be stabilized with simple Lyapunov 
control. A comparison of Figures 3 and 4 highlights the in ﬂuence of even small uncertainty 
in inertia tensor knowledge. The control gain in (10) is highly sensitive to satellite inertia, 
and Figure 1 may change signi ﬁcantly even after a small change in the inertia moment. 
Low accuracy, high sensitivity to inertia moment uncertainty, and low performance for satellites with highly uneven mass distribu tions are notable disadvantages of Lyapunov 
control scheme (10). However, it is very simple and transparent. 
Its modi ﬁcation, MLC (12), shows lower stabilization accuracy. 
The stabilization accuracy in Figure 5 is only 30 degrees. This is the main 
disadvantage of the considered control strategy. Theoretically, matrix control gain includes scalar gain as a special case. As such , control scheme (12) is  capable of exhibiting 
at least the same performance as control scheme (10). However, the gain values utilized in 
Figures 2–4 di ﬀer signi ﬁcantly from theoretically best gain in Figure 1. The lowest 
characteristic multiplier is characterized by the best degree of stability. This does not 
necessarily mean the best stabilization accura cy. Figure 1 provides the area of sensible 
control gain, which is then manually adjusted. This cannot be performed manually with 
matrix gain. However, control scheme (12) has distinct advantages over (10). Matrix gain 
Figure 4. Lyapunov control with inertia moment uncertainty, Case 2.Aerospace 2023 ,10, 975 10 of 13
The stabilization accuracy for an uneven mass distribution is around 11–12 degrees,
whereas Case 1 provides 7degree accuracy. Final accuracy is signiﬁcantly affected by the
relations between the moments of inertia. In some speciﬁc situations, control scheme (10)
may completely fail. For example, a 3U CubeSat with two large moments of inertia and
one small moment of inertia quite often cannot be stabilized with simple Lyapunov control.
A comparison of Figures 3 and 4 highlights the inﬂuence of even small uncertainty in
inertia tensor knowledge. The control gain in (10) is highly sensitive to satellite inertia,
and Figure 1 may change signiﬁcantly even after a small change in the inertia moment.
Low accuracy, high sensitivity to inertia moment uncertainty, and low performance for
satellites with highly uneven mass distributions are notable disadvantages of Lyapunov
control scheme (10). However, it is very simple and transparent.
Its modiﬁcation, MLC (12), shows lower stabilization accuracy.
The stabilization accuracy in Figure 5 is only 30 degrees. This is the main disadvantage
of the considered control strategy. Theoretically, matrix control gain includes scalar gain
as a special case. As such, control scheme (12) is capable of exhibiting at least the same
performance as control scheme (10). However, the gain values utilized in Figures 2–4 differ
signiﬁcantly from theoretically best gain in Figure 1. The lowest characteristic multiplier
is characterized by the best degree of stability. This does not necessarily mean the best
stabilization accuracy. Figure 1 provides the area of sensible control gain, which is then
manually adjusted. This cannot be performed manually with matrix gain. However, control
scheme (12) has distinct advantages over (10). Matrix gain is capable of handling signiﬁcant
differences in inertia moments. Also, this control scheme stabilizes the satellite not only in
the gravitational equilibrium but in any predeﬁned attitude in the orbital frame. Simple
feedback law struggles with this task.
Aerospace 2023 , 10, x FOR PEER REVIEW 11 of 14 
 
 is capable of handling signi ﬁcant diﬀerences in inertia moments. Also, this control scheme 
stabilizes the satellite not only in the gravitational equilibrium but in any prede ﬁned 
attitude in the orbital frame. Simple feedback law struggles with this task. 
 
Figure 5. MLC, Case 2. 
LQR (14) performance is presented in Figure 6 for Case 1. 
 
Figure 6. LQR performance, Case 1. 
The stabilization accuracy is the same as  that for control sc heme (10). The linear 
quadratic regulator with the change in variab les described in Section 4 has one important 
advantage over simple feedback: it is po ssible to stabilize satellites with signi ﬁcantly 
uneven inertia moments. This control scheme  operates with matrix control gain, so, 
similar to control scheme (12), it is possible to distinguish control channels with di ﬀerent 
“weights” represented by the inverse inertia moments. However, the described linear 
quadratic regulator only func tions near the required a ttitude (although the neighborhood 
is slightly larger than the linear one), and it is sensitive to the uncertainty in inertia moment knowledge. 
The last approach is a special “controllable”  trajectory construction PSO strategy. The 
result is provided in Figure 7. 
Figure 5. MLC, Case 2.
LQR (14) performance is presented in Figure 6 for Case 1.
The stabilization accuracy is the same as that for control scheme (10). The linear
quadratic regulator with the change in variables described in Section 4 has one important
advantage over simple feedback: it is possible to stabilize satellites with signiﬁcantly un
even inertia moments. This control scheme operates with matrix control gain, so, similar to
control scheme (12), it is possible to distinguish control channels with different “weights”
represented by the inverse inertia moments. However, the described linear quadratic regu
lator only functions near the required attitude (although the neighborhood is slightly larger
than the linear one), and it is sensitive to the uncertainty in inertia moment knowledge.
The last approach is a special “controllable” trajectory construction PSO strategy. The
result is provided in Figure 7.Aerospace 2023 ,10, 975 11 of 13
Aerospace 2023 , 10, x FOR PEER REVIEW 11 of 14 
 
 is capable of handling signi ﬁcant diﬀerences in inertia moments. Also, this control scheme 
stabilizes the satellite not only in the gravitational equilibrium but in any prede ﬁned 
attitude in the orbital frame. Simple feedback law struggles with this task. 
 
Figure 5. MLC, Case 2. 
LQR (14) performance is presented in Figure 6 for Case 1. 
 
Figure 6. LQR performance, Case 1. 
The stabilization accuracy is the same as  that for control sc heme (10). The linear 
quadratic regulator with the change in variab les described in Section 4 has one important 
advantage over simple feedback: it is po ssible to stabilize satellites with signi ﬁcantly 
uneven inertia moments. This control scheme  operates with matrix control gain, so, 
similar to control scheme (12), it is possible to distinguish control channels with di ﬀerent 
“weights” represented by the inverse inertia moments. However, the described linear 
quadratic regulator only func tions near the required a ttitude (although the neighborhood 
is slightly larger than the linear one), and it is sensitive to the uncertainty in inertia moment knowledge. 
The last approach is a special “controllable”  trajectory construction PSO strategy. The 
result is provided in Figure 7. 
Figure 6. LQR performance, Case 1.
Aerospace 2023 , 10, x FOR PEER REVIEW 12 of 14 
 
  
Figure 7. Special trajectory construction with PSO, Case 2. 
Figure 7 indicates approximately seven degrees accuracy for Case 2 with inertia 
tensor uncertainty. This control approach surp asses all others in terms of overall accuracy 
and does not su ﬀer from problems with inertia moment relations. Due to the existence of 
a special trajectory construction procedure th at incorporates gravitational torque, this 
approach can be used to stabilize a satellite in any a ttitude in the orbital frame. Although 
the gravitational torque is essentially nonzero  in this case, the trajectory construction 
procedure ensures its successful rejection. The main disadvantage of this control strategy 
is its veryhigh computational demand. 
6. Discussion and Conclusions 
Five diﬀerent strategies for threeaxis magnetic a ttitude control are compared in this 
paper, including a new sliding control scheme with varying surface parameters. 
Feedback, or Lyapunov, control with scalar co ntrol gain shows moderate accuracy with a 
very simple structure and gain adjustment procedure. It su ﬀers from inertia tensor 
uncertainty and an uneven mass distribution  and struggles with stabilization when a 
satellite is not in the gravitational equilibrium position. The feedback law with matrix gain 
negates these disadvantages but requires speci ﬁc computationally expensive optimization 
procedures to ﬁnd proper gain matrixes and achieve the same accuracy as simple control 
with scalar gain. The linear quadratic regulato r constructed for the timeinvariant system 
in augmented space generally has the same pr operties as the feedback law with matrix 
gain but only operates in the vicinity of the required a ttitude. Sliding control provides 
faster convergence to the required a ttitude but fails to operate near it and requires an 
optimization problem so lution. Being used together with any other approach, it has the 
corresponding control method accuracy. The b e s t  a c c u r a c y  i s  a c h i e v e d  t h o u g h  t h e  
development of a special angular trajectory. Maintenance of this trajectory requires 
control torque that is almost perpendicula r to the geomagnetic induction vector. This 
approach involves using a direct optimization method (particle swarm optimization) that 
cannot be run in real time onboard a satellite. Instead, it requires periodic (once every few 
orbits) uploading of the cons tructed trajectory and control parameters onboard, which 
signi ﬁcantly complicates mission maintenance. 
Overall, the best control strategies are feedba ck with scalar gain due to its simplicity, 
feedback with matrix gain due to its ability to negate problems typical encountered with 
scalar gain (at the cost of a complicated and computationally demanding gain adjustment 
procedure), and special angular trajectory cons truction due to its hi gh accuracy (at the 
cost of a complicated construction procedure and the necessity of periodically uploading 
new control parameters onboard). 
These conclusions are based on the Figures provided in this paper. However, another 
important factor is control robustness toward variations in simulation conditions. One of 
Figure 7. Special trajectory construction with PSO, Case 2.
Figure 7 indicates approximately seven degrees accuracy for Case 2 with inertia tensor
uncertainty. This control approach surpasses all others in terms of overall accuracy and
does not suffer from problems with inertia moment relations. Due to the existence of
a special trajectory construction procedure that incorporates gravitational torque, this
approach can be used to stabilize a satellite in any attitude in the orbital frame. Although
the gravitational torque is essentially nonzero in this case, the trajectory construction
procedure ensures its successful rejection. The main disadvantage of this control strategy is
its veryhigh computational demand.
6. Discussion and Conclusions
Five different strategies for threeaxis magnetic attitude control are compared in this
paper, including a new sliding control scheme with varying surface parameters. Feedback,
or Lyapunov, control with scalar control gain shows moderate accuracy with a very simple
structure and gain adjustment procedure. It suffers from inertia tensor uncertainty and
an uneven mass distribution and struggles with stabilization when a satellite is not in the
gravitational equilibrium position. The feedback law with matrix gain negates these disad
vantages but requires speciﬁc computationally expensive optimization procedures to ﬁnd
proper gain matrixes and achieve the same accuracy as simple control with scalar gain. The
linear quadratic regulator constructed for the timeinvariant system in augmented space
generally has the same properties as the feedback law with matrix gain but only operates
in the vicinity of the required attitude. Sliding control provides faster convergence to the
required attitude but fails to operate near it and requires an optimization problem solution.Aerospace 2023 ,10, 975 12 of 13
Being used together with any other approach, it has the corresponding control method
accuracy. The best accuracy is achieved though the development of a special angular trajec
tory. Maintenance of this trajectory requires control torque that is almost perpendicular
to the geomagnetic induction vector. This approach involves using a direct optimization
method (particle swarm optimization) that cannot be run in real time onboard a satellite.
Instead, it requires periodic (once every few orbits) uploading of the constructed trajectory
and control parameters onboard, which signiﬁcantly complicates mission maintenance.
Overall, the best control strategies are feedback with scalar gain due to its simplicity,
feedback with matrix gain due to its ability to negate problems typical encountered with
scalar gain (at the cost of a complicated and computationally demanding gain adjustment
procedure), and special angular trajectory construction due to its high accuracy (at the cost
of a complicated construction procedure and the necessity of periodically uploading new
control parameters onboard).
These conclusions are based on the Figures provided in this paper. However, another
important factor is control robustness toward variations in simulation conditions. One of the
major and inherently varying factors is inertia tensor uncertainty. Different errors in inertia
moment knowledge—even if they are on the same 5% level—can lead to the deterioration
of t Lyapunov control performance (both with scalar and matrix gain). Different initial
conditions affect sliding control schemes that strongly depend on the transient trajectory.
On the contrary, particle swarm optimization is not sensitive to initial condition change.
Despite this ﬁnal note, the general conclusions regarding the best control strategies hold.
Author Contributions: Conceptualization, M.O. and D.R.; methodology, D.R.; software, D.R. and
A.O.; formal analysis, D.R. and U.M.; writing—original draft preparation, D.R.; writing—review and
editing, U.M. and M.O. All authors have read and agreed to the published version of the manuscript.
Funding: This research received no external funding.
Data Availability Statement: No new data were created or analyzed in this study. Data sharing is
not applicable to this article.
Conﬂicts of Interest: The authors declare no conﬂict of interest.
References
1. Stickler, A.C.; Alfriend, K.T. Elementary Magnetic Attitude Control System. J. Spacecr. Rockets 1976 ,13, 282–287. [CrossRef]
2. Desouky, M.A.A.; Abdelkhalik, O. A new variant of the Bdot control for spacecraft magnetic detumbling. Acta Astronaut. 2020 ,
171, 14–22. [CrossRef]
3. Ignatov, A.I.; Sazonov, V .V . Stabilization of the Gravitational Orientation Mode of an Artiﬁcial Earth Satellite (AES) by the
Electromagnetic Control System. Cosm. Res. 2020 ,58, 33–41. [CrossRef]
4. Belokonov, I.V .; Timbai, I.A.; Nikolaev, P .N. Analysis and Synthesis of Motion of Aerodynamically Stabilized Nanosatellites of the
CubeSat Design. Gyroscopy Navig. 2018 ,9, 287–300. [CrossRef]
5. Morozov, V .M.; Kalenova, V .I. Stabilization of Satellite Relative Equilibrium Using Magnetic Moments and Aerodynamic Forces.
Cosm. Res. 2022 ,60, 213–219. [CrossRef]
6. Ignatov, A.I.; Sazonov, V .V . Investigation of SteadyState Motion of an Artiﬁcial Earth Satellite in the Uniaxial Magnetic Orientation
Mode. Cosm. Res. 2021 ,59, 112–125. [CrossRef]
7. Avanzini, G.; de Angelis, E.L.; Giulietti, F. Spinaxis pointing of a magnetically actuated spacecraft. Acta Astronaut. 2014 ,94,
493–501. [CrossRef]
8. Slavinskis, A.; Kvell, U.; Kulu, E.; Sünter, I.; Kuuste, H.; Lätt, S.; Voormansik, K.; Noorma, M. High spin rate magnetic controller
for nanosatellites. Acta Astronaut. 2014 ,95, 218–226. [CrossRef]
9. de Ruiter, A. A faulttolerant magnetic spin stabilizing controller for the JC2SatFF mission. Acta Astronaut. 2011 ,68, 160–171.
[CrossRef]
10. Roldugin, D.S. Stability of a Magnetically Actuated Satellite towards the Sun on a SunSynchronous Orbit. Cosm. Res. 2023 ,61,
134–142. [CrossRef]
11. Colagrossi, A.; Lavagna, M. A Spacecraft Attitude Determination and Control Algorithm for Solar Arrays Pointing Leveraging
Sun Angle and Angular Rates Measurements. Algorithms 2022 ,15, 29. [CrossRef]
12. Roldugin, D.; Tkachev, S.; Ovchinnikov, M. Asymptotic Motion of a Satellite under the Action of Sdot Magnetic Attitude Control.
Aerospace 2022 ,9, 639. [CrossRef]Aerospace 2023 ,10, 975 13 of 13
13. Bhat, S.P . Controllability of nonlinear timevarying systems: Applications to spacecraft attitude control using magnetic actuation.
IEEE Trans. Autom. Control 2005 ,50, 1725–1735. [CrossRef]
14. Morozov, V .M.; Kalenova, V .I. Satellite Control Using Magnetic Moments: Controllability and Stabilization Algorithms. Cosm.
Res. 2020 ,58, 158–166. [CrossRef]
15. Liu, S.; Huang, Q. Controllability and observability of discretized satellite magnetic attitude control system. AIMS Math. 2023 ,8,
7899–7916. [CrossRef]
16. Lovera, M.; Astolﬁ, A. Spacecraft attitude control using magnetic actuators. Automatica 2004 ,40, 1405–1414. [CrossRef]
17. Lovera, M.; Astolﬁ, A. Global Magnetic Attitude Control of Inertially Pointing Spacecraft. J. Guid. Control Dyn. 2005 ,28, 1065–1072.
[CrossRef]
18. Wisniewski, R.; Blanke, M. Fully magnetic attitude control for spacecraft subject to gravity gradient. Automatica 1999 ,35,
1201–1214. [CrossRef]
19. Damaren, C.J. Comments on “Fully magnetic attitude control for spacecraft subject to gravity gradient”. Automatica 2002 ,38,
2189. [CrossRef]
20. Celani, F. Gain Selection for Attitude Stabilization of EarthPointing Spacecraft Using Magnetorquers. Aerotec. Missili Spaz. 2021 ,
100, 15–24. [CrossRef]
21. Rossa, F.D.; Bergamasco, M.; Lovera, M. Bifurcation analysis of the attitude dynamics for a magnetically controlled spacecraft. In
Proceedings of the 51st IEEE Conference on Decision and Control, Maui, HI, USA, 10–13 December 2012; IEEE: Maui, HI, USA,
2012; pp. 1154–1159.
22. Ivanov, D.S.; Ovchinnikov, M.Y.; Penkov, V .I.; Roldugin, D.S.; Doronin, D.M.; Ovchinnikov, A.V . Advanced numerical study of the
threeaxis magnetic attitude control and determination with uncertainties. Acta Astronaut. 2017 ,132, 103–110. [CrossRef]
23. Celani, F. Robust threeaxis attitude stabilization for inertial pointing spacecraft using magnetorquers. Acta Astronaut. 2015 ,107,
87–96. [CrossRef]
24. Mashtakov, Y.V .; Ovchinnikov, M.Y.; Wöske, F.; Rievers, B.; List, M. Attitude determination & control system design for gravity
recovery missions like GRACE. Acta Astronaut. 2020 ,173, 172–182. [CrossRef]
25. Wang, P .; Shtessel, Y.; Wang, Y.Q. Satellite attitude control using only magnetorquers. In Proceedings of the 1998 American
Control Conference, ACC, Philadelphia, PA, USA, 26–26 June 1998; pp. 500–504.
26. Wisniewski, R. Sliding Mode Attitude Control for Magnetic Actuated Satellite. IFAC Proc. Vol. 1998 ,31, 179–184. [CrossRef]
27. Sofyalı, A.; Jafarov, E.M. Integral Sliding Mode Control of Small Satellite Attitude Motion by Purely Magnetic Actuation. IFAC
Proc. Vol. 2014 ,47, 7947–7953. [CrossRef]
28. Sofyali, A.; Jafarov, E.M.; Wisniewski, R. Robust and global attitude stabilization of magnetically actuated spacecraft through
sliding mode. Aerosp. Sci. Technol. 2018 ,76, 91–104. [CrossRef]
29. Ovchinnikov, M.Y.; Roldugin, D.S.; Penkov, V .I.; Tkachev, S.S.; Mashtakov, Y.V . Fully magnetic sliding mode control for acquiring
threeaxis attitude. Acta Astronaut. 2016 ,121, 59–62. [CrossRef]
30. Okhitina, A.; Roldugin, D.; Tkachev, S. Application of the PSO for the construction of a 3axis stable magnetically actuated
satellite angular motion. Acta Astronaut. 2022 ,195, 86–97. [CrossRef]
31. Okhitina, A.; Roldugin, D.; Tkachev, S.; Ovchinnikov, M. Academy transaction note “closed form solution for a minimum
deviation magnetically controllable satellite angular trajectory”. Acta Astronaut. 2023 ,203, 60–64. [CrossRef]
32. Alken, P .; Th ébault, E.; Beggan, C.D.; Amit, H.; Aubert, J.; Baerenzung, J.; Bondar, T.N.; Brown, W.J.; Califf, S.; Chambodut, A.;
et al. International Geomagnetic Reference Field: The thirteenth generation. Earth Planets Space 2021 ,73, 49. [CrossRef]
33. Tikhonov, A.A.; Petrov, K.G. Multipole models of the earth’s magnetic ﬁeld. Cosm. Res. 2002 ,40, 203–212. [CrossRef]
34. Utkin, V .I. Sliding Modes in Control and Optimization ; SpringerVerlag: Berlin/Heidelberg, Germany, 1992.
35. Ovchinnikov, M.Y.; Roldugin, D.S.; Ivanov, D.S.; Penkov, V .I. Choosing control parameters for three axis magnetic stabilization in
orbital frame. Acta Astronaut. 2015 ,116, 74–77. [CrossRef]
36. Malkin, I.G. Theory of Stability of Motion ; U.S. Atomic Energy Commission, Technical Information Service: Oak Ridge, TN,
USA, 1952.
37. Kennedy, J.; Eberhart, R. Particle swarm optimization. In Proceedings of the International Conference on Neural Networks, Perth,
WA, Australia, 27 November–1 December 1995; Volume 4, pp. 1942–1948.
Disclaimer/Publisher’s Note: The statements, opinions and data contained in all publications are solely those of the individual
author(s) and contributor(s) and not of MDPI and/or the editor(s). MDPI and/or the editor(s) disclaim responsibility for any injury to
people or property resulting from any ideas, methods, instructions or products referred to in the content.MathNet.Ru
All Russian mathematical portal
N. D. Beklemishev, A. K. Platonov, S. M. Sokolov, O. V. Trifon ov, Control algorithms
for manipulator’s grab motions, Keldysh Institute preprints , 2017, 047
DOI: 10.20948/prepr201747
Use of the allRussian mathematical portal MathNet.Ru imp lies that you have read and agreed to these terms of use
http://www.mathnet.ru/eng/agreement
Download details:
IP: 79.139.215.77
December 17, 2023, 00:53:23ИПМ им.М.В.Келдыша РАН   •  Электронная библиотека
Препринты ИПМ   •  Препринт № 47 за 2017 г.
ISSN 20712898 (Print)
ISSN 20712901 (Online)
Беклемишев Н.Д. , Платонов А.К. ,
Соколов С.М. , Трифонов О.В.
Алгоритмы управления
движением схвата
манипулятора
Рекомендуемая форма библиографической ссылки:   Алгоритмы управления движением
схвата манипулятора / Н.Д.Беклемишев [и др.] // Препринты ИПМ им.  М.В.Келдыша. 2017.
№ 47. 36  с. doi:10.20948/prepr201747  
URL: http://library.keldysh.ru/preprint.asp?id=201747О р д е н а  Л е н и н а  
ИНСТИТУТ ПРИКЛАДНОЙ МАТЕМАТИКИ  
имени М.В. Келдыша  
Р о с с и й с к о й  а к а д е м и и  н а у к  
 
 
 
 
 
 
 
 
 
 
Н.Д. Беклемишев, А.К. П латонов, С.М. Соколов, О. В. Триф онов 
 
 
АЛГОРИТМЫ УПРАВЛЕНИЯ  ДВИЖЕНИЕМ  
СХВАТ А МАНИПУЛЯТОР А  
 
 
 
 
 
 
 
 
 
 
 
Москва  
2017 г. Н.Д. Беклемишев , А.К. Платонов, С.М. Соколов , О.В. Трифонов  
Алгоритмы управления движением схват а манипулятора  
Аннотация  
       Предложены три базовые функции, на которые раскладываются алгоритмы построения 
рабочих движений манипулятора  с предметом в его схвате . Рассмотр ены проблемы реализ а
ции этих функций для манипулятора с кинематической схемой, усложненной боковым вын о
сом схвата. Разработаны алгоритмы векторных операторов для решения прямых и обратных 
задач кинематики манипуляций. Описаны способы раскрытия неодно значно стей при постр о
ении конфигур аций манипулятора . Показан ы алгоритмы наведения на объект камеры схвата . 
Ключевые слова : роботы, манипулятор ы, функции построения движений, обратная зад а
ча кинематики,  операторы геометрии , расширение алгебры векторов  
Работа выпо лнена при финансовой поддержке РФФИ (грант № 15 0806431)  
N.D. Beklemishev , A.K. Platonov , S.M. Sokolov , O.V. Trifonov  
Control Algorithms for Manipulator’s Gra b Motions  
      Paper describes three basic functions used in a work area motion formation algor ithms for a r o
botic arm with  object in  its grab. An implementation of those functions for a robotic arm with ki n
ematics complicated by a lateral mount of the grab is under consideration . Operators of vector algo
rithms for solving direct and inverse kinemat ic problems are developed. Methods for resolving r o
botic arm configuration ambiguity are de fined. Algorithms for grab with video camera are de
scribed . 
Kye words: robots, manipulator’s kinematic, motion making  function , geometric operators , vec
tor algebra o perators extending , video guidance algorithms .  
The studies are carried out in RFBR grant  № 15 0806431   
СОДЕРЖАНИЕ  
ВВЕДЕНИЕ  ................................ ................................ ................................ ................................ ....... 3 
АНАЛИЗ ОСОБЕННОСТЕЙ КИНЕМАТ ИЧЕСКОЙ СЕМЫ МАНИПУЛ ЯТОРА  ..........  4 
ПОСТРОЕНИЕ РАБОЧИХ ЗО Н МАНИПУЛЯТОРА  ................................ ................................ .................  6 
ТРИ ФУНКЦИОНАЛЬНЫХ С РЕДСТВА УПРАВЛЕНИЯ М АНИПУЛИРОВАНИЕМ  ... 7 
СТРУКТУРА ДАННЫХ ПАРА МЕТРОВ МАНИПУЛИРОВАН ИЯ ................................ ..............................  7 
БАЗОВЫЕ ФУНКЦИИ ПОСТР ОЕНИЯ ДВИЖЕНИЙ МАНИП УЛЯТОРА  ................................ ....................  9 
1.Преобразование конфигурации манипулятора в координаты схвата  ............................  9 
2. Преобразование целевых координат схвата в углы манипулятора  ..............................  10 
3. Построение подцели движения вдоль целевого вектора  ................................ ...............  12 
РЕАЛИЗАЦИЯ БАЗОВЫХ Ф УНКЦИЙ ПОСТРОЕНИЯ МА НИПУЛЯЦИЙ  ..................  13 
СИСТЕМЫ КООРДИНАТ КИН ЕМАТИКИ МАНИПУЛЯТОРА  ................................ ................................  14 
1. "Интерфейсная " система координат подвижного манипулятора  .............................  14 
2. Системы координат моделей кинематики роботов  ................................ ......................  15 
3. Системы координат мобильного робота Трикол  ................................ ...........................  16 
ПРЯМАЯ КИНЕМА ТИЧЕСКАЯ ЗАДАЧА МАНИ ПУЛЯТОРА  ................................ ................................ . 17 
РЕШЕНИЯ ОБРАТНЫХ КИНЕ МАТИЧЕСКИХ ЗАДАЧ МАН ИПУЛЯТОРА  ................................ ...............  20 
1. Построение позиции вертикальной плоскос ти манипулятора  ................................ ..... 21 
2. Построение конфигурации трехзвенника манипулятора  ................................ ..............  24 
3. Алгоритмы раскрытия неоднозначностей ОКЗ  ................................ .............................  27 
ЗАДАЧА НАВЕДЕНИЯ ВИД ЕОКАМЕРЫ СХВАТА НА О БЪЕКТ  ................................ ... 31 
О ПОВОРОТЕ ВИДЕОКАМЕРЫ  ВОКРУГ ПРОДОЛЬНОЙ ОС И СХВАТА  ................................ ................  32 
НАВЕДЕНИЕ ВЕРТИКАЛЬНО Й ПЛОСКОСТИ ОСИ КАМЕ РЫ НА ОБЪЕКТ КАДРА  ................................ . 33 
УГОЛ НАКЛОНА СХВАТА Д ЛЯ НАВЕДЕНИЯ ОСИ КАМ ЕРЫ НА ОБЪЕКТ  ................................ ............  34 
ЗАКЛЮЧЕНИЕ  ................................ ................................ ................................ ..............................  34 
ЛИТЕРАТУРА  ................................ ................................ ................................ ................................  35 3 
Введение  
 Развитие робототехники настоятельно нуждается в развитии математич е
ских моделей , алгоритмическ ого и программного обеспечения механических 
работ, выполняемых роботами манипуляторами со зрением и с другими сре д
ствами их позиционного и силового очувствления. В зарубежных работах такой 
переход интереса от мобильных роботов к многофункциональным роботам 
манипуляторам (в отличие от хорошо освоенных промышленных программир у
емых манипуляторов) наметился более  10 лет назад  [1],[2] – в связи с военн ы
ми1 и медицинскими применениями . В отечественной пр актике высокая цена  
робото часа, тре бования к  высокой квалиф икаци и специалистов  и стремление к 
сохранени ю рабочи х мест для людей привели к задержке этого процесса на 
много лет .  
Однако ныне все больше приходит понимание, что автоматизация  про
мышленн ости – наиболее надежный путь к  повышению  и производительности 
труд а и качества изделий  [3]. С другой стороны , возникла необходимость д о
полнения роботом непростого и тяжелого труда низкоквалифицированного 
персонала у многокоординатных автоматов машиностроения в интересах сн и
жения производственного брака. Такая же необходи мость в роботах прису т
ствует на ряде высокоточных производств микроэлектроники или в опасных 
для здоровья участках металлургии и химической промышленности.  
Большой интерес в настоящее время вызывает тематика создания "сер
висных" роботов для использования их в медицине и в тех местах, где не хват а
ет человеческих физических [4] или нервных сил или где требуется высокая 
точность и безошибочность медицинских мероприятий  [5]. И, наконец , – в пер
спективе намечается развит ие "Удаленной робототехники " для использо вания 
труда дистанционно управляемых роботов в условиях , трудных для человека . 
Арктика и Восточная Сибирь, пожары и природные катаклизмы  и Космос  – это 
именно  те случаи, где стоимость робото часа менее стоимости человек очаса. 
 Во всех упомянутых обстоятел ьствах очень нужно  дополнение  умел ым 
манипулировани ем робота умелой его мобильност и среди объектов в его окр у
жении . Это п ревышает существующий  уров ень автоматизма машин и требует 
развития алгоритмических средств "машинного интеллекта"  с развитием мет о
дов п остроения управления рабочими  движениями  машины . Очевидно, что 
сложность автоматическ их манипуляций превышает  сложност и реали зации мо
бильности и "педипуляций" – опорной подвижности шагающих машин  (напом
ним, что на создание последних ушло более 4 десятилети й – [6]…[12]).  
                                           
1Например , ECA  в 2007 г. приспособило многостепенной двурукий робот NEXTER  для военной с и
стемы AMXB 2DT противоминного танка, который теперь стоит на вооружении во Франции.  4 
Описываем ый ниже анализ алгоритмов управления рабочими движени я
ми схвата манипулятора выполнен  на примере и применительно к создаваем о
му опытно макетному образцу подвижного робота манипулятора (ПРМ), кото
рый показан на рис. 1. Особенности кинематики этого манипул ятора оказывают 
сильное влияние на ограничения возможных движений, что з аметно расширило 
функциональный состав алгоритмов для построения требуемых м анипуляций.  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Рис. 1.  Подвижная система ПРМ 1 в виде манипулятор а, 
установленного на платформе мобильного робота “ТРИКОЛ”  
 – пример робототехнической системы с 6 степенями свободы схвата  
и с 14 кинематическими степенями подвижности (СП) механи ческой системы  
(6 степеней подвижности робота Трикол , 5 – у манипулятора и 3  – у двух камер)  
Анализ особенностей кинематической схемы манипулятора  
 На рис. 2 показан а кинематическая схема и размеры звеньев этого ман и
пулятора . Следует обратить внимание на ограничения в 6 Dрабочей зоне ман и
пуляций (3 координатных и 3 угловых степен и свободы движений) из за его п я
ти степеней подвижности (СП). В кинематической схеме манипулятора нере а
лизуемы такие направления ориентации продольной оси схвата, которые не 
компланарны вертикальной плоскости, проходящей через эту ось в текущем 
положении в ыбранной рабочей точки на этой оси (например, точки середины 
или точки конца губок схвата) в пределах зоны достижимости точек окрестн о
сти манипулятора.  5 
 
 
 
 
 
 
 
 
 
 
Рис. 2. Кинематическая схема манипулятора ПРМ 1и ее система координат  
 По этой причине прос транство степеней свободы рабочих движений м а
нипулятора ("5 Dвиртуальных перемещений") представляет собой расслоение 
трёхмерного пространства манипуляций на пучок вертикальных плоскостей 
возможных положений и направлений в физическом пространстве продольно й 
оси вращения 5 й степени подвижности манипулятора (оси схвата СП 5). При 
этом позиции и ориентация продольной оси схвата возможны лишь в пределах 
угловых ограничений вращений  СП2 (шарнира "плеча"), СП 3 (шарнира "ло к
тя"), СП 4 (шарнира "кисти")  и СП 5 (поворота схвата) , показанных на рис. 2.  
 Вертикальная плоскость наклонов схвата (ВПС) смещена влево от вирт у
альной продольной плоскости наклонов звеньев манипулятора (ВПМ), прох о
дящей через его вертикальную ось. При "курсовом" вращении манипулятора 
вокруг  вертикальной оси СП 1 эта ВПС всегда касается окружности с центром 
в точке СП 1 и радиусом, равным боковому смещению плоскости (СП 2,СП 5) 
относительно оси СП 1. Требуемые "боковые" рабочие движения должны в ы
полняться приводом этой СП 1 первой степени под вижности манипулятора с 
учётом фиксированного положения предмета  в плоскости губок схвата, которое 
задается двумя параметрами его длины и угла наклона к продольной оси схвата .  
 Вектор  нужной  рабочей точки схват а в каждый момент манипуляций к о
ординируются углом и расстоянием в полярной системе координат губок схвата 
относительно их центра  на продольной оси схвата . Эта ось  принадлеж ит теку
щему положению ВПС, однозначно определяемому конфигурацией углов ме ж
ду звеньями манипулятора в первых его 4 степенях подв ижности. Эти обсто я
тельства накладывают определённые ограничения на рассматриваемые ниже 
алгоритмы решения обратной кинематической задачи при управлении рабоч и
ми движениями и на достижимую точность их реализации при различных ко н
фигурациях звеньев манипуля тора в разных местах его рабочей зоны.  
ВП
М 6 
Рис. 3. РЗ направленного схвата  
Построение рабочих зон манипулятора  
Разработанный а лгоритм для автоматического расчета границ рабочей 
зоны (РЗ) манипулятора заключается в поочередном переборе участков гран и
цы РЗ путем движения в пределах допустимых  угловых диапазонов одной ст е
пени подвижности при всех других, находящихся или в центре диапазона (в 
начале процесса), либо на очередной границе диапазона. Перебор границ нач и
нается от СП 2 плеча при полностью вытянутом горизонтальном манипуляторе 
на высот е его подвижного основания на мобильном роботе Трикол, затем – по
сле достижения упора СП2 – строится граница СП 3 предплечья и затем – сво
бодного  схвата ( в случа е фиксированного  схвата при движениях плеча и пре д
плечья его ориентация непрерывно формируется  по текущему значению суммы 
углов плеча и предплечья). При достижении предельной конфигурации всех 
трех звеньев выполняется, начиная опять с оси плеча, обратное поочередное 
(плечо предплечье схват) движение единственного звена при других звен ьях, 
находящих ся в полученных ими крайних позициях. Этим способом движ ения 
моделируются в обе стороны от нижнего положения полностью вытянутого 
манипулятора. Каждое такое движение выполняется базовым оператором "п о
ворота вектора вокруг вектора" из биб лиотеки векторных о ператоров РВА  [14].  
Геометрически все границы искомой РЗ у  ангулярных манипуляторов о б
разуют дуги окружностей, эквидистантные  их "исходным дугам ". Последние  
имею т центр ы в выбранных степенях подвижности и размер ы радиусов , равны е 
расстояниям от этих центр ов до оси СП 4 качаний схвата. Для построения ис
комой границы участка РЗ в диапазоне текущего угла вращения его "исходная 
дуга" эквидистантно сдвигается в напра в
лении оси  схвата на расстояние его длины.  
Заметим, что  наиболее важен  именно 
упомянутый выше случай рабочей зоны для 
выбранного фиксированного направления 
схвата  (см. рис. 3) . Фиксирование его пози
ции определен о или  условиями рабо чего 
движения , или необходимостью  – поскол ь
ку нет возможности определить  конфигур а
цию манипулятора до назначения  ориент а
ции у какого либо одного его звена . Но когда  нет свободы выбора направления 
схвата, то  возникают показанные на рис. 3 значительные уменьше ния достиж и
мых рабочих точек пространства у манипулятора с заданной постоянной орие н
тацией схвата  (на этом рисунке сини м цветом показана РЗ для движений гор и
зонтального схвата, а зеленым цветом – для движений верт икального схвата) . 7 
Три ф ункциональны х средства управления манипулированием  
Содержание з адач манипулирования объектами в операционном пр о
странстве робота манипулят ора2 заметно отлича ется от содержания хорошо 
разработанных в робототехнике задач локомоции мобильных роботов  [9]. Если 
в задачах локомоций главные проблемы связаны с выбором направления и ск о
рости движения в целом самой машины, то в задачах манипулирования  глав
ными проблемами явля ются построени я движений механизма для реализации 
нужных перемещений  внешних  объектов в операционном пространстве робота . 
Формальные от личи я постанов ок этих задач заключается , прежде всего, в 
размерности базовой системы координат операционного пространства. В отл и
чие от  6Dоперационного пространства робота манипулятора (координаты и 
ориентации предметов) постановку задач построения движений мобильных р о
ботов с движителями любого типа определяется  2D моделью опорн ой повер х
ност и локо моций  или 2D модель ю сил на своей  поверхности у подводных и 
воздушных робот ов. Другим важным отличием, усложняющим задач и постро е
ния манипуляционных движений , является значит ельно большая содержател ь
ность описаний т ребуемой подвижност и операционного элеме нта манипулят о
ра – его схвата , причем относительно  и операционных объектов внимания 
и/или интереса, и элементов кинематики собственного механизма.  
Вместе с этим количест во кинематических процедур , нужных для постр о
ения манипул яционных движений схвата , оказалось возможным для бол ьшого 
числа  задач  свести лишь к трем базовы м кинематически функциональны м пре
образовани ям предлагаемого ниже фиксированного набора  данных, содерж а
щего все нужные параметры исходных и целевых движений схвата.  
Структура данных парамет ров манипулирования  
Для самых разных задач манипуляций оказалась полезн ой стандартная 
структура конфигурационных данных параметров манипулятора и требуемых 
позиций схвата , назван ная именем CONFIG . Она представляет собой основной 
формальный параметр области  определения базовых функций (назовем их f1, f2 
и f3) в последовательности их действий  для формирования требуемых движ е
ний схвата . В ней содержа тся целевые параметры схвата и фазовы е переменны е 
конфигурационного состояния манипулятора и его видеокамер . В содержание 
этого структур ированного 1 6мерного вектора  данных может добавляться  всё, 
что понадобится для построения  манипуляционных движениях . 
                                           
2 Операционным пространством робота ниже называется то множество элементов его окружения и 
содержания его памяти с их отношениями, которые имеют значение для ре шения текущей задачи 
требуемого функционирования машины (у другой функциональной задачи – другое операционное 
пространство).   8 
В соcтав этой структуры данных в настоящий момент вход ят:  
 5 углов в степенях подвижности (СП) звеньев манипулят ора: 1, 2, 3, 4, 5; 
 размер ширины раскрытия схвата  (если его нет, то ставится 999) [см]: width ; 
 шаг линейного продвижения по направлению к вектору цели  [см]: step; 
 заданный целевой угол наклона схвата  (если наследуется , то ставится 999) : ; 
 заданный целевой угол поворота схвата  (если наследуется , то ставится 999) : ; 
 угол наклона оси возможного предмета в схвате к продольной оси схвата: Obj; 
 высота ("выступ") начала оси предмета от продольной оси схвата [мм]: HObj; 
 расстояние от СП 4 до точки начал а оси предмета на оси схвата [мм]: DObj;  
 длина в плоскости схвата оси предмета от его начала  [мм]: LObj; 
 3 угла осей видеокамер относительно оси плеча манипулятора:  С11, С12, С2. 
 Поскольку данные CONFIG  могут и наследоваться, то введен п ризнак "999", 
означающий, что величина параметра равна ранее заданному значению . 
 В этой структуре положительные углы наклона направлены вниз.  
 Если целевым параметром является конец губок схвата, то задается 
HObj=Obj=0, а сумма  DObj+LObj  берется равн ой длине схвата.  
В разных случаях и в разных функциях н аборы кинематических параме т
ров манипулятора типа CONFIG  имеют различное смысловое содержание и имя:  
cfg_start – набор параметров манипулятора в точке старта ( часто  равен cfg);  
cfg_ – набор параметров мани пулятора в текущем  состоянии решаемой задачи ; 
cfg_next – параметры после шага линейной интерполяции целевого вектора ; 
cfg_Target  – набор целевых параметров манипулятора для решаемой задачи.  
Втор ым стандартным для манипуляций структур ным объектом  является 
вектор координат точки схвата в системе координат манипулятора XС. Опред е
ляемая этим вектором т очка схва та либо наследуется из cfg параметра LObj при 
условии, что Obj = 0 (в противном случае это – точка центра губок схвата), л и
бо задается в соответствии с этими параметрами . 
Вектор XС имеет разное смысловое содержание  в разных применениях : 
XСХ – некое задаваемое  значение координат нужной точки схвата ;  
XСЦ – задаваемое или вычисляемое целевое значение координат точки схв ата. 
 Кроме того, отдельными массивами  данных задаются внутренние пар а
метры базовых функций f1, f2 и f3, определяющие константы рассматриваемого 
манипулятора – длины звеньев его кинематической схемы, направления осей 
его степеней подвижности (по определению они привязаны к концам соотве т
ствующ их звеньев), диапазоны угловой или линейной подвижности следующ е
го звена относительно предыдущего звена , параметры  полей зрения видеокамер  
манипулятора, параметры его угловых датчиков и других сенсорных элементов.  9 
Базовые функции построения движений манипу лятора  
Три описываемые ниже базовые функции преобразований данных 
направлены на решение трех стандартных конфигурационных задач кинемат и
ки манипулятора  с защитой их решений от опасных движений манипулятора : 
1) преобразование угловой конфигурации звеньев манип улятора в декартовы 
координаты выбранной точки на оси схвата;  
2) преобразование целевых координат манипулятора с целевыми параметрами 
схвата в угловую конфигурацию звеньев манипулятора в целевой точке;  
3) линейная интерполяция движения в декартовых координатах в ектора цели, 
получаемого по заданным значениям угловых конфигураций в текущей и 
целевой точках планируемого движения схвата манипулятора.  
В этих трех программах должна быть предусмотрена защита от : 
 задания оператором манипулятора движения со значениями у глов  за упорами  
в степенях подвижности звеньев;  
 пересечения схватом манипулятора уровня пола и текущих габаритов опер а
ционного пространства манипулятора;  
 пересечения звеньями манипулятора платформы его основания и текущих г а
баритов операционного простр анства манипулятора;  
 опрокидывания манипулятора с грузом и без груза в его схвате.  
Сами эти функции f1, f2 и f3 довольно просты (что и составляет их пре д
полагаемое достоинство). Возможно, в будущих применениях возникнут новые 
функции, но пока эти три фун кции оказал ись и необходимыми, и достаточными 
для всех предполагаемых  рабочих манипуляций (например, в сложной манип у
ляционной задаче автоматического открывания двери с защелкой) .  
1.Преобразование конфигурации манипулятора в координаты схвата  
XS = f1(1, 2, 3, 4, 5, Obj, DObj, L Obj, H Obj) 
Содержательно эта функция представляет собой решение прямой кинем а
тической задачи (ПКЗ) для неподвижного манипулятора с его известной кине
матической схемой и ограничениями в степенях подвижности.  
Аргументами функц ии являются данные описанной выше структуры 
CONFIG , из которой прежде всего используются 5 углов в СП звеньев манипул я
тора: 1, 2, 3, 4, 5. Определяемые значения  – три координаты ХСЦ точки на 
оси схвата (при Obj = 0 и соответствующ их значени ях DObj и LObj) или коорд и
наты рабочей точки предмета  в схвате (если Obj 0 или HObj 0). 
Искомое р ешение ПКЗ ищется  исполнением последовательн ых поворот ов 
вокруг осей манипулятора  на углы 1, 2, 3, 4, 5 поочередно всех звеньев и 
осей подвижности манипулятора  с учетом их предыдущих поворотов .  10 
Требуемые п овороты реализуются оператором (аналогичным  оператору в 
кватернион ах) "Поворот вектора вокруг вектора " PVV(вектор, ось, угол)  из про
граммной библиотеки средств векторной ал гебры РВА [14] с ее богатым наб о
ром дей ствий  над векторными объектами.   
Если по перечисленным причинам ( несоответствие диапазонам углов, 
опрокидывание, задевание ...) ответа нет, выдается номер причины неудачи.  
2. Преобразование целевых координат схвата в углы манипулятора  
Err = f2(cfg_start, X СЦ, cfg_target)  
Содержательно эта функция f2 реализует решение обратной кинематич е
ской задачи (ОКЗ) для рассматриваемого манипулятора. Она нужна для опр е
деления иском ой целев ой конфигураци и звеньев, осей и  углов СП манипулят о
ра по заданн ому целевому положе нию точки  схвата XСЦ в прямоугольн ой си
стеме координат манипулятора (см. ниже) и с учетом параметров заданной в ее 
аргументах с тартовой конфигурации манипулятора cfg_start.  
Важно напомн ить, что для решения ОКЗ ангулярного (с угловыми СП) 
манипулятора знани я декартовых координат положения схвата недостаточно. В 
силу избыточности степеней свободы плоского трехзвенника (3 угла положения 
звеньев и 2 координаты позиции его концов) требуется дополнительно задать и 
требуемое угловое положение продольной оси схвата  в целевой точке .  
В функции f2 целе вой наклон схвата  к горизонту  параметрически условно 
определяется по данным ее аргумента cfg_start: если  ее параметр  =999, то угол 
наклона схвата в точке цели наследуется его стартов ым значени ем, которое вы
числяется по сумме углов  из параметров конфигурации структуры cfg_start:  
=2ST+3ST+4ST. 
В этом случае  схват движется из стартовой в целевую точку поступательно.  
Если в структуре cfg_start 999, то целевой угол наклона схвата задае тся 
значением ее параметра  и угол наклона схвата становится линейно завис имой 
величиной от длины пути  из стартовой в целевую точку.  
Ответом функции f2 является целевая структура cfg_target  манипулятора 
с ее углами 1, 2, 3, 4, 5 и  для целевой точк и, причем  в ответе  обеспеч и
вается выполнение условия для суммы углов целевой конфигурации :   
2+3+4 = . 
Стандартным образом в  случае если по перечисленным выше причинам 
ответа нет, то в ответе выдается номер причины неудачи.  
В алгоритме получения ответа функции f2 выполняется ряд действи й. 
 Сначала нужно выполнить требуемые преобразования размерностей и ко н
трольные операции для получ енны х значений углов и координат. В частн о11 
сти, для определения координат рабочей точки в связи с проверкой удара о 
пол или платформу манипулятора в конфигураци и старта в теле f2 выполн я
ется обращение к функции f1 с аргументом cfg_start  (т.е. – к решению ПКЗ).  
Здесь выполняется и проверка достижимости манипулятором целевой точки.  
 Затем нужно выполнить вычисление целевых углов наклона и поворота схв а
та по данным cfg_start. При этом выполняются следующие услов ия с учетом 
заданных в X СЦ =*xyz_target  координат рабочей точки предмета  в схвате с его 
длиной LObj, местом DObj, НObj и углом крепления Obj (манипулятор присл о
няется ориентированной точкой предмета  к заданны м X СЦ координатам):  
o Если  =  = 999, то целевы е углы схвата равны их стартовым значениям.  
o Если =999, a  999, то целевой наклон схвата совпадает с его наклоном в 
стартовой позиции, но целевой поворот плоскости губок схвата равен з а
данному углу . Эти параметры определяют  целевое положение предмета , 
если он закреплен в схвате.  
o Соответственно разбираются и иные  случа и: 999, =999 и 999, 999. 
o   Далее с ледует иметь в  виду, что используемый оператор решени я ОКЗ  из 
библиотеки РВА [14]  настроен на боле е широкую постановку задачи испо л
нени я заданных в операционном пространстве направлений осей координат 
объекта  в схвате,  не зависимых от направления осей схвата.  Между тем в 
функциях f1,  f2, и f3 используется более простая постановка задачи: поло
жение пред мета в схвате  задается и однозначно определяется выбр анной 
ориентаци ей схвата.  Поэтому перед  обращени ем к решению  ОКЗ нужно по 
заданн ым углам  и  сформировать  соответствующую  получаемую орие н
тацию  осей схвата и предмета в схвате, если он есть. Для этого по целевым 
данным  ,  и Obj, DObj, LObj операторами поворота векторов вокруг осей не 
повернутого схвата вычисляются направляющие косинусы повернутых осей 
закрепленного в схвате  предмета  или пустого схвата манипулятора.  
 Определяются стартовые  координаты , и если они оказываются равными з а
данным координатам целев ой точки , то cfg_target  = cfg_start. 
 Иначе  – выполняется обращение к описанной ниже операции решения ОКЗ. 
Обстоятельства решения ОКЗ, связанные с существующими неоднозначн о
стями возможных конфигураци й манипулятора для заданных целевых коо р
динат и ориентации продольной оси схвата, рассматриваются ниже.  
 Если правильных решений ОКЗ с выполнением всех условий нет, то опять 
происходят  действия  формирования ответа с сообщением причин ы неудачи . 
 Если решение есть, то выполня ются формирование структуры cfg_target  и 
формирование ожидаемого ответа функции f2.    12 
3. Построение подцели движения вдоль целевого вектора  
Err = f3(cfg_now, cfg_target, cfg_next)  
Обе предыдущие функции f1 и f2 были нужны для подготовки р аботы с 
этой функцией f3. С их помощью можно  до начала движения манипулятора по 
известному из показаний датчиков шарнирных углов начальному состоянию 
конфигурации манипулятора и известных из внешних данных декартовых к о
ординат цели движения определить недо стающие декартовы координаты ста р
товой позиции схвата манипулятора и прогноз его ожида емой конфигурации в 
точке цели.  
Содержательно эта т ретья функция f3 предназначена для  организации 
движения из точки старта в точку цели с коррекцией по ходу движения цел евых 
параметров по по лучаемой информации видеокамер робота и датчиков шар
нирных углов . Она позволяет на прямой, мысленно проведенной в простра н
стве из текущей точки к точке цели, получить на выбранном расстоянии (для 
этого и был предусмотрен шаг " step" в CONFIG ) промежуточную контрольную 
точку с ее параметрами в значениях угловых переменных  – для сравнения с п о
казаниями датчиков в степенях подвижност ей. Кроме этого, в этой промеж у
точной точке операторами технического зрения возможно уточнение целевых 
коорди нат и/или ориентации схвата.   
Хотя аргументами служебной функции  f3 являются угловые параметры 
текущей cfg_now и целевой cfg_target  конфигураци й звеньев манипулятора , уг
лы искомой конфигурации cfg_next вычисляются в параметрах модели лине й
ного продвижения рабочей точки в схвате по направлению текущего  декарт о
вого вектор а цели . Для этого  по угловым  данны м аргументов cfg_now и 
cfg_target  с помощью функций f1 вычисляются декартовы координаты текущей 
Xn и целевой Xt позиций3 рабочей точки  в схвате . Разность эти х координат 
определяет целевой вектор  рабочей точки , вдоль которого и выполняется л и
нейная интерполяция на  заданный шаг “ step” с получением координат  пром е
жуточной точки Хs и значений углов наклона и поворота схвата . 
После проверки Х s на несовпадение с Х t и на отсутствие столкновения 
манипулятора с его основанием  (очевидно, что это единственная требуемая 
проверка при проверенных Xn и Xt) выполняется обращение к операции реш е
ния ОКЗ для получе ния искомой конфигурации cfg_next углов манипулятора в 
следующей т очке контроля планируемого движения схвата манипулятора.  
                                           
3 Здесь специально обозначение Xt целевы х координат рабочей точки в схвате отлича ется от  ранее 
используемого обозначения Х СЦ. Это  связано с предположением о возможной процедуре зрительного 
уточнения значений целевых координат Xt, выполняемой неоднократно по ходу движения.  13 
Реализация базовых функций построения манипуляций  
 Как известно  [15][18], обратные задачи кинематики манипулирования 
заключаются в определении угловой конфигурации кинематической схемы ма
нипулятора по заданным геометрическим параметрам положения и ориентации 
его звеньев (например, взять схватом предмет с его известной позицией в пр о
странстве или наве сти видеокамеры манипулятора на объект в его окружении).  
Эти обстоятельства  потребовал и поиска способ а формирования  наиболее 
общего метода  для решения геометрических задач4 построения нужной орие н
тации  и создания  инструментальных  программных  средств,  гарантирую щих 
быструю программно алгоритмическую реакцию разработчика  на любые вызо
вы технических систем отечественной робототехники  и космической техники . 
Под давлением этих обстоятельств в середине  60х годов  прошлого века был 
разработан удобный формализм алфавит а операторов  расширения векторной 
алгебры  (РВА) , нацеленный на  решени е прямых и обратных геометри ческих 
задач кинематики [13]. Он успешно используется здесь для реализации наце
ленных на манипулирование функций f1, f2, f3.  
Состав системы операторов РВА нацелен на построение алгоритмов для 
решения двух различающихся типов геометрических задач  в технике :  
1) построени я ориентации объектов в пространстве ; 
2) позиционировани я объектов в пространстве.  
Для решения геометрических задач именно манипулирования в системе 
программных операторов РВА предусмотрен  ряд специализированных опер а
ций над векторами , которые обеспечиваю т (подробнее – см. [13], [14]): 
 одно  и многоосевые повороты векторных  объектов в пространстве (прямые 
задачи) и определение нужных углов  таких поворотов (обратные задачи ); 
 реализаци ю требуемых геометрическ их совмещени й направлений и/или поз и
ций векторов  или образуемых ими плоскостей  и конусов , заданных в отлича
ющихся системах координат ;  
 обеспечение работы с отрезками в пространстве с определением  метрики, 
условий и обстоятельств их пересечения или скрещивания ; 
 построение всех ортогональных  направлений  для связанных ("присоединя е
мых") к любой выбранной паре векторов . Это позволяет в исходной систем е 
координат определять и строить новые геометрические объекты (например, 
векторные 3Dпространственные прямоугольные треугольники) ; 
                                           
4 Заметим, что первая попытка этого была сделана ещё в 1902  г.  Э. Лемуаном  ( Lemoine  1823 1911)  
во Франции для  решения задач Евклидовых геометрических построений с помощью циркуля и л и
нейки (информацию о геометрических работах Лемуана можно найти в замечательном отечестве н
ном пособии по геометрии треугольников [1 9]).  14 
 построен ие окружностей в 3Dпространстве и касательных к ним векторов с 
определением параметров пересечения или непересечения двух комплана рных 
окружностей (операции, нужные для построения манипуляций);  
 определения угловых параметров плоских двух  и трехзвенников (о перации, 
используемые при решении обратных кинематических задач механизмов).  
Важно подчеркнуть, что описываемые ниже оператор ы РВА на множ е
стве решённых задач управления как роботами , так  и ориентацией космических 
аппаратов , показал и свою эффективность не только как средство быстрого про
граммирования моделей систем ориентации механизмов  техники , но, главное, – 
как очень  эффективный способ быстрого геометрического мышления при фор
мировании алгоритмов для решения прямых и обратных задач геометрич еских 
преобра зований векторных систем  любой сложности . 
Системы координат кинематики манипулятора  
 Система алгоритмов для управления рабочими движениями схвата ман и
пулятора использует набор пространственных моделей, каждая из которых 
имеет свою систем у координат . Наприм ер, в алгоритмах подвижно го робот а
манипулятор а ПРМ 1 используются 14 систем  координат  (СК)  со сво ими 
направлениями и позициями  начал а их осей  в каждой  из них . Восемь  из этих 
СК физически  и содержательно  связаны с двумя роботами в составе ПРМ 1 и 
их матема тическими моделями.  Пять  други х координатных систем  связаны с 
осями и с положением трех видеокамер  манипулято ра. Все системы координат 
относятся к  двум типа м – базовой  неподвижн ой СК и связанн ой с ней подви ж
ной СК, положение которой отража ет текущее фазово е состояние ее объекта.  
Дополнительно  в системе алгоритмов используется СК операционного 
пространства робот ов, описывающ ие координаты объектов в их окружении и 
привязанн ые к стенам помещений или к предметам во время реализации фун к
ционирования  ПРМ 1. Кажд ая такая "мировая" СК (МСК) в каждом конкре т
ном месте  функционирования ПРМ 1 определяется специальным образом.  
1. "Интерфейсная " система координат подвижного манипулятора  
 Все обмены данными между системами робота выполняются в выбранной 
традиционн ым спос обом  системе координат  манипулятора, с ее началом RМ в 
точке  пересечения вертикальной оси СП 1 с платформ ой манипулятора (жел
тый квадрат на рис. 1 выше) и осями X,Y, лежащими в горизонтальной плоск о
сти платформы. Ось Х этой СК направлена в направлении нуле вого угла курса 
(прецессии) манипулятора, в положении, показан ном на рис 1. Это – привычная 
для механиков СК, пришедшая в теоретическую механику из ранних работ 
времени Эйлера с его углами прецессии, нутации и собственного вращения .  15 
Применительно к систем е алгоритмов робота ПРМ 1 направления осей 
этой СК выбраны следующим образом: ось  Х направлена  "вперед " – по напра в
лению, при котором п оказани е датчика угла поворота СП 1 манипулятора в о
круг вертикальной оси  (по "углу курса ") равно нулю . Соответственно с э тим 
ось Y направлена "влево " в плоск ости платформы  и ось Z – вверх. Надо по м
нить о н екотором  неудобств е этих направлений осей для робототехники  – о 
том, что положительные углы дифферента, тангажа, наклона лучей и звеньев 
манипулятора направлены вниз. Однак о привычная привязка высот к оси Z, 
направленной вверх, привел а к выбору этой СК в качестве общей интерфейсной 
координатной системы  (ОИСК) . Эта же система  координат используется и как 
базовая неподвижная система координат  манипулятор а (БСКМ) робота ПРМ 1. 
2. Системы координат моделей кинематики роботов  
Система координат РВА модели манипулятора  
В операторах РВА [ 14] использу ются систем ы координат с направлени ем 
осей авиационного типа: (ось Х – вперед, Y – "по голове летчика " вверх и ось Z 
– "по правому крылу "). Начал а этих СК – как неподвижн ых, так и  систем, п о
вернутых по углам степеней подвижностей манипулятора, – совпадают с оп и
санными выше параметрами систем в нотации ОИСК.  Но их  оси с одинаковыми 
названиями отличаются направлениями, и пол ожитель ные углы "наклона" зв е
ньев манипулятора (самолетные углы "тангажа" или танковые –  "дифферента") 
направлены вверх. Выбор этой СК для  операторов РВА связан с тем обсто я
тельством, что основные манипуляторные движения выполняются в вертикал ь
ной плоскости манипулятора – с привычн ыми обозначени ями ее  осей Х и Y.  
Связанная (подвижная) система координат манипулятора  
Вертикальная плоскость любого манипулятора после поворота осей 
ОИСК =
  вокруг  (как правило)  оси СП1 на угол 1 принима ет 
новую ориентацию  плоскости (
0
МX (1),
0
MZ), содержа щей оси системы координат 
манипулятора СКМ={ RМ, 
0
МX (1),
0
МY(1),
0
MZ} с тем же вектором ее начала RМ. 
В этих  – "связанных" с текущ им положе нием вертикальной плоскости манип у
лятора (ВПМ) осях ниже и описываются углы в шарнир ах плеча, локтя и кисти .  
Однако продольная ось схвата у ПРМ 1 при качаниях шарниров кисти , 
плеча и ли "предплечья"  движется не в этой плоскости, а в своей – вертикальной 
плоскости схвата (ВПС), параллельной ВПМ и смещенной относительно ее те
кущего положения  влево на величину RВПС = 35,5 мм . Это обстоятельство , как 
будет видно ниже,  существенно влия ет на алгоритм расчет а угла по ворота 
ВПМ , нужного для приведения губок манипулятора в задан ное положение.  16 
Систем ы координат схвата  
 Со схватом и его губками связаны две системы координат  с их общим 
вектором начала в СКМ , определяемым как :    
RC={
 }. 
Первая – это система ко ординат схвата (СКС) при его нулевом угле 5 в 
СП5 – с плоскостью губок схвата , параллельн ой ВПМ , и с продольной осью 
схвата 
0
CX , повернутой относительно направления предплечья манипулятора  на 
угол 4:                                  СКС = {RC,
0
CX,
0
CY,
0
СZ}. 
Положение СКС определяет положение вертикальной плоскости схвата ВПС 
) с её горизонтальной нормалью 
 . 
Вторая – "рабочая"  система координат схвата  РСКС  (РСКС  
=
 }) описывает положение губок схвата манипулятора после его 
поворотов на угол  5 в степени подвижности СП 5 (и  6 если есть СП 6).  
3. Систем ы координат мобильного робота Трикол  
Наименования направлений осей СК, связанн ых с роботом Трикол  (СКТ) , 
совпадает с ОИСК (правая СК с осями Х Т – вперед , ZT – вверх и YT – влево). 
Однако направление "вперед" у курсового угла Т=0 в системе управления р о
ботом Трикол направлено в сторону , примерно  противоположную курс овому 
углу 1=0 манипулятора р обота ПРМ 1 (см. рис. 1). Возможная н еколлинеа р
ность этих направлений зависит от результат ов калибровки нулевого курса  оси 
Хт  корпуса Трикола (направленной в сторону "вперед смотрящей видеокам е
ры" Трикола – ВСК) по показаниям рулевых датчиков колес  [20], [21] и от ка
либровки аналогичным способом датчика курсового угла 1 манипулятора.  
Начало системы координат связано с точкой проекци и геометрического 
центра корпуса Трикола на опорную плоскост ь, определяемую в общем случае, 
как плоскость  3 точек касания ею окружностей колес (иными словами, выс оты 
объектов по оси ZТ отсчитываются от поверхности плоскости пола) . Относ и
тельно этой точки в системе СКТ специальными процедурами калибровки (м е
тодом прикосновения схвата манипулятора к фиксированным точкам треугол ь
ника корпуса Трикола) определ яется  вектор RM начала ОИСК  манипулятора . 
Точка  начала СКТ перемещается вместе корпусом Трикола во время его 
передвижения. В качестве н еподвижной системой координат Трикола, относ и
тельно которой зада ются текущий вектор RCKT  и нап равление  курсового угла Т 
оси Х т, в СУР Трикола используется СКТ, запоминаемая в момент включ ения 
питания и инициализации всех программ. Эта стартовая система координат 
Трикола (СтСКТ) вручную привязывается к ее позиции и ориентации  в вы17 
бранной мировой СК  помещения в момент установки Трикола (перед его вкл ю
чением ) в заранее известную в МСК начальную стартовую позицию с нулев ы
ми позициями рулей его колес и нулевым направлением курса его оси Х Т.  
В дальнейшем при смене помещения в процессе езды Трикола коорд ина
ты позиции и ориентации всех СК ПРМ 1 наследуются от значений МСК в 
предыдуще м помещении к МСК ново го помещения  (по данным априорной и н
формации о т построенной ранее [ 22], [24], [25] карте помещений и связей их 
МСК) с пересчетом позиции начала и ориентац ии новой МСК . 
На практике о чень в ажна проблема сохранения требуемой точности нав и
гационной привязки СКТ в МСК помещения, где выполняется работа манип у
лятора  [26]. В СУР ПРМ 1 предусмотрены специальные алгоритмы уточнения 
позиции схвата относительно объекта  манипулирования с использованием да н
ных видеокамер манипулятора и датчиков конфигурационных углов его звен ь
ев при одновременной видимости схвата и объекта манипулирования.  
Прямая кинематическая задача манипулятора  
В стандартной простейшей постановке э та задача заключается в определ е
нии положения вектора конца губок схвата в базовой системе координат ман и
пулятора (СКМ 0) по заданным в диапазонах степен ей подвижности СП1,..СП5 
углам поворотов 1, 2, 3, 4, 5 (в ОИСК) или 1, 2, 3, 4, 5 (в СК РВА). 
Для ее решения нужно  начиная от неподвижной оси СП 1 последовательно ось 
за осью поворачивать на очередной угол очередной оси цепь (или в общем сл у
чае – дерево) тех остающихся и  повернутых на предыдущие углы  звеньев и 
осей манипулятора, которые следуют за этой очередной ос ью поворота , заве р
шая эти повороты последним поворотом схвата на угол 5(5).  
Таким образом, решение ПКЗ манипулятора сводится к алгоритму выпо л
нения фиксированной последовательности  осевых поворотов постепенно 
уменьшающегося множества век торов осей и звеньев кинематической схемы 
манипулятора. При этом состав осей и звеньев заранее определен кинематич е
ской схемой, а углы поворота – текущими данными решаемой ПКЗ. В результ а
те решения ПКЗ определяются координаты всех звеньев и осей манипулято ра. 
В несколько более сложном случае в состав ПКЗ входят параметры расп о
ложения предмета в схвате, которые и замыкают процедуру нужных поворотов. 
Примером такой постановки служит ПКЗ для жестко закрепленного в схвате 
дверного ключа, который нужно встави ть в замочное отверстие . В подобных 
случаях ответом ПКЗ является вектор точки  конца ключа на его оси , а не конца 
губок схвата , но способ решения ПКЗ при этом остается прежним.  
 Наиболее сложным вариантом является постановка и решени е ПКЗ для 
расчет а целого ра бочего движения  – с использованием  обычной ПКЗ для расч е18 
та последовательности локальн ых конфигураци й осей, звеньев манипулятора и 
предмета в его схвате. Примером здесь  служат  прямые задачи описания движ е
ния схвата к ручке двери или многоэтапны х движени й при открывании (закр ы
вании) двери . Тут ПКЗ нужна для моделирования рабочего процесса и сопря
жени я его модели с моделью операционного пространства решаемой задачи 
(ручки двери – с параметрами защелки и с моделью движения самой двери) .  
Во всех таких случаях моделирования траектории движения  манипул я
тора обращение к решению ПКЗ выполняется многократно , а на содержание  
данны х ПКЗ в дополнение к параметрам кинематически х схем ы влия ют пар а
метры  управляющ ей программ ы (УП) системы управления (СУ) робота (СУР) . 
В сам ом общем случае эта УП состоит из перечня "кадр ов УП", которые 
содерж ат не только массив ы целевых значений ("подцелей" движения)  для всех 
осевых углов робота , но и перечень требуемых управляющих воздействий пе
ред началом  движения к эт им подцел ям (включений выключений видеокамер 
и/или элементов технологического оборудования робототехнической системы 
(РТС)) . В таком случае  содержание ПКЗ в составе алгоритмов и программ СУР  
заключается не только в построении для каждого очеред ного кадра УП коорд и
нат рабочей то чки схват а, но и в модельно м определени и параметр ов состояния 
технологического оборудования для данного кадра УП . 
Во всех упомянут ых случаях у манипуляторов ангулярного типа имеется 
стандартный  ключевой элемент  решени я их ПКЗ , заключающийся  в выполн е
нии операции конкретного осевого поворот а заданн ого вектора на заданный 
угол. Выше при описании функции f1, решающей элементарную ПКЗ,  было 
упомянуто , что для этой цели в системе операторов РВА име ется специальны й 
оператор  для реализации конического поворота век тора, возвращающий вектор 
результата поворота и записываемый как  
PVV(вектор, ось, угол) . 
Для СП выдвижного или телескопического типа у манипуляторов с ц и
линдрической или декартовой кинематической схемой подобной ключевой 
операцией является операция выдвиж ения  заданного вектора вдоль направл е
ния оси выдвижения на заданную длину.  Для решения ПКЗ у роботов с в ы
движными элементами в системе РВА есть аналогичная операции PVV  опер а
ция VVV  – "Выдвижение  вектора вдоль вектора":   
VVV(вектор, ось, длина ). 
(Напомним,  что имена осей координат и знаки углов и длин в СК РВА отлич а
ются от принятых в общей интерфейсной СК, и поэтому в начале  и в конце 
процедуры решения ПКЗ содержат ся операции прямого и обратного преобраз о
вания координатных имен и знаков у этих параметров) . 19 
Таким образом, р ешение ПКЗ любого типа  здесь  записывается в виде п о
следовательности операторов PVV  и VVV  с указа нием в их формальных пар а
метрах  поворачиваемого или выдвигаемого вектор а кинематической схемы, 
вектора очередной оси и угла  поворота  или длины выдвижения. Последов а
тельность этих операторов начина ется от связанной с корпусом робота СП1 с 
ее параметра ми 1 и конча ется последней СП N с ее параметром N или LN. Та
кой последней степенью подвижности обычно является СП схвата (при прису т
ствии в схвате  предмета его оси входят в перечень  векторов, поворачиваемых 
или выдвигаемых этой СП ).  
Для решения одиночной ПКЗ в системе оператор ов РВА легко организ о
вать специальн ый оператор цикла для последовательн ых поворотов или в ы
движений  всех векторов выбранного  векторного объект а (фиксированного ма с
сива векторов  его кинематической схемы ). Примером такого  оператор а реше
ния ПКЗ  служит  оператор PSV: "Поворот системы векторов  
PSV(nv,M0[],mo,O[],U[],M[]) . 
Здесь приняты следующие обозначения  параметров кинематической с хемы :  
 mo – число осей степеней подвижности (у ПРМ 1 =5);    
 nv – число 3 Dвекторов в системе векторов  ( =15); 
 M0[] – двумерный массив 3 nv звеньев, осей повор о
та и осей систем ы координат  схвата ( показан справа) ; 
 O[mo] – массив номеров векторов осей степеней п о
движности объекта ( =[2, 5, 7, 10, 13]); 
 U[mo] – массив осевых углов ( =[1, 2  3, 4, 5]); 
 M[] – двумерн ый массив ответа: 3nv повёрнутых 
звеньев и осей манипулятора . 
В операторе PSV выполня ются последовательн ые об
ращени я к оператору поворот а "хвоста"  СП векторов  
PSVK – " Поворот концевой системы векторов":  
PSVK (nv,M[],m,u). 
Этот  оператор циклом обращения к  PVV  поворачивает вокруг оси с номером m 
на угол u все оставшиеся за этой осью m векторы  двумерного массива M[nv,3], 
 начиная от их индекса m+1 и до n v.  
                                 PSVK (nv,M[],m,u 
                                 { Цикл (i=m+1; i nv; i=i+1)  
M[i,3]=PVV(M[i,3], M[m,3],u); }      //Поворот очередного звена  
В таком случае  обращение к оператор у решения ПКЗ  выполняется так :   
M[]=PSV(nv,M0[],mo,O[],U[])       //обращение к оператору ПКЗ  X [мм] Y [мм] Z [мм] 
0 0 0 
0 1 0 
90 0 0 
0 95 0 
0 0 1 
580 0 0 
0 0 1 
0 0 78,5 
440 0 0 
0 0 1 
0 0 35,5 
360 0 0 
1 0 0 
0 1 0 
0 0 1 Таблица 1 . Массив  M[,] 
 20 
Искомые декартовы координаты конца губок схвата и на правляющие косинусы 
его осей находятся в четырёх последних строках ответ а М[]  (см. табл. 1 выше) . 
Однако для возможностей программ РВА более характерна прямая запись 
одной строкой решения этой ПКЗ с использованием композици и функций  PVV  
(композиция РВА функ ций PVV  – простой  аналог умножения кватернионов).   
Покажем это на примере ПКЗ построения продольной оси схвата XS, за
метив, что в виду параллельности осей наклона звеньев  имеем:   
O2=O3=O4=O=PVV(O20,O1,1),  
Запись решения ПКЗ заметно прощ е (Vi0,V30,V40 – векторы звеньев при i=0): 
XS=PVV(PVV(V20,O1,1),O,2)+PVV(PVV(PVV(V30,O1,1),O,2),O,3)+PVV(PVV(PVV(PVV( 
V40, O1,1),O,2),O,3),O,4). 
Показанный здесь стиль работы в семантике оператор ов РВА заменяет 
обычн ый стиль использования произведения матриц направ ляющих косинусов. 
Работа в операторах РВА, опира ясь на геометрическое мышление разрабо т
чика математических моделей механизмов и программ , заметно ускоряет ра з
работку систем автоматического или супервизорного управления роботами 
манипуляторами  с самыми слож ными кинематическими схемами . 
Решения  обратных кинематических задач манипулятора  
 Опишем  алгоритмы  решения  ОКЗ  как задачи  определ ения конфигурац и
онных углов в шарнирах  плеча, локтя и кисти манипулятора ПРМ 1 при задан
ных в ОИСКТ услови ях положения и ориент ации рабочей точки губок схвата. 
Ниже эти  задачи реша ются в СК РВА с  ее осью  Y, направленной вверх в ВПМ.  
Напомним , что силу избыточности числа трех  степеней подвижности у 
плоского  трехзвенн ика по сравнению с двумя числами степен ей свободы дв и
жения точки н а плоскости  искомое решение ОКЗ существует  только   тогда , ко
гда кроме координат какой либо точки трехзвенника задана и ориентация как о
голибо  одного звена  трезвенника . Чаще всего по условиям выполнения раб о
чих операций задается требуемая ориентация именно схвата. В этой ситуации в 
качестве рабочей точки губок схвата разумно  принят ь точк у в плоскости  осей 
схвата  (оси Х С, YC СКС ) в позиции вектора  {DObj+LObj, HObj} с началом Х С+YC=0 
на оси шарнира СП4 схвата .  
Такой  параметр удобен тем, что в разных манипуля циях оказываются 
важными разные места губок схвата. Например, при ощупывании манипулят о
ром окружения робота важен конец губок схвата, а при взятии предмета вблизи 
ограничивающей движения плоскост и (например, ручк и двери) или  предм ета 
на плоскости стола или  на полу важна глубина места схватывания внутри губок 
схвата , описываемая параметром HObj структуры Config  .  21 
1. Построение  позиции вертикальной  плоскости манипулятора  
 Обязательной частью решения общей задачи планировани я движения ма
нипулятора является локальная процедура  построения  поворота плоскости  его 
звеньев вокруг СП  с вертикальной осью  для реализации целевой позиции с це
левой ориентаци ей продольной оси  схвата  в базовой СКМ.  Эта задача обычно 
первого поворота в СП 1 весьма просто решается для манипул яторов с плоской 
кинематической схемой (т.е. с их конструкций без бокового смещения схвата 
относительно вертикальной плоскости звеньев манипулятора – см. рис. 4).  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Однако в робототехнике гораздо чаще встречаются манипул яторы с "н е
плоской" кинематической схемой (рис. 5).  Наиболее известный манипулятор 
РМ01 ("Пума") [18], [27], придуманный  студентом  Виктором Шейманом в 
Стэнфорде , был первым  манипулятором, который приобрел классическую "н е
плоскость" около 5 см.  
Рассматриваемый здесь робот ПРМ 1 имеет сдвиг плоскости схвата отн о
сительно вертикальной плоскости манипулятора, равн ый 35,5 мм.  
В связи с этим алгоритм решения ОКЗ для приведения схвата в нужное 
состояние усложняется при определении угла 1 в СП 1 необходимостью учета  
поправки, связанн ой нелинейной зависимостью с имеющимся расстоянием от 
оси угла 1 до заданной рабочей точки схвата. Иными словами, надо искать т а
кое направление поворота ВПМ в пространстве базовой СКМ, при котором 
сдвинутая плоскость ВПС схвата совместится с требуемой точ кой в этом пр о
странстве, находящейся на заранее неизвестном расстоянии от оси СП 1. 
Рис. 4 . ПРМ конструкции О.И. Давыдова [23] и его "плоский" манипулятор . 
 Этот подвижный робот с манипулятором создается  в виде примера серви с
ного робота для помещений. Плоская кинематическая схема этого манипулятора 
значительно облегчает решение пр ямых и обратных кинематических задач.  При 
заданно м наклон е такого "плоского" схвата задачи сводятся к описанию триг о
нометрии треугольника двухзвенника плеча и предплечья с учетом их сдвига  отно
сительно вертикальных осей бортовых вращений движителя и манипу лятора.  
 22 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Рис. 5. Более частые примеры конструкций "неплоских" роботов манипуляторов:  
РМ01 (Стенфорд, Юнимашн, Пума) [18],  “Robot Arm” – детский конструктор [ 28], 
отечественный ПРМ МРК 15 (МГТУ [29], [30], [31]) и его манипулятор . 
В этих примерах видно, как часто удобство конструктивного решения приводит  
к смещению плоскости качаний схвата из вертикальной плоскости поворота звеньев.  
Поэтому в  алгоритм ах РВА этих манипуляторов нужен  спец иальный оператор  – для 
определения такого  поворот а плеча, при котором схват  окажется там, где нужн о. 
Это приводит к необходимости в процессе решения ОКЗ дополнительно к 
обычному рассмотрению параметров геометрии вертикальной фигуры трех
звенника (плечо предплечье схват) рассматривать еще один – теперь горизо н
тальный прямоугольный треугольник с его катетами, состоящими из бокового 
смещения схвата относительно ВПМ и из искомого в ОКЗ направления ВПМ в 
пространстве, и с гипотенузой в вид е заданного направления на целевую раб о
чую точку из начала СКМ (см. далее  рис.6).  
Алгоритм этой части ОКЗ выглядит следующим образом.  
Без ограничения общности для определения требуемой ориентации но р
мали 
0
MZ вертикальной плоскости манип улятора и схвата (см. выше рис. 2) б у
дем считать заданным вектор координат рабочей позиции конца губок схвата 
манипулятора RС={Х С,YC, ZC} в СКМ 0 (этот вектор легко определим и для сл у
чая взаимодействия схвата с объектом, позиция и ориентация которого в СКМ 0 
известна).   И в соответствии со сказанным выше полагаем, что в рассматрива е
мой кинематической схеме манипулятора ПРМ 1 у вертикальной плоскости п о23 
Рис. 6 Определение угла  
поворота СП 1  
 
0
MXR 
 
0
0MZ  
0
0MX 
 
0
MZ
   RВПС  
RСГ 
 
ВПС м анипулятор а 
К 
u 
 движности этого вектора RС имеется относительно вертикальной оси СП 1 бо
ковой сдвиг в левую сторону:  
RВПС= –RВПС
0
MZ. 
Иными словами, иском ое направление ВПМ сдвинуто вдоль оси СП 4 на 
величину RВПС параллельно рабочему положению  схвата в его  вертикальной 
плоскости ВПС .  Это обстоятельство п риводит к трудно решаемому векторн о
му уравнению  отно сительно 
0
MZ  – единичного вектора нормали ВПМ:  
0
MZ
 = [(RС + RВПС
0
MZ ) 
0
МY]0. 
Однако г еометрически (см. рис. 6) это уравнение описывает весьма про
стую ситуацию построения упомянуто го векто р
ного прямоугольного5 треугольника в горизо н
тальной плоскости  манипулятора (ГПМ) , ортог о
нальной оси СП 1
0
МY. Один из катетов в этой 
плоскости есть вектор R=  (RВПС
0
MZ) искомого  
направления радиуса окружности  позиций точки 
касания ВПС  при вращ ении ВПМ с ВПС вокруг 
оси СП 2. Этот вектор  неизвестен по направл е
нию, но известен своей величиной, равной сдвигу 
RВПС. Другой катет – искомый горизонтальный 
вектор  K от точки  касания  ВПС с окружност ью 
радиуса RВПС до пози ции конца вектора RСГ – про
екции рабочей точки губок схвата RС на гор изонтальную плоскость основания 
манипулятора. Третий в ектор этого треугол ьника – его гипотенуз а – извест ен и 
равен RСГ с величиной  RСГ. Поэтому в скалярном виде наше векторное  уравн е
ние и меет  простой  вид:   
| K |2+ (RВПС)2= |RСГ|2. 
Очевидно, что 2 й порядок этого уравнения с его двумя решениями явля
ется следствием геометри ческой ситуации существования двух возможных к а
саний  вектора K к окружности (см. пунктир на рис. 6, он соответствует R<0). 
Поскольку вектор RСГ гипотенузы есть вычислимая  функция  проекции 
RСГ(RС,
0
МY) (например, RСГ=
0
МY[RС
0
МY]), а искомые векторы катеты R и K 
треугольника связаны условием ортогональности, то очевидн о, что искомое  
направление ZM определимо. Имеем ( RM0 – проекция базового вектора СП 1): 
                                           
5 В системе РВА [ 14] для определения векторных  проекций вектор ов имеется эффективный аппарат 
присоединен ия своей  ортогональной системы координат  к любой паре  вектор ов и построения всех 
возможных ортогональны х вектор ов и векторов проекций для этой пары исходных векторов.  24 
 sinu=RВПС/|RСГ|;   cosu=((RСГRM0)2RВПС2)/RСГ |=> |u|;                 (1) 
=[PVV(RСГ,Y0,
|u|)]0  |=> K1,2=
(RСГ RM0) 2RВПС2 ;  |=> 1 = (K0,
0
0MX).  
Здесь PVV  – оператор РВА [14] поворота вектора вокруг вектора на данный 
угол.  В системе РВА  имеется также оператор "Присоединения к окружности"  
PkO, который  позволя ет сразу построить  нужный (по знаку RВПС) вектор K:  
PkO (
0
МY, RСГ, RM0, RВПС, K)   (у ПРМ 1 RM0=0 – это начало базовой СК )). 
2. Построение  конфигурации трехзвенника манипулятора  
 Ниж е предполага ется заданным в базовой СКМ 0 манипулятора вектор к о
ординат рабочей позиции точки  на оси  схвата манипулятора RС={Х С,YC, ZC}.  
Этого предположения достаточно для определения угла поворота ВПМ д ля 
требуемого прикосновени я плоскостью ВПС к заданной точк е RС.  
Важно отметить, что отличие алгоритмов решения обратных задач для 
"плоских" и "неплоски х" кинематических схем 5 степенных манипуляторов 
кончается на приведенном алгоритме определения угла 1 поворота ВПМ. При 
определени и остальных конфигурационных углов 2..5 в силу параллельности 
плоскостей ВПМ и ВПС всегда возможно использовать алгоритмич ескую м о
дель плоского манипулятора со схватом, "виртуально" расположенным в ВПМ. 
Для этого позиции схвата проецируются на ВПМ , и в этой плоскости рассма т
ривается геометрия модели трехзвенника плечо предплечье схват.   
Для определения углов  2, 3 конфигурац ии "плечо предплечье"  в допо л
нение к знанию позиции рабочей точки оси  схвата необходимо назначить  вели
чину угла  (см. ниже  рис. 7) наклона продольной оси схвата в ВПС  в базовой 
СКМ 0. Привязка с этим углом положения продольной оси схвата относительно 
гориз онтально й плоскости  к высоте точки RС в ВПС однозначно определ яет 
положение в ВПМ  конца предплечья с осью СП 4, а следовательно , и искомое 
положение дву хзвенника "плечо предплечье" в ВПМ . К такой постановке ОКЗ 
– с заданн ыми углами  наклона продольной оси  схвата и 5 его поворота в о
круг этой оси – легко приводятся за дачи как с пустым схватом , так и с предм е
тами в схвате при  их известной ориентаци и. Такие  ОКЗ как плоского, так и н е
плоского манипулятора решаются в  операторах РВА [14] следующим образом:  
Шаг 1: Определение Х, Y позиции оси СП 4 в 2 D СК ВПМ – смещение 
позиции RС точки схвата вдоль направления его продольной оси с заданным ее 
наклоном к оси Х н а угол . Для этого в операторах РВА выполняются 3 опер а
ции (заметим, что они записываются в содержатель но удобных именах вект о
ров, а незримо исполняются в компонентах определения этих векторов):  25 
 
1) определени е единичного вектора оси схвата ( оператором PVV  поворота о р
та оси  Х на угол  вокруг 
0
MZ  орта нормали ВП М): 6   
0
CX
=PVV(
0
МX(1),
0
MZ (1), ); 
2) его умножени е на скаляр LГ конструктивной длины схвата от оси СП 4 до 
рабочей точки оси схвата – внутри или на конце его губок : 
LC=VuS(
0
CX , LГ);  
  3) вычитани е полученного вектора из заданного вектора рабочей позиции 
конца губок схвата манипулятора RС (см. выше) : 
RСП4=VmV (RС,LC). 
                                           
6 Операторы РВА показаны здесь без подробностей их технологических формальных параметров, 
указывающих на способ представления данных (угол, тип четверти или его cos и/или sin – см. [14] ).  Рис. 7.  Две вертикальные плоскости "неплоского " манипулятора ПРМ 1.  
    Вертикальные плоскости манипулятора и схвата сдвинуты относительно 
друг друга вдоль оси ZСКМ влево на RВПС=35,5 мм (ВПС сзади ВПМ).  
    Величина углового влияния сдвига схвата на вращени е ВПМ при наведени и 
ВПС манипулятора на целев ую точку связано с  горизонтальн ым расстоян ием 
этой точки от оси вращения YСКМ0. Разниц ы между направлением на конец 
губок схвата от оси СП1 и направлением ВПМ леж ат в диапазоне 1,5о90о 
при изменениях горизонтальных расстояний рабочей точки в пределах раб о
чей зоны манипулятора  от максимальных до минимальных  величин . 
    На рисунке показан случай видеокамеры с осью, закрепленной  вдоль оси 
схвата . Схват с камерой повернут на угол 5. вокруг продольной оси схвата . ВПМ  ВПС  
ХС YС YК 
 ZК 
2 3 
4  5 
ХСКМ0  YСКМ0  
 ХК=ХС 26 
В практике работ с РВА этот алгоритм  записыва ется более емко – одной 
строк ой композици и этих операторов  и без испо льзования  имен  промежуто ч
ных векторных объектов:  
RСП4=VmV (RС, VuS( PVV(
0
МX(1),
0
MZ (1), ), LГ)). 
Шаг 2 : Определение углов 2, 3, 4. Для этого в системе операторов РВА 
имеется специальный оператор  
U=U3zvn(Н,В,DL1,DL2,А,Kb) 
для работы с трехзвенником , образуемым двумя звеньями манипулятора и его 
третьим звеном с заданной ориентацией (углом А наклона к оси Х  – рис. 8).  
Двухзвенник плеча и предплечья задается их длинами DL1 и DL2, шириной В и 
высотой Н конца двухзвенни ка (т.е. компонентами вектора RСП4) и углом А=  
наклона схвата.  Оператор U3zvn определяет  3Dвектор искомых углов  2,3,4. 
Ввиду геометрической возможности двух конфигураций – локоть вверх или л о
коть вниз  – в операторе предусмотрен их соответствующий выбо р Kb=1 или 1. 
Алгоритм решения задачи этого шага подробно показ ан на рис. 7 и 8: 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Рис. 8. Геометрия оператора U3zvn(DL1,DL2,В,Н,А, Kb) 
(рисунок взят из текста программы оператора ). 
    Алгоритм этого оператора содержит обращение к оператору  РВА  
U4ver(H, B, DL1, DL2, Kb)  
для определения углов четырехвершинника Oabc в геометрии двухзве н
ника плеча DL1 с предплечьем  DL2. Новый оператор , в свою очередь, 
использует РВА оператор TreUgl (ab,bc,ac) для вычисления углов кос о
угольного треугольник а в четырехвершиннике манипулятора. Эти у глы 
суммируются с углами прямоугольного  треугольника в основании ч е
тырехвершинника, что дает значение угла Ocb для подъема плеча 2.  
    Значение угла О ab определяет угол наклона  40 предплечья, что после  
суммирования с А дает искомую величину угла 4 поворота схвата.  
    Искомый угол 3 допо лняет до 180о угол при вершине b. 
 
 
 
 
 27 
3. Алгоритмы раскрытия неоднозначностей ОКЗ  
Выше было видно , что  и на первом, и на втором этапах решения ОКЗ 
возникают разные возможные конфигурации манипулятора  (см. рис. 9), кот о
рые требуют либо принятия решения оператором манипулятора, либо автом а
тического выбора алгоритмическими средствами машинного интеллекта.    
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Неоднозначности второго этапа решения ОКЗ с заданным углом наклона 
схвата уже были упомянуты: иногда возможны две конфигурации ответа ОКЗ: 
"локоть вверх" и "локоть вниз". Для выбора решения в операторе предусмотрен 
параметр Kb=1. Для автоматического выбора оставлена возможность Kb=0. 
 В свою очередь, неоднозначность выбо ра угла 1 для поворота ВПМ св я
зана с возможностью реализации двух совершенно разных способов достиж е
ния точек в области операционного пространства (именуемой ниже " область 
закидона") – вблизи и сзади оси вращения ВПМ (см. рис. 9). Эта область в ряде 
случа ев полезна для выполнения работ вне диапазона курсовых поворотов по 
углу 1 – например , для наведения видеокамеры схвата на объекты окружения 
манипулятора строго сзади (вне допустимого диапазона углов СП 1).  
 Опыт работы с существующи ми манипулятор ами определил  понимание 
устройства  логики выбора одной правильной конфигурации манипулятора из 
четырех  возможных ориентаций плеча и предплечья для заданной ориентации и 
Рис. 9. Неоднозначности конфигураций в  операционно м пространств е ВПС.  
Предельны е конфигураци и манипулятора  и примеры угловых поворотов звеньев.  
Здесь диапазоны углов: 1=135о, 2=060о, 3=130о90о, 4=70о60о, 5=179о. 
На этой копии экран а программ ной модели  операционной зоны манипулятора 
вверху слева видн ы 2 област и "закидона" сзади плеча, предплечья и схвата,  Они 
достижимы также и при "обратном" поворот е ВПМ  на угол 1, близкий к  180о. 
Боковой  вынос схвата и упоры звеньев влияют на выбор величины угла 1 в СП 1. "Локоть"   
вверх и вниз  Област и "закидона"  28 
позиции схвата. Хотя  неоднозначность  выбора всегда привод ит к проблеме  по
иска оптимального реш ения , но критерии иском ой оптимальности заметно о т
личаются в разных операционных ситуациях  – на стадии проекта и в процессе 
его реализации . 
Очевидно , что возможности выбор а оптимальной ситуации намного 
больше перед началом рабочей операции, чем в процессе ее исполнения. Де й
ствительно, если перед началом движения манипулятор можно привести в л ю
бую доступную позицию, то позже , на каждом шаге  уже исполняемого движ е
ния, как правило, нужно сохранят ь тип конфигурации предыдущего шага. З а
метные конфигурационные изменения  со сменой знаков углов могут по требо
ваться, если как оето звено достигло границы углового диапазона. Но нужные 
для этого выпрямлени я звеньев или поворот ВПМ потребуют  прерывани я рабо
чего процесса.  Если это н едопустим о, то в "машинном интеллекте " возникает 
необходимость  модельного анализа  до начал а движения возможных конфиг у
рационных обстоятельств  на протяжении всего рабочего процесса.  
Двузначность выбора положения вертикальной плоскости схвата  
Рассмотрим эти проблемы  на примере раскрытия  необходим ости испол ь
зования конфигурации "закидон " в верхней части рабочей зоны вертикальной 
плоскости манипулятора . Рабочие зоны ВПМ в диапазоне угл ов 1 ее курсового 
поворота заметают пространство в зависимости  от высоты вытянутого вперед 
схвата горизонтальным ради усом его вращения (максимальное значение ради у
са РЗ на высоте платформы выпрямленного  манипулятора равно 1380 мм) . Но 
имеется (рис. 9) и дополнительн ая доступная область "закидона" (с е е меньшим  
радиусом 520 мм), вращающаяся вместе с ВПМ. Таким образом, в пределах д о
ступного диапазона углов 1 имеются точки пространства , которые достижимы 
либо большим курсовым поворотом манипулятора, либо зак идыванием назад 
предплечья и схвата манипулятора. И есть области простран ства СКМ вне ди а
пазона углов 1, доступные т олько в режиме " закидона  ".  
При определении угла 1 для достижения схватом точки в области "зак и
дона" необходимо учитывать боковой вынос схвата манипулятора, равный, как 
говор илось, 35,5 мм. Это приводит к тому, что поворот ВПМ, нужный для д о
стижения зак инутым назад схватом операционной точки вне доступного  диап а
зона углов "вперед смотрящего " манипулятора, реализуется не в пределах 450, 
а в углах 49о...41о – для того чтобы после выполнения "закидона" схвата его 
продольная ось оказалась внутри запрет ной з оны операционного простра нства 
с ее углами по 1=180о450. Причина этого в том, что при работе в передней 
области схват манипулятора расположен слева от ВПМ, а при работе в за дней 
области он расположен справа от ВПМ, если смотреть в направлении р аботы. 29 
Поэтому в этих двух случаях прислонения конца губок схвата к одной и той же 
рабочей плоскости, не совпадающей с ВПС, углы 1 для ВПМ должны изм е
няться в диапазоне 1760 (упоминаемые выше 4о примерно соответствуют ма к
симальному размеру РЗ "закидона" в 520 мм п ри боковом смещении схвата на 
35,5 мм).   
Заметим, что на границах достижимости "закидон" требует определенной 
(не произвольной ) ориентации схват а с обязательным его переходом через ве р
тикальное вверх направление. Иными словами, непрерывная работа вне и в о б
ласти "закидона" возможна только при выполнении "потолочных " работ.  
При этом важно обратить внимание, что подобный гладкий перевод раб о
чей точки схвата с помощью "закидона" из передней полусферы в заднюю или 
обратно возможен лишь в случае, когда рабочая траектория целиком прина д
лежит ВПС  (такое движение происходит при неподвижной ВПМ). В проти в
ном случае при приближении рабочей точки к позиции на нормали к ВПС (на 
границе передней и задней полусфер начальной позиции манипулятора) обяз а
тельно потребуется большой поворот ВПМ по углу 1 на 900. Но после этого 
"закидон" окажется уже и не нужным  – с продолжением этого вращения работа 
манипулятора будет продолжаться в его текущей передней полусфере.   
Таким образом, в области потолочных работ при большом протяже нии 
требуемого рабочего перемещения вдоль оси Х ВПМ следует  до начала движ е
ния выбрать курсовое положение ВПМ и направление движения – в прямую 
или обратную сторону. Этим выбором будет однозначно определена начальная 
конфигурация локтя и место смены ее тип а в процессе движения . 
Прив еденные соображения позволяет исключить двузначность решения 
ОКЗ, связанную с "закидоном", такими правилами построения стиля движения : 
1. "закидон" возможен и нужен при выполнении "потолочных" работ с движ е
нием в обоих направлениях в окрестности  вертикальной оси манипул ятора ; 
2. для реализации гладкого перехода между  полусфер ами манипуля ций вы
бран ная позиция ВПС должна содержать вс ю рабоч ую траекторию схвата . 
Выбор конфигурации в вертикальной плоскости схвата  
Другим важными фактором мод елировани я траектории движения , заме т
но ограничивающим выбор нужной конфигурации на всем диапазоне планир у
емого рабочего движения, становится требуемый рабочий наклон схвата . Выше 
было показано , что любая фиксация направлений продольной оси схвата резко 
сокращает (см. рис. 3) области доступного движения звеньев манипулятора. У 
манипулятора  ПРМ 1 это, прежде  всего , связано с  конструктивны ми огранич е
ниями диапазона углов 4 вращения  в СП 4 схвата, которые не должны выхо
дить из  предел ов:                           70о  4  60о. 30 
Оказывается, что эти ограничения важны не сами по себе, а их нужно рассма т
ривать в связи с текущим значением разности заданного значен ия абсолютного 
угла наклона схвата  и суммы углов вращения 2+3. Дело в том, что условие 
допустимос ти угла 4 имеет вид:    
–70о    – (2+3)  60о. 
Это неравенство диктует допустимый диапазон углов наклона схвата : 
(2+3) –70о     60о+(2+3), 
или для выбранного значения угла   –углов наклона предплечья 3 = (2+3):  
 – 60о  (2+3)   +70о. 
Вместе с этим каждый из углов вращения плеча и предпле чья тоже имеют свои 
пределы углов вращения относительно предыдущего звена  (угол в этих пред е
лах обозначим как i!):  0о  2!  70о  и   130о  3!  90о. 
Поэтому правил а выбора решения при известных  угле  наклона схвата , 
ситуаций предыдущ его угла 3– и его целев ого угла 3+ имеют вид (см. табл . 2): 
Таблица 2                      Логика выбора конфигурации  манипулятора  
Ситуация  Конфигурация  
2! & 3 ! & max4  3+2   min4 & 3–<0 & 3+<0 & 3<0 "Локтем вверх"   
2! & 3! & max4  3+2   min4 & 3–>0 & 3+>0 & 3>0 "Локтем вниз"  
2! & 3! & max4  3+2   min4 & 3–<0 & 3+>0 & 3=0 "Локтем вниз"  
2! & 3! & max4  3+2   min4 & 3–>0 & 3+<0 & 3=0 "Локтем вверх"   
2! & 3! & max4  3+2   min4 & sign3– sign3+ & 30 "Смена решения"   
2! & 3! & max4  3+2   min4 & sign3– sign3 & 30 "Смена решения"   
2!  3!   (max4  3+2   min4)  "Нет решения"   
Для расширения областей раб очей зоны  манипулятора нужно иметь  ши
рокие  диапазон ы углов в шарнирах звеньев , и прежде всего – угла 4 схвата .  
Кроме того, внимательный читатель может заметить на рис. 3 нестыковку 
(треугольник) узла синих границ . Этот треугольник говорит о  существовани и 
не сразу очевидно й необходимости  согласовыва ть при проектировании ко н
струкции манипулятора выбираемые параметр ы длин звеньев манипулятора с 
выбираемыми  диапазон ами углов в степенях их подвижности . Такое согласов а
ние необходимо для обеспечения совпадения к онцевых точек тех участков гр а
ниц рабочей зоны , в которых встречаются движения предплечья со схватом при 
позициях плеча у противоположных границ его диапазона. Только при таком 
совпадении  возможно не меняя текущей рабочей точки продолжить пр едельное 
движен ие в диапазоне углов плеча. В данном случае для совпад ения граничных 
точек нужно было лишь немного сократить длину плеча и удлинить схват.  31 
Задача н аведени я видеокам еры схвата на объект  
Похожая задача построения и реализации некого заранее не  известного 
целевого направления осей схвата в ОИКС ={
0
CЦX ,
0
СЦY,
0
СЦZ} возникает при нео б
ходимости направить уст ановленную на схвате манипулятора видеокамеру на 
нужный объект в операц ионном про странстве внешней среды м анипулятора, 
располагая при этом рассматриваемый объект определённым образом в получ а
емом в идеокадре.  
На рис. 10 показан пример фо
тографии, полученной камерой схвата 
в режиме смотрящего схвата манип у
лятора  с требуемой горизонтальной 
ориент ацией перевернут ого кадра в 
обратном курсовом направлении оси 
камеры ксх150о (что соответствует 
требуемому курсовому повороту 
1=1 30о ). Проблема этой задачи 
связана с новым параллельным см е
щением оси камеры относительно оси схвата, что, к слову, хорошо заметно на 
приведенном фото по расходящим ся лучам линий из це нтра перспект ивы кадра.  
Очевидно, что для решения зад ачи наведения кадра на объект с извес т
ным положением в операционном пр остранстве манипулятора нео бходимы три 
независимых степени подвижности с необязатель но ортогональными осями 
(хотя это обычно и предполагается при использовании углов Эйлера или Кр ы
лова). Две оси нужны для в ыполнения требуемого наведения оси видеокамеры 
на требуемый объект, а третья ось поворота нужна для реализации вращения 
кадра вокруг п остроенного направления оси камеры. Но используемые оси 
вращения манипулятора и в ыбранная для наведения ось камеры с возможным 
вращением вокруг нее границ кадра не совпадают: ось камеры у ПРМ 1 смещ е
на параллельно продольной оси схвата по ОИСК оси Z вверх на 4 см.  
Нужно подчеркнуть, что здесь речь идет о задаче "наведения" на объект. 
Эта задача содержательно заметно отличается от стандартной задачи "ориент а
ции" свободного вектора . Отличие заключается в  требуемой привязк е выбра н
ного единичного вектора (в да нном случае – вектор а направления оптической 
оси камеры  схвата манипулятора ) к позиции  известной точк и в пространстве 
используемой СК. В  свою очередь , задача наведения отличается и от наиболее 
параметрически полн ой (и поэтому математически более простой) задачи "п о
зиционирования" заданного вектора тем, что для задачи наведения содерж а
Рис. 10. Вид в кадр е виде окамеры схвата  32 
тельно важен именно единичный вектор и этот единичный вектор луча навед е
ния в ней не доопределен   его величиной до объекта наведения  (наведение к а
меры на объект возможно на любом расстоянии от него).  
В таком – достаточно общем случае – нужно решить ОКЗ определения 
углов манипулятора при заданном объекте наведения оси камеры схвата с ее 
известной позицией на схвате. Особенно сть этой ОК З в том, что ищется ото б
ражение заданной позиции и направления вектора на три искомых угла повор о
та схвата вокруг таких осей подвижности ма нипулятора, которые не пересек а
ются с осью камеры, и одна из них (ось СП 5 угла 5) в рассматриваемом сл у
чае параллел ьна оси видео наведения.  
При параллельном смещении осей в дополнение к геометрии ортог о
нальных  или конических  векторных поворотов возникает третий – вырожде н
ный тип цилиндрических поворотов вектора вокруг вектора . Его вырождение 
связано с отсутствием вект орного произведения параллельных векторов и св я
занным с этим отсутствием прямых способов построения присоединенной с и
стемы координат [14] с применением метода Родрига Гамильтона (см., напр и
мер, [16]) для реализации требуемого поворота. В принципе , это озна чает необ
ходимость доработки алгоритмов двухвекторных операторов PSK, OrtB  и PVV  
в системе операторов РВА . Однако в данном случае этого не потребуется – при 
параллельных осях камеры и схвата ОКЗ наведения решается геометрией пр о
стого сдвига позиций их один аковой ориентации в пространстве СКМ.  
Ниже решение такой ОКЗ приводится в СК РВА с ее осями X и Y в ВПМ 
и осью Z, направленной в правую полуплоскость. П ри этом п оложение оптич е
ской оси камеры в ВПС задается параметрами HObj и Obj=DObj=0 из структур ы 
данн ых Config . 
Для наведения камеры по трем степеням свободы позиции ее кадра у п я
тистепенного манипулятора имеются два лишних угла 2, 3 в СП 2 и СП 3, ко
торые должны иметь любые известные значения. Определению в такой ОКЗ 
подлежат только три угла позиционир ования и поворота схвата: 1, 4 и 5.  
О поворот е видеокамеры вокруг продольной оси схвата  
 В задачах наведения угол 5 или заранее задан извне (например, кадр 
должен быть горизонтальным) или определим из условия параллельности гр а
ницы кадра или губок сх вата границе известного объекта в системе координат 
манипулятора (например, вертикальная плоскость губок схвата на рис. 7 дол ж
на быть параллельна найденному по зрительной обратной связи наклону вид и
мого в кадре предмета). Поэтому ниже при решении ОКЗ навед ения угол 5 по
ворота схвата считается уже заданным.  33 
Когда ось камеры параллельна осям схвата, то вне зависимости от вел и
чины угла 5 наклоны и повороты оси схвата определяют ориентацию и осей 
камеры. Однако значения угла 5 сказываются на решении ОКЗ пози циониров а
ния оси камеры при ее наведении на заданную точку в СКМ, заметно влияя на 
величину углов 1 и 4 при выбранных углах 2 и 3 . Если угол 5 отличен от 
нуля или от 180о, то ось камеры после поворота схвата на этот угол больше не 
принадлежит ВПС – вертикальной плоскости схвата, и тогда она относительно 
оси Х C в СКС в ВПМ манипулятора имеет два координатных сдвига (исходные 
сдвиги ВПС: Zc=35,5 мм и камеры: YCAM 0= HObj=4 см,  ZCAM 0·=0): 
YCAM = (YCAM0·cos 5 – ZCAM0·sin 5) и                                 (2) 
ZCAM = Zc + Z CAM0·cos 5 +Y CAM0·sin 5. 
Получаемая величина 4 сантиметровых вариаций координат привязки луча 
наведения камеры на фиксированный объект в окружении робота приводит к 
аналогичным значениям вариаций координат схвата в процессе манипул яций с 
поворотом схвата по углу 5 при сохранении объекта наведения в центре кадра.  
Наведение вертикальной плоскости оси камеры  на объект  кадра  
Заметим, что предположение о фиксированных углах плеча и предплечья 
при наведении на заданный объект камеры с ос ью, параллельной  оси схвата , 
снимает неопределенность привязки начала и конца вектора вдоль оси камеры 
и превращает ОКЗ наведения в решенную выше ОКЗ позиционирования. Это 
заметно упрощает решение проблемы наведения схватом смещенной от его оси 
камеры на в ыбранный неподвижный объект.  
Действительно, в этом случае определена позиция вектора RОК целевого 
объекта кадра в СКМ 0, и, следовател ьно, из начала этой системы координат 
можно построить вертикальную плоскость, содержащую этот вектор RОК и (по 
определению ) ось 
0
МY =
0
1СПY  СКМ 0. Отличие от ОКЗ предыдущего пункта здесь 
лишь в том, что к этой плоскости нужно прикоснуться не вертикальной плоск о
стью схвата, а параллельной ей вертикальной плоскостью оптической оси к а
меры  (ВПК) . Поскольку эта плоскость параллельна плоскости схвата, то при 
вращении вокруг вертикальной оси манипулятора эта ВПК касается окружн о
сти с радиусом ее расстояния до оси вращения (оси СП 1). Это означает, что 
определение искомого угла 1 в ОКЗ наведения камер ы схвата на известный 
объект манипуляции сводится к алгоритму, описанному выше в  п. 1. Требуется 
лишь изменение величины и знака радиуса R (см. рис. 6) обкатываемой плоск о
стью окружности (при обращении к PkO сообща ется R с его знаком ):  
R= (Zc + Z CAM0·cos 5+Y CAM0·sin 5)= (40·sin 5 – 35,5)  мм. 
Обращени ем к оператору P kO и к формулам (1) определяется искомый угол 1. 34 
Угол  наклона схвата для наведения оси камеры на объект  
 Как было сказано выше, эта задача решается в более простой модели 
плоского манипул ятора  в любой повернутой на угол 1 вертикальной плоскости 
(ВПМ, ВПС, ВПК) . При выбранных углах 2 и 3 положение оси СП 4 известно, 
и для определения угла 4 нужно , связав вектором положение любой точки лу
ча оси камеры с точкой объекта наблюдения , найти у гол наклона  этого луча .  
С учетом возможн ых поворот ов на угол 5 и/или "закидона" проекция оси 
камеры на ВПМ отстоит от линии продольной оси схвата на величину YCAM  из 
(2). И нужно заметить, что  по этой причине проекция оси камеры на ВПМ не 
пересекает, а с крещивается с осью этого вращения СП 4. И поэтому  опять при 
вращении схвата по искомому углу 4 вектор луча оптической оси кадра с об ъ
ектом наблюдения в его центре "обкатывает " окружность с радиусом R=YCAM. 
Это означает, что снова определение искомого угла  4 в ОКЗ наведения 
камеры схвата на известный объект манипуляции сводится к алгоритму, оп и
санному выше в  п. 1. Для определения искомого угла 4 требуется при обра
щении к PkO вместе с Х координатой объекта наблюдения передать  величин у и 
знак радиуса R (рис. 6) обкатываемой лучом зрения вертикальной  окружности : 
R= (YCAM0·cos 5 – ZCAM0·sin 5)·Sign(cos( 2+3+4)), 
и определить угол  наклона к горизонту вектора K ответа. Тогда 4=(2+3). 
Заключение  
Можно утверждать, что описанные  выше м етоды и алгоритмы  построения 
движений манипулятора с помощью специально для этой цели разработанных 
функций  позволяют решать широкий класс задач упра вления ориентаци ей и 
позиционировани ем его схвата вместе с задачами наведения на объект манип у
ляций видеокамеры, установленн ой на схвате.   
Предложен ные в работе три базовые функции, на которые раскладываются 
алгоритмы построения рабочих движений манипулятора с предметом в его 
схвате , и базовая структура данных с параметрами кинематической схемы м а
нипулятора  удобны тем, что позв оляют при разработке управляющей програ м
мы робота манипулятора иметь дело лишь с параметрами задачи движения, 
оставл яя вне внимания параметры и способы его реализации.  
Приведенные алгоритмы реализации функциональных средств формиров а
ния манипуляционных дви жений с помощью операторов  системы РВА показ ы
вают ее эффективность при анализе границ рабочи х зон манипуляций с разли ч
ной ориентацией схвата, при решении прямых и обратных задач  для манипул я
тора с кинематической схемой, усл ожненной боковым выносом схвата , и при  
раскрыти и неоднозначностей построени я конфигураций манипулятора.   35 
Литература   
1. Robotics and Innovative Equipments for Land Systems . // 
https://www.copybook.com/co mpanies/eca/articles/unmanned ground vehicles   
2. TELEROB EOD Robot tEODor. XTEK Release . // 
0811 .http://www .xtek.net/assets /Uploads /Sectors /EOD /TEODOR Brochure .pdf 
3. Keating S.  J. et al. Toward site specific and self sufficient robotic fabrication on 
architectural scales //  Science Robotics. – 2017. – Т. 2. – №. 5. – С. eaam8986.  
4. Vladimir F. Filaretov, Valentin E. Pryanichnikov. Autonomous mobile university 
robots AMUR: Technolo gy and applications to extreme robotics. // Elsevier. Pro
cedia Engineering Volume 100, 2015, Pages 269 –277. 25th DAAAM Inte rna
tional Symposium on Intelligent Manufacturing and Automation, 2014. URL: 
http://www.sciencedirect.com/science/article/pii/S187770581500394X  
5. Orlov I.A., Aliseychik A.P., Platonov A.K., Ptakhin A.A. and Pavlovsky V.E. 
Biomechatronic Neurorehabilitation Complex Design, Models and Control. // 
Proc. 5th IEE E RAS & EMBS International Conference on Biomedical Robotics 
and Biomechatronics. 791796, 2014, August 12 15, Sao Paulo, Brazil.  
URL: http://ieeexplore.ieee.org/xpl/mostRec entIssue.jsp?punumber=6903648  
6. Артоболевский И.И.,Умнов Н.В. Некоторые проблемы создания шагающих 
машин //Вестник АН СССР, 1969, No 2. 
7. Девянин  Е.А.,  Гурфинкел ь В.С.,  Ленский А.В.,  Штильман Л.Г. //  Макет   
управляемого шагающего аппарата  //Труды IV Всес.конф .по бионике 1973г . 
8. Охоцимский Д.Е., Платонов А.К. и др. Управление интегральным              
локомоционным роботом //Изв. АН СССР, Технич.кибернетика,  6, 1974г.  
9. Охоцимский Д.Е., Голубев Ю.Ф. Механика и управление движением авт о
матического шагающего аппарата . М.: Наука. 1984 . 
10. Охоцимский Д.Е., Девянин Е.А., Платонов А.К., Боровин Г.К., Буданов 
В.М., Лапшин В.В., Мирный В.М. Основные проблемы и особенности пр о
ектирования многоцелевого гидравлического шагающего шасси //            
Препринты ИПМ им.  М.В. Келдыша,  1995, № 72. 28 с.  
11. Павловский В.Е. О разработках шагающих машин // Препринты ИПМ им. 
М.В. Келдыша , 2013 . № 101, 32  с.  
12. Лапшин В.В. Механика и управление движением шагающих машин .       М.: 
Издво МГТУ им. Н.Э. Баумана 2012. 199 с.  
13.  Казакова Р.К., Платонов А.К.  Язык для описания вращения космического 
аппарата // В сб. "Управление в пространстве" М.: Наука, Т.1, 1973, С. 5263. 
14. Платонов А.К.  РВА операторы для решения задач построения векторных 
объектов //  Препринты ИПМ им. М.В. Келдыша , 201 7, № 22. 36 с. 
doi:10.20948 prepr 2017 22.  http://library .keldysh .ru/preprint .asp?id=2017 22 
15.  Платонов А.К. Геометрические преобразования в робототехнике .  М.: Зн а
ние Сер. ”Математика, кибернетика”; No4. 19 88г. С. 32 .   
16. Препарата Ф., Шеймос М. Вычислительная геометрия: Введение . М.: Мир, 
1989, С. 478.  
17. Комаров М.М. Система геометрического моделирования и её применение  //  
"Программирование прикладных систем" . М.: Наука, 1992,  С. 189196. 36 
18. Бело усов И.Р., Карташ ов В.А. Натурное моделирование движений манип у
лятора в реальном масштабе времени  //"Прогр аммирование прикладных с и
стем" М.: Наука, 1992,  С. 189196. 
19. Ефремов Д. Новая геометрия треугольника . Одесса, 1902 г.                      
URL : http://www .math .ru/lib/book /djvu/ngt/ngt.djvu 
20. Ярошевский В. С. Проблемы согласованного управления колесами трехк о
лесного робота с шестью степенями подвижности // Мобильные роботы и 
мехатронные системы. М.: Изд во ИМех М ГУ, 2003. С 1720. 
21. Емельянов С.Н., Платонов А.К. Метод согласования электрических сенсо р
ных сигналов и геометрических характеристик мобильного робота // "М о
бильные роботы и мехатронные системы". М.:МГУ, 2001, С. 7884. 
22. Давыдов О.И., Платонов А.К. Сеть Пасс фреймов  комбинированная м о
дель операционной среды мобильного робота //  Препринты ИПМ им. 
М.В.  Келдыша. 2015. № 15. 28 с.  
23. Давыдов О.И., Пряничников В.Е. Архитектура системы управления м о
бильного сервисного робота //Информационно измерительные и  управл я
ющи е системы. 2015. № 7, т.13. С. 41 50. 
24. Давыдов О.И., Платонов А.К. Комплексная карта операционной среды р о
бота. //Робототехника и искусственный интеллект. Материалы VII Всеро с
сийской научно технической конференции, Железногорск, 2015,  
С. 108 114. 
25. Давыдов О .И., Платонов А.К. Организация и структура комплексной карты 
операционной среды сервисного робота  // Препринты ИПМ им. М.В. Ке л
дыша. 2015.  № 72. 28 с.  
26. Носков А.В., Носков В.П. Распознавание ориентиров в дальнометрических 
изображениях  // «Мобильные роботы 2 001». М.: Изд во МГУ, 2001.  
С.179192. 
27. https ://en.wikipedia .org/wiki/Programmable _Universal _Machine _for_Assembly  
28. Robotic Arms & Grippers  http://www.robotshop.com/en/robotic arms.html  
29. Мобильный робототехнический комплекс МРК 15 //Специальное ко н
структорско технологическое бюро прикладной робототехники  (СКТБ ПР) 
http://sktbpr.ru/robot/mrk 15 
30. Иванов А.Е., Бабаков С.Е. Модернизация системы управления манипул ято
ра МРК 15 //Вопросы радиоэлектроники. Серия   Электронная вычисл и
тельная техника. Вып. 2. М.: АО «ЦНИИ Электроника». 2015.с . 7582.  
http://www.niivk.ru/images/news_thumb/VRE_2_2015.pdf   
31. Манипулятор МРК 15. Руководство по эксплуатации. // ЗАО «Энергоко н
троль». 2013 г.  
 MathNet.Ru
All Russian mathematical portal
G. P. Terehov, V. E. Pavlovsky, Control of the spherical robo t by means of ﬂywheels,
Keldysh Institute preprints , 2017, 016
DOI: 10.20948/prepr201716
Use of the allRussian mathematical portal MathNet.Ru imp lies that you have read and agreed to these terms of use
http://www.mathnet.ru/eng/agreement
Download details:
IP: 79.139.215.77
December 17, 2023, 00:50:00ИПМ им.М.В.Келдыша РАН   •  Электронная библиотека
Препринты ИПМ   •  Препринт № 16 за 2017 г.
ISSN 20712898 (Print)
ISSN 20712901 (Online)
Терехов Г.П.,  Павловский В.Е.
Управление роботомшаром
с помощью маховиков
Рекомендуемая форма библиографической ссылки:   Терехов Г.П., Павловский В.Е.
Управление роботомшаром с помощью маховиков // Препринты ИПМ им.  М.В.Келдыша. 2017.
№ 16. 31  с. doi:10.20948/prepr201716  
URL: http://library.keldysh.ru/preprint.asp?id=201716/xCE /xF0 /xE4 /xE5 /xED /xE0 /xCB /xE5 /xED /xE8 /xED /xE0
/xC8/xCD/xD1/xD2/xC8/xD2/xD3/xD2 /xCF/xD0/xC8/xCA/xCB/xC0/xC4/xCD/xCE/xC9 /xCC/xC0 /xD2/xC5/xCC/xC0 /xD2/xC8/xCA/xC8
/xE8/xEC/xE5/xED/xE8 /xCC/x2E/xC2/x2E/xCA/xE5/xEB/xE4/xFB/xF8/xE0
/xD0 /xEE /xF1 /xF1 /xE8 /xE9 /xF1 /xEA /xEE /xE9 /xE0 /xEA /xE0 /xE4 /xE5 /xEC /xE8 /xE8 /xED /xE0 /xF3 /xEA
/xC3 /x2E/xCF/x2E/xD2 /xE5/xF0/xE5/xF5 /xEE/xE2/x2C /xC2/x2E/xC5/x2E/xCF/xE0/xE2/xEB/xEE/xE2/xF1/xEA/xE8/xE9
/xD3/xEF/xF0/xE0/xE2/xEB/xE5/xED/xE8/xE5 /xF0/xEE/xE1/xEE/xF2/xEE/xEC/x2D/xF8/xE0/xF0/xEE/xEC
/xF1 /xEF/xEE/xEC/xEE/xF9/xFC/xFE /xEC/xE0/xF5/xEE/xE2/xE8/xEA/xEE/xE2
/xCC/xEE/xF1/xEA/xE2/xE0 /x32/x30/x31/x37 /xE3/xD3 /xC4/xCA /x35/x33/x31/x2E/x31
/xC3 /x2E/xCF/x2E/xD2 /xE5/xF0/xE5/xF5 /xEE/xE2/x2C /xC2/x2E/xC5/x2E/xCF/xE0/xE2/xEB/xEE/xE2/xF1/xEA/xE8/xE9
/xD3/xEF/xF0/xE0/xE2/xEB/xE5/xED/xE8/xE5 /xF0/xEE/xE1/xEE/xF2/xEE/xEC/x2D/xF8/xE0/xF0/xEE/xEC /xF1 /xEF/xEE/xEC/xEE/xF9/xFC/xFE /xEC/xE0/xF5 /xEE/xE2/xE8/xEA /xEE/xE2
/xD0 /xE0/xF1/xF1/xEC/xE0/xF2/xF0/xE8/xE2/xE0/xE5/xF2/xF1 /xFF /xF2/xE5/xEE/xF0/xE5/xF2/xE8/xF7/xE5/xF1/xEA /xE0/xFF /xEC/xE5/xF5 /xE0/xED/xE8/xF7/xE5/xF1/xEA /xE0/xFF /xEC/xEE /xE4/xE5/xEB/xFC /xF0/xEE/xE1/xEE/xF2 /xE0/x2D/xF8/xE0/xF0/xE0 /xF1 /xEC/xE0/x2D
/xF5 /xEE/xE2/xE8/xEA /xE0/xEC/xE8/x2C /xF0/xE0/xF1/xEF/xEE/xEB/xEE /xE6 /xE5/xED/xED/xFB/xEC/xE8 /xE2/xED/xF3/xF2/xF0/xE8 /xF8/xE0/xF0/xE0/x2E /xCE/xEF/xE8/xF1/xE0/xED/xED/xE0/xFF /xEA /xEE/xED/xF1/xF2/xF0/xF3/xEA/xF6/xE8/xFF /xEF/xF0/xE5/xE4/xED/xE0/x2D
/xE7/xED/xE0 /xF7/xE0/xE5/xF2/xF1 /xFF /xE4/xEB/xFF /xF3/xEF/xF0/xE0/xE2/xEB/xE5/xED/xE8/xFF /xE4/xE2/xE8/xE6 /xE5/xED/xE8/xE5/xEC /xF8/xE0/xF0/xE0 /xEF/xEE /xF0/xE0/xE7/xEB/xE8/xF7/xED/xFB/xEC /xF2/xF0/xE0/xE5/xEA/xF2/xEE/xF0/xE8/xFF/xEC/x2E /xC2
/xF0/xE0/xE1/xEE/xF2/xE5 /xEF/xEE/xF1/xF2/xF0/xEE/xE5/xED/xFB /xE8 /xE8/xF1/xF1/xEB/xE5/xE4/xEE/xE2/xE0/xED/xFB /xE0/xEB/xE3/xEE/xF0/xE8/xF2/xEC/xFB /xF3/xEF/xF0/xE0/xE2/xEB/xE5/xED/xE8/xFF /xF8/xE0/xF0/xEE/xEC /xEF/xEE /xE1/xE0/xE7/xEE/xE2/xFB/xEC
/xF2/xF0/xE0/xE5/xEA/xF2/xEE/xF0/xE8/xFF/xEC/x2C /xF0/xE0/xF1/xF1/xEC/xEE/xF2/xF0/xE5/xED/xFB /xE4/xE2/xE8/xE6 /xE5/xED/xE8/xFF /xEE/xF2 /xE2/xF0/xE0/xF9/xE5/xED/xE8/xFF /xED/xE0 /xEC/xE5/xF1/xF2/xE5 /xE8 /xE4/xE2/xE8/xE6 /xE5/xED/xE8/xFF /xEF/xEE
/xEE/xF2/xF0/xE5/xE7/xEA/xF3 /xEF/xF0 /xFF/xEC/xEE/xE9 /xE4/xEE /xE1/xE0/xE7/xEE/xE2/xFB/xF5 /xE4/xE2/xE8/xE6 /xE5/xED/xE8/xE9 /xEF/xEE /xEA/xF0/xE8/xE2/xEE/xEB/xE8/xED/xE5/xE9/xED/xFB/xEC /xF2/xF0/xE0/xE5/xEA/xF2/xEE/xF0/xE8/xFF/xEC/x2E /xD0 /xE0/xF1/x2D
/xF1/xEC/xEE/xF2/xF0/xE5/xED/xFB /xE4/xE8/xED/xE0/xEC/xE8/xF7/xE5/xF7/xF1/xEA/xE8/xE5 /xEC/xEE /xE4/xE5/xEB/xE8 /xF8/xE0/xF0/xE0/x2D/xF0/xEE/xE1/xEE/xF2 /xE0/x2C /xF0/xE0/xE7/xED/xFB/xE5 /xEC/xEE /xE4/xE5/xEB/xE8 /xF2/xF0/xE5/xED/xE8/xFF/x2C /xE2 /xEA /xE0/x2D
/xF7/xE5/xF1/xF2/xE2/xE5 /xEE/xF1/xED/xEE/xE2/xED/xEE/xE9 /xEC/xEE /xE4/xE5/xEB/xE8 /xF2/xF0/xE5/xED/xE8/xFF /xF0/xE0/xF1/xF1/xEC/xEE/xF2/xF0/xE5/xED/xE0 /xE4/xE2/xF3/xF5/xEF/xE0/xF0/xE0/xEC/xE5/xF2/xF0/xE8/xF7/xE5/xF1/xEA /xE0/xFF /xEC/xEE /xE4/xE5/xEB/xFC/x2E /xC2
/xF0/xE0/xE1/xEE/xF2/xE5 /xEE/xE1/xEE/xF1/xED/xEE/xE2/xE0/xED/xE0 /xF2/xE5/xF5/xED/xE8/xF7/xE5/xF1/xEA /xE0/xFF /xE2/xEE/xE7/xEC/xEE /xE6/xED/xEE/xF1/xF2/xFC /xF0/xE5/xE0/xEB/xE8/xE7/xE0/xF6/xE8/xE8 /xF8/xE0/xF0/xE0/x2D/xF0/xEE/xE1/xEE/xF2 /xE0 /xF1 /xEC/xE0/x2D
/xF5 /xEE/xE2/xE8/xEA /xE0/xEC/xE8/x2E
/xCA/xEB/xFE/xF7/xE5/xE2/xFB/xE5 /xF1 /xEB/xEE/xE2/xE0 /x3A /xF0/xEE/xE1/xEE/xF2/x2D/xF8/xE0/xF0/x2C /xE4/xE8/xED/xE0/xEC/xE8/xF7/xE5/xF1/xEA/xE8/xE5 /xEC/xEE /xE4/xE5/xEB/xE8/x2C /xE4/xE2/xF3/xF5/xEF/xE0/xF0/xE0/xEC/xE5/xF2/xF0/xE8/xF7/xE5/x2D
/xF1/xEA/xEA /xE0/xFF /xEC/xEE /xE4/xE5/xEB/xFC /xF2/xF0/xE5/xED/xE8/xFF/x2C /xE0/xEB/xE3/xEE/xF0/xE8/xF2/xEC /xF3/xEF/xF0/xE0/xE2/xEB/xE5/xED/xE8/xFF /xF8/xE0/xF0/xEE/xEC /xF1 /xEC/xE0/xF5 /xEE/xE2/xE8/xEA /xE0/xEC/xE8/x2E
/x47/x65/x6F/x72/x67/x79 /x50 /x2E/x54 /x65/x72/x65/x68/x6F /x76/x2C /x56/x6C/x61/x64/x69/x6D/x69/x72 /x45/x2E/x50 /x61 /x76/x6C/x6F /x76/x73/x6B/x79
/x43/x6F/x6E /x74/x72/x6F/x6C /x6F/x66 /x74/x68/x65 /x73/x70/x68/x65/x72/x69/x63/x61/x6C /x72/x6F/x62 /x6F/x74 /x62 /x79 /x6D/x65/x61/x6E/x73 /x6F/x66 /x1D/x79/x2D/x77/x68/x65/x65/x6C/x73
/x54/x68/x65 /x74/x68/x65/x6F/x72/x65/x74/x69/x63/x61/x6C /x6D/x65/x63 /x68/x61/x6E/x69/x63/x61/x6C /x6D/x6F /x64/x65/x6C /x6F/x66 /x74/x68/x65 /x73/x70/x68/x65/x72/x69/x63/x61/x6C /x72/x6F/x62 /x6F/x74 /x77/x69/x74/x68 /x74/x68/x65 /x1D/x79/x77/x68/x65/x65/x6C/x73
/x6C/x6F /x63/x61/x74/x65/x64 /x69/x6E /x61 /x73/x70/x68/x65/x72/x65 /x69/x73 /x63/x6F/x6E/x73/x69/x64/x65/x72/x65/x64/x2E /x54/x68/x65 /x64/x65/x73/x63/x72/x69/x62 /x65/x64 /x64/x65/x73/x69/x67/x6E /x69/x6E /x74/x65/x6E/x64/x73 /x66/x6F/x72 /x6D/x6F/x74/x69/x6F/x6E /x63/x6F/x6E /x74/x72/x6F/x6C
/x6F/x66 /x61 /x73/x70/x68/x65/x72/x65 /x6F/x6E /x76 /x61/x72/x69/x6F/x75/x73 /x74/x72/x61 /x6A/x65/x63/x74/x6F/x72/x69/x65/x73/x2E /x49/x6E /x77 /x6F/x72/x6B /x63/x6F/x6E /x74/x72/x6F/x6C /x61/x6C/x67/x6F/x72/x69/x74/x68/x6D/x73 /x6F/x66 /x61 /x73/x70/x68/x65/x72/x65 /x6F/x6E /x62/x61/x73/x69/x63
/x74/x72/x61 /x6A/x65/x63/x74/x6F/x72/x69/x65/x73 /x61/x72/x65 /x69/x6E /x76 /x65/x73/x74/x69/x67/x61/x74/x65/x64/x2C /x74/x68/x65 /x6D/x6F /x76 /x65/x6D/x65/x6E /x74/x73 /x66/x72/x6F/x6D /x72/x6F/x74/x61/x74/x69/x6F/x6E /x6F/x6E /x74/x68/x65 /x70 /x6F/x69/x6E /x74 /x61/x6E/x64 /x74/x68/x65
/x6D/x6F /x76 /x65/x6D/x65/x6E /x74/x73 /x6F/x6E /x61 /x73/x74/x72/x61/x69/x67/x68 /x74 /x6C/x69/x6E/x65 /x70/x69/x65/x63/x65 /x62 /x65/x66/x6F/x72/x65 /x74/x68/x65 /x62/x61/x73/x69/x63 /x6D/x6F /x76 /x65/x6D/x65/x6E /x74/x73 /x6F/x6E /x63/x75/x72/x76/x69/x6C/x69/x6E/x65/x61/x72
/x74/x72/x61 /x6A/x65/x63/x74/x6F/x72/x69/x65/x73 /x61/x72/x65 /x63/x6F/x6E/x73/x69/x64/x65/x72/x65/x64/x2E /x44/x79/x6E/x61/x6D/x69/x63/x61/x6C /x6D/x6F /x64/x65/x6C/x73 /x6F/x66 /x61 /x73/x70/x68/x65/x72/x65 /x72/x6F/x62 /x6F/x74/x2C /x64/x69/x1B/x65/x72/x65/x6E /x74 /x6D/x6F /x64/x65/x6C/x73
/x6F/x66 /x66/x72/x69/x63/x74/x69/x6F/x6E /x61/x72/x65 /x63/x6F/x6E/x73/x69/x64/x65/x72/x65/x64/x2C /x61/x73 /x74/x68/x65 /x6D/x61/x69/x6E /x6D/x6F /x64/x65/x6C /x6F/x66 /x66/x72/x69/x63/x74/x69/x6F/x6E /x74/x68/x65 /x74 /x77 /x6F/x2D/x70/x61/x72/x61/x6D/x65/x74/x72/x69/x63/x61/x6C
/x6D/x6F /x64/x65/x6C /x69/x73 /x63/x6F/x6E/x73/x69/x64/x65/x72/x65/x64/x2E /x49/x6E /x77 /x6F/x72/x6B /x74/x65/x63 /x68/x6E/x69/x63/x61/x6C /x63/x61/x70/x61/x62/x69/x6C/x69/x74 /x79 /x6F/x66 /x72/x65/x61/x6C/x69/x7A/x61/x74/x69/x6F/x6E /x6F/x66 /x61 /x73/x70/x68/x65/x72/x65 /x72/x6F/x62 /x6F/x74
/x77/x69/x74/x68 /x1D/x79/x77/x68/x65/x65/x6C/x73 /x69/x73 /x70/x72/x6F /x76 /x65/x64/x2E
/x4B/x65/x79 /x77/x6F/x72 /x64/x73 /x3A /x74/x68/x65 /x73/x70/x68/x65/x72/x69/x63/x61/x6C /x72/x6F/x62 /x6F/x74/x2C /x64/x79/x6E/x61/x6D/x69/x63 /x6D/x6F /x64/x65/x6C/x73/x2C /x74 /x77 /x6F/x2D/x70/x61/x72/x61/x6D/x65/x74/x72/x69/x63/x61/x6C /x6D/x6F /x64/x65/x6C
/x6F/x66 /x66/x72/x69/x63/x74/x69/x6F/x6E/x2C /x63/x6F/x6E /x74/x72/x6F/x6C /x61/x6C/x67/x6F/x72/x69/x74/x68/x6D /x6F/x66 /x61 /x73/x70/x68/x65/x72/x65 /x62 /x79 /x6D/x65/x61/x6E/x73 /x61 /x1D/x79/x77/x68/x65/x65/x6C/x73/x2E
/xD0 /xE0/xE1/xEE/xF2 /xE0 /xE2/xFB/xEF/xEE/xEB/xED/xE5/xED/xE0 /xEF/xF0/xE8 /xEF/xEE /xE4/xE4/xE5/xF0 /xE6/xEA /xE5 /xD0 /xEE/xF1/xF1/xE8/xE9/xF1/xEA /xEE/xE3/xEE /xF4/xEE/xED/xE4/xE0 /xF4/xF3/xED/xE4/xE0/xEC/xE5/xED/xF2 /xE0/xEB/xFC/xED/xFB/xF5 /xE8/xF1/x2D
/xF1/xEB/xE5/xE4/xEE/xE2/xE0/xED/xE8/xE9/x2C /xEF/xF0/xEE/xE5/xEA/xF2/xFB /x31/x36/x2D/x30/x38/x2D/x30/x30/x38/x38/x30/x2D/xE0/x2C /x31/x36/x2D/x30/x31/x2D/x30/x30/x31/x33/x31/x2D/xE0/x2E/x31 /xC2/xE2/xE5/xE4/xE5/xED/xE8/xE5
/xC2 /xEF/xEE/xF1/xEB/xE5/xE4/xED/xE5/xE5 /xE2/xF0/xE5/xEC/xFF /xEF/xEE /xFF/xE2/xEB/xFF/xE5/xF2/xF1 /xFF /xE7/xED/xE0 /xF7/xE8/xF2/xE5/xEB/xFC/xED/xEE/xE5 /xF0/xE0/xE7/xED/xEE/xEE/xE1/xF0/xE0/xE7/xE8/xE5 /xF0/xEE/xE1/xEE/xF2/xEE/xE2/x2C /xEE/xF2 /xEB/xE8/x2D
/xF7/xE0/xFE/xF9/xE8/xF5 /xF1 /xFF /xEA /xE0/xEA /xEF/xEE /xEA /xEE/xED/xF1/xF2/xF0/xF3/xEA/xF6/xE8/xE8/x2C /xF2 /xE0/xEA /xE8 /xEF/xEE /xED/xE0/xE7/xED/xE0 /xF7/xE5/xED/xE8/xFE/x2E /xC2 /xF7/xE0/xF1/xF2/xED/xEE/xF1/xF2/xE8/x2C /xF1/xF4/xEE/xF0/xEC/xE8/x2D
/xF0/xEE/xE2/xE0/xEB/xF1 /xFF /xEE/xF2 /xE4/xE5/xEB/xFC/xED/xFB/xE9 /xEA/xEB/xE0/xF1/xF1 /xEC/xEE/xE1/xE8/xEB/xFC/xED/xFB/xF5 /xF0/xEE/xE1/xEE/xF2/xEE/xE2 /x2D /xF0/xEE/xE1/xEE/xF2/xFB/x2C /xE4/xE2/xE8/xE6 /xE5/xED/xE8/xE5 /xEA /xEE/xF2/xEE/xF0/xFB/xF5
/xEE/xF1/xED/xEE/xE2/xE0/xED/xEE /xED/xE0 /xEF/xF0/xE8/xED/xF6/xE8/xEF/xE5 /xEA /xE0 /xF7/xE5/xED/xE8/xFF/x2E /xD1/xF0/xE5/xE4/xE8 /xED/xE8/xF5 /xE8/xED/xF2/xE5/xF0/xE5/xF1/xED/xFB/xEC /xEF/xF0/xE5/xE4/xF1/xF2 /xE0/xE2/xEB/xFF/xE5/xF2/xF1 /xFF /xF0/xE0/xF1/x2D
/xF1/xEC/xEE/xF2/xF0/xE5/xED/xE8/xE5 /xF0/xEE/xE1/xEE/xF2/xEE/xE2 /xF1/xF4/xE5/xF0/xE8/xF7/xE5/xF1/xEA /xEE/xE9 /xF4/xEE/xF0/xEC/xFB/x2C /xE8/xEC/xE5/xFE/xF9/xE8/xF5 /xF2 /xE0/xEA/xE8/xE5 /xEF/xF0/xE5/xE8/xEC/xF3/xF9/xE5/xF1/xF2/xE2/xE0 /xEF/xE5/xF0/xE5/xE4
/xE8/xED/xFB/xEC/xE8 /xF0/xE5/xE0/xEB/xE8/xE7/xE0/xF6/xE8/xFF/xEC/xE8/x2C /xEA /xE0/xEA /xE3/xE5/xF0/xEC/xE5/xF2/xE8/xF7/xED/xEE/xF1/xF2/xFC /xF0/xEE/xE1/xEE/xF2 /xE0 /xE8 /xEE/xF2/xF1/xF3/xF2/xF1/xF2/xE2/xE8/xE5 /xEC/xE5/xF1/xF2 /xF1/xEE/xEF/xF0 /xFF/xE6 /xE5/x2D
/xED/xE8/xE9 /xE8 /xF1/xEE/xF7/xEB/xE5/xED/xE5/xED/xE8/xE9/x2C /xFF/xE2/xEB/xFF/xFE/xF9/xE8/xF5 /xF1 /xFF /xED/xE0/xE8/xE1/xEE/xEB/xE5/xE5 /xF3 /xFF/xE7/xE2/xE8/xEC/xFB/xEC/xE8 /xE4/xEB/xFF /xF0/xE0/xE7/xEB/xE8/xF7/xED/xEE/xE3/xEE /xF0/xEE /xE4/xE0
/xED/xE5/xE1/xEB/xE0/xE3/xEE/xEF/xF0/xE8/xFF/xF2/xED/xFB/xF5 /xE2/xEE/xE7/xE4/xE5/xE9/xF1/xF2/xE2/xE8/xE9/x2E /xD2 /xE0/xEA /xE0/xFF /xF4/xEE/xF0/xEC/xE0 /xE0/xEF/xEF/xE0/xF0/xE0/xF2 /xE0 /xF1/xEF/xEE/xF1/xEE/xE1/xF1/xF2/xE2/xF3 /xE5/xF2 /xEF/xF0/xE0/xEA/xF2/xE8/x2D
/xF7/xE5/xF1/xEA /xEE/xEC/xF3 /xEF/xF0/xE8/xEC/xE5/xED/xE5/xED/xE8/xFE /xF0/xEE/xE1/xEE/xF2 /xE0 /xE2 /xE8/xF1/xF1/xEB/xE5/xE4/xEE/xE2/xE0/xF2/xE5/xEB/xFC/xF1/xEA/xE8/xF5 /xE8 /xF0/xE0/xE7/xE2/xE5/xE4/xFB/xE2/xE0/xF2/xE5/xEB/xFC/xED/xFB/xF5 /xF6/xE5/xEB/xFF/xF5/x2C
/xED/xE0/xEF/xF0/xE8/xEC/xE5/xF0 /xE4/xEB/xFF /xF0/xE0/xE1/xEE/xF2/xFB /xE2 /xE7/xEE/xED/xE0/xF5 /xF1 /xE0/xE3/xF0/xE5/xF1/xF1/xE8/xE2/xED/xEE/xE9 /xE2/xED/xE5/xF8/xED/xE5/xE9 /xF1/xF0/xE5/xE4/xEE/xE9 /x28/xEC/xE5/xF1/xF2 /xE0 /xE0/xE2/xE0/xF0/xE8/xE9/x2C
/xEF/xEE/xE2/xE5/xF0 /xF5/xED/xEE/xF1/xF2/xE8 /xE4/xF0/xF3/xE3/xE8/xF5 /xEF/xEB/xE0/xED/xE5/xF2 /xE8/x2E/xF2 /x2E/xE4/x2E/x29
/xD1/xEF/xE5/xEA/xF2/xF0 /xF0/xE0/xE7/xEB/xE8/xF7/xED/xFB/xF5 /xF0/xE5/xF8/xE5/xED/xE8/xE9 /xE8 /xF0/xE5/xE0/xEB/xE8/xE7/xE0/xF6/xE8/xE9 /xE2/xED/xF3/xF2/xF0/xE5/xED/xED/xE8/xF5 /xEC/xE5/xF5 /xE0/xED/xE8/xE7/xEC/xEE/xE2/x2C /xEF/xF0/xE8/xE2/xEE/x2D
/xE4/xFF/xF9/xE8/xF5 /xE2 /xE4/xE2/xE8/xE6 /xE5/xED/xE8/xE5 /xF2 /xE0/xEA/xE8/xE5 /xE0/xEF/xEF/xE0/xF0/xE0/xF2/xFB /x28/xEA /xEE/xF2/xEE/xF0/xFB/xE5/x2C /xEA /xF1/xEB/xEE/xE2/xF3 /x2C /xE0/xEA/xF2/xE8/xE2/xED/xEE /xF0/xE0/xE7/xE2/xE8/xE2/xE0/xFE/xF2/xF1 /xFF /xE2
/xF0/xE0/xE7/xED/xFB/xF5 /xF1/xF2/xF0/xE0/xED/xE0/xF5 /xEC/xE8/xF0/xE0/x15/xD8/xE2/xE5/xF6/xE8/xFF /x5B/x31/x5D/x2C /xD1/xD8/xC0/x2C /xC8/xE7/xF0/xE0/xE8/xEB/xFC/x2C /xD0 /xEE/xF1/xF1/xE8/xFF /xE8/x2E/xF2 /x2E/xE4/x2E/x29 /xF2/xEE /xE6 /xE5 /xE2/xE5/xF1/xFC/x2D
/xEC/xE0 /xE8 /xE2/xE5/xF1/xFC/xEC/xE0 /xF8/xE8/xF0/xEE/xEA/x2E /xC1/xEE/xEB/xFC/xF8/xEE/xE5 /xEA /xEE/xEB/xE8/xF7/xE5/xF1/xF2/xE2/xEE /xF0/xE0/xE1/xEE/xF2 /xE8/xF1/xEF/xEE/xEB/xFC/xE7/xF3 /xE5/xF2 /xEF/xF0/xE8/xED/xF6/xE8/xEF /xF1/xEC/xE5/xF9/xE5/xED/xE8/xFF
/xF6/xE5/xED/xF2/xF0/xE0 /xEC/xE0/xF1/xF1 /xF1/xE8/xF1/xF2/xE5/xEC/xFB/x2C /xF2 /xE0/xEA/xE8/xE5 /xEA /xE0/xEA /xF0/xE0/xE7/xEB/xE8/xF7/xED/xFB/xE5 /xEC/xE0/xFF/xF2/xED/xE8/xEA /xEE/xE2/xFB/xE5 /xF0/xEE/xE1/xEE/xF2/xFB/x2C /xE8/xEB/xE8 /xF0/xEE/xE1/xEE/xF2/xFB
/xF1 /xE4/xE2/xE8/xE6/xF3/xF9/xE8/xEC/xE8/xF1 /xFF /xE2/xED/xF3/xF2/xF0/xE5/xED/xED/xE8/xEC/xE8 /xEC/xE0/xF1/xF1/xE0/xEC/xE8/x2E /xCF/xF0/xE5/xE4/xF1/xF2 /xE0/xE2/xEB/xFF/xFE/xF2 /xE8/xED/xF2/xE5/xF0/xE5/xF1 /xE8 /xE0/xEF/xEF/xE0/xF0/xE0/xF2/xFB/x2C
/xE4/xE2/xE8/xE6/xF3/xF9/xE8/xE5/xF1 /xFF /xE7/xE0 /xF1/xF7/xE5/xF2 /xE4/xE5/xF4/xEE/xF0/xEC/xE0/xF6/xE8/xE8 /xEA /xEE/xF0/xEF/xF3 /xF1/xE0/x2E /xCD/xE0/xF1/xF2/xEE /xFF/xF9/xE0/xFF /xF0/xE0/xE1/xEE/xF2 /xE0 /xEF/xEE/xF1/xE2/xFF/xF9/xE5/xED/xE0 /xE8/xED/xEE/x2D
/xEC/xF3 /xEF/xF0/xE8/xED/xF6/xE8/xEF/xF3/x15/xEF/xF0/xE8/xED/xF6/xE8/xEF/xF3 /xE3/xE8/xF0/xEE/xF1/xF2 /xE0/xF2 /xE0/x2C /xEF/xEE /xE4/xF0/xE0/xE7/xF3/xEC/xE5/xE2/xE0/xFE/xF9/xE5/xE3/xEE /xED/xE0/xEB/xE8/xF7/xE8/xE5 /xE2/xED/xF3/xF2/xF0/xE8 /xF8/xE0/x2D
/xF0/xE0 /xF1/xE8/xF1/xF2/xE5/xEC/xFB /xEF/xF0/xE8/xE2/xEE /xE4/xEE/xE2/x2C /xEE/xE1/xE5/xF1/xEF/xE5/xF7/xE8/xE2/xE0/xFE/xF9/xE5/xE9 /xF1/xEE/xE7/xE4/xE0/xED/xE8/xE5 /xE2/xED/xF3/xF2/xF0/xE5/xED/xED/xE5/xE3/xEE /xEA/xE8/xED/xE5/xF2/xE8/xF7/xE5/xF1/xEA /xEE/xE3/xEE
/xEC/xEE/xEC/xE5/xED/xF2 /xE0/x2E /xC2 /xF7/xE0/xF1/xF2/xED/xEE/xF1/xF2/xE8/x2C /xF0/xE0/xF1/xF1/xEC/xEE/xF2/xF0/xE5/xED /xEF/xF0/xE8/xEC/xE5/xF0 /xF0/xEE/xE1/xEE/xF2 /xE0/x2C /xE2/xED/xF3/xF2/xF0/xE8 /xEA /xEE/xF2/xEE/xF0/xEE/xE3/xEE /xED/xE0 /xF2/xF0/xE5/xF5
/xE2/xE7/xE0/xE8/xEC/xED/xEE/x2D/xEE/xF0/xF2/xEE/xE3/xEE/xED/xE0/xEB/xFC/xED/xFB/xF5 /xEE/xF1 /xFF/xF5 /xF0/xE0/xF1/xEF/xEE/xEB/xEE /xE6 /xE5/xED/xFB /xF2/xF0/xE8 /xEC/xE0/xF5 /xEE/xE2/xE8/xEA /xE0/x2C /xF1/xEE/xE7/xE4/xE0/xFE/xF9/xE8/xE5 /xF3/xEF/xF0/xE0/xE2/x2D
/xEB/xFF/xFE/xF9/xE8/xE9 /xEC/xEE/xEC/xE5/xED/xF2 /x2E
/xC8/xF1/xF1/xEB/xE5/xE4/xEE/xE2/xE0/xED/xE8/xE5 /xE4/xE2/xE8/xE6 /xE5/xED/xE8/xFF /xE8 /xEF/xEB/xE0/xED/xE8/xF0/xEE/xE2/xE0/xED/xE8/xFF /xF2/xF0/xE0/xE5/xEA/xF2/xEE/xF0/xE8/xE9 /xEF/xEE /xE4/xEE/xE1/xED/xEE/xE3/xEE /xE0/xEF/xEF/xE0/xF0/xE0/xF2 /xE0
/xED/xE0 /xE0/xE1/xF1/xEE/xEB/xFE/xF2/xED/xEE /xF8/xE5/xF0/xEE /xF5 /xEE/xE2/xE0/xF2/xEE/xE9 /xEF/xEB/xEE/xF1/xEA /xEE/xF1/xF2/xE8 /xE1/xFB/xEB/xE8 /xEF/xF0/xE5/xE4/xEF/xF0/xE8/xED/xFF/xF2/xFB /xE2 /x5B/x32/x5D/x2E /xC7/xE0/xF2/xE5/xEC /xE2 /x5B/x33/x5D
/xE1/xFB/xEB/xE0 /xE4/xEE/xEA /xE0/xE7/xE0/xED/xE0 /xF3/xEF/xF0/xE0/xE2/xEB/xFF/xE5/xEC/xEE/xF1/xF2/xFC /xF1/xE8/xF1/xF2/xE5/xEC/xFB /xE4/xEB/xFF /xED/xE5/xE3/xEE/xEB/xEE/xED/xEE/xEC/xED/xEE/xE9 /xEF/xEE/xF1/xF2 /xE0/xED/xEE/xE2/xEA/xE8 /xE8 /xFF/xE2/xED/xEE
/xF3/xEA /xE0/xE7/xE0/xED/xFB /xE0/xEB/xE3/xEE/xF0/xE8/xF2/xEC/xFB /xF3/xEF/xF0/xE0/xE2/xEB/xE5/xED/xE8/xFF /xF0/xEE/xE1/xEE/xF2/xEE/xEC/x2E /xC2 /x5B/x34/x5D /xF0/xE5/xE7/xF3 /xEB/xFC /xF2 /xE0/xF2/xFB /xE1/xFB/xEB/xE8 /xEE/xE1/xEE/xE1/xF9/xE5/xED/xFB /xED/xE0
/xF1/xEB/xF3/xF7/xE0/xE9 /xEF/xEB/xEE/xF1/xEA /xEE/xF1/xF2/xE8 /xF1 /xF2/xF0/xE5/xED/xE8/xE5/xEC/x2C /xE2 /xF7/xE0/xF1/xF2/xED/xEE/xF1/xF2/xE8/x2C /xF0/xE0/xF1/xF1/xEC/xEE/xF2/xF0/xE5/xED/xFB /xEC/xEE /xE4/xE5/xEB/xE8 /xF1/xF3/xF5 /xEE/xE3/xEE /xF2/xF0/xE5/xED/xE8/xFF
/xCA/xF3 /xEB/xEE/xED/xE0/x2C /xE2/xFF/xE7/xEA /xEE/xE3/xEE /xF2/xF0/xE5/xED/xE8/xFF/x2E /xC2/xE0/xE6/xED/xEE/xE9 /xEE/xF1/xEE/xE1/xE5/xED/xED/xEE/xF1/xF2/xFC/xFE /xEF/xEE/xEB/xF3/xF7/xE5/xED/xED/xFB/xF5 /xEC/xEE /xE4/xE5/xEB/xE5/xE9 /xE1/xFB/xEB/xEE /xED/xE0/x2D
/xEB/xE8/xF7/xE8/xE5 /xE4/xE2/xF3/xF5 /xE8/xED/xF2/xE5/xE3/xF0/xE0/xEB/xEE/xE2 /xEA/xE8/xED/xE5/xF2/xE8/xF7/xE5/xF1/xEA /xEE/xE3/xEE /xEC/xEE/xEC/xE5/xED/xF2 /xE0 /xEE/xF2/xED/xEE/xF1/xE8/xF2/xE5/xEB/xFC/xED/xEE /xF2/xEE/xF7/xEA/xE8 /xEA /xEE/xED/xF2 /xE0/xEA/xF2 /xE0
/x28/xE0 /xE2 /xF1/xEB/xF3/xF7/xE0/xE5 /xEE/xF2/xF1/xF3/xF2/xF1/xF2/xE2/xE8/xFF /xF2/xF0/xE5/xED/xE8/xFF /xE2/xE5/xF0/xF7/xE5/xED/xE8/xFF /x2D /xF2/xF0/xE5/xF5/x29/x2E
/xC2/xEC/xE5/xF1/xF2/xE5 /xF1 /xF2/xE5/xEC/x2C /xE2 /xEF/xEE/xF1/xEB/xE5/xE4/xED/xE5/xE5 /xE2/xF0/xE5/xEC/xFF /xEF/xEE /xFF/xE2/xEB/xFF/xE5/xF2/xF1 /xFF /xF0 /xFF/xE4 /xF0/xE0/xE1/xEE/xF2 /x2C /xEF/xF0/xE5/xE4/xEF/xEE/xEB/xE0/xE3 /xE0/xFE/xF9/xE8/xF5
/xF1/xF3/xF9/xE5/xF1/xF2/xE2/xE5/xED/xED/xEE /xE8/xE7/xEC/xE5/xED/xE5/xED/xED/xFB/xE5 /xEC/xEE /xE4/xE5/xEB/xE8 /xF2/xF0/xE5/xED/xE8/xFF/x2C /xE4/xEE/xEF/xEE/xEB/xED/xFF/xFE/xF9/xE8/xE5 /xE8 /xEE/xE1/xEE/xE1/xF9/xE0/xFE/xF9/xE8/xE5 /xEC/xEE/x2D
/xE4/xE5/xEB/xFC /xF1/xF3/xF5 /xEE/xE3/xEE /xF2/xF0/xE5/xED/xE8/xFF /xCA/xF3 /xEB/xEE/xED/xE0/x2E /xCE/xE1/xEE/xE1/xF9/xE5/xED/xE8/xE5 /xEF/xF0/xEE/xE8/xF1 /xF5 /xEE /xE4/xE8/xF2 /xE7/xE0 /xF1/xF7/xE5/xF2 /xF2/xEE/xE3/xEE/x2C /xF7/xF2/xEE /xF2/xEE/xF7/xE5/xF7/x2D
/xED/xEE/xE5 /xEA/xF3 /xEB/xEE/xED/xEE/xE2/xF1/xEA /xEE/xE5 /xE2/xE7/xE0/xE8/xEC/xEE /xE4/xE5/xE9/xF1/xF2/xE2/xE8/xE5 /xEA /xE0/xF2 /xFF/xF9/xE5/xE3/xEE/xF1 /xFF /xF2/xE5/xEB/xE0 /xF1 /xEF/xEB/xEE/xF1/xEA /xEE/xF1/xF2/xFC/xFE /xE7/xE0/xEC/xE5/xED/xFF/xE5/xF2/xF1 /xFF /xED/xE0
/xE2/xE7/xE0/xE8/xEC/xEE /xE4/xE5/xE9/xF1/xF2/xE2/xE8/xE5 /xE2/xE4/xEE/xEB/xFC /xED/xE5/xEA /xEE/xF2/xEE/xF0/xEE/xE9 /xEE/xE1/xEB/xE0/xF1/xF2/xE8 /x28/xEF/xFF/xF2/xED/xE0 /xEA /xEE/xED/xF2 /xE0/xEA/xF2 /xE0/x29/x2E /xCF/xF0/xE8/xEC/xE5/xF0/xEE/xEC /xFD/xF2/xEE/xE3/xEE
/xEF/xEE /xE4/xF5 /xEE /xE4/xE0 /xFF/xE2/xEB/xFF/xE5/xF2/xF1 /xFF /xF0/xE0/xF1/xF1/xEC/xEE/xF2/xF0/xE5/xED/xE8/xE5 /xEF/xFF/xF2/xED/xE0 /xEA /xEE/xED/xF2 /xE0/xEA/xF2 /xE0 /xE2 /xE2/xE8/xE4/xE5 /xEA/xF0/xF3/xE3 /xE0/x2C /xF2 /xE0/xEA /xE0/xFF /xEC/xEE /xE4/xE5/xEB/xFC
/xE1/xFB/xEB/xE0 /xE2/xEF/xE5/xF0/xE2/xFB/xE5 /xEF/xF0/xE5/xE4/xEB/xEE /xE6 /xE5/xED/xE0 /xCA/xEE/xED/xF2/xE5/xED/xF1/xF3 /x5B/x39/x5D/x2C /xE0 /xE4/xE0/xEB/xE5/xE5 /xF0/xE0/xE7/xE2/xE8/xF2 /xE0 /xC2/x2E/xD4/x2E/xC6/xF3/xF0/xE0/xE2/xEB/xE5/xE2/xFB/xEC
/x5B/x38/x5D/x2E /xCF/xF0/xE8 /xF2 /xE0/xEA /xEE/xEC /xEF/xEE /xE4/xF5 /xEE /xE4/xE5 /xEC/xEE /xE6/xED/xEE /xE3/xEE/xE2/xEE/xF0/xE8/xF2/xFC /xEE /xEF/xEB/xEE/xF1/xEA/xE8/xF5 /xE4/xE5/xF4/xEE/xF0/xEC/xE0/xF6/xE8/xFF/xF5 /xF1/xF4/xE5/xF0/xE8/xF7/xE5/xF1/xEA /xEE/xE9
/xEE/xE1/xEE/xEB/xEE/xF7/xEA/xE8 /xF8/xE0/xF0/xE0 /xE2/xE1/xEB/xE8/xE7/xE8 /xEA /xEE/xED/xF2 /xE0/xEA/xF2 /xE0 /xF1 /xE0/xE1/xF1/xEE/xEB/xFE/xF2/xED/xEE /xF2/xE2/xE5/xF0 /xE4/xEE/xE9 /xEF/xEB/xEE/xF1/xEA /xEE/xF1/xF2/xFC/xFE/x2E /xCE/xE4/xED/xE0/xEA /xEE/x2C
/x33/xE5/xF1/xF2/xFC /xE8 /xEF/xEE /xE4/xF5 /xEE /xE4/x2C /xEF/xF0/xE8 /xEA /xEE/xF2/xEE/xF0/xEE/xEC /xEF/xFF/xF2/xED/xEE /xEA /xEE/xED/xF2 /xE0/xEA/xF2 /xE0 /xEF/xF0/xE5/xE4/xF1/xF2 /xE0/xE2/xEB/xFF/xE5/xF2 /xF1/xEE/xE1/xEE/xE9 /xED/xE5 /xEF/xEB/xEE/xF1/xEA/xF3/xFE
/xEE/xE1/xEB/xE0/xF1/xF2/xFC/x2C /xE0 /xF1/xF4/xE5/xF0/xE8/xF7/xE5/xF1/xEA/xE8/xE9 /xF1/xE5/xE3/xEC/xE5/xED/xF2 /x2C /xF7/xF2/xEE /xF1/xEE/xEE/xF2/xE2/xE5/xF2/xF1/xF2/xE2/xF3 /xE5/xF2 /xEF/xF0/xE5/xE4/xEF/xEE/xEB/xEE /xE6 /xE5/xED/xE8/xFE /xEE /xE4/xE5/xF4/xEE/xF0/x2D
/xEC/xE0/xF6/xE8/xE8 /xEA /xE0/xEA /xF8/xE0/xF0/xE0/x2C /xF2 /xE0/xEA /xE8 /xEF/xEB/xEE/xF1/xEA /xEE/xF1/xF2/xE8 /xE2/xE1/xEB/xE8/xE7/xE8 /xE8/xF5 /xEA /xEE/xED/xF2 /xE0/xEA/xF2 /xE0/x2E /xD2 /xE0/xEA /xE0/xFF /xEC/xEE /xE4/xE5/xEB/xFC /xE1/xFB/xEB/xE0
/xEF/xF0/xE5/xE4/xEB/xEE /xE6 /xE5/xED/xE0 /xE8 /xE7/xE0/xF2/xE5/xEC /xF0/xE0/xE7/xE2/xE8/xF2 /xE0 /xC0/x2E/xC2/x2E/xCA/xE0/xF0/xE0/xEF/xE5/xF2 /xFF/xED/xEE/xEC /xE2 /xF0/xE0/xE1/xEE/xF2 /xE0/xF5 /x5B/x35/x5D/x2C/x5B/x36/x5D/x2E /xC8/xED/xF2/xE5/xF0/xE5/xF1/xED/xEE/x2C
/xF7/xF2/xEE /xFD/xF2 /xE0 /xEC/xEE /xE4/xE5/xEB/xFC /xE7/xE0/xE2/xE8/xF1/xE8/xF2 /xEE/xF2 /xE4/xE2/xF3/xF5 /xEF/xE0/xF0/xE0/xEC/xE5/xF2/xF0/xEE/xE2 /xE8 /xEF/xF0/xE8 /xEE/xEF/xF0/xE5/xE4/xE5/xEB/xE5/xED/xED/xFB/xF5 /xE8/xF5 /xE7/xED/xE0 /xF7/xE5/x2D
/xED/xE8/xFF/xF5 /xEF/xE5/xF0/xE5/xF5 /xEE /xE4/xE8/xF2 /xE2 /xEC/xEE /xE4/xE5/xEB/xE8 /xCA/xF3 /xEB/xEE/xED/xE0 /xE8 /xCA/xEE/xED/xF2/xE5/xED/xF1/xF3/x2D/xC6/xF3/xF0/xE0/xE2/xEB/xE5/xE2/xE0/x2E /xC2 /xE4/xE0/xED/xED/xEE/xE9 /xF0/xE0/xE1/xEE/xF2/xE5
/xE8/xF1/xEF/xEE/xEB/xFC/xE7/xF3 /xE5/xF2/xF1 /xFF /xE4/xE2/xF3/xF5/xEF/xE0/xF0/xE0/xEC/xE5/xF2/xF0/xE8/xF7/xE5/xF1/xEA /xE0/xFF /xEC/xEE /xE4/xE5/xEB/xFC /xF2/xF0/xE5/xED/xE8/xFF /x5B/x35/x5D/x2E
/x32 /xC4/xE8/xED/xE0/xEC/xE8/xEA /xE0 /xE8 /xF3/xEF/xF0/xE0/xE2/xEB/xE5/xED/xE8/xE5 /xF0/xEE/xE1/xEE/xF2/xEE/xEC/x2D/xF8/xE0/xF0/xEE/xEC
/x32/x2E/x31 /xCE/xEF/xE8/xF1/xE0/xED/xE8/xE5 /xEC/xEE /xE4/xE5/xEB/xE8/x2E /xD3/xF0/xE0/xE2/xED/xE5/xED/xE8/xFF /xE4/xE2/xE8/xE6 /xE5/xED/xE8/xFF
/xC1/xF3 /xE4/xE5/xEC /xF0/xE0/xF1/xF1/xEC/xE0/xF2/xF0/xE8/xE2/xE0/xF2/xFC /xED/xE0 /xED/xE5/xEF/xEE /xE4/xE2/xE8/xE6/xED/xEE/xE9 /xEF/xEB/xEE/xF1/xEA /xEE/xF1/xF2/xE8 Sxy /xF8/xE0/xF0 /xF0/xE0/xE4/xE8/xF3 /xF1/xEE/xEC R /xF1
/xF6/xE5/xED/xF2/xF0/xEE/xEC /xE2 /xF2/xEE/xF7/xEA /xE5 O /x2E /xC2/xED/xF3/xF2/xF0/xE8 /xF1/xF4/xE5/xF0/xE8/xF7/xE5/xF1/xEA /xEE/xE9 /xEE/xE1/xEE/xEB/xEE/xF7/xEA/xE8 /xED/xE0 /xF2/xF0/xE5/xF5 /xE2/xE7/xE0/xE8/xEC/xED/xEE/x2D/xEE/xF0/xF2/xEE/xE3/xEE/xED/xE0/xEB/xFC/x2D
/xED/xFB/xF5 /xEE/xF1 /xFF/xF5 /xED/xE0/xF5 /xEE /xE4/xFF/xF2/xF1 /xFF /xF2/xF0/xE8 /xEE /xE4/xE8/xED/xE0/xEA /xEE/xE2/xFB/xF5 /xE4/xE8/xF1/xEA /xE0/x2D/xEC/xE0/xF5 /xEE/xE2/xE8/xEA /xE0 /xEC/xE0/xF1/xF1/xEE/xE9 m /xE8 /xF0/xE0/xE4/xE8/xF3 /xF1/xEE/xEC ρ /x2E
J1 /xE8J2 /x16/xFD/xEA/xE2/xE0/xF2/xEE/xF0/xE8/xE0/xEB/xFC/xED/xFB/xE9 /xE8 /xEF/xEE/xEB/xFF/xF0/xED/xFB/xE9 /xEC/xEE/xEC/xE5/xED/xF2/xFB /xE8/xED/xE5/xF0/xF6/xE8/xE8 /xF1/xEE/xEE/xF2/xE2/xE5/xF2/xF1/xF2/xE2/xE5/xED/xED/xEE/x2E /xD0 /xE0/xF1/x2D
/xF1/xF2/xEE /xFF/xED/xE8/xE5 /xEE/xF2 /xF2/xEE/xF7/xEA/xE8 /xEF/xE5/xF0/xE5/xF1/xE5/xF7/xE5/xED/xE8/xFF /xEE/xF1/xE5/xE9 G /x2C /xEE/xF0/xF2/xEE/xE3/xEE/xED/xE0/xEB/xFC/xED/xFB/xF5 /xEC/xE0/xF5 /xEE/xE2/xE8/xEA /xE0/xEC /xE4/xEE /xF6/xE5/xED/xF2/xF0/xE0
/xEA /xE0/xE6/xE4/xEE/xE3/xEE /xE8/xE7 /xEC/xE0/xF5 /xEE/xE2/xE8/xEA /xEE/xE2 /x28/xF2/xEE/xF7/xE5/xEA Ai /x29 /xF0/xE0/xE2/xED/xEEa /x2C /xE8 /xF6/xE5/xED/xF2/xF0/xFB /xEC/xE0/xF5 /xEE/xE2/xE8/xEA /xEE/xE2 /xEB/xE5/xE6 /xE0/xF2 /xE2 /xFD/xEA/x2D
/xE2/xE0/xF2/xEE/xF0/xE8/xE0/xEB/xFC/xED/xEE/xE9 /xEF/xEB/xEE/xF1/xEA /xEE/xF1/xF2/xE8 /xF8/xE0/xF0/xE0/x2E /xCC/xE0/xF1/xF1/xE0 /xF8/xE0/xF0/xE0 /xE1/xE5/xE7 /xF3/xF7/xE5/xF2 /xE0 /xEC/xE0/xF5 /xEE/xE2/xE8/xEA /xEE/xE2/x15 M /x2E /xC4/xE0/xEB/xE5/xE5/x2C
/xEF/xF0/xE5/xE4/xEF/xEE/xEB/xEE /xE6/xE8/xEC/x2C /xF7/xF2/xEE /xF6/xE5/xED/xF2/xF0 /xEC/xE0/xF1/xF1 /xF0/xEE/xE1/xEE/xF2 /xE0 /xED/xE0/xF5 /xEE /xE4/xE8/xF2/xF1 /xFF /xE2 /xF2/xEE/xF7/xEA /xE5 O /x2C /xF2 /x2E/xE5/x2E /xF1/xEE/xE2/xEF/xE0/xE4/xE0/xE5/xF2 /xF1
/xE3/xE5/xEE/xEC/xE5/xF2/xF0/xE8/xF7/xE5/xF1/xEA/xE8/xEC /xF6/xE5/xED/xF2/xF0/xEE/xEC /xF8/xE0/xF0/xE0/x2E /xD2 /xE5/xED/xE7/xEE/xF0 /xE8/xED/xE5/xF0/xF6/xE8/xE8 /xEA /xEE/xED/xF1/xF2/xF0/xF3/xEA/xF6/xE8/xE8 /x28/xE1/xE5/xE7 /xF3/xF7/xE5/xF2 /xE0 /xEC/xE0/x2D
/xF5 /xEE/xE2/xE8/xEA /xEE/xE2/x29 /xEF/xF0/xE5/xE4/xEF/xEE/xEB/xE0/xE3 /xE0/xE5/xF2/xF1 /xFF /xF8/xE0/xF0/xEE/xE2/xFB/xEC /xF1 /xEC/xEE/xEC/xE5/xED/xF2/xEE/xEC /xE8/xED/xE5/xF0/xF6/xE8/xE8 J /x2E
/xC2/xE2/xE5/xE4/xE5/xEC /xEF/xEE /xE4/xE2/xE8/xE6/xED/xF3/xFE /xF1/xE8/xF1/xF2/xE5/xEC/xF3 /xEA /xEE/xEE/xF0 /xE4/xE8/xED/xE0/xF2 Oe1e2e3 /xF1 /xF6/xE5/xED/xF2/xF0/xEE/xEC /xE2 /xF2/xEE/xF7/xEA /xE5 O /x2C /xE2/xFB/x2D
/xE1/xEE/xF0 /xE1/xE0/xE7/xE8/xF1/xED/xFB/xF5 /xE2/xE5/xEA/xF2/xEE/xF0/xEE/xE2 ei /xEF/xF0/xE5/xE4/xEF/xEE/xEB/xE0/xE3 /xE0/xE5/xF2/xF1 /xFF /xF1/xEE/xED/xE0/xEF/xF0/xE0/xE2/xEB/xE5/xED/xFB/xEC /xEE/xF1 /xFF/xEC /xEC/xE0/xF5 /xEE/xE2/xE8/xEA /xEE/xE2
/x28/xEE/xF2/xF0/xE5/xE7/xEA /xE0/xEC GA i /x29/x2E /xCF/xE5/xF0/xE5/xF5 /xEE /xE4 /xEA /xEF/xEE /xE4/xE2/xE8/xE6/xED/xEE/xE9 /xF1/xE8/xF1/xF2/xE5/xEC/xE5 /xEA /xEE/xEE/xF0 /xE4/xE8/xED/xE0/xF2 /xEE/xF1/xF3/xF9/xE5/xF1/xF2/xE2/xEB/xFF/xE5/xF2/xF1 /xFF
/xEF/xEE/xF1/xF0/xE5/xE4/xF1/xF2/xE2/xEE/xEC /xEC/xE0/xF2/xF0/xE8/xF6/xFB /xEF/xE5/xF0/xE5/xF5 /xEE /xE4/xE0 D∈SO(3) /x2E /xCA/xEE/xED/xF4/xE8/xE3/xF3/xF0/xE0/xF6/xE8/xEE/xED/xED/xEE/xE5 /xEC/xED/xEE/xE3/xEE/xEE/xE1/xF0/xE0/x2D
/xE7/xE8/xE5 /xF1/xE8/xF1/xF2/xE5/xEC/xFB /xF1/xF3/xF2/xFC R2×SO(3) /x2E /xD2/xF0/xE8 /xF3/xE3 /xEB/xEE/xE2/xFB/xE5 /xF1/xEA /xEE/xF0/xEE/xF1/xF2/xE8 /xE2/xF0/xE0/xF9/xE5/xED/xE8/xFF /xEC/xE0/xF5 /xEE/xE2/xE8/xEA /xEE/xE2 /xE2/xEE/x2D
/xEA/xF0/xF3/xE3 /xF1/xE2/xEE/xE5/xE9 /xEE/xF1/xE8 /xEE/xE1/xEE/xE7/xED/xE0 /xF7/xE8/xEC /xE7/xE0 αi /x2E /xC7/xE0/xF2/xE5/xEC /xEF/xE5/xF0/xE5/xE9/xE4/xE5/xEC /xEA /xE1/xE5/xE7/xF0/xE0/xE7/xEC/xE5/xF0/xED/xFB/xEC /xEA /xEE/xEE/xF0 /xE4/xE8/xED/xE0/xF2 /xE0/xEC
x′=x
R,y′=y
R/x2C /xE0 /xF0/xE0/xE4/xE8/xF3 /xF1/x2D/xE2/xE5/xEA/xF2/xEE/xF0 /xE8 /xE2/xE5/xEA/xF2/xEE/xF0 /xF1/xEA /xEE/xF0/xEE/xF1/xF2/xE8 /xEE/xE1/xEE/xE7/xED/xE0 /xF7/xE8/xEC r′= (x′;y′)T/xE8
v=˙r′/x28/xC4/xE0/xEB/xE5/xE5/x2C /xE2/xE5/xE7/xE4/xE5 /xEF/xEE /xE4 /xF4/xE8/xE7/xE8/xF7/xE5/xF1/xEA/xE8/xEC/xE8 /xF5 /xE0/xF0/xE0/xEA/xF2/xE5/xF0/xE8/xF1/xF2/xE8/xEA /xE0/xEC/xE8/x2C /xF2 /xE0/xEA/xE8/xEC/xE8 /xEA /xE0/xEA /xF1/xE8/xEB/xE0/x2C
/xF1/xEA /xEE/xF0/xEE/xF1/xF2/xFC /xE8/x2E/xF2 /x2E/xE4 /xEF/xEE/xED/xE8/xEC/xE0/xE5/xF2/xF1 /xFF /xE8/xEC/xE5/xED/xED/xEE /xE1/xE5/xE7/xF0/xE0/xE7/xEC/xE5/xF0/xED/xE0/xFF /xE2/xE5/xEB/xE8/xF7/xE8/xED/xE0/x2C /xE5/xF1/xEB/xE8 /xED/xE5 /xEE/xE3/xEE/xE2/xEE/xF0/xE5/xED/xEE
/xEF/xF0/xEE/xF2/xE8/xE2/xED/xEE/xE5/x29/x2E
/xC4/xEB/xFF /xE8/xF1/xF1/xEB/xE5/xE4/xEE/xE2/xE0/xED/xE8/xFF /xE4/xE2/xE8/xE6 /xE5/xED/xE8/xFF /xF1/xE8/xF1/xF2/xE5/xEC/xFB /xE1/xF3 /xE4/xE5/xEC /xEF/xF0/xE8/xEC/xE5/xED/xFF/xF2/xFC /xEE/xE1/xF9/xE8/xE5 /xF2/xE5/xEE/xF0/xE5/xEC/xFB
/xE4/xE8/xED/xE0/xEC/xE8/xEA/xE8/x2C /xEF/xF0/xE8/xF7/xE5/xEC /xF3/xF0/xE0/xE2/xED/xE5/xED/xE8/xE5 /xED/xE0 /xE8/xEC/xEF/xF3 /xEB/xFC/xF1 /xF0/xE0/xE7/xE4/xE5/xEB/xE8/xEC /xED/xE0 ˆMR /x28ˆM=M+ 3m /x29/x15
/xEF/xEE/xEB/xED/xE0/xFF /xEC/xE0/xF1/xF1/xE0 /xF1/xE8/xF1/xF2/xE5/xEC/xFB/x2C /xE0 /xF3/xF0/xE0/xE2/xED/xE5/xED/xE8/xE5 /xED/xE0 /xEA/xE8/xED/xE5/xF2/xE8/xF7/xE5/xF1/xEA/xE8/xE9 /xEC/xEE/xEC/xE5/xED/xF2 /x2D /xED/xE0 /xE2/xE5/xEB/xE8/xF7/xE8/xED/xF3
ˆJ=ma2
3/x2E /xD2 /xE0/xEA/xE8/xEC /xEE/xE1/xF0/xE0/xE7/xEE/xEC/x2C /xEE/xE1/xEE/xE7/xED/xE0 /xF7/xE8/xE2 /xEF/xEE/xEB/xF3/xF7/xE8/xE2/xF8/xE8/xE5/xF1 /xFF /xF1/xE8/xEB/xFB /xE8 /xEC/xEE/xEC/xE5/xED/xF2/xFB /xF1/xE8/xEB /xE7/xE0 f
/xE8µ /xF1/xEE/xEE/xF2/xE2/xE5/xF2/xF1/xF2/xE2/xE5/xED/xED/xEE/x2C /xE8/xEC/xE5/xE5/xEC /xF1/xEB/xE5/xE4/xF3/xFE/xF9/xF3/xFE /xF1/xE8/xF1/xF2/xE5/xEC/xF3 /xF3/xF0/xE0/xE2/xED/xE5/xED/xE8/xE9 /x28/xEF/xEE /xE2/xE5/xF0/xF2/xE8/xEA /xE0/xEB/xFC/xED/xEE/xE9
/x34/xEE/xF1/xE8Sz /xE4/xE2/xE8/xE6 /xE5/xED/xE8/xE5 /xEF/xF0/xE5/xE4/xEF/xEE/xEB/xE0/xE3 /xE0/xE5/xF2/xF1 /xFF /xED/xE5/xE2/xEE/xE7/xEC/xEE /xE6/xED/xFB/xEC/x29/x3A
˙v=f
I˙!+C˙+ Ω(I!+C) =D
Ω =
0−ω3ω2
ω3 0−ω1
−ω2ω1 0

/xD3/xF0/xE0/xE2/xED/xE5/xED/xE8/xE5 /xED/xE0 /xEA/xE8/xED/xE5/xF2/xE8/xF7/xE5/xF1/xEA/xE8/xE9 /xEC/xEE/xEC/xE5/xED/xF2 /xE7/xE0/xEF/xE8/xF1/xE0/xED/xEE /xE2 /xEF/xEE /xE4/xE2/xE8/xE6/xED/xEE/xEC /xE1/xE0/xE7/xE8/xF1/xE5 /xE8 ωi /x16
/xEA /xEE/xEC/xEF/xEE/xED/xE5/xED/xF2/xFB /xE2/xE5/xEA/xF2/xEE/xF0/xE0 /xF3/xE3 /xEB/xEE/xE2/xEE/xE9 /xF1/xEA /xEE/xF0/xEE/xF1/xF2/xE8 /xE2 /xED/xE5/xEC/x2E /xCE/xE1/xE5/xE7/xF0/xE0/xE7/xEC/xE5/xF0/xE5/xED/xED/xFB/xE9 /xF2/xE5/xED/xE7/xEE/xF0 /xE8/xED/xE5/xF0/x2D
/xF6/xE8/xE8 /x22/xEF/xE0/xF1/xF1/xE8/xE2/xED/xEE/xE9/x22/xF7/xE0/xF1/xF2/xE8 /xEE/xE1/xEE/xE7/xED/xE0 /xF7/xE5/xED /xE7/xE0 I /x2C /xE7/xE0C /x16/xEE/xE1/xE5/xE7/xF0/xE0/xE7/xEC/xE5/xF0/xE5/xED/xED/xFB/xE9 /xE0/xED/xE0/xEB/xEE/xE3 /xF2/xE5/xED/xE7/xEE/xF0/xE0
/xE8/xED/xE5/xF0/xF6/xE8/xE8 /x22/xF3/xEF/xF0/xE0/xE2/xEB/xFF/xFE/xF9/xE5/xE9/x22/xF7/xE0/xF1/xF2/xE8/x2E /x28/xCF/xEE /xF1/xF3/xF2/xE8/x2C /xFD/xF2/xEE /xE4/xE8/xE0/xE3/xEE/xED/xE0/xEB/xFC/xED/xE0/xFF /xEC/xE0/xF2/xF0/xE8/xF6/xE0 /xF1/xEE/xF1/xF2/xEE /xFF/x2D
/xF9/xE0/xFF /xE8/xE7 /xEF/xEE/xEB/xFF/xF0/xED/xEE/xE3/xEE /xEC/xEE/xEC/xE5/xED/xF2 /xE0 /xE8/xED/xE5/xF0/xF6/xE8/xE8 /xEA /xE0/xE6/xE4/xEE/xE3/xEE /xEC/xE0/xF5 /xEE/xE2/xE8/xEA /xE0/x29 /xCC/xE0/xF2/xF0/xE8/xF6/xFB /x49 /xE8 /x43 /xE8/xEC/xE5/xFE/xF2
/xF1/xEB/xE5/xE4/xF3/xFE/xF9/xE8/xE9 /xE2/xE8/xE4/x3A
I=
ν1 1
1ν1
1 1ν

C=diag{c,c,c}
c=3J2
ma2
ν= 4 + 3J2+J+ 2J1
ma2
/xD0/xE8/xF1/x2E /x31/x3A /xCC/xEE /xE4/xE5/xEB/xFC /xF8/xE0/xF0/xE0 /xED/xE0 /xEF/xEB/xEE/xF1/xEA /xEE/xF1/xF2/xE8
/xD1/xF2/xEE/xE8/xF2 /xEE/xF2/xEC/xE5/xF2/xE8/xF2/xFC/x2C /xF7/xF2/xEE /xE4/xE0/xED/xED/xE0/xFF /xF1/xE8/xF1/xF2/xE5/xEC/xE0 /xFF/xE2/xEB/xFF/xE5/xF2/xF1 /xFF /xE2/xEF/xEE/xEB/xED/xE5 /xF3/xEF/xF0/xE0/xE2/xEB/xFF/xE5/xEC/xEE/xE9/x2C /xF7/xF2/xEE
/xE4/xEE/xEA /xE0/xE7/xE0/xED/xEE /xE2 /x5B/x33/x5D/x2E /xC8/xED/xF2/xE5/xF0/xE5/xF1/xED/xEE/x2C /xF7/xF2/xEE /xF3/xEF/xF0/xE0/xE2/xEB/xFF/xE5/xEC/xEE/xF1/xF2/xFC /xF1/xEE /xF5/xF0/xE0/xED/xFF/xE5/xF2/xF1 /xFF /xEF/xF0/xE8 /xE7/xE0/xEC/xE5/xED/xE5 /xEE/xF0/xF2/xEE/x2D
/xE3/xEE/xED/xE0/xEB/xFC/xED/xEE/xF1/xF2/xE8 /xEE/xF1/xE5/xE9 /xED/xE0 /xED/xE5/xEA /xEE/xEC/xEF/xEB/xEE/xED/xE0/xF0/xED/xEE/xF1/xF2/xFC /xE8 /xE4/xE0/xE6 /xE5 /xEF/xF0/xE8 /xE0/xED/xED/xF3 /xEB/xE8/xF0/xEE/xE2/xE0/xED/xE8/xE8 /xEE /xE4/xED/xEE/xE3/xEE /xE8/xE7
/x35/xEC/xE0/xF5 /xEE/xE2/xE8/xEA /xEE/xE2/x2E /xCE/xE4/xED/xE0/xEA /xEE/x2C /xE2 /xEF/xEE/xF1/xEB/xE5/xE4/xED/xE5/xEC /xF1/xEB/xF3/xF7/xE0/xE5/x2C /xEE/xF7/xE5/xE2/xE8/xE4/xED/xEE/x2C /xED/xE5 /xEB/xFE/xE1/xEE/xE9 /xE7/xE0/xEA /xEE/xED /xE4/xE2/xE8/xE6 /xE5/x2D
/xED/xE8/xFF /xE4/xEE/xEF/xF3 /xF1/xF2/xE8/xEC /xE8/xE7 /xEF/xF0/xEE/xE8/xE7/xE2/xEE/xEB/xFC/xED/xEE/xE9 /xEA /xEE/xED/xF4/xE8/xE3/xF3/xF0/xE0/xF6/xE8/xE8/x2E /xC2 /xF7/xE0/xF1/xF2/xED/xEE/xF1/xF2/xE8/x2C /xEF/xF0/xE8 /xE4/xE2/xF3/xF5 /xED/xE5/xEA /xEE/xEC/x2D
/xEF/xEB/xE0/xED/xE0/xF0/xED/xFB/xF5 /xEC/xE0/xF5 /xEE/xE2/xE8/xEA /xE0/xF5 /xED/xE5/xE2/xEE/xE7/xEC/xEE /xE6/xED/xEE /xF2 /xE0/xEA /xEE/xE5 /xE4/xE2/xE8/xE6 /xE5/xED/xE8/xE5 /xE8/xE7 /xF1/xEE/xF1/xF2/xEE /xFF/xED/xE8/xE5 /xEF/xEE/xEA /xEE /xFF/x2C /xF7/xF2/xEE
/xF3/xE3 /xEB/xEE/xE2/xE0/xFF /xF1/xEA /xEE/xF0/xEE/xF1/xF2/xFC /xED/xE0/xEF/xF0/xE0/xE2/xEB/xE5/xED/xE0 /xEF/xEE /xED/xEE/xF0/xEC/xE0/xEB/xE8 /xEA /xEF/xEB/xEE/xF1/xEA /xEE/xF1/xF2/xE8 /xFD/xF2/xE8/xF5 /xEC/xE0/xF5 /xEE/xE2/xE8/xEA /xEE/xE2/x2E /xC4/xEB/xFF
/xF0/xE5/xE0/xEB/xE8/xE7/xE0/xF6/xE8/xE8 /xEF/xEE /xE4/xEE/xE1/xED/xEE/xE3/xEE /xE4/xE2/xE8/xE6 /xE5/xED/xE8/xFF /xED/xE5/xEE/xE1 /xF5 /xEE /xE4/xE8/xEC/xEE /xF1/xED/xE0 /xF7/xE0/xEB/xE0 /xE8/xE7/xEC/xE5/xED/xE8/xF2/xFC /xEA /xEE/xED/xF4/xE8/xE3/xF3/xF0/xE0/x2D
/xF6/xE8/xFE /xF1/xF4/xE5/xF0/xFB/x2E
/xC4/xE0/xEB/xE5/xE5/x2C /xE4/xEB/xFF /xE7/xE0/xEC/xFB/xEA /xE0/xED/xE8/xFF /xF1/xE8/xF1/xF2/xE5/xEC/xFB/x2C /xED/xE5/xEE/xE1 /xF5 /xEE /xE4/xE8/xEC/xEE /xE7/xE0/xE4/xE0/xF2/xFC /xF3 /xF1/xEB/xEE/xE2/xE8/xFF /xEA /xEE/xED/xF2 /xE0/xEA/xF2/xED/xEE/xE3/xEE
/xE2/xE7/xE0/xE8/xEC/xEE /xE4/xE5/xE9/xF1/xF2/xE2/xE8/xFF /xEC/xE5/xE6/xE4/xF3 /xF1/xF4/xE5/xF0/xE8/xF7/xE5/xF1/xEA /xEE/xE9 /xEF/xEE/xE2/xE5/xF0 /xF5/xED/xEE/xF1/xF2/xFC/xFE /xF0/xEE/xE1/xEE/xF2 /xE0 /xE8 /xEE/xEF/xEE/xF0/xED/xEE/xE9 /xEF/xEB/xEE/xF1/x2D
/xEA /xEE/xF1/xF2/xFC/xFE/x2E /xCF/xF0/xE8/xED/xE8/xEC/xE0/xFF /xE2/xEE /xE2/xED/xE8/xEC/xE0/xED/xE8/xE5/x2C /xF7/xF2/xEE =0−b[ez;f] /x2C /xE3 /xE4/xE5b=3^MR2
ma2 /x2C0/x15
/xE4/xEE/xEF/xEE/xEB/xED/xE8/xF2/xE5/xEB/xFC/xED/xEE /xE2/xEE/xE7/xED/xE8/xEA /xE0/xFE/xF9/xE8/xE5 /xEC/xEE/xEC/xE5/xED/xF2/xFB /xE2 /xEA /xEE/xED/xF2 /xE0/xEA/xF2/xE5/x2C /xE0 /xF2 /xE0/xEA/xE6 /xE5 /xF3/xF0/xE0/xE2/xED/xE5/xED/xE8/xE5 /xED/xE0 /xE8/xEC/x2D
/xEF/xF3 /xEB/xFC/xF1/x2C /xEC/xEE /xE6/xED/xEE /xEE/xF2/xEC/xE5/xF2/xE8/xF2/xFC /xF7/xF2/xEE /xE2/xE5/xF0/xED/xEE /xF1/xEB/xE5/xE4/xF3/xFE/xF9/xE5/xE5 /xF3/xF2/xE2/xE5/xF0 /xE6/xE4/xE5/xED/xE8/xE5/x3A
/xD3/xF2/xE2/xE5/xF0 /xE6/xE4/xE5/xED/xE8/xE5 /x31/x2E/x31
/xC5/xF1 /xEB/xE8 0= 0 /x2C /xF2/xEE /xF1/xE8/xF1/xF2/xE5 /xEC/xE0 /xF3/xF0 /xE0/xE2/xED/xE5/xED/xE8/xE9 /xE4/xEE/xEF/xF3/xF1/xEA/xE0/xE5/xF2 /xF2/xF0/xE8 /xEF/xE5/xF0/xE2/xFB/xF5 /xE8/xED/xF2/xE5/xE3/xF0 /xE0/xEB/xE0 /xEA/xE8/x2D
/xED/xE5/xF2/xE8/xF7/xE5/xF1/xEA/xEE/xE3/xEE /xEC/xEE /xEC/xE5/xED/xF2/xE0 /xEE/xF2/xED/xEE/xF1/xE8/xF2/xE5 /xEB/xFC/xED/xEE /xF2/xEE/xF7/xEA/xE8 /xEA/xEE/xED/xF2/xE0/xEA/xF2/xE0 /x2E
/xC2 /xF7/xE0/xF1/xF2/xED/xEE/xF1/xF2/xE8/x2C /xFD/xF2/xEE /xF3/xF2/xE2/xE5/xF0 /xE6/xE4/xE5/xED/xE8/xE5 /xE2/xFB/xEF/xEE/xEB/xED/xFF/xE5/xF2/xF1 /xFF /xE4/xEB/xFF /xF2 /xE0/xEA/xE8/xF5 /xF2/xE8/xEF/xEE/xE2 /xEA /xEE/xED/xF2 /xE0/xEA/xF2/xED/xEE/x2D
/xE3/xEE /xE2/xE7/xE0/xE8/xEC/xEE /xE4/xE5/xE9/xF1/xF2/xE2/xE8/xFF /xEA /xE0/xEA /xE4/xE2/xE8/xE6 /xE5/xED/xE8/xE5 /xEF/xEE /xE0/xE1/xF1/xEE/xEB/xFE/xF2/xED/xEE /xE3 /xEB/xE0/xE4/xEA /xEE/xE9 /xEF/xEB/xEE/xF1/xEA /xEE/xF1/xF2/xE8/x2C /xE4/xE2/xE8/xE6 /xE5/xED/xE8/xE5
/xEF/xEE /xE0/xE1/xF1/xEE/xEB/xFE/xF2/xED/xEE /xF8/xE5/xF0/xEE /xF5 /xEE/xE2/xE0/xF2/xEE/xE9 /xEF/xEB/xEE/xF1/xEA /xEE/xF1/xF2/xE8 /x28/xED/xE5/xE3/xEE/xEB/xEE/xED/xEE/xEC/xED/xE0/xFF /xEC/xEE /xE4/xE5/xEB/xFC/x29/x2C /xE0 /xF2 /xE0/xEA/xE6 /xE5 /xE4/xEB/xFF
/xE7/xE0/xEA /xEE/xED/xEE/xE2 /xE2/xFF/xE7/xEA /xEE/xE3/xEE /xF2/xF0/xE5/xED/xE8/xFF /xE8 /xF1/xF3/xF5 /xEE/xE3/xEE /xF2/xF0/xE5/xED/xE8/xFF /xCA/xF3 /xEB/xEE/xED/xE0/x2E
/x32/x2E/x32 /xC4/xE2/xF3/xF5/xEF/xE0/xF0/xE0/xEC/xE5/xF2/xF0/xE8/xF7/xE5/xF1/xEA /xE0/xFF /xEC/xEE /xE4/xE5/xEB/xFC /xF2/xF0/xE5/xED/xE8/xFF
/xD0 /xE5/xE0/xEB/xFC/xED/xFB/xE5 /xFD/xEA /xF1/xEF/xE5/xF0/xE8/xEC/xE5/xED/xF2/xFB /xEF/xEE/xEA /xE0/xE7/xFB/xE2/xE0/xFE/xF2 /xED/xE0/xEB/xE8/xF7/xE8/xE5 /xEF/xFF/xF2/xED/xE0 /xEA /xEE/xED/xF2 /xE0/xEA/xF2 /xE0 /xEC/xE5/xE6/xE4/xF3 /xF1/xF4/xE5/x2D
/xF0/xE8/xF7/xE5/xF1/xEA /xEE/xE9 /xEF/xEE/xE2/xE5/xF0 /xF5/xED/xEE/xF1/xF2/xFC/xFE /xF0/xEE/xE1/xEE/xF2 /xE0 /xE8 /xEE/xEF/xEE/xF0/xED/xEE/xE9 /xEF/xEB/xEE/xF1/xEA /xEE/xF1/xF2/xFC/xFE/x2E /xCD/xE0/xE8/xE1/xEE/xEB/xE5/xE5 /xEF/xF0/xE0/xE2/xE4/xEE/xEF/xEE/x2D
/xE4/xEE/xE1/xED/xEE /xEF/xF0/xE5/xE4/xEF/xEE/xEB/xEE /xE6 /xE5/xED/xE8/xE5/x2C /xF7/xF2/xEE /xEE/xED/xEE /xEF/xF0/xE5/xE4/xF1/xF2 /xE0/xE2/xEB/xFF/xE5/xF2 /xF1/xEE/xE1/xEE/xE9 /xF1/xF4/xE5/xF0/xE8/xF7/xE5/xF1/xEA/xE8/xE9 /xF1/xE5/xE3/xEC/xE5/xED/xF2 /x2E /xD1/xEE/x2D
/xE3 /xEB/xE0/xF1/xED/xEE /x5B/x35/x5D/x2C/x5B/x36/x5D /xE2 /xEA /xE0/xE6/xE4/xEE/xE9 /xF2/xEE/xF7/xEA /xE5 /xFD/xF2/xEE/xE3/xEE /xF1/xE5/xE3/xEC/xE5/xED/xF2 /xE0 /xE2/xFB/xEF/xEE/xEB/xED/xE5/xED /xEB/xEE/xEA /xE0/xEB/xFC/xED/xEE /xE7/xE0/xEA /xEE/xED /xF1/xF3/xF5 /xEE/xE3/xEE
/xF2/xF0/xE5/xED/xE8/xFF /xCA/xF3 /xEB/xEE/xED/xE0/x2E /xCF/xF3 /xF1/xF2/xFC /xF0/xE0/xE4/xE8/xF3 /xF1 /xF1/xF4/xE5/xF0/xFB/x2C /xE7/xE0/xE4/xE0/xFE/xF9/xE5/xE9 /xFD/xF2/xEE/xF2 /xF1/xE5/xE3/xEC/xE5/xED/xF2/x16 Rf /x2C /xE0 /xF0/xE0/xE4/xE8/xF3 /xF1
/xF1/xE5/xE3/xEC/xE5/xED/xF2 /xE0/x16 Rs /x2ER /x16/xEF/xEE/x2D/xEF/xF0/xE5/xE6/xED/xE5/xEC/xF3 /xF0/xE0/xE4/xE8/xF3 /xF1 /xF8/xE0/xF0/xE0/x2E /xD2 /xE0/xEA/xE8/xEC /xEE/xE1/xF0/xE0/xE7/xEE/xEC/x2C /xEF/xFF/xF2/xED/xEE /xEA /xEE/xED/xF2 /xE0/xEA/xF2 /xE0
/xE7/xE0/xE2/xE8/xF1/xE8/xF2 /xEE/xF2 /xE4/xE2/xF3/xF5 /xEF/xE0/xF0/xE0/xEC/xE5/xF2/xF0/xEE/xE2 δ=R
Rf/xE8ε=Rs
R/x2E /xCF/xEE/xEB/xF3/xF7/xE5/xED/xED/xFB/xE5 /xE2 /x5B/x35/x5D/x2C/x5B/x36/x5D /xE2/xFB/xF0/xE0/xE6 /xE5/xED/xE8/xFF
/x36/xE4/xEB/xFF /xF1/xE8/xEB /xE8 /xEC/xEE/xEC/xE5/xED/xF2/xEE/xE2 /x3A
fi=−3kN
4π(1−cosβ0)3=2ˆMR0∫
0B(β)Iuidβ
µ0
i=−3kbN
4π(1−cosβ0)3=2δˆMR0∫
0B(β)Iwidβ
Iui=2∫
0ui
||u||dα
Iwi=2∫
0wi
||u||dα
B(β) =√
cosβ−cosβ0sinβ
µ=µ0−b[ez;f]
/xC7/xE4/xE5/xF1/xFC
uI=u(1−sin2βcos2α) +δ−1(ωIsin2βsinαcosα+ωII(1−cosβ−
−sin2βcos2α)−ωIIIsinβsinα)
uII=−usin2βsinαcosα−δ−1(ωIIsin2βsinαcosα+ωI(1−cosβ−
−sin2βsin2α) +ωIIIsinβcosα)
uIII=usinβcosβcosα+δ−1sinβ(1−cosβ)(ωIsinα−ωIIcosα)
wI=usin2βsinαcosα+δ−1(ωI(1−cosβ)2−ωIII(1−cosβ) sinβcosα)
wII=u(1−cosβ−sin2βcos2α) +δ−1(ωII(1−cosβ)2−
−ωIII(1−cosβ) sinβsinα)
wIII= sinβ(−usinα+δ−1(−(1−cosβ)(ωIcosα+ωIIsinα) +ωIIIsinβ))
/xC7/xE4/xE5/xF1/xFCg /x16/xF3 /xF1/xEA /xEE/xF0/xE5/xED/xE8/xE5 /xF1/xE2/xEE/xE1/xEE /xE4/xED/xEE/xE3/xEE /xEF/xE0/xE4/xE5/xED/xE8/xFF/x2C N /x15/xF1/xE8/xEB/xE0 /xED/xEE/xF0/xEC/xE0/xEB/xFC/xED/xEE/xE9 /xF0/xE5/xE0/xEA/xF6/xE8/xE8 /xEE/xEF/xEE/x2D
/xF0/xFB/x2Cu /x16/xF1/xEA /xEE/xF0/xEE/xF1/xF2/xFC /xF1/xEA /xEE/xEB/xFC/xE6 /xE5/xED/xE8/xFF /xF8/xE0/xF0/xE0/x2C /xE4/xE5/xEB/xE5/xED/xED/xE0/xFF /xED/xE0 /xE5/xE3/xEE /xF0/xE0/xE4/xE8/xF3 /xF1/x2C /xEE/xF1/xFC /x31 /xED/xE0/xEF/xF0/xE0/xE2/xEB/xE5/xED/xE0
/xEF/xEE /xF1/xEA /xEE/xF0/xEE/xF1/xF2/xE8 /xF1/xEA /xEE/xEB/xFC/xE6 /xE5/xED/xE8/xFF/x2C /xEE/xF1/xFC /x33 /xE2/xE5/xF0/xF2/xE8/xEA /xE0/xEB/xFC/xED/xE0/x2C /xE0 /xEE/xF1/xFC /x32 /xE4/xEE/xEF/xEE/xEB/xED/xFF/xE5/xF2 /xF0/xE5/xEF/xE5/xF0 /xE4/xEE /xEF/xF0/xE0/x2D
/xE2/xEE/xE9 /xF2/xF0/xEE/xE9/xEA/xE8/x2E /xDD/xF2/xEE/xF2 /xE1/xE0/xE7/xE8/xF1 /xE2 /xE4/xE0/xEB/xFC/xED/xE5/xE9/xF8/xE5/xEC /xE1/xF3 /xE4/xE5/xEC /xE8/xEC/xE5/xED/xEE/xE2/xE0/xF2/xFC /xE2/xF1/xEF/xEE /xEC/xEE/xE3/xE0/xF2/xE5 /xEB/xFC/xED/xFB/xEC /x2C /xE0
/xE2/xE5/xEA/xF2/xEE/xF0/xE0 /xE2 /xED/xE5/xEC /xE8/xED/xE4/xE5/xEA /xF1/xE8/xF0/xEE/xE2/xE0/xF2/xFC /xF0/xE8/xEC/xF1/xEA/xE8/xEC/xE8 /xF6/xE8/xF4/xF0/xE0/xEC/xE8 /xE2/xEE /xE8/xE7/xE1/xE5/xE6 /xE0/xED/xE8/xE5 /xEF/xF3/xF2 /xE0/xED/xE8/xF6/xFB /xF1
/xD1/xCA /xE6 /xE5/xF1/xF2/xEA /xEE /xF1/xE2/xFF/xE7/xE0/xED/xEE/xE9 /xF1 /xF0/xEE/xE1/xEE/xF2/xEE/xEC/x2E Ω /x16/xE2/xE5/xEA/xF2/xEE/xF0 /xF3/xE3 /xEB/xEE/xE2/xEE/xE9 /xF1/xEA /xEE/xF0/xEE/xF1/xF2/xE8 /xE2 /xFD/xF2/xEE/xE9 /xD1/xCA /x28/xF2 /xE0/xEA/xE8/xEC
/xEE/xE1/xF0/xE0/xE7/xEE/xEC/x2CωIII≡ωz /x29/x2E /xC4/xE0/xEB/xE5/xE5/x2C sinβ0=Rs
Rf/x2Ck /x16/xEA /xEE/xFD/xF4/xF4/xE8/xF6/xE8/xE5/xED/xF2 /xF2/xF0/xE5/xED/xE8/xFF/x2E
/xD0 /xE0/xE7/xE2/xE8/xE2/xE0/xFF /xE8/xE4/xE5/xFE/x2C /xEF/xF0/xE5/xE4/xEB/xEE /xE6 /xE5/xED/xED/xF3/xFE /xE2 /x5B/x37/x5D/x2C /xE7/xE0/xEC/xE5/xF2/xE8/xEC/x2C /xF7/xF2/xEE /xE5/xF1/xEB/xE8 /xEF/xE5/xF0/xE5/xE9/xF2/xE8 /xEA /xF1/xF4/xE5/xF0/xE8/x2D
/x37/xF7/xE5/xF1/xEA/xE8/xEC /xEA /xEE/xEE/xF0 /xE4/xE8/xED/xE0/xF2 /xE0/xEC r,θ 1,θ2,θ3 /x3A
δu=rcosθ1
ωI=rsinθ1cosθ2
ωII=rsinθ1sinθ2cosθ3
ωIII=rsinθ1sinθ2sinθ3
/xF2/xEE /xF4/xF3/xED/xEA/xF6/xE8/xE8 f /xE8µ /xED/xE5 /xE7/xE0/xE2/xE8/xF1 /xFF/xF2 /xEE/xF2 /xF0/xE0/xE4/xE8/xF3 /xF1/xE0 /xF1/xF4/xE5/xF0 r /x2E /xD3/xE3 /xEB/xEE/xE2/xFB/xE5 /xEF/xE5/xF0/xE5/xEC/xE5/xED/xED/xFB/xE5 θk /xF5 /xE0/x2D
/xF0/xE0/xEA/xF2/xE5/xF0/xE8/xE7/xF3/xFE/xF2 /xEE/xF2/xED/xEE/xF8/xE5/xED/xE8/xFF /xEC/xE5/xE6/xE4/xF3 /xF1/xEA /xEE/xEB/xFC/xE6 /xE5/xED/xE8/xE5/xEC/x2C /xEA /xE0 /xF7/xE5/xED/xE8/xE5/xEC/x2C /xE2/xE5/xF0/xF7/xE5/xED/xE8/xE5/xEC /xE8 /xE7/xE0/xEA/xF0/xF3/x2D
/xF7/xE8/xE2/xE0/xED/xE8/xE5/xEC/x2C /xEF/xEE/xFD/xF2/xEE/xEC/xF3 /xE2 /xE4/xE0/xEB/xFC/xED/xE5/xE9/xF8/xE5/xEC /xEE/xED/xE8 /xE1/xF3 /xE4/xF3/xF2 /xED/xE0/xE7/xFB/xE2/xE0/xF2/xFC/xF1 /xFF /xF0/xE5/xE6/xE8/xEC/xED/xFB/xEC/xE8 /xF3/xE3/xEB/xE0/xEC/xE8 /x2E
/xD2 /xE0/xEA/xE8/xEC /xEE/xE1/xF0/xE0/xE7/xEE/xEC/x2C /xE1/xF3 /xE4/xE5/xEC /xF1/xF7/xE8/xF2 /xE0/xF2/xFC /xF4/xF3/xED/xEA/xF6/xE8/xE8 f /xE8µ /xEE/xEF/xF0/xE5/xE4/xE5/xEB/xE5/xED/xED/xFB/xEC/xE8 /xED/xE0 /xE5/xE4/xE8/xED/xE8/xF7/xED/xEE/xE9
/xF2/xF0/xE5/xF5/xEC/xE5/xF0/xED/xEE/xE9 /xF1/xF4/xE5/xF0/xE5 S3/x2E /xCF/xF0/xE8/xED/xE8/xEC/xE0/xFF /xE2/xEE /xE2/xED/xE8/xEC/xE0/xED/xE8/xE5 /xE7/xE0/xE2/xE8/xF1/xE8/xEC/xEE/xF1/xF2/xFC /xEE/xF2 /xEF/xE0/xF0/xE0/xEC/xE5/xF2/xF0/xEE/xE2 /xEF/xFF/xF2/x2D
/xED/xE0 /xEA /xEE/xED/xF2 /xE0/xEA/xF2 /xE0 (δ;ε) /x2C /xF1/xF2/xEE/xE8/xF2 /xEE/xF2/xEC/xE5/xF2/xE8/xF2/xFC/x2C /xF7/xF2/xEE /xE3 /xEB/xE0/xE4/xEA /xEE/xF1/xF2/xFC /xEF/xEE /xEF/xE5/xF0/xE2/xEE/xEC/xF3 /xEF/xE0/xF0/xE0/xEC/xE5/xF2/xF0/xF3 /xE8
/xED/xE5/xE3 /xEB/xE0/xE4/xEA /xEE/xF1/xF2/xFC /xEF/xEE /xE2/xF2/xEE/xF0/xEE/xEC/xF3 /xE1/xFB/xEB/xE0 /xE4/xEE/xEA /xE0/xE7/xE0/xED/xE0 /xE2 /x5B/x35/x5D/x2E
/xC4/xEB/xFF /xF1/xEB/xF3/xF7/xE0/xFF δ= 0 /xE2/xFB/xF0/xE0/xE6 /xE5/xED/xE8/xFF /xEF/xF0/xE8/xEC/xF3/xF2 /xED/xE5/xF1/xEA /xEE/xEB/xFC/xEA /xEE /xE8/xED/xEE/xE9 /xE2/xE8/xE4 /xE8 /xF1/xEE/xEE/xF2/xE2/xE5/xF2/xF1/xF2/xE2/xF3/xFE/xF2
/xEC/xEE /xE4/xE5/xEB/xE8 /xCA/xEE/xED/xF2/xE5/xED/xF1/xF3/x2D/xC6/xF3/xF0/xE0/xE2/xEB/xE5/xE2/xE0 /x5B/x38/x5D/x2E /xD1/xEB/xF3/xF7/xE0/xE9 ε= 0 /xF1/xEE/xEE/xF2/xE2/xE5/xF2/xF1/xE2/xF3 /xE5/xF2 /xEC/xEE /xE4/xE5/xEB/xE8 /xCA/xF3 /xEB/xEE/xED/xE0/x2C
/xF7/xF2/xEE /xF0/xE0/xE7/xEE/xE1/xF0/xE0/xED/xEE /xE2 /x5B/x34/x5D/x2E /xC4/xE0/xEB/xE5/xE5/x2C /xE5/xF1/xEB/xE8 /xED/xE5 /xEE/xE3/xEE/xE2/xEE/xF0/xE5/xED/xEE /xEF/xF0/xEE/xF2/xE8/xE2/xED/xEE/xE5/x2C /xF0/xE0/xF1/xF1/xEC/xE0/xF2/xF0/xE8/xE2/xE0/xE5/xF2/xF1 /xFF
/xEA /xEE/xE3 /xE4/xE0εδ̸= 0 /x2E
/x32/x2E/x33 /xCF/xEE/xE2/xEE/xF0/xEE/xF2 /xF0/xEE/xE1/xEE/xF2 /xE0 /xED/xE0 /xEC/xE5/xF1/xF2/xE5
/xCF/xE5/xF0/xE5/xE9/xE4/xE5/xEC /xEA /xEF/xEE/xF1/xF2/xF0/xEE/xE5/xED/xE8/xFE /xE0/xEB/xF4/xE0/xE2/xE8/xF2/xED/xFB/xF5 /xE4/xE2/xE8/xE6 /xE5/xED/xE8/xE9 /xF0/xEE/xE1/xEE/xF2 /xE0/x2E /xC4/xEB/xFF /xED/xE0 /xF7/xE0/xEB/xE0/x2C /xF0/xE0/xF1/x2D
/xF1/xEC/xEE/xF2/xF0/xE8/xEC /xF1/xEB/xF3/xF7/xE0/xE9/x2C /xEA /xEE/xE3 /xE4/xE0 /xF6/xE5/xED/xF2/xF0 /xEC/xE0/xF1/xF1 /xE0/xEF/xEF/xE0/xF0/xE0/xF2 /xE0 /xED/xE5/xEF/xEE /xE4/xE2/xE8/xE6 /xE5/xED/x2C /xE0 /xF8/xE0/xF0 /xF1/xEE/xE2/xE5/xF0/xF8/xE0/xE5/xF2
/xE2/xF0/xE0/xF9/xE5/xED/xE8/xE5 /xE2/xEE/xEA/xF0/xF3/xE3 /xE2/xE5/xF0/xF2/xE8/xEA /xE0/xEB/xE8/x2E /xC4/xEB/xFF /xF0/xE5/xE6/xE8/xEC/xED/xFB/xF5 /xF3/xE3 /xEB/xEE/xE2 /xE2 /xFD/xF2/xEE/xEC /xF1/xEB/xF3/xF7/xE0/xE5 /xE2/xE5/xF0/xED/xEE/x2C /xF7/xF2/xEE{θ2=π/2
θ3=π/2.
/xD2 /xE0/xEA/xE8/xEC /xEE/xE1/xF0/xE0/xE7/xEE/xEC/x2C /xE2/xEE/xE7/xED/xE8/xEA /xE0/xE5/xF2 /xF0/xE5/xE6/xE8/xEC /xF7/xE8/xF1/xF2/xEE/xE3/xEE /xE2/xE5/xF0/xF7/xE5/xED/xE8/xFF/x2C /xE3 /xE4/xE5 /xE2/xF1/xE5 /xEA /xEE/xEC/xEF/xEE/xED/xE5/xED/xF2/xFB /xF1/xE8/xEB /xE8
/xEC/xEE/xEC/xE5/xED/xF2/xEE/xE2/x2C /xEA/xF0/xEE/xEC/xE5 µz /xF0/xE0/xE2/xED/xFB /xED/xF3 /xEB/xFE/x2E /xCC/xEE/xEC/xE5/xED/xF2 /xF2/xF0/xE5/xED/xE8/xFF /xE2/xE5/xF0/xF7/xE5/xED/xE8/xFF µz=µ0
z=const =
µ
µz=−3kgb
2R(1−cosβ0)3=20∫
0√
cosβ−cosβ0sin2βdβ
/xE2/xF1/xEB/xE5/xE4/xF1/xF2/xE2/xE8/xE5 /xF7/xE5/xE3/xEE /xEC/xEE /xE6/xED/xEE /xE2/xFB/xEF/xE8/xF1/xE0/xF2/xFC /xEF/xF0/xEE/xE8/xED/xF2/xE5/xE3/xF0/xE8/xF0/xEE/xE2/xE0/xED/xED/xEE/xE5 /xF3/xF0/xE0/xE2/xED/xE5/xED/xE8/xE5 /xED/xE0 /xEA/xE8/xED/xE5/xF2/xE8/x2D
/xF7/xE5/xF1/xEA/xE8/xE9 /xEC/xEE/xEC/xE5/xED/xF2/x3A
=1
c(µtE−ω(t)I)e
/xC3 /xE4/xE5e /x15/xED/xE5/xEF/xEE /xE4/xE2/xE8/xE6/xED/xFB/xE9 /xE5/xE4/xE8/xED/xE8/xF7/xED/xFB/xE9 /xE2/xE5/xEA/xF2/xEE/xF0 /xE2/xE5/xF0/xF2/xE8/xEA /xE0/xEB/xE8 /xE2 /xEF/xEE /xE4/xE2/xE8/xE6/xED/xEE/xE9 /xF1/xE8/xF1/xF2/xE5/xEC/xE5
/xEA /xEE/xEE/xF0 /xE4/xE8/xED/xE0/xF2 /x2E /xD1/xF7/xE8/xF2 /xE0/xFF/x2C /xF7/xF2/xEE /xEC/xE0/xF5 /xEE/xE2/xE8/xEA/xE8 /xEF/xF0/xE8/xE2/xEE /xE4/xFF/xF2/xF1 /xFF /xE2 /xE4/xE2/xE8/xE6 /xE5/xED/xE8/xE5 /xFD/xEB/xE5/xEA/xF2/xF0/xEE /xE4/xE2/xE8/xE3 /xE0/x2D
/xF2/xE5/xEB/xFF/xEC/xE8 /xEF/xEE/xF1/xF2/xEE /xFF/xED/xED/xEE/xE3/xEE /xF2/xEE/xEA /xE0 /x28/xF2 /x2E/xE5/x2E c˙αi={iUi−{2αi /x2C /xE3 /xE4/xE5U /x15/xF0/xE0/xE7/xEC/xE5/xF0/xED/xEE/xE5 /xED/xE0/xEF/xF0 /xFF/x2D
/xE6 /xE5/xED/xE8/xE5/x2C /xE0 {1;2 /x15/xEF/xEE/xF1/xF2/xEE /xFF/xED/xED/xFB/xE5 /xFD/xEB/xE5/xEA/xF2/xF0/xEE /xE4/xE2/xE8/xE3 /xE0/xF2/xE5/xEB/xE5/xE9 /xF1 /xF3/xF7/xE5/xF2/xEE/xEC /xEE/xE1/xE5/xE7/xF0/xE0/xE7/xEC/xE5/xF0/xE8/xE2/xE0/xED/xE8/xFF/x29/x2C
/xEF/xF0/xE8/xE2/xE5/xE4/xE5/xEC /xE3/xF0/xE0/xF4/xE8/xEA/xE8 /xF3/xEF/xF0/xE0/xE2/xEB/xFF/xFE/xF9/xE8/xF5 /xED/xE0/xEF/xF0 /xFF/xE6 /xE5/xED/xE8/xE9 /xE4/xEB/xFF /xEF/xEE/xE2/xEE/xF0/xEE/xF2 /xE0 /xED/xE0 /xF3/xE3/xEE/xEB π/2 /xE7/xE0
/xE2/xF0/xE5/xEC/xFF 2T /xE2 /xF1/xEB/xF3/xF7/xE0/xE5 /xF2/xF0/xE5/xF3/xE3/xEE/xEB/xFC/xED/xEE/xE3/xEE /xEF/xF0/xEE/xF4/xE8/xEB/xFF /xF3/xE3 /xEB/xEE/xE2/xEE/xE9 /xF1/xEA /xEE/xF0/xEE/xF1/xF2/xE8 /xE2/xE5/xF0/xF7/xE5/xED/xE8/xFF/x2E /x28/xD2 /x2E/xE5/x2E
/x38!(t) =E(T− |t−T|) /x2C /xE3 /xE4/xE5E /x15/xEF/xEE/xF1/xF2/xEE /xFF/xED/xED/xEE/xE5 /xEF/xEE /xEC/xEE /xE4/xF3 /xEB/xFE /xF3/xE3 /xEB/xEE/xE2/xEE/xE5 /xF3 /xF1/xEA /xEE/xF0/xE5/xED/xE8/xE5 /xF0/xE0/xE2/xED/xEE/xE5π
2T2/x2E /xC1/xF3 /xE4/xE5/xEC /xE1/xF0/xE0/xF2/xFC /xED/xE0 /xF7/xE0/xEB/xFC/xED/xFB/xE5 /xF3 /xF1/xEB/xEE/xE2/xE8/xFF /xED/xF3 /xEB/xE5/xE2/xFB/xEC/xE8 /xEF/xEE /xF1/xEA /xEE/xF0/xEE/xF1/xF2 /xFF/xEC/x2E
/xC4/xEB/xFF /xE2/xE5/xEA/xF2/xEE/xF0/xE0 e= (1/√
3; 1/√
3; 1/√
3) /xE8/xEC/xE5/xE5/xEC/x2C /xF7/xF2/xEE /xE2/xF1/xE5 /xEA /xEE/xEC/xEF/xEE/xED/xE5/xED/xF2/xFB /xE2/xE5/xEA/xF2/xEE/xF0/xE0
/xEE /xE4/xE8/xED/xE0/xEA /xEE/xE2/xFB/x2E /xC4/xEB/xFF /xED/xE8/xF5 /xE3/xF0/xE0/xF4/xE8/xEA/xE8 /xF2 /xE0/xEA /xEE/xE2/xFB/x3A
00.5 11.5 22.5 33.5 4−13.6−13.4−13.2−13−12.8−12.6−12.4−12.2−12−11.8−11.6
tU
/xD0/xE8/xF1/x2E /x32/x3A /xD3/xEF/xF0/xE0/xE2/xEB/xFF/xFE/xF9/xE8/xE5 /xED/xE0/xEF/xF0 /xFF/xE6 /xE5/xED/xE8/xFF /xE4/xEB/xFF e= (1/√
3; 1/√
3; 1/√
3) /x2E
/xC4/xEB/xFF /xE2/xE5/xEA/xF2/xEE/xF0/xE0 e= (1/√
2;−1/√
2; 0) /x2C /xE8 /xE4/xEB/xFF /xED/xE5/xF1/xEE/xE1/xF1/xF2/xE2/xE5/xED/xED/xEE/xE3/xEE /xE2/xE5/xEA/xF2/xEE/xF0/xE0 e=
(1; 0; 0) /xE8/xEC/xE5/xE5/xEC /xF1/xEB/xE5/xE4/xF3/xFE/xF9/xF3/xFE /xEA /xE0/xF0/xF2/xE8/xED/xF3/x3A
00.5 11.5 22.5 33.5 4−20−15−10−505101520
tU
  
U1
U2
U3
/xD0/xE8/xF1/x2E /x33/x3A /xD3/xEF/xF0/xE0/xE2/xEB/xFF/xFE/xF9/xE8/xE5 /xED/xE0/xEF/xF0 /xFF/xE6 /xE5/xED/xE8/xFF /xE4/xEB/xFF e= (1/√
2;−1/√
2; 0) /x2E
/xCE/xF2/xEC/xE5/xF2/xE8/xEC/x2C /xF7/xF2/xEE /xE2/xE5/xEB/xE8/xF7/xE8/xED/xF3 µ /xE2 /xE4/xE0/xED/xED/xEE/xEC /xF1/xEB/xF3/xF7/xE0/xE5 /xEC/xEE /xE6/xED/xEE /xE8/xED/xF2/xE5/xF0/xEF/xF0/xE5/xF2/xE8/xF0/xEE/xE2/xE0/xF2/xFC /xEA /xE0/xEA
/xEC/xEE/xEC/xE5/xED/xF2 /xF2/xF0/xE5/xED/xE8/xFF /xEF/xEE/xEA /xEE /xFF/x2C /xEA /xEE/xF2/xEE/xF0/xFB/xE9 /xED/xF3/xE6/xED/xEE /xEF/xF0/xE5/xEE /xE4/xEE/xEB/xE5/xF2/xFC/x2C /xF7/xF2/xEE/xE1/xFB /xED/xE0 /xF7/xE0/xF2/xFC /xE4/xE2/xE8/xE6 /xE5/xED/xE8/xE5/x2E
/xCF/xEE/xE2/xE5/xF0 /xF5/xED/xEE/xF1/xF2/xFC µ(δ,ε) /x2C /xEF/xEE/xEA /xE0/xE7/xFB/xE2/xE0/xFE/xF9/xE0/xFF /xE7/xE0/xE2/xE8/xF1/xE8/xEC/xEE/xF1/xF2/xFC /xFD/xF2/xEE/xE3/xEE /xEC/xEE/xEC/xE5/xED/xF2 /xE0 /xEE/xF2 /xE7/xED/xE0 /xF7/xE5/xED/xE8/xE9
/xEF/xE0/xF0/xE0/xEC/xE5/xF2/xF0/xEE/xE2 /xEF/xFF/xF2/xED/xE0 /xEA /xEE/xED/xF2 /xE0/xEA/xF2 /xE0 /xEF/xEE/xEA /xE0/xE7/xE0/xED/xE0 /xED/xE0 /xF0/xE8/xF1/xF3/xED/xEA /xE5/x2E /xCC/xEE /xE6/xED/xEE /xF1 /xE4/xE5/xEB/xE0/xF2/xFC /xE2/xFB/xE2/xEE /xE4/x2C /xF7/xF2/xEE
/x3900.5 11.5 22.5 33.5 4−25−20−15−10−505
tU/xD0/xE8/xF1/x2E /x34/x3A /xD3/xEF/xF0/xE0/xE2/xEB/xFF/xFE/xF9/xE8/xE5 /xED/xE0/xEF/xF0 /xFF/xE6 /xE5/xED/xE8/xFF /xE4/xEB/xFF /xE2/xE5/xEA/xF2/xEE/xF0/xE0 e= (1; 0; 0)
/xE2/xEB/xE8/xFF/xED/xE8/xE5 /xED/xE0 /xFD/xF2/xF3 /xE2/xE5/xEB/xE8/xF7/xE8/xED/xF3 /xEE/xEA /xE0/xE7/xFB/xE2/xE0/xE5/xF2 /xF2/xEE/xEB/xFC/xEA /xEE /xEF/xE0/xF0/xE0/xEC/xE5/xF2/xF0 δ /x2C /xF5 /xE0/xF0/xE0/xEA/xF2/xE5/xF0/xE8/xE7/xF3/xFE/xF9/xE8/xE9
/xE6 /xE5/xF1/xF2/xEA /xEE/xF1/xF2/xFC /xEF/xEB/xEE/xF1/xEA /xEE/xF1/xF2/xE8/x2E /xC2 /xE7/xE0/xEA/xEB/xFE/xF7/xE5/xED/xE8/xE8 /xEC/xEE /xE6/xED/xEE /xEE/xF2/xEC/xE5/xF2/xE8/xF2/xFC/x2C /xF7/xF2/xEE /xE5/xF1/xEB/xE8 /xEC/xE0/xF5 /xEE/xE2/xE8/xEA/xE8 /xF0/xEE/x2D
/xE1/xEE/xF2 /xE0 /xEF/xF0/xE8/xE2/xEE /xE4/xFF/xF2/xF1 /xFF /xE2 /xE4/xE2/xE8/xE6 /xE5/xED/xE8/xE5 /xE4/xE2/xE8/xE3 /xE0/xF2/xE5/xEB/xFF/xEC/xE8 /x4D/x61/x78/x6F/x6E/x2D/x52/x45/x2D/x31/x30/x2C /xF2/xEE /xF8/xE0/xF0 /xF1/xEC/xEE /xE6 /xE5/xF2 /xED/xE0/x2D
/xF7/xE0/xF2/xFC /xE4/xE2/xE8/xE6 /xE5/xED/xE8/xE5 /xEF/xEE /xEF/xEB/xEE/xF1/xEA /xEE/xF1/xF2/xE8 /xF1 δ<0.02 /x2C /xE4/xEB/xFF /xE4/xE2/xE8/xE3 /xE0/xF2/xE5/xEB/xFF /xC4/xCF/xCC/x2D/x32/x30/x2D/xCD/x32 /xEF/xEE/xF0/xEE/xE3/xEE/xE2/xEE/xE5
/xE7/xED/xE0 /xF7/xE5/xED/xE8/xE5δ= 0.03 /x2E
/xD0/xE8/xF1/x2E /x35/x3A /xCC/xEE/xEC/xE5/xED/xF2 /xF2/xF0/xE5/xED/xE8/xFF /xEF/xEE/xEA /xEE /xFF/x2E
/x32/x2E/x34 /xC4/xE2/xE8/xE6 /xE5/xED/xE8/xE5 /xF0/xEE/xE1/xEE/xF2 /xE0 /xEF/xEE /xEE/xF2/xF0/xE5/xE7/xEA/xF3
/xCF/xF3 /xF1/xF2/xFC /xE8/xEC/xE5/xE5/xF2 /xEC/xE5/xF1/xF2/xEE /xE4/xE2/xE8/xE6 /xE5/xED/xE8/xE5 /xE2/xE4/xEE/xEB/xFC /xED/xE5/xEA /xEE/xF2/xEE/xF0/xEE/xE9 /xEF/xF0 /xFF/xEC/xEE/xE9 /xEB/xE8/xED/xE8/xE8 /x28/xE1/xE5/xE7 /xEE/xE3/xF0/xE0/xED/xE8/x2D
/xF7/xE5/xED/xE8/xFF /xEE/xE1/xF9/xED/xEE/xF1/xF2/xE8/x16/xEE/xF1/xE8 Sx /xE1/xE5/xE7 /xE2/xE5/xF0/xF7/xE5/xED/xE8/xFF/x2C /xF2 /x2E/xE5/x2E ωz= 0 /x29/x2E /xC2 /xF1/xF4/xE5/xF0/xE8/xF7/xE5/xF1/xEA/xE8/xF5 /xEA /xEE/xEE/xF0 /xE4/xE8/x2D
/x31/x30/xED/xE0/xF2 /xE0/xF5 /xF0/xE5/xE6/xE8/xEC/xED/xFB/xF5 /xF3/xE3 /xEB/xEE/xE2 /xFD/xF2/xEE /xF1/xEE/xEE/xF2/xE2/xE5/xF2/xF1/xF2/xE2/xF3 /xE5/xF2 /xEE/xEA/xF0/xF3/xE6/xED/xEE/xF1/xF2/xE8{θ2=π/2
θ3= 0./xD2 /x2E/xE5/x2E /xF0/xE5/xE6/xE8/xEC
/xE4/xE2/xE8/xE6 /xE5/xED/xE8/xFF /xEF/xEE/xEB/xED/xEE/xF1/xF2/xFC/xFE /xEE/xEF/xF0/xE5/xE4/xE5/xEB/xFF/xE5/xF2/xF1 /xFF /xEB/xE8/xF8/xFC /xF3/xE3 /xEB/xEE/xEC θ1 /x2C /xEA /xEE/xF2/xEE/xF0/xFB/xE9 /xE4/xEB/xFF /xF3 /xE4/xEE/xE1/xF1/xF2/xE2/xE0 /xE1/xF3/x2D
/xE4/xE5/xEC /xEE/xE1/xEE/xE7/xED/xE0 /xF7/xE0/xF2/xFC /xEF/xF0/xEE/xF1/xF2/xEE θ /x2E
/xCF/xF0/xE8 /xF2 /xE0/xEA/xE8/xF5 /xF3 /xF1/xEB/xEE/xE2/xE8/xFF/xF5 f=fx /x2C /xE0µ=µ0
y−bfx /x28/xD0 /xE0/xE2/xE5/xED/xF1/xF2/xE2/xEE /xED/xF3 /xEB/xFE /xEE/xF1/xF2 /xE0/xEB/xFC/xED/xFB/xF5 /xEA /xEE/xEC/x2D
/xEF/xEE/xED/xE5/xED/xF2 /xE2 /xF3 /xF1/xEB/xEE/xE2/xE8/xE8 ωI= 0 /xEF/xEE/xEA /xE0/xE7/xE0/xED/xEE /xE2 /x5B/x36/x5D/x29/x2E /xC2 /xF1/xE8/xEB/xF3 /xF2/xEE/xE3/xEE/x2C /xF7/xF2/xEE f3≡0 /xE8/xEC/xE5/xE5/xEC /xE4/xEB/xFF
/xE1/xE5/xE7/xF0/xE0/xE7/xEC/xE5/xF0/xED/xEE/xE9 /xF1/xE8/xEB/xFB /xED/xEE/xF0/xEC/xE0/xEB/xFC/xED/xEE/xE3/xEE /xE4/xE0/xE2/xEB/xE5/xED/xE8/xFF n /x2C /xF2/xEE /xF7/xF2/xEEn=g
R/x28/xD7/xF2/xEE /xE2 /xF0/xE0/xE7/xEC/xE5/xF0/xED/xFB/xF5
/xEF/xE5/xF0/xE5/xEC/xE5/xED/xED/xFB/xF5 /xF1/xEE/xEE/xF2/xE2/xE5/xF2/xF1/xE2/xF3 /xE5/xF2 /xF3 /xF1/xEB/xEE/xE2/xE8/xFE N=ˆMg /x29/x2E /xC2/xFB/xF0/xE0/xE6 /xE5/xED/xE8/xFF /xE4/xEB/xFF fx /xE8µ0
y /xE1/xF3 /xE4/xF3/xF2
/xF2 /xE0/xEA/xE8/xEC/xE8/x3A
f(θ) =−3kg
4π(1−cosβ0)3=2R0∫
0B(β)Iu1dβ
Iu1=2∫
0cosθ(1−sin2βcos2α) + sinθ(1−cosβ−sin2βcos2α)
l(θ)dα
l(θ) = (cos2θ(1−sin2βcos2α) + sin2θ(1−cosβ)2+ 2 sinθcosθ×
×(1−cosβ−sin2βcos2α))1=2
/xC4/xEB/xFF /xEC/xEE/xEC/xE5/xED/xF2 /xE0 µ /x3A
µ0(θ) =−3kgb
4π(1−cosβ0)3=2δR0∫
0B(β)Iw1dβ
Iw2=2∫
0cosθ(1−cosβ−sin2βcos2α) + sinθ(1−cosβ)2
l(θ)dα
/xD3/xF0/xE0/xE2/xED/xE5/xED/xE8/xFF /xE4/xE2/xE8/xE6 /xE5/xED/xE8/xFF /xE2 /xEF/xE5/xF0/xE5/xEC/xE5/xED/xED/xFB/xF5 /x28 r,θ /x29 /xEF/xF0/xE8/xEC/xF3/xF2 /xE2/xE8/xE4/x3A
˙r(cosθ
δ+ sinθ) +r˙θ(−sinθ
δ+ cosθ) =f(θ)
( ˙rsinθ+r˙θcosθ)Ie+C˙+r2sin2θΩeIe+rsinθΩeC=µ(θ)e
/xC7/xE4/xE5/xF1/xFC
e=
d12
d22
d32

/x31/x31/x2D /xEF/xEE/xF1/xF2/xEE /xFF/xED/xED/xFB/xE9 /xE2/xE5/xEA/xF2/xEE/xF0/x2C /xEE/xEF/xE8/xF1/xFB/xE2/xE0/xFE/xF9/xE8/xE9 /xE2/xE5/xEA/xF2/xEE/xF0 ey /xE2 /xEF/xEE /xE4/xE2/xE8/xE6/xED/xEE/xE9 /xF1/xE8/xF1/xF2/xE5/xEC/xE5 /xEA /xEE/xEE/xF0/x2D
/xE4/xE8/xED/xE0/xF2 /x2C /xE0 /xEC/xE0/xF2/xF0/xE8/xF6/xE0/x2C /xFD/xEA/xE2/xE8/xE2/xE0/xEB/xE5/xED/xF2/xED/xE0/xFF /xEE/xEF/xE5/xF0/xE0/xF6/xE8/xE8 /xF3/xEC/xED/xEE /xE6 /xE5/xED/xE8/xFF /xF1/xEB/xE5/xE2/xE0 /xED/xE5 /xE5/xE4/xE8/xED/xE8/xF7/xED/xFB/xE9
/xE2/xE5/xEA/xF2/xEE/xF0 eΩe /xEF/xEE/xF1/xF2/xEE /xFF/xED/xED/xE0 /xEF/xEE /xE2/xF0/xE5/xEC/xE5/xED/xE8 /xE8 /xF0/xE0/xE2/xED/xE0
Ωe=
0d32−d22
−d32 0d12
d22−d12 0

/x32/x2E/x34/x2E/x31 /xC0/xED/xE0/xEB/xE8/xE7 /xF1/xE8/xEB/xFB /xE8 /xEC/xEE/xEC/xE5/xED/xF2 /xE0 /xF2/xF0/xE5/xED/xE8/xFF/x2E
/xC4/xEB/xFF /xED/xE0 /xF7/xE0/xEB/xE0 /xEF/xEE /xE4/xF0/xEE/xE1/xED/xE5/xE5 /xEE/xF1/xF2 /xE0/xED/xEE/xE2/xE8/xEC/xF1 /xFF /xED/xE0 /xE0/xED/xE0/xEB/xE8/xE7/xE5 /xF1/xE8/xEB /xE8 /xEC/xEE/xEC/xE5/xED/xF2/xEE/xE2 /xEA /xE0/xEA /xF4/xF3/xED/xEA/x2D
/xF6/xE8/xE9 /xF0/xE5/xE6/xE8/xEC/xED/xEE/xE3/xEE /xF3/xE3 /xEB/xE0 θ /x2E /xDD/xF2/xEE /xED/xE5/xEE/xE1 /xF5 /xEE /xE4/xE8/xEC/xEE /xEA /xE0/xEA /xE8 /xE4/xEB/xFF /xF0/xE5/xF8/xE5/xED/xE8/xFF /xEE/xE1/xF0/xE0/xF2/xED/xEE/xE9 /xE7/xE0/xE4/xE0 /xF7/xE8
/xE4/xE8/xED/xE0/xEC/xE8/xEA/xE8/x2C /xF2 /xE0/xEA /xE8 /xE4/xEB/xFF /xE8/xF1/xF1/xEB/xE5/xE4/xEE/xE2/xE0/xED/xE8/xFF /xF1/xE2/xEE/xE1/xEE /xE4/xED/xEE/xE9 /xE4/xE8/xED/xE0/xEC/xE8/xEA/xE8 /xF1/xE8/xF1/xF2/xE5/xEC/xFB /x28/xF0/xE5/xF8/xE5/xED/xE8/xFF
/xEF/xF0 /xFF/xEC/xEE/xE9 /xE7/xE0/xE4/xE0 /xF7/xE8/x29/x2E /xC2/xEC/xE5/xF1/xF2/xE5 /xF1 /xF2/xE5/xEC/x2C /xEE/xF2/xEC/xE5/xF7/xE0/xFF π /x2D/xE0/xED/xF2/xE8/xEF/xE5/xF0/xE8/xEE /xE4/xE8/xF7/xED/xEE/xF1/xF2/xFC /xFD/xF2/xE8/xF5 /xF4/xF3/xED/xEA/xF6/xE8/xE9/x2C
/xE4/xEE/xF1/xF2 /xE0/xF2/xEE/xF7/xED/xEE /xEE/xE3/xF0/xE0/xED/xE8/xF7/xE8/xF2/xFC/xF1 /xFF /xEE/xF2/xF0/xE5/xE7/xEA /xEE/xEC θ∈[0;π] /x2E /xCA/xF0/xEE/xEC/xE5 /xF2/xEE/xE3/xEE/x2C /xF1/xF2/xEE/xE8/xF2 /xE7/xE0/xEC/xE5/xF2/xE8/xF2/xFC/x2C
/xF7/xF2/xEE /xED/xE0/xE8/xE1/xEE/xEB/xE5/xE5 /xF0/xE5/xE0/xEB/xE8/xE7/xF3 /xE5/xEC/xFB/xE5 /xED/xE0 /xEF/xF0/xE0/xEA/xF2/xE8/xEA /xE5 /xE4/xE2/xE8/xE6 /xE5/xED/xE8/xFF /xF0/xEE/xE1/xEE/xF2 /xE0 /xE1/xF3 /xE4/xF3/xF2 /xF1/xEE/xEE/xF2/xE2/xE5/xF2/xF1/xF2/xE2/xEE/x2D
/xE2/xE0/xF2/xFC /xF0/xE5/xE6/xE8/xEC/xE0/xEC /xEF/xF0/xE5/xE8/xEC/xF3/xF9/xE5/xF1/xF2/xE2/xE5/xED/xED/xEE/xE3/xEE /xEA /xE0 /xF7/xE5/xED/xE8/xFF /x28/xF2 /x2E/xE5/x2E /xEF/xF0/xEE/xF1/xEA /xE0/xEB/xFC/xE7/xFB/xE2/xE0/xED/xE8/xE5 /xE1/xF3 /xE4/xE5/xF2 /xF1/xF3/xF9/xE5/x2D
/xF1/xF2/xE2/xE5/xED/xED/xEE /xEC/xE5/xED/xFC/xF8/xE5 /xEA /xE0 /xF7/xE5/xED/xE8/xFF/x29/x2C /xF7/xF2/xEE /xEE/xE7/xED/xE0 /xF7/xE0/xE5/xF2 /xED/xE0/xF5 /xEE /xE6/xE4/xE5/xED/xE8/xE5 θ /xE2 /xED/xE5/xEA /xEE/xF2/xEE/xF0/xEE/xE9 /xE4/xEE/xE2/xEE/xEB/xFC/xED/xEE
/xEC/xE0/xEB/xEE/xE9 /xEE/xEA/xF0/xE5/xF1/xF2/xED/xEE/xF1/xF2/xE8 /xF2/xEE/xF7/xEA/xE8 π/2 /x2E
/xD3/xF2/xE2/xE5/xF0 /xE6/xE4/xE5/xED/xE8/xE5 /x32/x2E/x31
f(θ)∈C(0;π) /xE8 /xE2/xEE/xE7/xF0 /xE0/xF1/xF2/xE0/xE5/xF2 /xED/xE0 /xFD/xF2/xEE /xEC /xEF/xF0/xEE /xEC/xE5/xE6/xF3/xF2/xEA/xE5 /x2E
/xCF/xE5/xF0/xE2/xE0/xFF /xF7/xE0/xF1/xF2/xFC /xF3/xF2/xE2/xE5/xF0 /xE6/xE4/xE5/xED/xE8/xFF /xEE/xF7/xE5/xE2/xE8/xE4/xED/xE0/x2C /xF2 /xE0/xEA /xEA /xE0/xEA /xEF/xEE /xE4/xFB/xED/xF2/xE5/xE3/xF0/xE0/xEB/xFC/xED/xFB/xE5 /xF4/xF3/xED/xEA/xF6/xE8/xE8
/xED/xE5/xEF/xF0/xE5/xF0/xFB/xE2/xED/xFB /x28/xE5/xE4/xE8/xED/xF1/xF2/xE2/xE5/xED/xED/xE0/xFF /xEF/xEE/xF2/xE5/xED/xF6/xE8/xE0/xEB/xFC/xED/xEE /xEE/xF1/xEE/xE1/xE0/xFF /xF2/xEE/xF7/xEA /xE0/x2C /xF1/xE2/xFF/xE7/xE0/xED/xED/xE0/xFF /xF1 /xF0/xE0/xE2/xE5/xED/x2D
/xF1/xF2/xE2/xEE/xEC /xED/xF3 /xEB/xFE /xE7/xED/xE0/xEC/xE5/xED/xE0/xF2/xE5/xEB/xFF /xEF/xF0/xE8/xF5 /xEE /xE4/xE8/xF2/xF1 /xFF /xEA /xE0/xEA /xF0/xE0/xE7 /xED/xE0 /xE7/xED/xE0 /xF7/xE5/xED/xE8/xE8 θ=π/2 /x2C /xEE /xE4/xED/xE0/xEA /xEE /xE2
/xFD/xF2/xEE/xEC /xF1/xEB/xF3/xF7/xE0/xE5 /xE8/xED/xF2/xE5/xE3/xF0/xE0/xEB /xF1/xF3/xF9/xE5/xF1/xF2/xE2/xF3 /xE5/xF2 /xE8 /xEA /xEE/xED/xE5/xF7/xE5/xED/x29/x2E /xCF/xEE/xEB/xE5/xE7/xED/xEE /xE7/xE0/xEC/xE5/xF2/xE8/xF2/xFC/x2C /xF7/xF2/xEE /xE2 /xFD/xF2/xEE/xEC
/xF1/xEB/xF3/xF7/xE0/xE5
f(π/2) =−kgε2δ2
5R(1 +√
1−ε2δ2)
/xCF/xF0/xEE/xE8/xE7/xE2/xEE /xE4/xED/xE0/xFF /xF0/xE0/xF1/xF1/xEC/xE0/xF2/xF0/xE8/xE2/xE0/xE5/xEC/xEE/xE9 /xF4/xF3/xED/xEA/xF6/xE8/xE8 /xF2 /xE0/xEA /xEE/xE2/xE0/x3A
∂Iu1
∂θ=2∫
0−sin4βcos2αsin2αsinθ
(l(θ))3=2
/xD2 /xE0/xEA/xE8/xEC /xEE/xE1/xF0/xE0/xE7/xEE/xEC/x2C /xEE/xF7/xE5/xE2/xE8/xE4/xED/xEE/x2C /xF7/xF2/xEE /xEF/xF0/xE8 sinθ > 0 /xF4/xF3/xED/xEA/xF6/xE8/xFFf(θ) /xE2/xEE/xE7/xF0/xE0/xF1/xF2 /xE0/xE5/xF2 /x2E
/xD1/xF2/xEE/xE8/xF2 /xEE/xF2/xEC/xE5/xF2/xE8/xF2/xFC/x2C /xF7/xF2/xEE /xEF/xF0/xEE/xE8/xE7/xE2/xEE /xE4/xED/xE0/xFF@f
@/xE2 /xF2/xEE/xF7/xEA /xE5π/2 /xE8/xEC/xE5/xE5/xF2 /xF0/xE0/xE7/xF0/xFB/xE2 /xE2/xF2/xEE/xF0/xEE/xE3/xEE /xF0/xEE /xE4/xE0/x2C
/xF1/xE2/xFF/xE7/xE0/xED/xED/xFB/xE9 /xF1 /xF2/xE5/xEC/x2C /xF7/xF2/xEE /xE8/xED/xF2/xE5/xE3/xF0/xE0/xEB /xEF/xEE β /xF0/xE0/xF1 /xF5 /xEE /xE4/xE8/xF2/xF1 /xFF /x28/xE2/xE1/xEB/xE8/xE7/xE8 /xF2/xEE/xF7/xEA/xE8 β= 0 /xE2/xEE/xE7/xED/xE8/xEA /xE0/xE5/xF2
/xED/xE5/xEE/xEF/xF0/xE5/xE4/xE5/xEB/xE5/xED/xED/xEE/xF1/xF2/xFC /xE2/xE8/xE4/xE0 1/β /x29/x2E /xC4/xE0/xEB/xE5/xE5/x2C /xE8/xF1 /xF5 /xEE /xE4/xFF /xE8/xE7 /xF2/xEE/xE3/xEE /xF7/xF2/xEE f(π/2)<0 /x2C /xE0f(π)>0 /x2C
/xF1/xF3/xF9/xE5/xF1/xF2/xE2/xF3 /xE5/xF2 /xF2 /xE0/xEA /xEE/xE9 /xF3/xE3/xEE/xEB θf /xE4/xEB/xFF /xEA /xEE/xF2/xEE/xF0/xEE/xE3/xEE f= 0 /x2E
/xCF/xF0/xE8/xE2/xE5/xE4/xE5/xEC /xE2 /xE7/xE0/xEA/xEB/xFE/xF7/xE5/xED/xE8/xE5 /xE3/xF0/xE0/xF4/xE8/xEA/xE8 /xF1/xE8/xEB/xFB f /xE2 /xEE/xEA/xF0/xE5/xF1/xF2/xED/xEE/xF1/xF2/xE8 /xF2/xEE/xF7/xEA/xE8 θ=π/2 /x28/xEF/xE5/xF0/xE2/xFB/xE9
/xE3/xF0/xE0/xF4/xE8/xEA /xF1/xEE/xEE/xF2/xE2/xE5/xF2/xF1/xF2/xE2/xF3 /xE5/xF2 /xF1/xEB/xF3/xF7/xE0/xFE δ= 0.13,ε= 0.06 /x2C /xE2/xF2/xEE/xF0/xEE/xE9 /x16 δ= 0.03,ε= 0.06 /x3A
/x31/x32−2−1.5 −1−0.5 00.5 11.5 2
x 10−6−4−3−2−101234
θ−π/2f(θ)
−2−1.5 −1−0.5 00.5 11.5 2
x 10−6−20−15−10−505101520
θ−π/2f(θ)/xD0/xE8/xF1/x2E /x36/x3A /xC3/xF0/xE0/xF4/xE8/xEA/xE8 /xF1/xE8/xEB/xFB/x2E
/xCD/xE5/xF2/xF0/xF3 /xE4/xED/xEE /xE7/xE0/xEC/xE5/xF2/xE8/xF2/xFC/x2C /xF7/xF2/xEE /xE2/xF1/xEB/xE5/xE4/xF1/xF2/xE2/xE8/xE5 /xE2/xEE/xE7/xF0/xE0/xF1/xF2 /xE0/xED/xE8/xFF f(θ) /xE8/xEC/xE5/xE5/xF2 /xEC/xE5/xF1/xF2/xEE /xF1/xEB/xE5/xE4/xF3/x2D
/xFE/xF9/xE5/xE5 /xF3/xF2/xE2/xE5/xF0 /xE6/xE4/xE5/xED/xE8/xE5/x2E
/xD3/xF2/xE2/xE5/xF0 /xE6/xE4/xE5/xED/xE8/xE5 /x32/x2E/x32
/xC4/xE2/xE8/xE6/xE5/xED/xE8/xE5 /xE8/xE7 /xF1/xEE/xF1/xF2/xEE/xFF/xED/xE8/xFF /xEF/xEE/xEA/xEE/xFF /xE2/xEE/xE7/xEC/xEE/xE6/xED/xEE/x2C /xE5/xF1 /xEB/xE8 θ(0+)∈(θf;θ∗) /x2C /xE3/xE4/xE5θ∗=
π−arctg 1/δ
/xC2 /xF1/xE8/xEB/xF3 /xEE/xEF/xF0/xE5/xE4/xE5/xEB/xE5/xED/xE8/xFF
v=r(1
δcosθ+ sinθ)
/xC4/xEB/xFF /xF2/xEE/xE3/xEE/x2C /xF7/xF2/xEE/xE1/xFB /xE4/xE2/xE8/xE6 /xE5/xED/xE8/xE5 /xE8/xE7 /xF1/xEE/xF1/xF2/xEE /xFF/xED/xE8/xFF /xEF/xEE/xEA /xEE /xFF /xE1/xFB/xEB/xEE /xE2/xEE/xE7/xEC/xEE /xE6/xED/xEE/x2C /xED/xE5/xEE/xE1 /xF5 /xEE /xE4/xE8/xEC/xEE
/xF7/xF2/xEE/xE1/xFB /xF1/xEA /xEE/xF0/xEE/xF1/xF2/xFC /xE8 /xF3 /xF1/xEA /xEE/xF0/xE5/xED/xE8/xE5 /x28/xE0/x2C /xE7/xED/xE0 /xF7/xE8/xF2 /xE8 /xF1/xE8/xEB/xE0/x29 /xE2 /xED/xE5/xEA /xEE/xF2/xEE/xF0/xEE/xE9 /xEC/xE0/xEB/xEE/xE9 /xEE/xEA/xF0/xE5/xF1/xF2/xED/xEE/xF1/xF2/xE8
/xED/xF3 /xEB/xFF /xE8/xEC/xE5/xEB/xE8 /xEE /xE4/xE8/xED /xE7/xED/xE0/xEA/x2C /xE1/xE5/xE7 /xEE/xE3/xF0/xE0/xED/xE8/xF7/xE5/xED/xE8/xFF /xEE/xE1/xF9/xED/xEE/xF1/xF2/xE8/x15/x22/x2B/x22/x2E /xD3/xE3/xEE/xEB θ∗ /xE1/xF3 /xE4/xE5/xEC /xED/xE0/xE7/xFB/x2D
/xE2/xE0/xF2/xFC /xF3/xE3 /xEB/xEE/xEC /xEF/xEE/xEB/xED/xEE/xE9 /xEF/xF0/xEE/xE1/xF3/xEA /xF1/xEE/xE2/xEA/xE8/x2C /xE2 /xFD/xF2/xEE/xEC /xF1/xEB/xF3/xF7/xE0/xE5 v= 0 /xE8 /xF8/xE0/xF0 /xF1/xF2/xEE/xE8/xF2 /xED/xE0 /xEC/xE5/xF1/xF2/xE5/x2C
/xE0 /xF3/xE3 /xEB/xEE/xE2/xE0/xFF /xF1/xEA /xEE/xF0/xEE/xF1/xF2/xFC /xF0/xE0/xE2/xED/xE0 /xF1/xEA /xEE/xF0/xEE/xF1/xF2/xE8 /xF1/xEA /xEE/xEB/xFC/xE6 /xE5/xED/xE8/xFF /xF1 /xEE/xE1/xF0/xE0/xF2/xED/xFB/xEC /xE7/xED/xE0/xEA /xEE/xEC/x2E /xCC/xEE /xE6/xED/xEE
/xEF/xEE/xEA /xE0/xE7/xE0/xF2/xFC/x2C /xF7/xF2/xEE f(θ∗)>0 /xE4/xEB/xFF /xEB/xFE/xE1/xFB/xF5 /xE7/xED/xE0 /xF7/xE5/xED/xE8/xFF/xF5 /xEF/xE0/xF0/xE0/xEC/xE5/xF2/xF0/xEE/xE2 /xEF/xEB/xEE/xF1/xEA /xEE/xF1/xF2/xE8/x2E /xD2 /xE0/xEA/xE8/xEC
/xEE/xE1/xF0/xE0/xE7/xEE/xEC/x2C /xF1/xF2 /xE0/xF0/xF2 /xF0/xEE/xE1/xEE/xF2 /xE0 /xE2/xEE/xE7/xEC/xEE /xE6 /xE5/xED/x2C /xEE/xF7/xE5/xE2/xE8/xE4/xED/xEE/x2C /xF2/xEE/xEB/xFC/xEA /xEE /xF1 /xF0/xE5/xE6/xE8/xEC/xEE/xE2 θ∈(θf;θ∗).
/xCA/xF0/xEE/xEC/xE5 /xF2/xEE/xE3/xEE/x2C /xF1/xF2/xEE/xE8/xF2 /xE7/xE0/xEC/xE5/xF2/xE8/xF2/xFC/x2C /xF7/xF2/xEE /xF0/xE0/xE2/xED/xEE/xF3 /xF1/xEA /xEE/xF0/xE5/xED/xED/xEE/xE5 /xE4/xE2/xE8/xE6 /xE5/xED/xE8/xE5 /xF1/xE8/xF1/xF2/xE5/xEC/xFB /xFD/xEA/xE2/xE8/xE2/xE0/x2D
/xEB/xE5/xED/xF2/xED/xEE /xF3 /xF1/xEB/xEE/xE2/xE8/xFE θ=const /x2C /xF2 /x2E/xE5/x2E /xEF/xEE/xF1/xF2/xEE /xFF/xED/xF1/xF2/xE2/xF3 /xEE/xF2/xED/xEE/xF8/xE5/xED/xE8/xFF /xF3/xE3 /xEB/xEE/xE2/xEE/xE9 /xF1/xEA /xEE/xF0/xEE/xF1/xF2/xE8 /xEA
/xF1/xEA /xEE/xF0/xEE/xF1/xF2/xE8 /xF1/xEA /xEE/xEB/xFC/xE6 /xE5/xED/xE8/xFF /xF8/xE0/xF0/xE0/x2E
/xD3/xF2/xE2/xE5/xF0 /xE6/xE4/xE5/xED/xE8/xE5 /x32/x2E/x33
/xD4/xF3/xED/xEA/xF6/xE8/xFFµ0(θ0)∈C(π/2;π) /xE8 /xE2/xEE/xE7/xF0 /xE0/xF1/xF2/xE0/xE5/xF2 /xED/xE0 /xFD/xF2/xEE /xEC /xEF/xF0/xEE /xEC/xE5/xE6/xF3/xF2/xEA/xE5
/xCD/xE5/xEF/xF0/xE5/xF0/xFB/xE2/xED/xEE/xF1/xF2/xFC /xEF/xEE/xEA /xE0/xE7/xFB/xE2/xE0/xE5/xF2/xF1 /xFF /xF2 /xE0/xEA/xE6 /xE5 /xEA /xE0/xEA /xE8 /xE4/xEB/xFF /xF1/xE8/xEB/xFB f /x2E /xCF/xF0/xEE/xE8/xE7/xE2/xEE /xE4/xED/xE0/xFF /xF4/xF3/xED/xEA/xF6/xE8/xE8
Iw2 /xF0/xE0/xE2/xED/xE0
∂Iw2
∂θ=2∫
0sin4βcos2αsin2αcosθ
(l(θ))3=2
/xCE/xF7/xE5/xE2/xE8/xE4/xED/xEE/x2C /xF7/xF2/xEE /xEF/xF0/xE8 θ /xEB/xE5/xE6 /xE0/xF9/xE8/xEC /xED/xE0 /xE4/xE0/xED/xED/xEE/xEC /xEF/xF0/xEE/xEC/xE5/xE6/xF3/xF2/xEA /xE5 /xFD/xF2 /xE0 /xEF/xF0/xEE/xE8/xE7/xE2/xEE /xE4/xED/xE0/xFF /xEE/xF2/x2D
/xF0/xE8/xF6/xE0/xF2/xE5/xEB/xFC/xED/xE0/x2C /xE0 /xE7/xED/xE0 /xF7/xE8/xF2 /xEF/xF0/xEE/xE8/xE7/xE2/xEE /xE4/xED/xE0/xFF /xF1/xE0/xEC/xEE/xE9 /xF4/xF3/xED/xEA/xF6/xE8/xE8 µ0/xEF/xEE/xEB/xEE /xE6/xE8/xF2/xE5/xEB/xFC/xED/xE0/x2E /xF2 /xE0/xEA/xE6 /xE5
/xEC/xEE /xE6/xED/xEE /xEE/xF2/xEC/xE5/xF2/xE8/xF2/xFC /xED/xE0/xEB/xE8/xF7/xE8/xE5 /xF0/xE0/xE7/xF0/xFB/xE2/xE0 /xE2/xF2/xEE/xF0/xEE/xE3/xEE /xF0/xEE /xE4/xE0 /xF3 /xEF/xF0/xEE/xE8/xE7/xE2/xEE /xE4/xED/xEE/xE9 /xE2 /xF2/xEE/xF7/xEA /xE5 π/2 /xE8
/xF2/xEE/x2C /xF7/xF2/xEE /xE2/xFB/xEF/xEE/xEB/xED/xFF/xE5/xF2/xF1 /xFF /xF1/xEE/xEE/xF2/xED/xEE/xF8/xE5/xED/xE8/xE5/x3A
/x31/x33δ
b∂µ0
∂θsinθ=−∂f
∂θcosθ
/xC8/xF1 /xF5 /xEE /xE4/xFF /xE8/xE7 /xF3/xF2/xE2/xE5/xF0 /xE6/xE4/xE5/xED/xE8/xE9 /x32/x2E/x31/x2C /x32/x2E/x33/x2C /xE0 /xF2 /xE0/xEA/xE6 /xE5 /xE8/xE7 /xFF/xE2/xED/xEE/xE3/xEE /xE2/xE8/xE4/xE0 /xEF/xF0/xEE/xE8/xE7/xE2/xEE /xE4/xED/xFB/xF5/x2C /xF1/xEB/xE5/xE4/xF3 /xE5/xF2
/xE2/xE0/xE6/xED/xFB/xE9 /xF4/xE0/xEA/xF2/x3A
/xD3/xF2/xE2/xE5/xF0 /xE6/xE4/xE5/xED/xE8/xE5 /x32/x2E/x34
/xD4/xF3/xED/xEA/xF6/xE8/xFFµ(θ0)∈C(0;π) /xE8 /xF3/xE1/xFB/xE2/xE0/xE5/xF2 /xED/xE0 /xEF/xF0/xEE /xEC/xE5/xE6/xF3/xF2/xEA/xE5 θ∈[0;θ∗]
/xC4/xE5/xE9/xF1/xF2/xE2/xE8/xF2/xE5/xEB/xFC/xED/xEE/x2C /xE8/xF1 /xF5 /xEE /xE4/xFF /xE8/xE7 /xFF/xE2/xED/xEE/xE3/xEE /xE2/xE8/xE4/xE0 µ=µ0−bf /xF1/xEB/xE5/xE4/xF3 /xE5/xF2 /xED/xE5/xEF/xF0/xE5/xF0/xFB/xE2/xED/xEE/xF1/xF2/xFC/x2E
/xD7/xF2/xEE /xEA /xE0/xF1/xE0/xE5/xF2/xF1 /xFF /xEF/xF0/xEE/xE8/xE7/xE2/xEE /xE4/xED/xEE/xE9/x2C /xF2/xEE
∂µ
∂θ=b∂(δµ0−f)
∂θ=−b∂f
∂θ(1
δcosθ+ sinθ)
/xCF/xF0/xE8/xE2/xE5/xE4/xE5/xEC /xE3/xF0/xE0/xF4/xE8/xEA/xE8 /xEC/xEE/xEC/xE5/xED/xF2 /xE0 /xE2 /xEE/xEA/xF0/xE5/xF1/xF2/xED/xEE/xF1/xF2/xE8 /xF2/xEE/xF7/xEA/xE8 θ=π/2 /x28/xEF/xE0/xF0/xE0/xEC/xE5/xF2/xF0/xFB /xEF/xEB/xEE/xF1/x2D
/xEA /xEE/xF1/xF2/xE8 /xE0/xED/xE0/xEB/xEE/xE3/xE8/xF7/xED/xFB /xF2/xE5/xEC/x2C /xF7/xF2/xEE /xE7/xE0/xE4/xE0/xE2/xE0/xEB/xE8/xF1/xFC /xE4/xEB/xFF /xF1/xE8/xEB/xFB/x29/x3A
−2−1.5 −1−0.5 00.5 11.5 2
x 10−6−400−300−200−1000100200300400
θ−π/2µ(θ)
−2−1.5 −1−0.5 00.5 11.5 2
x 10−6−1500−1000−500050010001500
θ−π/2µ(θ)
/xD0/xE8/xF1/x2E /x37/x3A /xC3/xF0/xE0/xF4/xE8/xEA/xE8 /xEC/xEE/xEC/xE5/xED/xF2/xEE/xE2/x2E
/xC4/xE0/xEB/xE5/xE5/x2C /xEC/xEE /xE6/xED/xEE /xE7/xE0/xEC/xE5/xF2/xE8/xF2/xFC/x2C /xF7/xF2/xEE µ(π) =−µ(0)<0 /x2C /xE0 /xE7/xED/xE0 /xF7/xE8/xF2 /xF1/xF3/xF9/xE5/xF1/xF2/xE2/xF3 /xE5/xF2 /xF3/xE3/xEE/xEB
θ∈(0;π/2) /x2C /xE4/xEB/xFF /xEA /xEE/xF2/xEE/xF0/xEE/xE3/xEE µ= 0 /x2E /xC2/xE5/xEB/xE8/xF7/xE8/xED/xF3 µ(θf) /xEC/xEE /xE6/xED/xEE /xF1/xF7/xE8/xF2 /xE0/xF2/xFC /xEC/xEE/xEC/xE5/xED/xF2/xEE/xEC
/xF2/xF0/xE5/xED/xE8/xFF /xEF/xEE/xEA /xEE /xFF/x2C /xEA /xEE/xF2/xEE/xF0/xFB/xE9 /xED/xF3/xE6/xED/xEE /xEF/xF0/xE5/xEE /xE4/xEE/xEB/xE5/xF2/xFC /xE4/xEB/xFF /xF2/xEE/xE3/xEE/x2C /xF7/xF2/xEE/xE1/xFB /xED/xE0 /xF7/xE0/xF2/xFC /xE4/xE2/xE8/xE6 /xE5/xED/xE8/xE5/x2E
/xC2/xE5/xEB/xE8/xF7/xE8/xED/xE0 /xFD/xF2/xEE/xE3/xEE /xEC/xEE/xEC/xE5/xED/xF2 /xE0 /xE2 /xE7/xE0/xE2/xE8/xF1/xE8/xEC/xEE/xF1/xF2/xE8 /xEE/xF2 /xEF/xE0/xF0/xE0/xEC/xE5/xF2/xF0/xEE/xE2 /xEA /xEE/xED/xF2 /xE0/xF2/xEA /xE0/x3A
/xCA/xF0/xE8/xE2/xFB/xE5/x2C /xEE/xE3/xF0/xE0/xED/xE8/xF7/xE8/xE2/xE0/xFE/xF8/xE8/xE5 /xEE/xE1/xEB/xE0/xF1/xF2/xE8 /xEF/xE0/xF0/xE0/xEC/xE5/xF2/xF0/xEE/xE2/x2C /xE4/xEB/xFF /xEA /xEE/xF2/xEE/xF0/xFB/xF5 /xE4/xE2/xE8/xE6 /xE5/xED/xE8/xE5
/xE2/xEE/xE7/xEC/xEE /xE6/xED/xEE /xE2 /xF1/xEB/xF3/xF7/xE0/xE5 /xE4/xE2/xF3/xF5 /xEC/xEE /xE4/xE5/xEB/xE5/xE9 /xEC/xE0/xF5 /xEE/xE2/xE8/xEA /xEE/xE2 /x28/xE4/xE2/xE8/xE6 /xE5/xED/xE8/xE5 /xE4/xEE/xEF/xF3 /xF1/xF2/xE8/xEC/xEE /xE2/xED/xF3/xF2/xF0/xE8
/xEA/xF0/xE8/xE2/xEE/xE9/x29/x3A
/x32/x2E/x34/x2E/x32 /xCD/xE5/xEA /xEE/xF2/xEE/xF0/xFB/xE5 /xE0/xF1/xEF/xE5/xEA/xF2/xFB /xF1/xE2/xEE/xE1/xEE /xE4/xED/xEE/xE9 /xE4/xE8/xED/xE0/xEC/xE8/xEA/xE8
/xD0 /xE5/xF8/xE5/xED/xE8/xE5 /xEE/xE1/xF0/xE0/xF2/xED/xEE/xE9 /xE7/xE0/xE4/xE0 /xF7/xE8 /xE4/xE8/xED/xE0/xEC/xE8/xEA/xE8 /xEF/xEE/xE7/xE2/xEE/xEB/xFF/xE5/xF2 /xE4/xEB/xFF /xEF/xF0/xE5/xE4/xF1/xF2 /xE0/xE2/xEB/xE5/xED/xED/xFB/xF5 /xE0/xEF/xEF/xE0/x2D
/xF0/xE0/xF2/xEE/xE2 /xED/xE0/xE9/xF2/xE8 /xED/xE5/xEE/xE1 /xF5 /xEE /xE4/xE8/xEC/xFB/xE5 /xF3/xEF/xF0/xE0/xE2/xEB/xE5/xED/xE8/xFF/x2C /xE4/xEB/xFF /xEA /xEE/xF2/xEE/xF0/xFB/xF5 /xE4/xE2/xE8/xE6 /xE5/xED/xE8/xE5 /xE1/xF3 /xE4/xE5/xF2 /xF1/xEE/xE2/xE5/xF0/x2D
/xF8/xE0/xF2/xFC/xF1 /xFF /xEF/xEE /xE7/xE0/xE4/xE0/xED/xED/xEE/xEC/xF3 /xEE/xF2/xF0/xE5/xE7/xEA/xF3 /x2E /xC4/xEB/xFF /xEF/xF0/xE5/xE4/xEB/xEE /xE6 /xE5/xED/xED/xFB/xF5 /xEA /xEE/xED/xF1/xF2/xF0/xF3/xEA/xF6/xE8/xE9 /xF3/xEF/xF0/xE0/xE2/xEB/xE5/xED/xE8/xFF
/xF0/xE5/xE0/xEB/xE8/xE7/xF3/xFE/xF2/xF1 /xFF /xEF/xF3/xF2/xE5/xEC /xF1/xEE/xE7/xE4/xE0/xED/xE8/xFF /xEC/xEE/xEC/xE5/xED/xF2/xEE/xE2 /xED/xE0 /xEC/xE0/xF5 /xEE/xE2/xE8/xEA /xE0/xF5/x2E /xC2/xEC/xE5/xF1/xF2/xE5 /xF1 /xF2/xE5/xEC/x2C /xEF/xF0/xE5/xE4/x2D
/xF1/xF2 /xE0/xE2/xEB/xFF/xE5/xF2 /xE8/xED/xF2/xE5/xF0/xE5/xF1 /xE7/xE0/xE4/xE0 /xF7/xE0 /xEE /xE4/xE2/xE8/xE6 /xE5/xED/xE8/xE8 /xF8/xE0/xF0/xE0 /xF1 /x11/xE2/xFB/xEA/xEB/xFE/xF7/xE5/xED/xED/xFB/xEC/xE8/x11 /xEF/xF0/xE8/xE2/xEE /xE4/xE0/xEC/xE8/x2C /xF2 /x2E/xE5/x2E
/x31/x34/xD0/xE8/xF1/x2E /x38/x3A /xCC/xEE/xEC/xE5/xED/xF2 /xF2/xF0/xE5/xED/xE8/xFF /xEF/xEE/xEA /xEE /xFF /xEF/xF0/xE8 /xED/xE0 /xF7/xE0/xEB/xE5 /xE4/xE2/xE8/xE6 /xE5/xED/xE8/xFF/x2E
/xD0/xE8/xF1/x2E /x39/x3A /xCE/xE1/xEB/xE0/xF1/xF2/xFC /xE2/xEE/xE7/xEC/xEE /xE6/xED/xEE/xF1/xF2/xE8 /xE4/xE2/xE8/xE6 /xE5/xED/xE8/xFF/x2E
/xF1/xE2/xEE/xE1/xEE /xE4/xED/xE0/xFF /xE4/xE8/xED/xE0/xEC/xE8/xEA /xE0 /xF1/xE8/xF1/xF2/xE5/xEC/xFB/x2E /xC2 /xF7/xE0/xF1/xF2/xED/xEE/xF1/xF2/xE8/x2C /xF2 /xE0/xEA /xEE/xE5 /xE4/xE2/xE8/xE6 /xE5/xED/xE8/xE5 /xEF/xEE/xEC/xEE/xE3 /xE0/xE5/xF2 /xF7/xE0/xF1/xF2/xE8/xF7/x2D
/xED/xEE /xF0/xE5/xF8/xE8/xF2/xFC /xEF/xF0/xEE/xE1/xEB/xE5/xEC/xF3 /x11/xF1/xE1/xF0/xEE/xF1/xE0/x11 /xEC/xEE/xEC/xE5/xED/xF2/xEE/xE2 /xED/xE0 /xEC/xE0/xF5 /xEE/xE2/xE8/xEA /xE0/xF5/x2C /xF7/xF2/xEE /xE2/xE0/xE6/xED/xEE/x2C /xE2/xEE/x2D/xEF/xE5/xF0/xE2/xFB/xF5
/xE4/xEB/xFF /xF1/xF0/xE0/xE2/xED/xE8/xF2/xE5/xEB/xFC/xED/xEE /xEF/xEB/xE0/xE2/xED/xEE/xE3/xEE /xE4/xE2/xE8/xE6 /xE5/xED/xE8/xFF /x28/xE1/xE5/xE7 /xEF/xEE/xEB/xED/xFB/xF5 /xEE/xF1/xF2 /xE0/xED/xEE/xE2/xEE/xEA /xE8 /xEF/xE5/xF0/xE5/xF5 /xEE /xE4/xEE/xE2 /xE2
/xED/xEE/xE2/xFB/xE9 /xF0/xE5/xE6/xE8/xEC/x29/x2C /xE0 /xE2/xEE/x2D/xE2/xF2/xEE/xF0/xFB/xF5 /xE4/xEB/xFF /xEF/xEE /xE4/xE4/xE5/xF0 /xE6 /xE0/xED/xE8/xFF /xED/xE5/xEE/xE1 /xF5 /xEE /xE4/xE8/xEC/xEE/xE3/xEE /xF0/xE5/xF1/xF3/xF0/xF1/xED/xEE/xE3/xEE /xF0/xE5/x2D
/xE7/xE5/xF0/xE2/xE0/x2E /xC7/xE0/xE4/xE0 /xF7/xE0/x2C /xF2 /xE0/xEA/xE8/xEC /xEE/xE1/xF0/xE0/xE7/xEE/xEC/x2C /xEF/xE5/xF0/xE5/xF5 /xEE /xE4/xE8/xF2 /xE2 /xEA/xEB/xE0/xF1/xF1/xE8/xF7/xE5/xF1/xEA/xF3/xFE /xE7/xE0/xE4/xE0 /xF7/xF3 /xEC/xE5/xF5 /xE0/xED/xE8/xEA/xE8 /xEE
/xE4/xE2/xE8/xE6 /xE5/xED/xE8/xE8 /xF8/xE0/xF0/xE0 /xD7/xE0/xEF/xEB/xFB/xE3/xE8/xED/xE0 /xEF/xEE /xE3/xEE/xF0/xE8/xE7/xEE/xED/xF2 /xE0/xEB/xFC/xED/xEE/xE9 /xEF/xEB/xEE/xF1/xEA /xEE/xF1/xF2/xE8/x2E /xD2 /xE0/xEA /xE0/xFF /xE7/xE0/xE4/xE0 /xF7/xE0 /xE4/xEB/xFF
/xEE/xE1/xFB/xF7/xED/xEE/xE3/xEE /xE1/xE8/xEB/xEB/xE8/xE0/xF0 /xE4/xED/xEE/xE3/xEE /xF8/xE0/xF0/xE0 /xE1/xFB/xEB/xE0 /xE2 /xE4/xEE/xF1/xF2 /xE0/xF2/xEE/xF7/xED/xEE /xEF/xEE/xEB/xED/xEE/xE9 /xEC/xE5/xF0/xE5 /xE8/xF1/xF1/xEB/xE5/xE4/xEE/xE2/xE0/xED/xE0 /xE2
/x5B/x31/x30/x5D/x2E /xC7/xE4/xE5/xF1/xFC /xE1/xF3 /xE4/xF3/xF2 /xEF/xF0/xE8/xE2/xE5/xE4/xE5/xED/xFB /xED/xE5/xEA /xEE/xF2/xEE/xF0/xFB/xE5 /xF4/xE0/xEA/xF2/xFB/x2C /xE8/xEC/xE5/xFE/xF9/xE8/xE5 /xEE/xF2/xED/xEE/xF8/xE5/xED/xE8/xE5 /xEA /xE4/xE8/xED/xE0/x2D
/xEC/xE8/xEA /xE5 /xF8/xE0/xF0/xE0 /xD7/xE0/xEF/xEB/xFB/xE3/xE8/xED/xE0 /xED/xE0 /xEF/xEB/xEE/xF1/xEA /xEE/xF1/xF2/xE8 /xF1 /xE4/xE2/xF3/xF5/xEF/xE0/xF0/xE0/xEC/xE5/xF2/xF0/xE8/xF7/xE5/xF1/xEA/xE8/xEC /xF2/xF0/xE5/xED/xE8/xE5/xEC /xE2 /xF1/xEB/xF3/xF7/xE0/xE5
/xEF/xF0 /xFF/xEC/xEE/xEB/xE8/xED/xE5/xE9/xED/xEE/xE3/xEE /xE4/xE2/xE8/xE6 /xE5/xED/xE8/xFF/x2E /xC2/xF1/xE5 /xFD/xF2/xE8 /xF1/xE2/xEE/xE9/xF1/xF2/xE2/xE0 /xF2 /xE0/xEA /xE8/xEB/xE8 /xE8/xED/xE0 /xF7/xE5 /xF1/xEB/xE5/xE4/xF3/xFE/xF2 /xE8/xE7 /x5B/x31/x30/x5D/x2C
/xEE /xE4/xED/xE0/xEA /xEE /xE2 /xE4/xE0/xED/xED/xEE/xE9 /xF0/xE0/xE1/xEE/xF2/xE5 /xEF/xF0/xE5/xE4/xEB/xE0/xE3 /xE0/xE5/xF2/xF1 /xFF /xED/xE5/xF1/xEA /xEE/xEB/xFC/xEA /xEE /xE8/xED/xEE/xE9 /xEF/xEE /xE4/xF5 /xEE /xE4/x2E /xC2 /xF7/xE0/xF1/xF2/xED/xEE/xF1/xF2/xE8/x2C /xE2
/x5B/x31/x30/x5D /xEF/xF0/xE5/xE4/xEF/xEE/xEB/xE0/xE3 /xE0/xEB/xEE/xF1/xFC /xF0/xE0/xE7/xEB/xEE /xE6 /xE5/xED/xE8/xE5 /xE2 /xF0 /xFF/xE4 /xD2 /xE5/xE9/xEB/xEE/xF0/xE0 /xEF/xEE /xEF/xE0/xF0/xE0/xEC/xE5/xF2/xF0/xF3 εδ /x2C /xEF/xF0/xE5/xE4/xEF/xEE/xEB/xE0/xE3 /xE0/x2D
/xE5/xEC/xEE/xEC/xF3 /xEC/xE0/xEB/xFB/xEC/x2C /xE0 /xE7/xE4/xE5/xF1/xFC /xEC/xFB /xEE/xF1/xF2 /xE0/xE2/xE8/xEC /xE8/xF1 /xF5 /xEE /xE4/xED/xFB/xE5 /xE2/xFB/xF0/xE0/xE6 /xE5/xED/xE8/xFF /xE4/xEB/xFF /xF1/xE8/xEB /xE8 /xEC/xEE/xEC/xE5/xED/xF2/xEE/xE2/x2E
/xCD/xE0/xEA /xEE/xED/xE5/xF6/x2C /xEE/xF2/xEC/xE5/xF2/xE8/xEC/x2C /xF7/xF2/xEE /xE2/xF1/xE5 /xF0/xE5/xE7/xF3 /xEB/xFC /xF2 /xE0/xF2/xFB /xEF/xEE/xEB/xF3/xF7/xE5/xED/xFB /xF2/xEE/xEB/xFC/xEA /xEE /xEF/xF0/xE8 θ∈[0;π] /x2E /xCF/xF0/xE8
/xE6 /xE5/xEB/xE0/xED/xE8/xE8 /xF1 /xF3/xF7/xE5/xF2/xEE/xEC π /x2D/xE0/xED/xF2/xE8/xEF/xE5/xF0/xE8/xEE /xE4/xE8/xF7/xED/xEE/xF1/xF2/xE8 /xF4/xF3/xED/xEA/xF6/xE8/xE9 f /xE8µ /xEF/xEEθ /x2C /xE8/xF5 /xEC/xEE /xE6/xED/xEE /xEE/xE1/xEE/xE1/x2D
/x31/x35/xF9/xE8/xF2/xFC /xE8 /xED/xE0 /xEE/xF1/xF2 /xE0/xE2/xF8/xE8/xE5/xF1 /xFF /xE7/xED/xE0 /xF7/xE5/xED/xE8/xFF/x2E
/xC2 /xEF/xE5/xF0/xE2/xF3/xFE /xEE/xF7/xE5/xF0/xE5/xE4/xFC /xED/xE5/xEE/xE1 /xF5 /xEE /xE4/xE8/xEC/xEE /xEE/xF2/xEC/xE5/xF2/xE8/xF2/xFC/x2C /xF7/xF2/xEE /xE4/xEB/xFF /xE4/xE8/xED/xE0/xEC/xE8/xEA/xE8 /xF8/xE0/xF0/xE0 /xD7/xE0/xEF/xEB/xFB/x2D
/xE3/xE8/xED/xE0 /xED/xE0 /xE2/xFB/xEA/xEB/xFE/xF7/xE5/xED/xED/xFB/xF5 /xEC/xE0/xF5 /xEE/xE2/xE8/xEA /xE0/xF5 /xF1/xEF/xF0/xE0/xE2/xE5/xE4/xEB/xE8/xE2/xEE /xF1/xEB/xE5/xE4/xF3/xFE/xF9/xE5/xE5 /xF3/xF2/xE2/xE5/xF0 /xE6/xE4/xE5/xED/xE8/xE5/x3A
/xD3/xF2/xE2/xE5/xF0 /xE6/xE4/xE5/xED/xE8/xE5 /x33/x2E/x31
/xD1/xE2/xEE/xE1/xEE/xE4/xED/xEE/xE5 /xEA/xE0/xF7/xE5/xED/xE8/xE5 /xF8/xE0/xF0 /xE0 /xD7/xE0/xEF/xEB/xFB/xE3/xE8/xED/xE0 /xE2/xE4/xEE /xEB/xFC /xEF/xF0/xFF/xEC/xEE/xE9 /xE2/xEE/xE7/xEC/xEE/xE6/xED/xEE /xF2/xEE /xEB/xFC/xEA/xEE /xE2
/xF2/xEE /xEC /xF1 /xEB/xF3/xF7/xE0/xE5/x2C /xE5/xF1 /xEB/xE8 /xEE/xED/xEE /xE1/xF3/xE4/xE5/xF2 /xEF/xF0/xEE/xE8/xF1/xF5/xEE/xE4/xE8/xF2/xFC /xE2/xE4/xEE /xEB/xFC /xF1/xEE/xE1/xF1/xF2/xE2/xE5/xED/xED/xEE/xE3/xEE /xE2/xE5/xEA/xF2/xEE/xF0 /xE0 /xEE/xEF/xE5/x2D
/xF0 /xE0/xF2/xEE/xF0 /xE0 /xE8/xED/xE5/xF0/xF6/xE8/xE8 I /x2E
/xDD/xF2/xEE /xF1/xEB/xE5/xE4/xF3 /xE5/xF2 /xE8/xE7 /xF2/xEE/xE3/xEE/x2C /xF7/xF2/xEE /xEA /xE0/xEA /xEF/xEE/xEA /xE0/xE7/xE0/xED/xEE /xE2/xFB/xF8/xE5/x2C µ≡µyey /x2C /xE2/xE5/xEA/xF2/xEE/xF0 /xF3/xE3 /xEB/xEE/xE2/xEE/xE9
/xF1/xEA /xEE/xF0/xEE/xF1/xF2/xE8 /xF2 /xE0/xEA/xE6 /xE5 /xED/xE0/xEF/xF0/xE0/xE2/xEB/xE5/xED /xE2/xE4/xEE/xEB/xFC /xFD/xF2/xEE/xE9 /xEE/xF1/xE8/x2C /xE2/xE5/xEA/xF2/xEE/xF0/xE0 k=Iω /xE8˙k /xF1/xEE/xED/xE0/xEF/xF0/xE0/xE2/xEB/xE5/xED/xFB/x2E
/xCD/xEE˙k+ [ω;k] ==λ! /x2E /xCF/xEE/xF1/xEB/xE5/xE4/xED/xE5/xE5 /xE3/xEE/xE2/xEE/xF0/xE8/xF2 /xEE /xEA /xEE/xEC/xEF/xEB/xE0/xED/xE0/xF0/xED/xEE/xF1/xF2/xE8 /xE2/xE5/xEA/xF2/xEE/xF0/xEE/xE2 k /x2C
! /xE8 /xE8/xF5 /xE2/xE5/xEA/xF2/xEE/xF0/xED/xEE/xE3/xEE /xEF/xF0/xEE/xE8/xE7/xE2/xE5/xE4/xE5/xED/xE8/xFF/x2C /xF7/xF2/xEE /xE2/xEE/xE7/xEC/xEE /xE6/xED/xEE /xF2/xEE/xEB/xFC/xEA /xEE /xEF/xF0/xE8 /xEA /xEE/xEB/xEB/xE8/xED/xE5/xE0/xF0/xED/xFB/xF5
/xE2/xE5/xEA/xF2/xEE/xF0/xE0/xF5 /xEA/xE8/xED/xE5/xF2/xE8/xF7/xE5/xF1/xEA /xEE/xE3/xEE /xEC/xEE/xEC/xE5/xED/xF2 /xE0 /xE8 /xF3/xE3 /xEB/xEE/xE2/xEE/xE9 /xF1/xEA /xEE/xF0/xEE/xF1/xF2/xE8/x2C /xEE/xF2/xEA/xF3 /xE4/xE0 /xE8 /xF1/xEB/xE5/xE4/xF3 /xE5/xF2 /x2C /xF7/xF2/xEE
/xF3/xE3 /xEB/xEE/xE2/xE0/xFF /xF1/xEA /xEE/xF0/xEE/xF1/xF2/xFC /xED/xE0/xEF/xF0/xE0/xE2/xEB/xE5/xED/xE0 /xE2/xE4/xEE/xEB/xFC /xEE /xE4/xED/xEE/xE9 /xE8/xE7 /xE3 /xEB/xE0/xE2/xED/xFB/xF5 /xEE/xF1/xE5/xE9 /xE8/xED/xE5/xF0/xF6/xE8/xE8/x2E
/xCA/xE0/xEA /xF3/xE6 /xE5 /xE3/xEE/xE2/xEE/xF0/xE8/xEB/xEE/xF1/xFC /xE2/xFB/xF8/xE5/x2C /xE2 /xF1/xEB/xF3/xF7/xE0/xE5 /xEF/xEE/xF1/xF2/xEE /xFF/xED/xED/xEE/xE3/xEE θ /xE8 /xF1/xE8/xEB/xE0 /xE8 /xEC/xEE/xEC/xE5/xED/xF2 /xE1/xF3/x2D
/xE4/xF3/xF2 /xEF/xEE/xF1/xF2/xEE /xFF/xED/xED/xFB/xEC/xE8 /xF4/xF3/xED/xEA/xF6/xE8/xFF/xEC/xE8 /xE2/xF0/xE5/xEC/xE5/xED/xE8/x2C /xE8 /x2C /xF1/xEB/xE5/xE4/xEE/xE2/xE0/xF2/xE5/xEB/xFC/xED/xEE/x2C /xE2 /xFD/xF2/xEE/xEC /xF1/xEB/xF3/xF7/xE0/xE5 /xF0/xE5/x2D
/xE0/xEB/xE8/xE7/xF3 /xE5/xF2/xF1 /xFF /xF0/xE5/xE6/xE8/xEC /xF2/xEE/xF0/xEC/xEE /xE6 /xE5/xED/xE8/xFF /xF1 /xEF/xEE/xF1/xF2/xEE /xFF/xED/xED/xFB/xEC /xF3 /xF1/xEA /xEE/xF0/xE5/xED/xE8/xE5/xEC/x2E /xC7/xE0/xEC/xE5/xF2/xE8/xEC/x2C /xF7/xF2/xEE /xE4/xEB/xFF
/xF1/xE2/xEE/xE1/xEE /xE4/xED/xEE/xE9 /xE4/xE8/xED/xE0/xEC/xE8/xEA/xE8 /xF8/xE0/xF0/xE0 /x28/xED/xE0 /xE2/xFB/xEA/xEB/xFE/xF7/xE5/xED/xED/xFB/xF5 /xEC/xE0/xF5 /xEE/xE2/xE8/xEA /xE0/xF5/x29 /xF8/xE0/xF0 /xD7/xE0/xEF/xEB/xFB/xE3/xE8/xED/xE0 /xE2/xE5/x2D
/xE4/xE5/xF2 /xF1/xE5/xE1 /xFF /xF2 /xE0/xEA/xE6 /xE5/x2C /xEA /xE0/xEA /xE4/xE8/xED/xE0/xEC/xE8/xF7/xE5/xF1/xEA/xE8 /xE8/xE4/xE5/xE0/xEB/xFC/xED/xFB/xE9 /xF8/xE0/xF0/x2C /xE0 /xE8/xEC/xE5/xED/xED/xEE /xE2/xE5/xF0/xED/xEE /xF1/xEB/xE5/xE4/xF3/xFE/xF9/xE5/xE5
/xF3/xF2/xE2/xE5/xF0 /xE6/xE4/xE5/xED/xE8/xE5/x3A
/xD3/xF2/xE2/xE5/xF0 /xE6/xE4/xE5/xED/xE8/xE5 /x33/x2E/x32
/xCA/xE0/xF7/xE5/xED/xE8/xE5 /xF8/xE0/xF0 /xE0 /xD7/xE0/xEF/xEB/xFB/xE3/xE8/xED/xE0 /xE1/xE5/xE7 /xF1/xEA/xEE /xEB/xFC/xE6/xE5/xED/xE8/xFF /xED/xE5/xE2/xEE/xE7/xEC/xEE/xE6/xED/xEE
/xC4/xE5/xE9/xF1/xF2/xE2/xE8/xF2/xE5/xEB/xFC/xED/xEE/x2C /xF1/xE8/xF1/xF2/xE5/xEC/xE0 /xF3/xF0/xE0/xE2/xED/xE5/xED/xE8/xE9 /xE4/xEB/xFF /xF1/xE2/xEE/xE1/xEE /xE4/xED/xEE/xE9 /xE4/xE8/xED/xE0/xEC/xE8/xEA/xE8 /xF8/xE0/xF0/xE0 /xD7/xE0/xEF/xEB/xFB/x2D
/xE3/xE8/xED/xE0/x2C /xF1 /xF3/xF7/xE5/xF2/xEE/xEC /xF2/xEE/xE3/xEE/x2C /xF7/xF2/xEE θ≡π/2 /x3A
˙ω=f
d
dt(ωIe) =µe
e /x16/xED/xE5/xEF/xEE /xE4/xE2/xE8/xE6/xED/xFB/xE9 /xE2/xE5/xEA/xF2/xEE/xF0/x2C /xF2 /xE0/xEA /xEE/xE9/x2C /xF7/xF2/xEE !=ωe /x2E /xCA/xE0/xEA /xE4/xEE/xEA /xE0/xE7/xE0/xED/xEE /xE2/xFB/xF8/xE5 /x28/xE8/xE7 /xF3/xF2/xE2/xE5/xF0/x2D
/xE6/xE4/xE5/xED/xE8/xFF /x33/x2E/x31/x29 /xFD/xF2/xEE/xF2 /xE2/xE5/xEA/xF2/xEE/xF0/x16/xF1/xEE/xE1/xF1/xF2/xE2/xE5/xED/xED/xFB/xE9 /xE4/xEB/xFF /xF2/xE5/xED/xE7/xEE/xF0/xE0 /xE8/xED/xE5/xF0/xF6/xE8/xE8 I /x2C /xE0 /xE7/xED/xE0 /xF7/xE8/xF2 /x2C /xE4/xE8/xF4/x2D
/xF4/xE5/xF0/xE5/xED/xF6/xE8/xF0/xF3 /xFF /xEB/xE5/xE2/xF3/xFE /xF7/xE0/xF1/xF2/xFC /xE2/xF2/xEE/xF0/xEE/xE3/xEE /xF3/xF0/xE0/xE2/xED/xE5/xED/xE8/xFF /xEF/xEE/xEB/xF3/xF7/xE0/xE5/xF2/xF1 /xFF /xF1/xEB/xE5/xE4/xF3/xFE/xF9/xE8/xE9 /xF0/xE5/xE7/xF3 /xEB/xFC/x2D
/xF2 /xE0/xF2/x3A
( ˙ωI−µE)e= (fI−µE)e= 0
/xD1/xF7/xE8/xF2 /xE0/xFF/x2C /xF7/xF2/xEE /xF2/xE5/xED/xE7/xEE/xF0 /xE8/xED/xE5/xF0/xF6/xE8/xE8 I /xE7/xE0/xEF/xE8/xF1/xE0/xED /xE2 /xE3 /xEB/xE0/xE2/xED/xFB/xF5 /xEE/xF1 /xFF/xF5/x2C /xE8/xEC/xE5/xE5/xEC /xF3 /xF1/xEB/xEE/xE2/xE8/xFF /xE4/xE2/xE8/x2D
/xE6 /xE5/xED/xE8/xE9/x2C /xF1/xEE/xEE/xF2/xE2/xE5/xF2/xF1/xE2/xF3/xFE/xF9/xE8/xF5 /xE2/xF0/xE0/xF9/xE5/xED/xE8/xFE /xE2/xEE/xEA/xF0/xF3/xE3 k /x2D/xE9 /xEE/xF1/xE8 /xE8/xED/xE5/xF0/xF6/xE8/xE8/x3A
f(π/2)ik=µ(π/2)
/xC0 /xE7/xED/xE0 /xF7/xE8/xF2 /x2C
ik=µ(π/2)
f(π/2)⇐⇒ik=b(2
δ−1)⇐⇒ik
b=2
δ−1≥1
/xCF/xEE/xF1/xEB/xE5/xE4/xED/xE5/xE5 /xED/xE5/xE2/xEE/xE7/xEC/xEE /xE6/xED/xEE/x2C /xF2 /xE0/xEA /xEA /xE0/xEA /xE4/xEB/xFF /xF0/xE0/xE7/xEC/xE5/xF0/xED/xFB/xF5 /xEC/xEE/xEC/xE5/xED/xF2/xEE/xE2 /xE8/xED/xE5/xF0/xF6/xE8/xE8 /xEE/xF2/xED/xEE/x2D
/xF1/xE8/xF2/xE5/xEB/xFC/xED/xEE /xF6/xE5/xED/xF2/xF0/xE0/xEB/xFC/xED/xEE/xE9 /xEE/xF1/xE8 /xE2/xE5/xF0/xED/xEE/x2C /xF7/xF2/xEE Ik<ˆMR2/x2E /xC4/xEB/xFF /xEF/xEE /xE4/xE4/xE5/xF0 /xE6 /xE0/xED/xE8/xFF /xE6 /xE5 /xF2 /xE0/xEA /xEE/xE3/xEE
/x31/x36/xE4/xE2/xE8/xE6 /xE5/xED/xE8/xFF /xF1 /xEF/xEE/xEC/xEE/xF9/xFC/xFE /xE2/xED/xF3/xF2/xF0/xE5/xED/xED/xE8/xF5 /xEC/xE0/xF5 /xEE/xE2/xE8/xEA /xEE/xE2/x2C /xED/xF3/xE6/xED/xEE /xF1/xEE/xE7/xE4/xE0/xE2/xE0/xF2/xFC /xF3/xEF/xF0/xE0/xE2/xEB/xFF/xFE/xF9/xE8/xE9
/xEA/xE8/xED/xE5/xF2/xE8/xF7/xE5/xF1/xEA/xE8/xE9 /xEC/xEE/xEC/xE5/xED/xF2 /x2C /xEF/xF0/xEE/xEF/xEE/xF0/xF6/xE8/xEE/xED/xE0/xEB/xFC/xED/xFB/xE9 /xE2/xF0/xE5/xEC/xE5/xED/xE8 t /x2C /xE8/x2C /xF1 /xF3/xF7/xE5/xF2/xEE/xEC /xEE/xE3/xF0/xE0/xED/xE8/xF7/xE5/xED/x2D
/xED/xEE/xF1/xF2/xE8 /xF0/xE5/xF1/xF3/xF0/xF1/xEE/xE2 /xEC/xE0/xF5 /xEE/xE2/xE8/xEA /xEE/xE2/x2C /xF2 /xE0/xEA /xEE/xE5 /xF0/xE5/xF8/xE5/xED/xE8/xE5 /xE4/xEE/xEF/xF3 /xF1/xF2/xE8/xEC/xEE /xF2/xEE/xEB/xFC/xEA /xEE /xEA /xEE/xED/xE5/xF7/xED/xEE/xE5 /xE2/xF0/xE5/xEC/xFF/x2E
/xC4/xEB/xFF /xF1/xE2/xEE/xE1/xEE /xE4/xED/xEE/xE9 /xE4/xE8/xED/xE0/xEC/xE8/xEA/xE8 /xE2/xE5/xF0/xED/xEE /xE8 /xF1/xEB/xE5/xE4/xF3/xFE/xF9/xE5/xE5 /xF3/xF2/xE2/xE5/xF0 /xE6/xE4/xE5/xED/xE8/xE5/x3A
/xD3/xF2/xE2/xE5/xF0 /xE6/xE4/xE5/xED/xE8/xE5 /x33/x2E/x33
/xD1/xEA/xEE /xEB/xFC/xE6/xE5/xED/xE8/xE5 /xF8/xE0/xF0 /xE0 /xE1/xE5/xE7 /xEA/xE0/xF7/xE5/xED/xE8/xFF /xED/xE5/xE2/xEE/xE7/xEC/xEE/xE6/xED/xEE
/xC4/xE5/xE9/xF2/xE2/xE8/xF2/xE5/xEB/xFC/xED/xEE/x2C /xEF/xF0/xE8 θ≡π /xE8/xEC/xE5/xE5/xEC/x2C /xF7/xF2/xEE µ≡0 /x2C /xF7/xF2/xEE /xED/xE5/xE2/xEE/xE7/xEC/xEE /xE6/xED/xEE/x2E
/xD1/xEB/xE5/xE4/xF1/xF2/xE2/xE8/xE5
/xD1/xEA/xEE /xEB/xFC/xE6/xE5/xED/xE8/xE5 /xE8 /xEA/xE0/xF7/xE5/xED/xE8/xE5 /xE8/xEC/xE5/xFE/xF2 /xEC/xE5/xF1/xF2/xEE /xEE/xE4/xED/xEE/xE2/xF0/xE5 /xEC/xE5/xED/xED/xEE /xEF/xEE/xF7/xF2/xE8 /xE2/xF1/xFE/xE4/xF3/x2C /xEF/xF0/xE8/xF7/xE5 /xEC
/xE8/xF5 /xEE/xEA/xEE/xED/xF7/xE0/xED/xE8/xE5 /xE8/xEC/xE5/xE5/xF2 /xEC/xE5/xF1/xF2/xEE /xE1/xFB/xF2/xFC /xEE/xE4/xED/xEE/xE2/xF0/xE5 /xEC/xE5/xED/xED/xEE/x2E
/xCA/xF0/xEE/xEC/xE5 /xF2/xEE/xE3/xEE/x2C /xE2/xE5/xF0/xED/xEE /xF3/xF2/xE2/xE5/xF0 /xE6/xE4/xE5/xED/xE8/xE5/x3A
/xD3/xF2/xE2/xE5/xF0 /xE6/xE4/xE5/xED/xE8/xE5 /x33/x2E/x34
/xC4/xEB/xFF /xF1/xE2/xEE/xE1/xEE/xE4/xED/xEE/xE9 /xE4/xE8/xED/xE0/xEC/xE8/xEA/xE8 /xF8/xE0/xF0 /xE0 /x28/xF2/x2E/xE5 /xED/xE0 /xE2/xFB/xEA/xEB/xFE/xF7/xE5/xED/xED/xFB/xF5 /xEC/xE0/xF5/xEE/xE2/xE8/xEA/xE0/xF5/x29 /xF1/xE8/xF1/xF2/xE5 /xEC/xE0
/xE4/xEE/xEF/xF3/xF1/xEA/xE0/xE5/xF2 /xEF/xE5/xF0/xE2/xFB/xE9 /xE8/xED/xF2/xE5/xE3/xF0 /xE0/xEB /xE2/xE8/xE4/xE0
r=r0e∫
()d
/xC4/xE5/xE9/xF1/xF2/xE2/xE8/xF2/xE5/xEB/xFC/xED/xEE/x2C /xE5/xF1/xEB/xE8 /xF3/xE3 /xEB/xEE/xE2/xE0/xFF /xF1/xEA /xEE/xF0/xEE/xF1/xF2/xFC /xED/xE0/xEF/xF0/xE0/xE2/xEB/xE5/xED/xE0 /xEF/xEE /xEE /xE4/xED/xEE/xE9 /xE8/xE7 /xE3 /xEB/xE0/xE2/xED/xEE/xE9
/xEE/xF1/xE5/xE9 /xE8/xED/xE5/xF0/xF6/xE8/xE8 /x28/xE8/xE7 /xF3/xF2/xE2/xE5/xF0 /xE6/xE4/xE5/xED/xE8/xFF /x33/x2E/x31 /xFD/xF2/xEE /xFF/xE2/xEB/xFF/xE5/xF2/xF1 /xFF /xED/xE5/xEE/xE1 /xF5 /xEE /xE4/xE8/xEC/xFB/xEC /xF3 /xF1/xEB/xEE/xE2/xE8/xFF /xF0/xE0/xF1/x2D
/xF1/xEC/xE0/xF2/xF0/xE8/xE2/xE0/xE5/xEC/xEE/xE3/xEE /xE4/xE2/xE8/xE6 /xE5/xED/xE8/xFF /xEF/xEE /xEF/xF0 /xFF/xEC/xEE/xE9 /xEF/xF0/xE8 /xF3 /xF1/xEB/xEE/xE2/xE8/xE8 /xE2/xFB/xEA/xEB/xF7/xE5/xED/xED/xFB/xF5 /xEC/xE0/xF5 /xEE/xE2/xE8/xEA /xEE/xE2/x29/x2C /xF2/xEE
/xF1/xE8/xF1/xF2/xE5/xEC/xF3 /xEC/xEE /xE6/xED/xEE /xEF/xE5/xF0/xE5/xEF/xE8/xF1/xE0/xF2/xFC /xE2 /xE2/xE8/xE4/xE5
˙r=ξ(θ) cosθ+η(θ) sinθ
r˙θ=−ξ(θ) sinθ+η(θ) cosθ
ξ(θ) =δ(f−µ
i)
η(θ) =µ
i
/xC3 /xE4/xE5i /x15/xE3 /xEB/xE0/xE2/xED/xFB/xE9 /xEC/xEE/xEC/xE5/xED/xF2 /xE8/xED/xE5/xF0/xF6/xE8/xE8/x2C /xF1/xEE/xEE/xF2/xE2/xE5/xF2/xF1/xE2/xF3/xFE/xF9/xE8/xE9 /xF2/xEE/xE9 /xE3 /xEB/xE0/xE2/xED/xEE/xE9 /xEE/xF1/xE8/x2C /xE2/xEE/xEA/xF0/xF3/xE3 /xEA /xEE/x2D
/xF2/xEE/xF0/xEE/xE9 /xE8/xE4/xE5/xF2 /xE2/xF0/xE0/xF9/xE5/xED/xE8/xE5/x2E /xD0 /xE0/xE7/xE4/xE5/xEB/xE8/xE2 /xEE /xE4/xED/xEE /xF3/xF0/xE0/xE2/xED/xE5/xED/xE8/xE5 /xED/xE0 /xE4/xF0/xF3/xE3/xEE/xE5 /xE8/xEC/xE5/xE5/xEC/x3A
dr
r= Λ(θ)dθ
Λ(θ) =ξ(θ) cosθ+η(θ) sinθ
−ξ(θ) sinθ+η(θ) cosθ
/xCE/xF2/xEA/xF3 /xE4/xE0 /xE8 /xEF/xEE/xEB/xF3/xF7/xE0/xE5/xF2/xF1 /xFF /xF3/xF2/xE2/xE5/xF0 /xE6/xE4/xE5/xED/xE8/xE5 /xE7/xE0/xEC/xE5/xF7/xE0/xED/xE8/xFF/x2E /xD1/xF2/xEE/xE8/xF2 /xF2 /xE0/xEA/xE6 /xE5 /xEE/xF2/xEC/xE5/xF2/xE8/xF2/xFC/x2C /xF7/xF2/xEE /xE2
/x5B/x31/x30/x5D /xE1/xFB/xEB/xEE /xEF/xEE/xEA /xE0/xE7/xE0/xED/xEE /xED/xE0/xEB/xE8/xF7/xE8/xE5 /xEF/xE5/xF0/xE2/xEE/xE3/xEE /xE8/xED/xF2/xE5/xE3/xF0/xE0/xEB/xE0 /xE2 /xF1/xEB/xF3/xF7/xE0/xE5/x2C /xE5/xF1/xEB/xE8 /xF0/xE0/xF1/xEA/xEB/xE0/xE4/xFB/xE2/xE0/xF2/xFC
/xE2 /xF0 /xFF/xE4 /xEF/xEE /xEF/xE0/xF0/xE0/xEC/xE5/xF2/xF0/xF3 {=εδ /xE2/xFB/xF0/xE0/xE6 /xE5/xED/xE8/xFF /xE4/xEB/xFF /xF1/xE8/xEB /xE8 /xEC/xEE/xEC/xE5/xED/xF2/xEE/xE2/x2E /xC2/xFB/xF8/xE5/xE4/xEE/xEA /xE0/xE7/xE0/xED/xED/xEE/xE5
/xF3/xF2/xE2/xE5/xF0 /xE6/xE4/xE5/xED/xE8/xE5 /xEF/xEE/xEA /xE0/xE7/xFB/xE2/xE0/xE5/xF2 /x2C /xF7/xF2/xEE /xED/xE0/xEB/xE8/xF7/xE8/xE5 /xFD/xF2/xEE/xE3/xEE /xE8/xED/xF2/xE5/xE3/xF0/xE0/xEB/xE0 /xF1/xEE /xF5/xF0/xE0/xED/xFF/xE5/xF2/xF1 /xFF /xE8 /xE4/xEB/xFF /xF2/xEE/xF7/x2D
/xED/xFB/xF5 /xE2/xFB/xF0/xE0/xE6 /xE5/xED/xE8/xE9 f /xE8µ /x2E /xCC/xEE /xE6/xED/xEE /xEE/xF2/xEC/xE5/xF2/xE8/xF2/xFC/x2C /xF7/xF2/xEE /xED/xF3 /xEB/xFE /xE2 /xE7/xED/xE0/xEC/xE5/xED/xE0/xF2/xE5/xEB/xE5 /xF4/xF3/xED/xEA/xF6/xE8/xE8
Λ(θ) /xF1/xEE/xEE/xF2/xE2/xE5/xF2/xF1/xE2/xF3 /xE5/xF2 /xF1/xEE/xEE/xF2/xE2/xE5/xF2/xF1/xF2/xE2/xF3 /xE5/xF2 /xF0/xE5/xF8/xE5/xED/xE8/xE5 θ≡ˆθ≡const /x28/xF7/xF2/xEE /xEF/xF0/xE5/xE4/xF1/xF2 /xE0/xE2/xEB/xFF/xE5/xF2
/xF1/xEE/xE1/xEE/xE9 /xF0/xE0/xE2/xED/xEE/xE7/xE0/xEC/xE5/xE4/xEB/xE5/xED/xED/xEE/xE5 /xE4/xE2/xE8/xE6 /xE5/xED/xE8/xE5 /xF8/xE0/xF0/xE0/x29/x2E /xCD/xE0 /xE3/xF0/xE0/xF4/xE8/xEA /xE5 /xEB/xE8/xED/xE8/xE9 /xEF/xE5/xF0/xE2/xFB/xF5 /xE8/xED/xF2/xE5/x2D
/xE3/xF0/xE0/xEB/xEE/xE2 /xFD/xF2/xEE/xEC/xF3 /xF0/xE5/xF8/xE5/xED/xE8/xFE /xF1/xEE/xEE/xF2/xE2/xE5/xF2/xF1/xF2/xE2/xF3 /xE5/xF2 /xE2/xE5/xF0/xF2/xE8/xEA /xE0/xEB/xFC/xED/xE0/xFF /xEB/xE8/xED/xE8/xFF /xE2 /xEF/xEB/xEE/xF1/xEA /xEE/xF1/xF2/xE8 (r,θ) /x2E
/x31/x37/xCA/xF0/xEE/xEC/xE5 /xF2/xEE/xE3/xEE/x2C /xED/xE5/xF2/xF0/xF3 /xE4/xED/xEE /xE7/xE0/xEC/xE5/xF2/xE8/xF2/xFC /xE8 /xF2/xEE/x2C /xF7/xF2/xEE /xED/xE0 /xE2/xF1/xE5/xF5 /xE4/xE2/xE8/xE6 /xE5/xED/xE8/xFF/xF5 /xEF/xF0/xE8 r7→0,θ7→ˆθ /x2C
/xF7/xF2/xEE /xEE/xE7/xED/xE0 /xF7/xE0/xE5/xF2 /x2C /xE2 /xF1/xE2/xEE/xFE /xEE/xF7/xE5/xF0/xE5/xE4/xFC /xED/xE5 /xF2/xEE/xEB/xFC/xEA /xEE /xEE /xE4/xED/xEE/xE2/xF0/xE5/xEC/xE5/xED/xED/xEE/xE5 /xEE/xE1/xF0/xE0/xF9/xE5/xED/xE8/xE5 /xF3/xE3 /xEB/xEE/xE2/xEE/xE9
/xF1/xEA /xEE/xF0/xEE/xF1/xF2/xE8 /xE8 /xF1/xEA /xEE/xF0/xEE/xF1/xF2/xE8 /xF1/xEA /xEE/xEB/xFC/xE6 /xE5/xED/xE8/xFF /xE2 /xED/xF3 /xEB/xFC/x2C /xED/xEE /xE8 /xF2/xEE/x2C /xF7/xF2/xEE /xE2 /xEA /xEE/xED/xF6/xE5 /xE4/xE2/xE8/xE6 /xE5/xED/xE8/xFF /xE4/xEB/xFF
/xEB/xFE/xE1/xFB/xF5 /xF1/xF2 /xE0/xF0/xF2/xEE/xE2/xFB/xF5 /xF3 /xF1/xEB/xEE/xE2/xE8/xE9 /xE8/xF5 /xEE/xF2/xED/xEE/xF8/xE5/xED/xE8/xE5 /xEF/xEE/xF1/xF2/xEE /xFF/xED/xED/xEE /xE8 /xF0/xE0/xE2/xED/xEE tgˆθ /x2E /xC2/xEC/xE5/xF1/xF2/xE5 /xF1 /xF2/xE5/xEC/x2C
/xF2 /xE0/xEA /xEE/xE5 /xF0/xE5/xF8/xE5/xED/xE8/xE5 /xED/xE5 /xE5/xE4/xE8/xED/xF1/xF2/xE2/xE5/xED/xED/xEE/x2C /xE8 /xEC/xEE /xE6/xED/xEE /xEF/xEE/xEA /xE0/xE7/xE0/xF2/xFC /xF1/xF3/xF9/xE5/xF1/xF2/xE2/xEE/xE2/xE0/xED/xE8/xE5 /xEF/xEE /xEA/xF0/xE0/xE9/xED/xE5/xE9
/xEC/xE5/xF0/xE5 /xE4/xE2/xF3/xF5 /xF2 /xE0/xEA/xE8/xF5 /xF0/xE5/xE6/xE8/xEC/xEE/xE2 ˆθst∈(θ;π/2) /xE8ˆθunst∈(θ∗;π) /x2E /xD7/xE8/xF1/xEB/xE5/xED/xED/xEE/xE5 /xEC/xEE /xE4/xE5/x2D
/xEB/xE8/xF0/xEE/xE2/xE0/xED/xE8/xE5 /xEF/xEE/xEA /xE0/xE7/xFB/xE2/xE0/xE5/xF2 /x2C /xF7/xF2/xEE /xF2 /xE0/xEA/xE8/xF5 /xF0/xE5/xE6/xE8/xEC/xEE/xE2 /xF0/xEE/xE2/xED/xEE /xE4/xE2/xE0/x2C /xEF/xF0/xE8/xF7/xBC/xEC /xE5/xF1/xEB/xE8 /xEF/xE5/xF0/xE2/xFB/xE9
/xFF/xE2/xEB/xFF/xE5/xF2/xF1 /xFF /xEF/xF0/xE5/xE4/xE5/xEB/xFC/xED/xFB/xEC /xE4/xEB/xFF /xEF/xEE/xF7/xF2/xE8 /xE2/xF1/xE5/xF5 /xED/xE0 /xF7/xE0/xEB/xFC/xED/xFB/xF5 /xF3 /xF1/xEB/xEE/xE2/xE8/xE9/x2C /xF2/xEE /xE2/xF2/xEE/xF0/xEE/xE9 /xE2/xEE/xE7/xEC/xEE/x2D
/xE6 /xE5/xED /xEB/xE8/xF8/xFC /xE2 /xE2/xE8/xE4/xE5 /xF0/xE5/xF8/xE5/xED/xE8/xFF θ=const /x2C /xE0 /xF2/xF0/xE0/xE5/xEA/xF2/xEE/xF0/xE8/xE8/x2C /xED/xE0 /xF7/xE8/xED/xE0/xFE/xF9/xE8/xE9/xF1 /xFF /xE2 /xF1/xEA /xEE/xEB/xFC
/xF3/xE3/xEE /xE4/xED/xEE/xE9 /xE1/xEB/xE8/xE7/xEE/xF1/xF2/xE8 /xEE/xF2 /xED/xE5/xE3/xEE/x2C /xF1/xE2/xE5/xE4/xF3/xF2/xF1 /xFF /xEA /xEF/xE5/xF0/xE2/xEE/xEC/xF3 /xF0/xE5/xE6/xE8/xEC/xF3 /x2E /xC8/xEC/xE5/xED/xED/xEE /xF1 /xFD/xF2/xE8/xEC /xF1/xE2/xFF/xE7/xFB/x2D
/xE2/xE0/xE5/xF2/xF1 /xFF /xE2/xFB/xE1/xEE/xF0 /xE8/xED/xE4/xE5/xEA /xF1/xEE/xE2 /x73/x74 /xE8 /x75/x6E/x73/x74 /xE2 /xEE/xEF/xF0/xE5/xE4/xE5/xEB/xE5/xED/xE8/xE8 /xFD/xF2/xE8/xF5 /xF0/xE5/xE6/xE8/xEC/xEE/xE2/x2E /xC2 /xE7/xE0/xEA/xEB/xFE/xF7/xE5/xED/xE8/xE8
/xEF/xF0/xE8/xE2/xE5/xE4/xE5/xEC /xEB/xE8/xED/xE8/xE8 /xF3/xF0/xEE/xE2/xED/xFF r(θ) /xE2/xE1/xEB/xE8/xE7/xE8 /xF2/xEE/xF7/xE5/xEA ˆθst /xE8ˆθunst /x2E
θr(θ)
θst
θr(θ)
θunst
/xD0/xE8/xF1/x2E /x31/x30/x3A /xCB/xE8/xED/xE8/xE8 /xF3/xF0/xEE/xE2/xED/xFF/x2E
/x32/x2E/x34/x2E/x33 /xCF/xF0/xE8/xEC/xE5/xF0 /xEF/xEE/xF1/xF2/xF0/xEE/xE5/xED/xE8/xFF /xF3/xEF/xF0/xE0/xE2/xEB/xE5/xED/xE8/xFF /xE4/xEB/xFF /xE4/xE2/xE8/xE6 /xE5/xED/xE8/xFF /xEF/xEE /xEE/xF2/xF0/xE5/xE7/xEA/xF3
/xCF/xE5/xF0/xE5/xF5 /xEE /xE4/xFF /xEA /xEF/xEE/xF1/xF2/xF0/xEE/xE5/xED/xE8/xFE /xF3/xEF/xF0/xE0/xE2/xEB/xE5/xED/xE8/xFF /xE4/xEB/xFF /xEF/xF0/xEE /xF5 /xEE /xE6/xE4/xE5/xED/xE8/xFF /xEA /xEE/xED/xEA/xF0/xE5/xF2/xED/xEE/xE3/xEE /xEE/xF2/xF0/xE5/xE7/x2D
/xEA /xE0 /xE2/xE0/xED/xEE /xE7/xE0/xEC/xE5/xF2/xE8/xF2/xFC/x2C /xF7/xF2/xEE /xE6 /xE5/xEB/xE0/xE5/xEC/xEE/xE5 /xE7/xED/xE0 /xF7/xE5/xED/xE8/xE5 /xEF/xF0/xEE/xF4/xE8/xEB/xFF /xF1/xEA /xEE/xF0/xEE/xF1/xF2/xE8 /xE4/xEE/xEB/xE6/xED/xEE /xF3 /xE4/xEE/xE2/xEB/xE5/x2D
/xF2/xE2/xEE/xF0 /xFF/xF2/xFC /xF3 /xF1/xEB/xEE/xE2/xE8/xFE v(t)∈C1/x2C /xF2 /xE0/xEA /xEA /xE0/xEA /xF0/xE0/xE7/xF0/xFB/xE2/xED/xEE/xE5 /xF0/xE5/xF8/xE5/xED/xE8/xE5 /xEF/xEE /xF3 /xF1/xEA /xEE/xF0/xE5/xED/xE8/xFF/xEC /xE2/xE5/xE4/xE5/xF2 /xEA
/xF0/xE0/xE7/xF0/xFB/xE2/xF3 /xEF/xEE θ /x2C /xF7/xF2/xEE /xE2 /xF1/xE2/xEE/xFE /xEE/xF7/xE5/xF0/xE5/xE4/xFC/x2C /xEA /xF0/xE0/xE7/xF0/xFB/xE2/xF3 /xEF/xEE /xF1/xEA /xEE/xF0/xEE/xF1/xF2 /xFF/xEC/x2C /xF7/xF2/xEE /xED/xE5/xE6 /xE5/xEB/xE0/xF2/xE5/xEB/xFC/xED/xEE/x2E
/xCF/xEE/xFD/xF2/xEE/xEC/xF3 /xE2/xFB/xE1/xE5/xF0/xE5/xEC /xF1/xEB/xE5/xE4/xF3/xFE/xF9/xE8/xE9 /xEF/xF0/xEE/xF4/xE8/xEB/xFC /xF1/xEA /xEE/xF0/xEE/xF1/xF2/xE8/x3A
v(t) =Acosηt
2sinηt t∈[0;π/η]
/xC4/xEB/xFF /xEF/xE5/xF0/xE5/xEC/xE5/xF9/xE5/xED/xE8/xFF /xE2/xE5/xF0/xED/xEE/x2C /xF7/xF2/xEE ∆x=4A
3η/x2E
/xC5/xF1/xEB/xE8 /xED/xE0/xEF/xF0/xE0/xE2/xEB/xE5/xED/xE8/xE5 /xE2/xE5/xEA/xF2/xEE/xF0/xE0 ey /xF1/xEE/xE2/xEF/xE0/xE4/xE0/xE5/xF2 /xF1 /xED/xE0/xEF/xF0/xE0/xE2/xEB/xE5/xED/xE8/xE5/xEC /xEA /xE0/xEA /xEE/xE9/x2D/xEB/xE8/xE1/xEE /xE8/xE7
/xE3 /xEB/xE0/xE2/xED/xFB/xF5 /xEE/xF1/xE5/xE9 /xE8/xED/xE5/xF0/xF6/xE8/xE8/x2C /xF3/xEF/xF0/xE0/xE2/xEB/xFF/xFE/xF9/xE8/xE9 /xE2/xE5/xEA/xF2/xEE/xF0 =C /xEA/xE8/xED/xE5/xF2/xE8/xF7/xE5/xF1/xEA /xEE/xE3/xEE /xEC/xEE/xEC/xE5/xED/xF2 /xE0
/xEC/xEE /xE6/xED/xEE /xE8/xF1/xEA /xE0/xF2/xFC /xE2 /xE2/xE8/xE4/xE5 =βe /x2E /xC2 /xF1/xE8/xEB/xF3 /xF3/xF0/xE0/xE2/xED/xE5/xED/xE8/xE9 /xF2 /xE0/xEA /xEE/xE5 /xF0/xE5/xF8/xE5/xED/xE8/xE5 /xED/xE0/xE9/xE4/xE5/xF2/xF1 /xFF/x2C /xE8
/xE1/xF3 /xE4/xE5/xF2 /xE5/xE4/xE8/xED/xF1/xF2/xE2/xE5/xED/xED/xFB/xEC/x2E /xD2 /xE0/xEA/xE8/xEC /xEE/xE1/xF0/xE0/xE7/xEE/xEC/x2C /xE2 /xFD/xF2/xEE/xEC /xF1/xEB/xF3/xF7/xE0/xE5 /xE8/xEC/xE5/xE5/xEC/x3A
˙=C−1(µ(θ) + ˙ωλe)e
/x31/x38/xC3 /xE4/xE5λe /x15/xF1/xEE/xEE/xF2/xE2/xE5/xF2/xF1/xF2/xE2/xF3/xFE/xF9/xE5/xE5 /xF1/xEE/xE1/xF1/xF2/xE2/xE5/xED/xED/xEE/xEC/xF3 /xE2/xE5/xEA/xF2/xEE/xF0/xF3 e /xF1/xEE/xE1/xF1/xF2/xE2/xE5/xED/xED/xEE/xE5 /xE7/xED/xE0 /xF7/xE5/xED/xE8/xE5/x2E
/xC5/xF1/xEB/xE8 /xE6 /xE5 /xE2/xE5/xEA/xF2/xEE/xF0 e /xED/xE5 /xFF/xE2/xEB/xFF/xE5/xF2/xF1 /xFF /xF1/xEE/xE1/xF1/xF2/xE2/xE5/xED/xED/xFB/xEC /xE4/xEB/xFF /xEE/xEF/xE5/xF0/xE0/xF2/xEE/xF0/xE0 /xE8/xED/xE5/xF0/xF6/xE8 I /x2C /xED/xE0/x2D
/xF5 /xEE /xE4/xE8/xEC /xF3/xEF/xF0/xE0/xE2/xEB/xFF/xFE/xF9/xE8/xE5 /xF3/xE3 /xEB/xEE/xE2/xFB/xE5 /xF1/xEA /xEE/xF0/xEE/xF1/xF2/xE8 /xE8/xF1 /xF5 /xEE /xE4/xFF /xE8/xE7 /xF1/xEB/xE5/xE4/xF3/xFE/xF9/xE5/xE9 /xF1/xE8/xF1/xF2/xE5/xEC/xFB/x3A
˙=C−1[(µ(θ) + ˙ωI−ω2ΩeI)e−ωΩeC]
/xCF/xF0/xE8/xE2/xE5/xE4/xE5/xEC /xE3/xF0/xE0/xF4/xE8/xEA/xE8 /xEE/xF1/xED/xEE/xE2/xED/xFB/xF5 /xEF/xE0/xF0/xE0/xEC/xE5/xF2/xF0/xEE/xE2 /xE4/xE2/xE8/xE6 /xE5/xED/xE8/xFF /x28 δ= 0.03,ε= 0.06 /x29/x2C
u,ω,x,θ,U /x2E /xCF/xFF/xF2/xFB/xE9 /xEF/xE0/xF0/xE0/xEC/xE5/xF2/xF0/x16/xF0/xE0/xE7/xEC/xE5/xF0/xED/xEE/xE5 /xF3/xEF/xF0/xE0/xE2/xEB/xFF/xFE/xF9/xE5/xE5 /xED/xE0/xEF/xF0 /xFF/xE6 /xE5/xED/xE8/xE5/x2E /xC2/xE7/xFF/xF2/xFB
/xE7/xED/xE0 /xF7/xE5/xED/xE8/xFF ∆x= 2π,η =π/7 /x2E /xCF/xE0/xF0/xE0/xEC/xE5/xF2/xF0/xFB /xFD/xEB/xE5/xEA/xF2/xF0/xEE /xE4/xE2/xE8/xE3 /xE0/xF2/xE5/xEB/xE5/xE9 ({1;{2) /xE2/xE7/xFF/xF2/xFB
/xF2 /xE0/xEA/xE8/xEC/xE8/x3A {1= 2.6,{2= 0.2 /x2E
0 1 2 3 4 5 6 7−4−3−2−10123x 10−7
tu
0 1 2 3 4 5 6 700.20.40.60.811.21.41.61.8
tω
/xD0/xE8/xF1/x2E /x31/x31/x3A /xCE/xF1/xED/xEE/xE2/xED/xFB/xE5 /xEF/xE0/xF0/xE0/xEC/xE5/xF2/xF0/xFB /xE4/xE2/xE8/xE6 /xE5/xED/xE8/xFF u,ω /x2E
0 1 2 3 4 5 6 701234567
tx
0 1 2 3 4 5 6 7−1−0.500.511.5x 10−8
tθ1−π/2
/xD0/xE8/xF1/x2E /x31/x32/x3A /xCE/xF1/xED/xEE/xE2/xED/xFB/xE5 /xEF/xE0/xF0/xE0/xEC/xE5/xF2/xF0/xFB /xE4/xE2/xE8/xE6 /xE5/xED/xE8/xFF x,θ /x2E
0 1 2 3 4 5 6 7−25−20−15−10−5051015
tU
/xD0/xE8/xF1/x2E /x31/x33/x3A /xD3/xEF/xF0/xE0/xE2/xEB/xFF/xFE/xF9/xE5/xE5 /xED/xE0/xEF/xF0 /xFF/xE6 /xE5/xED/xE8/xE5 U /x2E
/x31/x39/xC4/xEB/xFF /xE2/xE5/xEA/xF2/xEE/xF0/xEE/xE2 e= (1/√
2;−1/√
2; 0)e= (1; 0; 0)
0 1 2 3 4 5 6 7−30−20−100102030
tU
  U1
U2
U3
0 1 2 3 4 5 6 7−50−40−30−20−100102030
tU
/xD0/xE8/xF1/x2E /x31/x34/x3A /xD3/xEF/xF0/xE0/xE2/xEB/xFF/xFE/xF9/xE5/xE5 /xED/xE0/xEF/xF0 /xFF/xE6 /xE5/xED/xE8/xE5 U /x2E
/x32/x2E/x35 /xCE/xE1 /xF5 /xEE /xE4 /xEF/xF0/xE5/xEF/xFF/xF2/xF1/xF2/xE2/xE8/xE9/x2E /xCA/xF0/xE8/xE2/xEE/xEB/xE8/xED/xE5/xE9/xED/xEE/xE5 /xE4/xE2/xE8/xE6 /xE5/xED/xE8/xE5
/x32/x2E/x35/x2E/x31 /xCE/xF1/xED/xEE/xE2/xED/xFB/xE5 /xE7/xE0/xEC/xE5/xF7/xE0/xED/xE8/xFF
/xC1/xE0/xE7/xEE/xE2/xFB/xE5 /xE4/xE2/xE8/xE6 /xE5/xED/xE8/xFF /xF0/xEE/xE1/xEE/xF2 /xE0/x16/xEF/xEE/xE2/xEE/xF0/xEE/xF2 /xED/xE0 /xEC/xE5/xF1/xF2/xE5 /xED/xE0 /xE7/xE0/xE4/xE0/xED/xED/xFB/xE9 /xF3/xE3/xEE/xEB/x2C /xE0 /xF2 /xE0/xEA/xE6 /xE5
/xEF/xF0/xEE /xF5 /xEE /xE6/xE4/xE5/xED/xE8/xE5 /xEE/xF2/xF0/xE5/xE7/xEA /xE0 /xE7/xE0/xE4/xE0/xED/xED/xEE/xE9 /xE4/xEB/xE8/xED/xFB/x2C/xEF/xEE/xE7/xE2/xEE/xEB/xFF/xFE/xF2 /xF0/xE5/xF8/xE8/xF2/xFC /xE7/xE0/xE4/xE0 /xF7/xF3 /xE8 /xEE /xEF/xF0/xEE /xF5 /xEE /xE6/x2D
/xE4/xE5/xED/xE8/xE8 /xEB/xEE/xEC/xE0/xED/xEE/xE9/x2E /xCA/xE0/xEA /xF3/xE6 /xE5 /xE3/xEE/xE2/xEE/xF0/xE8/xEB/xEE/xF1/xFC /xE2/xFB/xF8/xE5/x2C /xE5/xF1/xEB/xE8 /xF2/xF0/xE0/xE5/xEA/xF2/xEE/xF0/xE8/xE5/xE9 /xFF/xE2/xEB/xFF/xE5/xF2/xF1 /xFF /xF1/xEF/xF0 /xFF/xEC/x2D
/xEB/xFF/xE5/xEC/xE0/xFF /xEA/xF0/xE8/xE2/xE0/xFF/x2C /xF2/xEE /xE0/xEF/xEF/xF0/xEE/xEA/xE8/xF1/xE8/xEC/xF0/xF3 /xFF /xE5/xBC /xEB/xEE/xEC/xE0/xED/xFB/xEC/xE8/x2C /xE8 /xEA /xEE/xEC/xE1/xE8/xED/xE8/xF0/xF3 /xFF /xE0/xEB/xF4/xE0/xE2/xE8/xF2/xED/xFB/xE5
/xE4/xE2/xE8/xE6 /xE5/xED/xE8/xFF/x2C /xEC/xEE /xE6/xED/xEE /xE3/xEE/xE2/xEE/xF0/xE8/xF2/xFC /xEE /xEF/xF0/xEE /xF5 /xEE /xE6/xE4/xE5/xED/xE8/xE8 /xF2 /xE0/xEA /xEE/xE9 /xF2/xF0/xE0/xE5/xEA/xF2/xEE/xF0/xE8/xE8 /xF1 /xED/xE5/xEA /xEE/xF2/xEE/xF0/xEE/xE9 /xF2/xEE/xF7/x2D
/xED/xEE/xF1/xF2/xFC/xFE/x2E /xCF/xF0/xE8/xF7/xBC/xEC/x2C /xF2 /xE0/xEA /xEA /xE0/xEA /xE2 /xF2/xE5/xEE/xF0/xE8/xE8 /xEE/xE3/xF0/xE0/xED/xE8/xF7/xE5/xED/xE8/xFF /xF1/xED/xE8/xE7/xF3 /xED/xE0 /xE4/xEB/xE8/xED/xF3 /xEE/xF2/xF0/xE5/xE7/xEA /xE0 /xED/xE5/xF2 /x2C
/xEC/xEE /xE6/xED/xEE /xF1/xEA /xE0/xE7/xE0/xF2/xFC/x2C /xF7/xF2/xEE /xFD/xF2 /xE0 /xF2/xEE/xF7/xED/xEE/xF1/xF2/xFC /xE1/xF3 /xE4/xE5/xF2 /xF1/xEA /xEE/xEB/xFC /xF3/xE3/xEE /xE4/xED/xEE /xE1/xEE/xEB/xFC/xF8/xEE/xE9/x2E /xC2/xEC/xE5/xF1/xF2/xE5 /xF1 /xF2/xE5/xEC/x2C
/xF1 /xEF/xF0/xE0/xEA/xF2/xE8/xF7/xE5/xF1/xEA /xEE/xE9 /xF2/xEE/xF7/xEA/xE8 /xE7/xF0/xE5/xED/xE8/xFF/x2C /xE4/xE2/xE8/xE6 /xE5/xED/xE8/xE5 /x22/xF0/xFB/xE2/xEA /xE0/xEC/xE8/x22/xED/xE5 /xE2/xF1/xE5/xE3 /xE4/xE0 /xFF/xE2/xEB/xFF/xE5/xF2/xF1 /xFF /xF5 /xEE/xF0/xEE/x2D
/xF8/xE8/xEC /xF1/xEF/xEE/xF1/xEE/xE1/xEE/xEC /xEF/xF0/xEE /xF5 /xEE /xE6/xE4/xE5/xED/xE8/xFF /xE2/xE4/xEE/xEB/xFC /xE7/xE0/xE4/xE0/xED/xED/xEE/xE9 /xF2/xF0/xE0/xE5/xF2/xEE/xF0/xE8/xE8/x2C /xE0 /xE2 /xF1/xEB/xF3/xF7/xE0/xE5/x2C /xE5/xF1/xEB/xE8 /xE7/xE0/xEA /xEE/xED
/xE4/xE2/xE8/xE6 /xE5/xED/xE8/xFF /xE2/xEA/xEB/xFE/xF7/xE0/xE5/xF2 /xEF/xEE/xE2/xEE/xF0/xEE/xF2 /xED/xE0 /xEC/xE0/xEB/xFB/xE5 /xF3/xE3 /xEB/xFB /xE8/xEB/xE8 /xE4/xE2/xE8/xE6 /xE5/xED/xE8/xFF /xEF/xEE /xEC/xE0/xEB/xFB/xEC /xEE/xF2/xF0/xE5/xE7/x2D
/xEA /xE0/xEC/x2C /xF2/xEE /xEE/xED /xE8 /xE2/xEE/xE2/xF1/xE5 /xEF/xF0/xE5/xE4/xF1/xF2 /xE0/xE2/xEB/xFF/xE5/xF2/xF1 /xFF /xED/xE5/xF0/xE5/xE0/xEB/xE8/xE7/xF3 /xE5/xEC/xFB/xEC /xED/xE0 /xEF/xF0/xE0/xEA/xF2/xE8/xEA /xE5/x2E /xCF/xEE/xFD/xF2/xEE/xEC/xF3 /xE4/xEB/xFF
/xE1/xEE/xEB/xE5/xE5 /xFD/xF4/xF4/xE5/xEA/xF2/xE8/xE2/xED/xEE/xE3/xEE /xEC/xE0/xED/xE5/xE2/xF0/xE8/xF0/xEE/xE2/xE0/xED/xE8/xFF /xED/xE5/xEE/xE1 /xF5 /xEE /xE4/xE8/xEC/xEE /xF0/xE5/xF8/xE8/xF2/xFC /xE7/xE0/xE4/xE0 /xF7/xF3 /xEE /xEF/xF0/xEE /xF5 /xEE /xE6/xE4/xE5/x2D
/xED/xE8/xE8 /xE0/xEF/xEF/xE0/xF0/xE0/xF2/xEE/xEC /xE8 /xEA/xF0/xE8/xE2/xEE/xEB/xE8/xED/xE5/xE9/xED/xEE/xE9 /xF2/xF0/xE0/xE5/xEA/xF2/xEE/xF0/xE8/xE8 /xF2/xEE /xE6 /xE5/x2E
/xCF/xF3 /xF1/xF2/xFC /xEA/xF0/xE8/xE2/xE0/xFF γ /x2C /xEF/xEE /xEA /xEE/xF2/xEE/xF0/xEE/xE9 /xE4/xE2/xE8/xE6 /xE5/xF2/xF1 /xFF /xF6/xE5/xED/xF2/xF0 /xEC/xE0/xF1/xF1 /xF0/xEE/xE1/xEE/xF2 /xE0 O /xE7/xE0/xE4/xE0/xED/xE0 /xF1/xE2/xEE/xE8/xEC
/xED/xE0/xF2/xF3/xF0/xE0/xEB/xFC/xED/xFB/xEC /xEF/xE0/xF0/xE0/xEC/xE5/xF2/xF0/xEE/xEC s /x2C /xF2 /x2E/xE5/x2Ex=x(s),y=y(s) /x2E /xD1/xE2/xFF/xE6 /xE5/xEC /xF1 /xEA/xF0/xE8/xE2/xEE/xE9 /xE5/xF1/xF2/xE5/x2D
/xF1/xF2/xE2/xE5/xED/xED/xFB/xE9 /xF2/xF0/xE5/xF5/xE3/xF0/xE0/xED/xED/xE8/xEA /xD4/xF0/xE5/xED/xE5 e,en.e /x2E /xCF/xEE/xEB/xEE /xE6 /xE5/xED/xE8/xE5 /xE2/xF1/xEF/xEE/xEC/xEE/xE3 /xE0/xF2/xE5/xEB/xFC/xED/xEE/xE3/xEE /xE1/xE0/xE7/xE8/xF1/xE0
/xEE/xF2/xED/xEE/xF1/xE8/xF2/xE5/xEB/xFC/xED/xEE /xE5/xF1/xF2/xE5/xF1/xF2/xE2/xE5/xED/xED/xEE/xE3/xEE /xF2/xF0/xE5/xF5/xE3/xF0/xE0/xED/xED/xE8/xEA /xE0 /xF5 /xE0/xF0/xE0/xEA/xF2/xE5/xF0/xE8/xE7/xF3 /xE5/xF2/xF1 /xFF /xF3/xE3 /xEB/xEE/xEC φ /xEC/xE5/xE6/xE4/xF3
/xE2/xE5/xEA/xF2/xEE/xF0/xE0/xEC/xE8 eI /xE8e /x2E /xC4/xEB/xFF /xF1/xEA /xEE/xF0/xEE/xF1/xF2/xE8 /xE1/xF3 /xE4/xE5/xF2 /xE2/xFB/xEF/xEE/xEB/xED/xE5/xED/xEE /xF1/xEE/xEE/xF2/xED/xEE/xF8/xE5/xED/xE8/xE5/x3A
˙se= (u+ Ω II)eI−ΩIeII
/xC8/xEC/xE5/xE5/xF2 /xEC/xE5/xF1/xF2/xEE /xF1/xEB/xE5/xE4/xF3/xFE/xF9/xE5/xE5 /xF3/xF2/xE2/xE5/xF0 /xE6/xE4/xE5/xED/xE8/xE5/x3A
/xD3/xF2/xE2/xE5/xF0 /xE6/xE4/xE5/xED/xE8/xE5 /x34/x2E/x31
/xC4/xEB/xFF /xE4/xE2/xE8/xE6/xE5/xED/xE8/xFF /xED/xE5 /xEF/xEE /xEF/xF0/xFF/xEC/xEE/xE9 /xEB/xE8/xED/xE8/xE8 /xE2/xE5/xF0/xED/xEE/x2C /xF7/xF2/xEE ΩI̸= 0 /xED/xE0 /xEB/xFE/xE1/xEE /xEC /xE8/xED/xF2/xE5/xF0/xE2/xE0/xEB/xE5
/xE2/xF0/xE5 /xEC/xE5/xED/xE8
/xC4/xE5/xE9/xF1/xF2/xE2/xE8/xF2/xE5/xEB/xFC/xED/xEE/x2C /xEF/xF3 /xF1/xF2/xFC /xED/xE0 /xE8/xED/xF2/xE5/xF0/xE2/xE0/xEB/xE5 /xE2/xF0/xE5/xEC/xE5/xED/xE8 T /xE2/xE5/xF0/xED/xEE /xEF/xF0/xEE/xF2/xE8/xE2/xED/xEE/xE5/x2C /xE8 ΩI≡0 /x2E
/x32/x30/xCD/xEE /xF2/xEE/xE3 /xE4/xE0/x2C /xEA /xE0/xEA /xF1/xEA /xE0/xE7/xE0/xED/xEE /xE2/xFB/xF8/xE5/x2C fII≡0 /x2E /xCA/xF0/xEE/xEC/xE5 /xF2/xEE/xE3/xEE/x2C /xE8/xE7 /xF1/xEE/xEE/xF2/xED/xEE/xF8/xE5/xED/xE8/xFF /xED/xE0 /xF1/xEA /xEE/x2D
/xF0/xEE/xF1/xF2/xFC /xEB/xE5/xE3/xEA /xEE /xE7/xE0/xEA/xEB/xFE/xF7/xE8/xF2/xFC/x2C /xF7/xF2/xEE /xE2/xE5/xEA/xF2/xEE/xF0/xE0 eI /xE8e /xF1/xEE/xE2/xEF/xE0/xE4/xE0/xFE/xF2 /xED/xE0 /xFD/xF2/xEE/xEC /xEF/xF0/xEE/xEC/xE5/xE6/xF3/xF2/xEA /xE5/x2E
/xCF/xF0/xEE/xE5/xF6/xE8/xF0/xF3 /xFF /xED/xE0 /xE3 /xEB/xE0/xE2/xED/xF3/xFE /xED/xEE/xF0/xEC/xE0/xEB/xFC /xF3/xF0/xE0/xE2/xED/xE5/xED/xE8/xE5 /xED/xE0 /xE8/xEC/xEF/xF3 /xEB/xFC/xF1 /xEF/xEE/xEB/xF3/xF7/xE0/xE5/xEC/x3A
k(s) ˙s2= 0
/xCE/xF2/xEA/xF3 /xE4/xE0 /xF1/xEB/xE5/xE4/xF3 /xE5/xF2 /xF7/xF2/xEE /xF2/xF0/xE0/xE5/xEA/xF2/xEE/xF0/xE8/xFF /xEF/xF0 /xFF/xEC/xE0/xFF /xEB/xE8/xED/xE8/xFF/x2E
/xD2 /xE0/xEA/xE8/xEC /xEE/xE1/xF0/xE0/xE7/xEE/xEC/x2C /xE4/xEB/xFF /xE2/xFB/xF7/xE8/xF1/xEB/xE5/xED/xE8/xFF /xF1/xE8/xEB /xE8 /xEC/xEE/xEC/xE5/xED/xF2/xEE/xE2 /xED/xE5/xEE/xE1 /xF5 /xEE /xE4/xE8/xEC/xEE /xF3/xF7/xE5/xF1/xF2/xFC /xE5/xF9/xE5 /xF2/xEE/xF2
/xF4/xE0/xEA/xF2 /x2C/xF7/xF2/xEE
n=g
R(1 +fIII(θ1,θ2,θ3))
/xC2 /xEE/xE1/xF9/xE5/xEC /xF1/xEB/xF3/xF7/xE0/xE5 /xEF/xEE/xEB/xF3/xF7/xE0/xE5/xF2/xF1 /xFF /xF1/xEB/xE5/xE4/xF3/xFE/xF9/xE0/xFF /xF1/xE8/xF1/xF2/xE5/xEC/xE0 /xF3/xF0/xE0/xE2/xED/xE5/xED/xE8/xE9/x3A
¨s=fIcosφ−fIIsinφ
k(s) ˙s2=fIsinφ+fIIcosφ
d
dt(I!+c) = ˆD
/xC3 /xE4/xE5 ˆD /x15/xEC/xE0/xF2/xF0/xE8/xF6/xE0 /xEF/xE5/xF0/xE5/xF5 /xEE /xE4/xE0 /xE2/xF1/xEF/xEE/xEC/xEE/xE3 /xE0/xE5/xEB/xFC/xED/xEE/xE3/xEE /xF0/xE5/xEF/xE5/xF0/xE0 /xEA /xF0/xE5/xEF/xE5/xF0/xF3 /xE6 /xE5/xF1/xF2/xEA /xEE /xF1/xE2/xFF/xE7/xE0/xED/xED/xEE/x2D
/xEC/xF3 /xF1 /xF8/xE0/xF0/xEE/xEC/x2C /xE8 /xE5/xF1/xF2/xFC /xEF/xF0/xEE/xE8/xE7/xE2/xE5/xE4/xE5/xED/xE8/xE5 /xEC/xE0/xF2/xF0/xE8/xF6/xFB D /xED/xE0 /xEC/xE0/xF2/xF0/xE8/xF6/xF3 /xEF/xEE/xE2/xEE/xF0/xEE/xF2 /xE0 /xE2 /xE3/xEE/xF0/xE8/xE7/xEE/xED/x2D
/xF2 /xE0/xEB/xFC/xED/xEE/xE9 /xEF/xEE/xF1/xEA /xEE/xF1/xF2/xE8 /xED/xE0 /xF3/xE3/xEE/xEB /xEC/xE5/xE6/xE4/xF3 /xE2/xE5/xEA/xF2/xEE/xF0/xE0/xEC/xE8 eI /xE8ex /x3A
ˆD=D
cos(φ+ψ)−sin(φ+ψ) 0
sin(φ+ψ) cos(φ+ψ) 0
0 0 1

/xC7/xE4/xE5/xF1/xFCψ /x16/xF3/xE3/xEE/xEB /xEC/xE5/xE6/xE4/xF3 /xE2/xE5/xEA/xF2/xEE/xF0/xE0/xEC/xE8 e /xE8ex /x3B /xE5/xE3/xEE /xEA /xEE/xEE/xF0 /xE4/xE8/xED/xE0/xF2/xFB/x2C /xEE/xF7/xE5/xE2/xE8/xE4/xED/xEE/x2C /xF0/xE0/xE2/xED/xFB
(∂x′
∂s;∂y′
∂s) /x2E /xCA/xF0/xEE/xEC/xE5 /xF2/xEE/xE3/xEE/x2C /xE2 /xEF/xF0/xEE/xE5/xEA/xF6/xE8/xE8 /xED/xE0 /xEE/xF1/xE8 /xE5/xF1/xF2/xE5/xF1/xF2/xE2/xE5/xED/xED/xEE/xE3/xEE /xF2/xF0/xE5/xF5/xE3/xF0/xE0/xED/xED/xE8/xEA /xE0 /xE2/xFB/xEF/xEE/xEB/x2D
/xED/xFF/xFE/xF2/xF1 /xFF /xE4/xE2/xE0 /xF1/xEB/xE5/xE4/xF3/xFE/xF9/xE8/xF5 /xEA/xE8/xED/xE5/xEC/xE0/xF2/xE8/xF7/xE5/xF1/xEA/xE8/xF5 /xF1/xEE/xEE/xF2/xED/xEE/xF8/xE5/xED/xE8/xFF/x3A
˙s= (u+ Ω II) cosφ−ΩIsinφ
0 = (u+ Ω II) sinφ+ Ω Icosφ
/xCF/xE5/xF0/xE5/xF5 /xEE /xE4/xFF /xEA /xEF/xE5/xF0/xE5/xEC/xE5/xED/xFB/xEC r,θk /xEF/xEE/xF1/xEB/xE5/xE4/xED/xE8/xE5 /xE4/xE2/xE0 /xF3 /xF1/xEB/xEE/xE2/xE8/xFF /xEF/xE5/xF0/xE5/xEF/xE8/xF1/xFB/xE2/xE0/xFE/xF2/xF1 /xFF /xE2 /xE2/xE8/xE4/xE5
tgφ=−δsinθ1cosθ2
δsinθ1sinθ2+ cosθ1
r=˙s
(sinθ1sinθ2+ cosθ1) cosφ−sinθ1sinθ2sinφ
/xC7/xE0/xE4/xE0/xE2/xE0/xFF /xEA/xF0/xE8/xE2/xF3/xFE γ(s) /x2C /xE7/xE0/xEA /xEE/xED /xE4/xE2/xE8/xE6 /xE5/xED/xE8/xFF s(t) /x2C /xE0 /xF2 /xE0/xEA/xE6 /xE5 /xE6 /xE5/xEB/xE0/xE5/xEC/xEE/xE5 /xE2/xE5/xF0/xF7/xE5/xED/xE8/xE5 ωz(t)
/xED/xE0/xF5 /xEE /xE4/xE8/xEC /xE2/xE5/xEA/xF2/xEE/xF0 /xF3/xE3 /xEB/xEE/xE2/xEE/xE9 /xF1/xEA /xEE/xF0/xEE/xF1/xF2/xE8/x2C /xEF/xEE/xF1/xEB/xE5 /xF7/xE5/xE3/xEE /xE8 /xF3/xEF/xF0/xE0/xE2/xEB/xE5/xED/xE8/xFF/x2E /xC2/xEE/xEE/xE1/xF9/xE5 /xE3/xEE/xE2/xEE/xF0 /xFF/x2C
/xEF/xF0/xEE/xE8/xE7/xE2/xEE/xEB/xFC/xED/xFB/xEC /xEE/xE1/xF0/xE0/xE7/xEE/xEC /xFD/xF2/xEE /xF1 /xE4/xE5/xEB/xE0/xF2/xFC /xED/xE5/xEB/xFC/xE7/xFF/x2C /xF2 /xE0/xEA /xEA /xE0/xEA /xE2/xE5/xF0/xED/xEE /xF1/xEB/xE5/xE4/xF3/xFE/xF9/xE5/xE5/x3A
/x32/x31/xD3/xF2/xE2/xE5/xF0 /xE6/xE4/xE5/xED/xE8/xE5 /x34/x2E/x32
/xD4/xF3/xED/xEA/xF6/xE8/xE8k(s) /xE8s(t) /xE4/xEE /xEB/xE6/xED/xFB /xE2 /xEA/xE0/xE6/xE4/xFB/xE9 /xEC/xEE /xEC/xE5/xED/xF2 /xE2/xF0/xE5 /xEC/xE5/xED/xE8 /xF3/xE4/xEE/xE2/xEB/xE5/xF2/xE2/xEE/xF0/xFF/xF2/xFC
/xED/xE5/xF0 /xE0/xE2/xE5/xED/xF1/xF2/xE2/xF3
¨s2+k2(s) ˙s4≤F2
F= max
1;2;3fI(θ1,θ2,θ3)2+ max
1;2;3fII(θ1,θ2,θ3)2
/xD7/xF2/xEE /xF1/xEB/xE5/xE4/xF3 /xE5/xF2 /xE8/xE7 /xEE/xE3/xF0/xE0/xED/xE8/xF7/xE5/xED/xED/xEE/xF1/xF2/xE8 /xF4/xF3/xED/xEA/xF6/xE8/xE9 fi /x2C /xE2 /xF2 /xE0/xEA/xE6 /xE5 /xFF/xE2/xED/xEE/xE3/xEE /xE2/xE8/xE4/xE0 /xF3/xF0/xE0/xE2/x2D
/xED/xE5/xED/xE8/xFF /xED/xE0 /xE8/xEC/xEF/xF3 /xEB/xFC/xF1/x2E/x28/xCE/xE3/xF0/xE0/xED/xE8/xF7/xE5/xED/xED/xEE/xF1/xF2/xFC fi /x2C /xE2 /xF1/xE2/xEE/xFE /xEE/xF7/xE5/xF0/xE5/xE4/xFC /xEB/xE5/xE3/xEA /xEE /xEF/xEE/xEB/xF3/xF7/xE0/xE5/xF2/xF1 /xFF /xE8/xE7
/xEE/xF6/xE5/xED/xEE/xEA /xE4/xEB/xFF /xF1/xEE/xF1/xF2 /xE0/xE2/xEB/xFF/xFE/xF9/xE8/xF5 /xE8/xF5 /xE8/xED/xF2/xE5/xE3/xF0/xE0/xEB/xEE/xE2/x29/x2E /xC4/xEB/xFF /xE0/xEB/xF4/xE0/xE2/xE8/xF2/xED/xFB/xF5 /xE4/xE2/xE8/xE6 /xE5/xED/xE8/xE9 /xEF/xEE
/xEA/xF0/xE8/xE2/xEE/xEB/xE8/xED/xE5/xE9/xED/xFB/xEC /xEE/xF2/xF0/xE5/xE7/xEA /xE0/xEC /xE5/xF1/xF2/xE5/xF1/xF2/xE2/xE5/xED/xED/xFB/xEC /xEE/xE1/xF0/xE0/xE7/xEE/xEC /xEC/xEE /xE6/xED/xEE /xF0/xE0/xF1/xF1/xEC/xEE/xF2/xF0/xE5/xF2/xFC /xF2/xEE/xEB/xFC/xEA /xEE
/xF2/xE5 /xF2/xF0/xE0/xE5/xEA/xF2/xEE/xF0/xE8/xE8/x2C /xE4/xEB/xFF /xEA /xEE/xF2/xEE/xF0/xFB/xF5 ˙s(0) = ˙s(T) = 0,sgn ( ˙s) =const ∀t∈(0;T) /x2C
/xE3 /xE4/xE5T /x15/xE2/xF0/xE5/xEC/xFF /xE4/xE2/xE8/xE6 /xE5/xED/xE8/xFF/x2E /xCF/xF0/xE5/xE4/xEF/xEE/xEB/xE0/xE3 /xE0/xFF ˙s≥0 /xE8/xEC/xE5/xE5/xEC/x3A
sinφ=−δsinθ1cosθ2√
cos2θ1+δ2sin2θ1+ 2δsinθ1cosθ1sinθ2
cosφ=δsinθ1cosθ2+ cosθ1√
cos2θ1+δ2sin2θ1+ 2δsinθ1cosθ1sinθ2
r= ˙s√
cos2θ1+δ2sin2θ1+ 2δsinθ1cosθ1sinθ2
/xC4/xE0/xEB/xE5/xE5/x2C /xE8/xE7 /xF3/xF0/xE0/xE2/xED/xE5/xED/xE8/xE9 /xED/xE0 /xE8/xEC/xEF/xF3 /xEB/xFC/xF1 /xE0 /xF2 /xE0/xEA/xE6 /xE5 /xE8/xF1 /xF5 /xEE /xE4/xFF /xE8/xE7 /xE2/xFB/xE1/xEE/xF0/xE0 /xE6 /xE5/xEB/xE0/xE5/xEC/xEE/xE3/xEE /xEF/xF0/xEE/xF4/xE8/x2D
/xEB/xFF /xE2/xE5/xF0/xF7/xE5/xED/xE8/xFF /xED/xE0/xF5 /xEE /xE4/xFF/xF2/xF1 /xFF /xF1/xF4/xE5/xF0/xE8/xF7/xE5/xF1/xEA/xE8/xE5 /xEF/xE5/xF0/xE5/xEC/xE5/xED/xED/xFB/xE5 θ1,θ2,θ3 /x2E /xCD/xE0/xEA /xEE/xED/xE5/xF6/x2C /xF3/xEF/xF0/xE0/xE2/xEB/xFF/x2D
/xFE/xF9/xE8/xE9 /xE2/xE5/xEA/xF2/xEE/xF0  /xEC/xEE /xE6/xED/xEE /xED/xE0/xE9/xF2/xE8 /xE8/xE7 /xE2/xE5/xEA/xF2/xEE/xF0/xED/xEE/xE3/xEE /xE4/xE8/xF4/xF4/xE5/xF0/xE5/xED/xF6/xE8/xE0/xEB/xFC/xED/xEE/xE3/xEE /xF3/xF0/xE0/xE2/xED/xE5/xED/xE8/xFF
/xED/xE0 /xEA/xE8/xED/xE5/xF2/xE8/xF7/xE5/xF1/xEA/xE8/xE9 /xEC/xEE/xEC/xE5/xED/xF2 /x2E
/x32/x2E/x35/x2E/x32 /xC0/xED/xE0/xEB/xE8/xE7 /xF1/xE8/xEB /xE8 /xEC/xEE/xEC/xE5/xED/xF2/xEE/xE2 /xE4/xEB/xFF /xE4/xE2/xE8/xE6 /xE5/xED/xE8/xFF /xE1/xE5/xE7 /xE2/xE5/xF0/xF7/xE5/xED/xE8/xFF
/xCA/xE0/xEA /xE1/xFB/xEB/xEE /xE4/xEE/xEA /xE0/xE7/xE0/xED/xEE /xE2/xFB/xF8/xE5/x2C /xE4/xEB/xFF /xEA/xF0/xE8/xE2/xEE/xEB/xE8/xED/xE5/xED/xE9/xEE/xE3/xEE /xE4/xE2/xE8/xE6 /xE5/xED/xE8/xFF /xED/xE5/xEE/xE1 /xF5 /xEE /xE4/xE8/xEC/xEE /xF3/xF7/xE8/x2D
/xF2/xFB/xE2/xE0/xF2/xFC /xF3/xE6 /xE5 /xEE/xE1/xE5 /xE3/xEE/xF0/xE8/xE7/xEE/xED/xF2 /xE0/xEB/xFC/xED/xFB/xE5 /xEA /xEE/xEC/xEF/xEE/xED/xE5/xED/xF2/xFB /xE2/xE5/xEA/xF2/xEE/xF0/xE0 /xF3/xE3 /xEB/xEE/xE2/xEE/xE9 /xF1/xEA /xEE/xF0/xEE/xF1/xF2/xE8/x2E /xCF/xEE/x2D
/xEC/xE8/xEC/xEE /xFD/xF2/xEE/xE3/xEE/x2C /xE4/xEB/xFF /xF2/xE5/xF5 /xE4/xE2/xE8/xE6 /xE5/xED/xE8/xE9/x2C /xE3 /xE4/xE5 ωI̸= 0 /xF1/xE8/xEB/xE0 /xF0/xE5/xE0/xEA/xF6/xE8/xE8 /xEE/xEF/xEE/xF0/xE0 /xED/xE5 /xF0/xE0/xE2/xED/xE0 /xEF/xEE
/xEC/xEE /xE4/xF3 /xEB/xFE /xF1/xE8/xEB/xE5 /xF2 /xFF/xE6 /xE5/xF1/xF2/xE8 /x28/xF2 /xE0/xEA /xEA /xE0/xEA /xEA /xEE/xEC/xEF/xEE/xED/xE5/xED/xF2 /xE0 fIII /xEE/xF2 /xEB/xE8/xF7/xED/xE0 /xEE/xF2 /xED/xF3 /xEB/xFF/x29 /xE8 /xE2/xFB/xF7/xE8/xF1/xEB/xFF/x2D
/xE5/xF2/xF1 /xFF /xEA /xE0/xEAn=g
R(1 +fIII)/x2E /xD3/xE3 /xEB/xEE/xE2/xE0/xFF /xF1/xEA /xEE/xF0/xEE/xF1/xF2/xFC /xE2/xE5/xF0/xF7/xE5/xED/xE8/xFF /xED/xE5 /xE2/xEB/xE8/xFF/xE5/xF2 /xED/xE0 /xEE/xF1/xF2 /xE0/xEB/xFC/xED/xFB/xE5
/xEA/xE8/xED/xE5/xEC/xE0/xF2/xE8/xF7/xE5/xF1/xEA/xE8/xE5 /xF5 /xE0/xF0/xE0/xEA/xF2/xE5/xF0/xE8/xF1/xF2/xE8/xEA/xE8/x2C /xEE /xE4/xED/xE0/xEA /xEE /xE2/xF5 /xEE /xE4/xE8/xF2 /xE2 /xE2/xFB/xF0/xE0/xE6 /xE5/xED/xE8/xFF /xE4/xEB/xFF /xF1/xE8/xEB /xE8 /xEC/xEE/x2D
/xEC/xE5/xED/xF2/xEE/xE2/x2C /xEA /xEE/xF2/xEE/xF0/xFB/xE5 /xE4/xEE/xF1/xF2 /xE0/xF2/xEE/xF7/xED/xEE /xE3/xF0/xEE/xEC/xEE/xE7/xE4/xEA/xE8/x2E /xCF/xEE/xFD/xF2/xEE/xEC/xF3 /x2C /xE4/xEB/xFF /xF3/xEF/xF0/xEE/xF9/xE5/xED/xE8/xFF/x2C /xEF/xF0/xEE/xE2/xE5/xE4/xE5/xEC
/xF7/xE8/xF1/xEB/xE5/xED/xED/xFB/xE9 /xE0/xED/xE0/xEB/xE8/xE7 /xF4/xF3/xED/xEA/xF6/xE8/xE9 f /xE8µ /xE2 /xEF/xF0/xE5/xE4/xEF/xEE/xEB/xEE /xE6 /xE5/xED/xE8/xE8 /xF7/xF2/xEE /xE2/xE5/xF0/xF7/xE5/xED/xE8/xE5 /xEE/xF2/xF1/xF2/xF3/xF2/xF1/xE2/xF3/x2D
/xE5/xF2 /x2C /xF2 /x2E/xE5/x2Eθ3≡0 /x2E /xC1/xF3 /xE4/xE5/xEC /xF1/xF7/xE8/xF2 /xE0/xF2/xFC /xF1/xEA /xEE/xEB/xFC/xE6 /xE5/xED/xE8/xE5 /xE4/xEE/xF1/xF2 /xE0/xF2/xEE/xF7/xED/xEE /xEC/xE0/xEB/xFB/xEC /xE2 /xF1/xF0/xE0/xE2/xED/xE5/xED/xE8/xE8
/xF1 /xF3/xE3 /xEB/xEE/xE2/xEE/xE9 /xF1/xEA /xEE/xF0/xEE/xF1/xF2/xFC/xFE/x2C /xF7/xF2/xEE /xF1/xEE/xEE/xF2/xE2/xE5/xF2/xF1/xE2/xF3 /xE5/xF2 /xED/xE0/xF5 /xEE /xE6/xE4/xE5/xED/xE8/xFE /xE2/xE1/xEB/xE8/xE7/xE8 /xF1/xE5/xF7/xE5/xED/xE8/xFF /xF1/xF4/xE5/xF0/xFB
/xEF/xEB/xEE/xF1/xEA /xEE/xF1/xF2/xFC/xFE (θ1=π/2) /x2E /xC3/xF0/xE0/xF4/xE8/xEA/xE8 /xEF/xEE/xE2/xE5/xF0 /xF5/xED/xEE/xF1/xF2/xE5/xE9 fI /x2CfII /x2Cfz /x2Cµ0
I /x2Cµ0
II /xF2/xEE/xE3 /xE4/xE0 /xEF/xF0/xE8/x2D
/xEC/xF3/xF2 /xE2/xE8/xE4/x2C /xEF/xF0/xE8/xE2/xE5/xE4/xE5/xED/xED/xFB/xE9 /xED/xE0 /xEF/xEE/xF1/xEB/xE5/xE4/xF3/xFE/xF9/xE8/xF5 /xF2/xF0/xE5/xF5 /xF0/xE8/xF1/xF3/xED/xEA /xE0/xF5/x2E
/xC8/xF1 /xF5 /xEE /xE4/xFF /xE8/xE7 /xFF/xE2/xED/xEE/xE3/xEE /xE2/xE8/xE4/xE0 /xE3/xF0/xE0/xF4/xE8/xEA /xEE/xE2/x2C /xEC/xEE /xE6/xED/xEE /xE2 /xE4/xE0/xEB/xFC/xED/xE5/xE9/xF8/xE5/xEC /xEF/xEE/xEB/xEE /xE6/xE8/xF2/xFC/x2C /xF7/xF2/xEE
f=fI,µ=µII /x28/xEE/xF2/xED/xEE/xF8/xE5/xED/xE8/xE5 /xEC/xE5/xE6/xE4/xF3 fI /xE8fII /xF1/xEE/xF1/xF2 /xE0/xE2/xEB/xFF/xE5/xF2 /xEF/xF0/xE8/xEC/xE5/xF0/xED/xEE 102/x2C /xE4/xEB/xFF /xEC/xEE/x2D
/xEC/xE5/xED/xF2/xEE/xE2 /xE0/xED/xE0/xEB/xEE/xE3/xE8/xF7/xED/xEE/x29/x2E /xD2 /xE0/xEA /xEE/xE5 /xEF/xF0/xE5/xE4/xEF/xEE/xEB/xEE /xE6 /xE5/xED/xE8/xE5 /xEF/xEE/xE7/xE2/xEE/xEB/xFF/xE5/xF2 /xF1/xF3/xF9/xE5/xF1/xF2/xE2/xE5/xED/xED/xEE /xEE/xE1/xEB/xE5/xE3/xF7/xE8/xF2/xFC
/x32/x32/xD0/xE8/xF1/x2E /x31/x35/x3A /xCF/xEE/xE2/xE5/xF0 /xF5/xED/xEE/xF1/xF2/xE8 fI /x2CfII
/xD0/xE8/xF1/x2E /x31/x36/x3A /xCF/xEE/xE2/xE5/xF0 /xF5/xED/xEE/xF1/xF2/xFC fz
/xE4/xE0/xEB/xFC/xED/xE5/xE9/xF8/xE5/xE5 /xF0/xE0/xE7/xF0/xE5/xF8/xE5/xED/xE8/xE5 /xEE/xE1/xF0/xE0/xF2/xED/xEE/xE9 /xE7/xE0/xE4/xE0 /xF7/xE8 /xE4/xE8/xED/xE0/xEC/xE8/xEA/xE8/x2C /xF2 /xE0/xEA /xEA /xE0/xEA /xE0/xED/xE0/xEB/xE8/xE7 /xE8 /xF2/xE5/xEC
/xE1/xEE/xEB/xE5/xE5 /xEE/xE1/xF0/xE0/xF9/xE5/xED/xE8/xE5 /xEE/xF1/xF2 /xE0/xE2/xF8/xE8/xF5 /xF1 /xFF /xEA /xEE/xEC/xEF/xEE/xED/xE5/xED/xF2 /xF1/xE8/xEB /xE8 /xEC/xEE/xEC/xE5/xED/xF2/xEE/xE2/x16/xEA/xF0/xE0/xE9/xED/xE5 /xF2/xF0/xF3 /xE4/xEE/xE5/xEC/xEA /xE0/xFF
/xE7/xE0/xE4/xE0 /xF7/xE0/x2E /xCF/xF0/xE8 /xFD/xF2/xEE/xEC/x2C /xEC/xEE /xE6/xED/xEE /xE7/xE0/xEC/xE5/xF2/xE8/xF2/xFC/x2C /xF1/xEE /xF5/xF0/xE0/xED/xFF/xE5/xF2/xF1 /xFF /xE4/xEE/xF1/xF2 /xE0/xF2/xEE/xF7/xED/xEE /xE2/xFB/xF1/xEE/xEA /xE0/xFF /xF2/xEE/xF7/xED/xEE/xF1/xF2/xFC
/xF0/xE5/xE7/xF3 /xEB/xFC /xF2 /xE0/xF2/xEE/xE2/x2E /xC2 /xF2 /xE0/xEA /xEE/xEC /xF1/xEB/xF3/xF7/xE0/xE5/x2C /xE8/xEC/xE5/xE5/xEC /xF1/xEB/xE5/xE4/xF3/xFE/xF9/xE8/xE5 /xF3/xF0/xE0/xE2/xED/xE5/xED/xE8/xFF /xED/xE0 /xE8/xEC/xEF/xF3 /xEB/xFC/xF1/x3A
¨s=fcosφ
k(s) ˙s2=fsinφ
/xC7/xE0/xEC/xE5/xF2/xE8/xEC/x2C /xF7/xF2/xEE /xE2 /xE0/xE1/xF1/xEE/xEB/xFE/xF2/xED/xEE/xE9 /xF1/xE8/xF1/xF2/xE5/xEC/xE5 /xEA /xEE/xEE/xF0 /xE4/xE8/xED/xE0/xF2 /xEA /xEE/xEC/xEF/xEE/xED/xE5/xED/xF2/xFB /xEC/xEE/xEC/xE5/xED/xF2 /xE0  /xE2/xFB/xF0/xE0/x2D
/xE6 /xE0/xFE/xF2/xF1 /xFF /xF4/xEE/xF0/xEC/xF3 /xEB/xE0/xEC/xE8/x3A
µx=−µsin(φ+ψ)
µy=µcos(φ+ψ)
/x32/x2E/x35/x2E/x33 /xCF/xF0/xE8/xEC/xE5/xF0/xFB /xF2/xF0/xE0/xE5/xEA/xF2/xEE/xF0/xE8/xE9
/xCF/xF0/xE5/xE4/xEF/xEE/xEB/xE0/xE3 /xE0/xFF/x2C /xF7/xF2/xEE /xE7/xE0/xE4/xE0/xED/xE0 /xF2/xF0/xE0/xE5/xEA/xF2/xEE/xF0/xE8/xFF /xF1 /xE6 /xE5/xEB/xE0/xE5/xEC/xFB/xEC /xE7/xE0/xEA /xEE/xED/xEE/xEC /xE4/xE2/xE8/xE4/xE5/xED/xE8/xFF /xEF/xEE
/xED/xE5/xE9/x2C /xF2 /x2E/xE5/x2Ek(s) /xE8s(t) /x2C /xED/xE0 /xEF/xE5/xF0/xE2/xEE/xEC /xFD/xF2 /xE0/xEF/xE5 /xED/xE5/xEE/xE1 /xF5 /xEE /xE4/xE8/xEC/xEE /xF0/xE0/xE7/xF0/xE5/xF8/xE8/xF2/xFC /xF1/xE8/xF1/xF2/xE5/xEC/xF3 /xEE/xF2/xED/xEE/xF1/xE8/x2D
/x32/x33/xD0/xE8/xF1/x2E /x31/x37/x3A /xCF/xEE/xE2/xE5/xF0 /xF5/xED/xEE/xF1/xF2/xE8 µ0
I /x2Cµ0
II
/xF2/xE5/xEB/xFC/xED/xEEθ1,θ2,φ /x3A
¨s=fIcosφ
k(s) ˙s2=fIsinφ
tgφ=−δsinθ1cosθ2
δsinθ1sinθ2+ cosθ1
/xC8/xF1 /xF5 /xEE /xE4/xFF /xE8/xE7 /xFF/xE2/xED/xEE/xE3/xEE /xE2/xE8/xE4/xE0 /xF3/xF0/xE0/xE2/xED/xE5/xED/xE8/xE9 /xE2/xE5/xF0/xED/xEE /xF1/xEB/xE5/xE4/xF3/xFE/xF9/xE5/xE5 /xEE/xF7/xE5/xE2/xE8/xE4/xED/xEE/xE5 /xF3/xF2/xE2/xE5/xF0 /xE6/xE4/xE5/x2D
/xED/xE8/xE5/x3A
/xD3/xF2/xE2/xE5/xF0 /xE6/xE4/xE5/xED/xE8/xE5 /x34/x2E/x33
/xCF/xF3/xF1/xF2/xFC /xE4/xEB/xFF /xED/xE5/xEA/xEE/xF2/xEE/xF0/xEE/xE3/xEE /xEE/xF2/xF0/xE5/xE7/xEA/xE0 /xE2/xF0/xE5 /xEC/xE5/xED/xE8 /xF2/xF0 /xE0/xE5/xEA/xF2/xEE/xF0/xE8/xFF /xE4/xE2/xE8/xE6/xE5/xED/xE8/xFF/x16/xE3/xEB/xE0/xE4/xEA/xE0/xFF /xEA/xF0/xE8/x2D
/xE2/xE0/xFF/x2C /xF2/xE0/xEA/xE0/xFF/x2C /xF7/xF2/xEE k(s)̸= 0 /xE2 /xEA/xE0/xE6/xE4/xEE/xE9 /xF2/xEE/xF7/xEA/xE5/x2C /xEF/xF0/xE8/xF7/xE5 /xEC /xE4/xE2/xE8/xE6/xE5/xED/xE8/xE5 /xED/xE0/xF7/xE8/xED/xE0/xE5/xF2/xF1/xFF
/xE8/xE7 /xF1/xEE/xF1/xF2/xEE/xFF/xED/xE8/xFF /xEF/xEE/xEA/xEE/xFF/x2E /xD2 /xEE/xE3/xE4/xE0 /xED/xE0 /xE2/xF1/xE5 /xEC /xE4/xE2/xE8/xE6/xE5/xED/xE8/xE8 f(t)≥0 /x2C /xEF/xF0/xE8/xF7/xE5 /xEC /xF0 /xE0/xE2/xE5/xED/xF1/xF2/xE2/xEE
/xED/xF3/xEB/xFE /xE4/xEE/xF1/xF2/xE8/xE3/xE0/xF2/xFC/xF1/xFF /xEC/xEE/xE6/xE5/xF2 /xF2/xEE /xEB/xFC/xEA/xEE /xED/xE0 /xEA/xEE/xED/xF6/xE0/xF5 /xFD/xF2/xEE/xE3/xEE /xEE/xF2/xF0/xE5/xE7/xEA/xE0 /x2E
/xC4/xE5/xE9/xF1/xF2/xE2/xE8/xF2/xE5/xEB/xFC/xED/xEE/x2C /xE2 /xF1/xE8/xEB/xF3 /xF0/xE0/xF1/xF1/xEC/xE0/xF2/xF0/xE8/xE2/xE0/xE5/xEC/xFB/xF5 /xF2/xF0/xE0/xE5/xEA/xF2/xEE/xF0/xE8/xE9/x2C /xE7/xED/xE0/xEA ˙s /xEF/xEE/xEB/xEE /xE6/xE8/xF2/xE5/xEB/xE5/xED
/xE8 /xED/xE5 /xEC/xE5/xED/xFF/xE5/xF2/xF1 /xFF /xED/xE0 /xE2/xF1/xE5/xEC /xEE/xF2/xF0/xE5/xE7/xEA /xE5/x2E /xC2 /xF1/xE8/xEB/xF3 /xED/xE0 /xF7/xE0/xEB/xFC/xED/xFB/xF5 /xF3 /xF1/xEB/xEE/xE2/xE8/xE9/x2C /xED/xE5/xF2/xF0/xF3 /xE4/xED/xEE /xE7/xE0/xEC/xE5/x2D
/xF2/xE8/xF2/xFC/x2C /xF7/xF2/xEEφ(0) = 0 /x28/xF1/xEB/xF3/xF7/xE0/xE9φ=π /xEE/xEF/xF3 /xF1/xEA /xE0/xE5/xF2/xF1 /xFF/x2C /xE4/xEB/xFF /xED/xE5/xE3/xEE/x2C /xEE/xF7/xE5/xE2/xE8/xE4/xED/xFB/xEC /xEE/xE1/xF0/xE0/xE7/xEE/xEC/x2C
/xE2/xE5/xF0/xED/xEE /xE0/xED/xE0/xEB/xEE/xE3/xE8/xF7/xED/xEE/xE5 /xF3/xF2/xE2/xE5/xF0 /xE6/xE4/xE5/xED/xE8/xE5 /xF1 /xF2/xEE/xF7/xED/xEE/xF1/xF2/xFC/xFE /xE4/xEE /xE7/xED/xE0/xEA /xE0 f /x29/x2E /xCD/xEE /xF2/xEE/xE3 /xE4/xE0 f(0)>0 /x2C
/xE2 /xF1/xE8/xEB/xF3 /xEF/xEE/xEB/xEE /xE6/xE8/xF2/xE5/xEB/xFC/xED/xEE/xF1/xF2/xE8 ¨s /xE2 /xED/xE5/xEA /xEE/xF2/xEE/xF0/xEE/xE9 /xEE/xEA/xF0/xE5/xF1/xF2/xED/xEE/xF1/xF2/xE8 /xED/xE0 /xF7/xE0/xEB/xFC/xED/xEE/xE3/xEE /xEC/xEE/xEC/xE5/xED/xF2 /xE0 /xE2/xF0/xE5/x2D
/xEC/xE5/xED/xE8/x2E /xC4/xE0/xEB/xE5/xE5/x2C /xE5/xF1/xEB/xE8 /xE2 /xEA /xE0/xEA /xEE/xE9/x2D/xEB/xE8/xE1/xEE /xF2/xEE/xF7/xEA /xE5 f /xEE/xE1/xF0/xE0/xF2/xE8/xF2/xF1 /xFF /xE2 /xED/xF3 /xEB/xFC/x2C /xFD/xF2/xEE /xEF/xEE/xE2/xEB/xE5/xF7/xE5/xF2 /xE7/xE0
/xF1/xEE/xE1/xEE/xE9 /xEB/xE8/xE1/xEE /xF0/xE0/xE2/xE5/xED/xF1/xF2/xE2/xEE /xED/xF3 /xEB/xFE k(s) /x2C /xEB/xE8/xE1/xEE ˙s /x2C /xF7/xF2/xEE /xED/xE5 /xEF/xEE /xE4/xF5 /xEE /xE4/xE8/xF2 /xEF/xEE /xE4 /xF1 /xE4/xE5/xEB/xE0/xED/xED/xFB/xE5 /xE2/xFB/xF8/xE5
/xEF/xF0/xE5/xE4/xEF/xEE/xEB/xEE /xE6 /xE5/xED/xE8/xFF/x2E
/xD2 /xE5/xEF/xE5/xF0/xFC /xEF/xEE/xEF/xF0/xEE/xE1/xF3 /xE5/xEC /xF0/xE0/xF1/xF1/xEC/xEE/xF2/xF0/xE5/xF2/xFC /xF7/xE0/xF1/xF2/xED/xFB/xE9 /xF1/xEB/xF3/xF7/xE0/xE9/x2C /xE0 /xE8/xEC/xE5/xED/xED/xEE /xE4/xE2/xE8/xE6 /xE5/xED/xE8/xE5 /xEF/xEE
/xE4/xF3/xE3/xE5 /xEE/xEA/xF0/xF3/xE6/xED/xEE/xF1/xF2/xE8 /xF0/xE0/xE4/xE8/xF3/x63/xE0 ρ /x2E /xC4/xEB/xFF /xF3/xE3 /xEB/xE0 ψ /x2C /xEE/xF2/xE2/xE5/xF7/xE0/xFE/xF9/xE5/xE3/xEE /xE7/xE0 /xF3/xE3/xEE/xEB /xEC/xE5/xE6/xE4/xF3 /xEA /xE0/xF1/xE0/x2D
/xF2/xE5/xEB/xFC/xED/xFB/xEC /xE2/xE5/xEA/xF2/xEE/xF0/xEE/xEC /xE8 /xEE/xF1/xFC/xFE Sx /xE2/xE5/xF0/xED/xEE/x2C /xF7/xF2/xEE ψ=ρs /x28/xE7/xE4/xE5/xF1/xFC /xEF/xF0/xE5/xE4/xEF/xEE/xEB/xE0/xE3 /xE0/xE5/xF2/xF1 /xFF/x2C /xF7/xF2/xEE
/xE2/xF1/xE5 /xED/xE0 /xF7/xE0/xEB/xFC/xED/xFB/xE5 /xF3 /xF1/xEB/xEE/xE2/xE8/xFF/x16/xED/xF3 /xEB/xE5/xE2/xFB/xE5/x29/x2E /xC2 /xEA /xE0 /xF7/xE5/xF1/xF2/xE2/xE5 /xE7/xE0/xEA /xEE/xED/xE0 /xE4/xE2/xE8/xE6 /xE5/xED/xE8/xFF /xE2/xFB/xE1/xE5/xF0/xE5/xEC /xE4/xEB/xFF
/xEE/xE1/xE5/xF1/xEF/xE5/xF7/xE5/xED/xE8/xFF /xE4/xEE/xF1/xF2 /xE0/xF2/xEE/xF7/xED/xEE/xE9 /xE3 /xEB/xE0/xE4/xEA /xEE/xF1/xF2/xE8 /xF2 /xE0/xEA/xF3/xFE /xE6 /xE5 /xF4/xF3/xED/xEA/xF6/xE8/xFE/x2C /xEA /xE0/xEA /xE2 /x33/x2E/x32/x2C /xE0 /xE8/xEC/xE5/xED/xED/xEE
˙s(t) =Acosηt
2sinηt t∈[0;π/η]
/x32/x34/xC4/xEB/xFF /xEA/xF0/xE8/xE2/xE8/xE7/xED/xFB k(s) /xEE/xF7/xE5/xE2/xE8/xE4/xED/xFB/xEC /xEE/xE1/xF0/xE0/xE7/xEE/xEC /xE2/xFB/xE1/xF0/xE0/xED/xEE /xF0/xE0/xE2/xE5/xED/xF1/xF2/xE2/xEE k(s) = 1/ρ /x2E
/xCF/xF0/xE8/xE2/xE5/xE4/xE5/xEC /xF0/xE5/xE7/xF3 /xEB/xFC /xF2 /xE0/xF2/xFB /xF7/xE8/xF1/xEB/xE5/xED/xED/xEE/xE3/xEE /xF0/xE5/xF8/xE5/xED/xE8/xFF /xF1/xE8/xF1/xF2/xE5/xEC/xFB /xF3/xF0/xE0/xE2/xED/xE5/xED/xE8/xE9 /xE4/xEB/xFF /xF1/xEB/xF3/xF7/xE0/xFF
∆ψ−π/2,ρ= 4,η=π/7 /x28/xEF/xE5/xF0/xE2/xEE/xE5 /xE7/xED/xE0 /xF7/xE5/xED/xE8/xE5 /xEE/xF2/xE2/xE5/xF7/xE0/xE5/xF2 /xE7/xE0 /xE2/xE5/xEB/xE8/xF7/xE8/xED/xF3 /xEF/xF0/xEE/xE9/xE4/xE5/xED/xED/xEE/xE9
/xE4/xF3/xE3/xE8/x29/x3A
0 1 2 3 4 5 6 700.20.40.60.811.21.41.61.82x 10−8
tθ1−π/2
0 1 2 3 4 5 6 7−2−1.5−1−0.500.511.52
tθ2
/xD0/xE8/xF1/x2E /x31/x38/x3A /xCF/xE5/xF0/xE5/xEC/xE5/xED/xED/xFB/xE5 θ1,θ2
0 1 2 3 4 5 6 700.511.522.533.5
tφ
/xD0/xE8/xF1/x2E /x31/x39/x3A /xCF/xE5/xF0/xE5/xEC/xE5/xED/xED/xE0/xFF φ
/xC4/xE0/xEB/xE5/xE5/x2C /xE2 /xEE/xF2 /xEB/xE8/xF7/xE8/xE5 /xEE/xF2 /xE4/xE2/xE8/xE6 /xE5/xED/xE8/xFF /xEF/xEE /xEF/xF0 /xFF/xEC/xEE/xE9/x2C /xE3 /xE4/xE5 /xE2/xF1/xE5 /xF2/xF0/xE8 /xF3/xF0/xE0/xE2/xED/xE5/xED/xE8/xFF /xED/xE0 /xEA/xE8/x2D
/xED/xE5/xF2/xF7/xE5/xF1/xEA/xE8/xE9 /xEC/xEE/xEC/xE5/xED/xF2 /xF1/xE2/xEE /xE4/xE8/xEB/xE8/xF1/xFC /xEA /xEE /xE4/xED/xEE/xEC/xF3 /xE2 /xEF/xF0/xEE/xE5/xEA/xF6/xE8/xE8 /xED/xE0 /xED/xE5/xEF/xEE /xE4/xE2/xE8/xE6/xED/xF3/xFE /xEE/xF1/xFC/x2C /xE4/xEB/xFF
/xED/xE0/xF5 /xEE /xE6/xE4/xE5/xED/xE8/xFF /xF3/xEF/xF0/xE0/xE2/xEB/xE5/xED/xE8/xE9 /xE2 /xFD/xF2/xEE/xEC /xF1/xEB/xF3/xF7/xE0/xE5 /xED/xE5/xEE/xE1 /xF5 /xEE /xE4/xE8/xEC/xEE /xE7/xED/xE0/xF2/xFC /xE7/xE0/xE2/xE8/xF1/xE8/xEC/xEE/xF1/xF2/xFC D(t) /x2E
/xCA/xE0/xEA /xE8 /xE2 /x5B/x32/x5D/x2C /xE2 /xEA /xE0 /xF7/xE5/xF1/xF2/xE2/xE5 /xEB/xEE/xEA /xE0/xEB/xFC/xED/xFB/xF5 /xEA /xEE/xEE/xF0 /xE4/xE8/xED/xE0/xF2 /xED/xE0 /xEC/xED/xEE/xE3/xEE/xEE/xE1/xF0/xE0/xE7/xE8/xE8 SO(3) /xE1/xF3 /xE4/xF3/xF2
/xE2/xE7/xFF/xF2/xFB /xF3/xE3 /xEB/xFB /xDD/xE9/xEB/xE5/xF0/xE0 Θ,Ψ,Φ /x2E /x28/xC1/xEE/xEB/xFC/xF8/xE8/xE5 /xE1/xF3/xEA/xE2/xFB /xE8/xF1/xEF/xEE/xEB/xFC/xE7/xEE/xE2/xE0/xED/xFB /xE2/xEE /xE8/xE7/xE1/xE5/xE6 /xE0/xED/xE8/xE8 /xEF/xF3/x2D
/xF2 /xE0/xED/xE8/xF6/xFB /xF1 /xF3/xE6 /xE5 /xE8/xF1/xEF/xEE/xEB/xFC/xE7/xF3 /xE5/xEC/xFB/xEC/xE8 /xF3/xE3 /xEB/xE0/xEC/xE8/x29/x2E
/x32/x350 1 2 3 4 5 6 7−2−1.5−1−0.500.511.5
tωx
0 1 2 3 4 5 6 7−2−1.5−1−0.500.511.5
tωy/xD0/xE8/xF1/x2E /x32/x30/x3A /xCF/xE5/xF0/xE5/xEC/xE5/xED/xED/xFB/xE5 ωx,ωy
/xDD/xE2/xEE/xEB/xFE/xF6/xE8/xFF /xF3/xE3 /xEB/xEE/xE2 /xDD/xE9/xEB/xE5/xF0/xE0 /xE4/xEB/xFF /xEE/xEF/xE8/xF1/xE0/xED/xED/xEE/xE3/xEE /xE4/xE2/xE8/xE6 /xE5/xED/xE8/xFF /xEF/xF0/xE8/xE2/xE5/xE4/xE5/xED/xE0 /xED/xE8/xE6 /xE5 /xED/xE0
/xEB/xE5/xE2/xEE/xEC /xE3/xF0/xE0/xF4/xE8/xEA /xE5/x2E
0 1 2 3 4 5 6 7−2.5−2−1.5−1−0.500.511.52
Ψ(t)Φ(t)Θ(t)
t
0 1 2 3 4 5 6 7−100−50050
tU
  
U1
U2
U3
/xD0/xE8/xF1/x2E /x32/x31/x3A /xDD/xE2/xEE/xEB/xFE/xF6/xE8/xFF /xF3/xE3 /xEB/xEE/xE2 /xDD/xE9/xEB/xE5/xF0/xE0 /xE8 /xF3/xEF/xF0/xE0/xE2/xEB/xFF/xFE/xF9/xE8/xE5 /xED/xE0/xEF/xF0 /xFF/xE6 /xE5/xED/xE8/xFF/x2E
/xCD/xE0 /xEB/xE5/xE2/xEE/xEC /xE3/xF0/xE0/xF4/xE8/xEA /xE5 /xED/xE0 /xF7/xE0/xEB/xFC/xED/xFB/xE5 /xF3 /xF1/xEB/xEE/xE2/xE8/xFF /xF2 /xE0/xEA /xEE/xE2/xFB/x3A Θ(0) = arctg√
2,Ψ(0) =
−π/6,Φ(0) =π/4 /x2E /xCE/xED/xE8 /xE2/xE7/xFF/xF2/xFB /xE2 /xEA /xE0 /xF7/xE5/xF1/xF2/xE2/xE5 /xEF/xF0/xE8/xEC/xE5/xF0/xE0 /x2C /xE8 /xF1/xEE/xEE/xF2/xE2/xE5/xF2/xF1/xF2/xE2/xF3/xFE/xF2 /xE2 /xED/xE0 /xF7/xE0/xEB/xFC/x2D
/xED/xFB/xE9 /xEC/xEE/xEC/xE5/xED/xF2 /xE2/xF0/xE5/xEC/xE5/xED/xE8 /xF1/xE8/xF2/xF3 /xE0/xF6/xE8/xE8/x2C /xEA /xEE/xE3 /xE4/xE0 /xEF/xEB/xEE/xF1/xEA /xEE/xF1/xF2/xFC/x2C /xEF/xF0/xEE /xF5 /xEE /xE4/xFF/xF9/xE0/xFF /xF7/xE5/xF0/xE5/xE7 /xF6/xE5/xED/xF2/xF0/xFB
/xEC/xE0/xF5 /xEE/xE2/xE8/xEA /xEE/xE2 /xE3/xEE/xF0/xE8/xE7/xEE/xED/xF2 /xE0/xEB/xFC/xED/xE0/x2E
/xCD/xE0/xEA /xEE/xED/xE5/xF6/x2C /xE0/xED/xE0/xEB/xEE/xE3/xE8/xF7/xED/xEE /x33/x2E/x32/x2C /xEF/xF0/xE8/xE2/xE5/xE4/xE5/xEC /xE2 /xFD/xF2/xEE/xEC /xF1/xEB/xF3/xF7/xE0/xE5 /xE3/xF0/xE0/xF4/xE8/xEA/xE8 /xF3/xEF/xF0/xE0/xE2/xEB/xFF/xFE/xF9/xE8/xF5
/xF0/xE0/xE7/xEC/xE5/xF0/xED/xFB/xF5 /xED/xE0/xEF/xF0 /xFF/xE6 /xE5/xED/xE8/xE9/x2C /xEE/xED/xE8 /xEF/xF0/xE8/xE2/xE5/xE4/xE5/xED/xFB /xED/xE0 /xEF/xF0/xE0/xE2/xEE/xEC /xE3/xF0/xE0/xF4/xE8/xEA /xE5/x2E
/xD3/xEF/xF0/xE0/xE2/xEB/xFF/xFE/xF9/xE8/xE5 /xED/xE0/xEF/xF0 /xFF/xE6 /xE5/xED/xE8/xFF /xEF/xEE/xEA /xE0/xE7/xFB/xE2/xE0/xFE/xF2 /xF1/xEF/xEE/xF1/xEE/xE1 /xF3/xEF/xF0/xE0/xE2/xEB/xE5/xED/xE8/xFF /xF8/xE0/xF0/xEE/xEC/x2E
/x32/x36/x33 /xC7/xE0/xEA/xEB/xFE/xF7/xE5/xED/xE8/xE5
/xCF/xEE /xF0/xE5/xE7/xF3 /xEB/xFC /xF2 /xE0/xF2 /xE0/xEC /xEF/xF0/xE5/xE4/xF1/xF2 /xE0/xE2/xEB/xE5/xED/xED/xEE/xE3/xEE /xE8/xF1/xF1/xEB/xE5/xE4/xEE/xE2/xE0/xED/xE8/xFF /xEC/xEE /xE6/xED/xEE /xF1/xEA /xE0/xE7/xE0/xF2/xFC/x2C /xF7/xF2/xEE /xE4/xEB/xFF
/xEF/xF0/xE5/xE4/xEB/xEE /xE6 /xE5/xED/xED/xEE/xE9 /xEA /xEE/xED/xF1/xF2/xF0/xF3/xEA/xF6/xE8/xE8 /xF0/xEE/xE1/xEE/xF2 /xE0/x2D/xF8/xE0/xF0/xE0 /xF0/xE5/xF8/xE5/xED/xE0 /xEE/xE1/xF0/xE0/xF2/xED/xE0/xFF /xE7/xE0/xE4/xE0 /xF7/xE0 /xE4/xE8/xED/xE0/xEC/xE8/xEA/xE8
/xE2 /xEF/xF0/xE5/xE4/xEF/xEE/xEB/xEE /xE6 /xE5/xED/xE8/xE8 /xE4/xE2/xF3/xF5/xEF/xE0/xF0/xE0/xEC/xE5/xF2/xF0/xE8/xF7/xE5/xF1/xEA /xEE/xE9 /xEC/xEE /xE4/xE5/xEB/xE8 /xF2/xF0/xE5/xED/xE8/xFF/x2E /xC2 /xEA /xE0 /xF7/xE5/xF1/xF2/xE2/xE5 /xEF/xF0/xE8/xEC/xE5/xF0/xE0
/xF0/xE0/xF1/xF1/xEC/xEE/xF2/xF0/xE5/xED/xFB /xF2 /x2E/xED/xE0/xE7/x2E /xE1/xE0/xE7/xEE/xE2/xFB/xE5 /xE0/xEB/xF4/xE0/xE2/xE8/xF2/xED/xFB/xE5 /xE4/xE2/xE8/xE6 /xE5/xED/xE8/xFF/x2C /xE2/xEC/xE5/xF1/xF2/xE5 /xF1 /xF2/xE5/xEC /xF0/xE5/xE7/xF3 /xEB/xFC /xF2 /xE0/xF2/xFB
/xEC/xEE /xE6/xED/xEE /xF0/xE0/xF1/xEF/xF0/xEE/xF1/xF2/xF0/xE0/xED/xE8/xF2/xFC /xED/xE0 /xEB/xFE/xE1/xF3/xFE /xEA/xF0/xE8/xE2/xF3/xFE /xF2/xF0/xE0/xE5/xEA/xF2/xEE/xF0/xE8/xFE/x2E /xCF/xEE/xEA /xE0/xE7/xE0/xED/xEE/x2C /xF7/xF2/xEE /xE4/xE2/xE8/xE6 /xE5/x2D
/xED/xE8/xE5 /xE2/xEE/xE7/xEC/xEE /xE6/xED/xEE /xED/xE5 /xE2/xF1/xE5/xE3 /xE4/xE0/x2C /xF2 /xE0/xEA /xEA /xE0/xEA /xF1/xF3/xF9/xE5/xF1/xF2/xE2/xF3 /xE5/xF2 /xF4/xE5/xED/xEE/xEC/xE5/xED /xEC/xEE/xEC/xE5/xED/xF2 /xE0 /xF2/xF0/xE5/xED/xE8/xFF /xEF/xEE/xEA /xEE /xFF/x2C
/xEA /xEE/xF2/xEE/xF0/xFB/xE9 /xED/xE5/xEE/xE1 /xF5 /xEE /xE4/xE8/xEC/xEE /xEF/xF0/xE5/xEE /xE4/xEE/xEB/xE5/xE2/xE0/xF2/xFC /xE4/xEB/xFF /xED/xE0 /xF7/xE0/xEB/xE0 /xE4/xE2/xE8/xE6 /xE5/xED/xE8/xFF/x2E /xC4/xEB/xFF /xF0/xE5/xE0/xEB/xFC/xED/xFB/xF5 /xFD/xEB/xE5/xEA/x2D
/xF2/xF0/xEE /xE4/xE2/xE8/xE3 /xE0/xF2/xE5/xEB/xE5/xE9/x2C /xEF/xF0/xE8/xE2/xEE /xE4/xFF/xF9/xE8/xF5 /xE2 /xE4/xE2/xE8/xE6 /xE5/xED/xE8/xE5 /xEC/xE0/xF5 /xEE/xE2/xE8/xEA/xE8/x2C /xEF/xF0/xE8/xE2/xE5/xE4/xE5/xED/xFB /xEE/xE1/xEB/xE0/xF1/xF2/xE8 /xEF/xE0/xF0/xE0/x2D
/xEC/xE5/xF2/xF0/xEE/xE2 /xE3 /xE4/xE5 /xE4/xE2/xE8/xE6 /xE5/xED/xE8/xE5 /xE2/xEE/xE7/xEC/xEE /xE6/xED/xEE/x2E
/xC2/xEC/xE5/xF1/xF2/xE5 /xF1 /xF2/xE5/xEC/x2C /xF0/xE5/xE0/xEB/xFC/xED/xFB/xE5 /xFD/xEA /xF1/xEF/xE5/xF0/xE8/xEC/xE5/xED/xF2/xFB /xEF/xEE/xEA /xE0/xE7/xFB/xE2/xE0/xFE/xF2 /x2C /xF7/xF2/xEE /xE4/xEB/xFF /xF0/xE5/xE0/xEB/xFC/xED/xEE/xE3/xEE /xE0/xEF/x2D
/xEF/xE0/xF0/xE0/xF2 /xE0 /xE4/xEB/xFF /xE1/xEE/xEB/xFC/xF8/xE5/xE9 /xF2/xEE/xF7/xED/xEE/xF1/xF2/xE8 /xEE/xEF/xE8/xF1/xE0/xED/xE8/xFF /xE4/xE2/xE8/xE6 /xE5/xED/xE8/xFF /xED/xF3/xE6/xED/xEE /xF0/xE0/xF1/xF1/xEC/xE0/xF2/xF0/xE8/xE2/xE0/xF2/xFC /xEC/xEE/x2D
/xE4/xE5/xEB/xFC /xED/xE5/xF1/xE1/xE0/xEB/xE0/xED/xF1/xE8/xF0/xEE/xE2/xE0/xED/xED/xEE/xE3/xEE /xF8/xE0/xF0/xE0/x2C /xF2 /x2E/xE5/x2E /xEE/xF2/xEA /xE0/xE7/xE0/xF2/xFC/xF1 /xFF /xEE/xF2 /xF3 /xF1/xEB/xEE/xE2/xE8/xFF /xF1/xEE/xE2/xEF/xE0/xE4/xE5/xED/xE8/xFF /xF6/xE5/xED/x2D
/xF2/xF0/xE0 /xEC/xE0/xF1/xF1 /xF1/xE8/xF1/xF2/xE5/xEC/xFB /xE8 /xE3/xE5/xEE/xEC/xE5/xF2/xF0/xE8/xF7/xE5/xF1/xEA /xEE/xE3/xEE /xF6/xE5/xED/xF2/xF0/xE0 /xF8/xE0/xF0/xE0/x2E /xD0 /xE5/xF8/xE5/xED/xE8/xE5 /xEE/xE1/xF0/xE0/xF2/xED/xEE/xE9 /xE7/xE0/xE4/xE0 /xF7/xE8
/xE4/xE8/xED/xE0/xEC/xE8/xEA/xE8 /xE4/xEB/xFF /xF2 /xE0/xEA /xEE/xE9 /xEA /xEE/xED/xF1/xF2/xF0/xF3/xEA/xF6/xE8/xE8 /x2D /xF6/xE5/xEB/xFC /xE1/xEB/xE8/xE6 /xE0/xE9/xF8/xE8/xF5 /xE8/xF1/xF1/xEB/xE5/xE4/xEE/xE2/xE0/xED/xE8/xE9/x2E
/x32/x37/x34 /xCF/xF0/xE8/xEB/xEE /xE6 /xE5/xED/xE8/xE5 /x31/x2E /xCF/xF0/xE8/xEC/xE5/xF0/xFB /xF0/xEE/xE1/xEE/xF2/xEE/xE2 /xF8/xE0/xF0/xEE/xE2
/xCA/xE0/xEA /xE3/xEE/xE2/xEE/xF0/xE8/xEB/xEE/xF1/xFC /xE2/xFB/xF8/xE5/x2C /xF0/xEE/xE1/xEE/xF2/xFB/x2D/xF8/xE0/xF0/xFB /xF0/xE0/xE7/xE2/xE8/xE2/xE0/xFE/xF2/xF1 /xFF /xE2/xEE /xEC/xED/xEE/xE3/xE8/xF5 /xF1/xF2/xF0/xE0/xED/xE0/xF5/x2E /xCF/xF0/xE8/x2D
/xE2/xE5/xE4/xBC/xEC /xED/xE5/xEA /xEE/xF2/xEE/xF0/xFB/xE5 /xE8/xED/xF2/xE5/xF0/xE5/xF1/xED/xFB/xE5 /xEF/xF0/xE8/xEC/xE5/xF0/xFB /xF0/xE5/xE0/xEB/xFC/xED/xFB/xF5 /xEA /xEE/xED/xF1/xF2/xF0/xF3/xEA/xF6/xE8/xE9
/xD3/xEF/xEE/xEC/xFF/xED/xF3/xF2/xFB/xE9 /xF0/xEE/xE1/xEE/xF2 /x47/x72/x6F/x75/x6E/x64/x42/x6F/x74 /xEE/xF2 /x52/x6F/x74/x75/x6E/x64/x75/x73/x2C /xF5 /xEE/xF2/xFC /xE8 /xED/xE5 /xFF/xE2/xEB/xFF/xE5/xF2/xF1 /xFF /x22/xE8/xE4/xE5/xE0/xEB/xFC/x2D
/xED/xFB/xEC/x22/xF8/xE0/xF0/xEE/xEC /xE7/xE0/xF1/xEB/xF3/xE6/xE8/xE2/xE0/xE5/xF2 /xE2/xED/xE8/xEC/xE0/xED/xE8/xE5 /xF2/xE5/xEC/x2C /xF7/xF2/xEE /xEF/xF0/xE5/xE4/xF1/xF2 /xE0/xE2/xEB/xFF/xE5/xF2 /xE8/xE7 /xF1/xE5/xE1 /xFF /xEA /xEE/xEC/xEC/xE5/xF0/xF7/xE5/xF1/xEA/xE8/x2D
/xEE/xF0/xE8/xE5/xED/xF2/xE8/xF0/xEE/xE2/xE0/xED/xED/xFB/xE9 /xEF/xF0/xEE /xE4/xF3/xEA/xF2 /x2E /xC0/xEF/xEF/xE0/xF0/xE0/xF2 /xEF/xF0/xE8/xE2/xEE /xE4/xE8/xF2/xF1 /xFF /xE2 /xE4/xE2/xE8/xE6 /xE5/xED/xE8/xE5 /xEF/xEE /xEF/xF0/xE8/xED/xF6/xE8/xEF/xF3 /xEC/xE0/x2D
/xFF/xF2/xED/xE8/xEA /xE0/x2E /xCF/xF0/xEE/xE8/xE7/xE2/xEE /xE4/xE8/xF2/xE5/xEB/xE8 /xF3/xE2/xE5/xF0 /xFF/xFE/xF2 /x2C /xF7/xF2/xEE /xE4/xE0/xED/xED/xFB/xE9 /xF0/xEE/xE1/xEE/xF2 /xEC/xEE /xE6 /xE5/xF2 /xE4/xE2/xE8/xE3 /xE0/xF2/xFC/xF1 /xFF /xED/xE5 /xF2/xEE/xEB/xFC/x2D
/xEA /xEE /xEF/xEE /xE4/xEE/xF0/xEE/xE3/xE5/x2C /xED/xEE /xE8 /xEF/xEE /xEF/xE5/xF1/xEA/xF3 /xE8 /xE4/xE0/xE6 /xE5 /xEF/xEE /xE2/xEE /xE4/xE5/x2E /xCA/xF0/xEE/xEC/xE5 /xF2/xEE/xE3/xEE/x2C /xFD/xF2/xEE/xF2 /xF0/xEE/xE1/xEE/xF2 /xEF/xF0/xEE /xF5 /xEE /xE4/xE8/xEB
/xE8/xF1/xEF/xFB/xF2 /xE0/xED/xE8/xFF /xE2 /xE2/xEE/xEE/xF0/xF3/xE6 /xE5/xED/xED/xFB/xF5 /xF1/xE8/xEB/xE0/xF5 /xD8/xE2/xE5/xF6/xE8/xE8/x2E
/xD0/xE8/xF1/x2E /x32/x32/x3A /xD0 /xEE/xE1/xEE/xF2 /x47/x72/x6F/x75/x6E/x64/x42/x6F/x74
/xC5/xF9/xE5 /xEE /xE4/xE8/xED /xEA /xEE/xEC/xEC/xE5/xF0/xF7/xE5/xF1/xEA/xE8/x2D/xEE/xF0/xE8/xE5/xED/xF2/xE8/xF0/xEE/xE2/xE0/xED/xED/xFB/xE9 /xEF/xF0/xEE /xE4/xF3/xEA/xF2/x15/xF0/xEE/xE1/xEE/xF2 /xF8/xE0/xF0 /x53/x70/x68/x65/x72/x6F/x5B/x31/x31/x5D/x2E
/xD3/xEF/xF0/xE0/xE2/xEB/xFF/xF2/xFC /xF2 /xE0/xEA/xE8/xEC /xF8/xE0/xF0/xEE/xEC /xEC/xEE /xE6/xED/xEE /xEF/xF0/xE8 /xEF/xEE/xEC/xEE/xF9/xE8 /xF1/xEC/xE0/xF0/xF2/xF4/xEE/xED/xE0 /xED/xE0 /x69/x4F/x73 /xE8/xEB/xE8 /x41/x6E/x64/x72/x6F/x69/x64/x2E
/xD0/xE8/xF1/x2E /x32/x33/x3A /xD0 /xEE/xE1/xEE/xF2 /x53/x70/x68/x65/x72/x6F /x32/x2E/x30
/xD0 /xEE/xE1/xEE/xF2 /xFF/xEF/xEE/xED/xF1/xEA /xEE/xE9 /xF4/xE8/xF0/xEC/xEE/xE9 /x53/x6F/x6E /x79/x5B/x31/x32/x5D /xEF/xF0/xE8/xEC/xE5/xF7/xE0/xF2/xE5/xEB/xE5/xED /xF2/xE5/xEC/x2C /xF7/xF2/xEE /xE8/xEC /xEC/xEE /xE6/xED/xEE /xF3/xEF/xF0/xE0/xE2/x2D
/xEB/xFF/xF2/xFC /xE3/xEE/xEB/xEE/xF1/xEE/xEC/x2E
/xD0/xE8/xF1/x2E /x32/x34/x3A /xD0 /xEE/xE1/xEE/xF2 /x53/x6F/x6E /x79
/xD0 /xEE/xE1/xEE/xF2 /x2C /xF0/xE0/xE7/xF0/xE0/xE1/xEE/xF2 /xE0/xED/xED/xFB/xE9 /xEA /xEE/xEC/xEF/xE0/xED/xE8/xE5/xE9 /x53/x6F/x6C/x61/x72/x62 /x6F/x74/x69/x63/x73 /xE4/xE2/xE8/xE6 /xE5/xF2/xF1 /xFF /xE1/xEB/xE0/xE3/xEE /xE4/xE0/xF0 /xFF /xED/xE0/xEB/xE8/xF7/xE8/xFE
/x32/x38/xEF/xEE /xE4/xE2/xE8/xE6/xED/xEE/xE9 /xF2/xE5/xEB/xE5/xE6/xEA/xE8 /xE2/xED/xF3/xF2/xF0/xE8/x2E /xC8/xED/xF2/xE5/xF0/xE5/xF1/xED/xEE/x2C /xF7/xF2/xEE /xF0/xEE/xE1/xEE/xF2 /xEC/xEE /xE6 /xE5/xF2 /xE1/xFB/xF2/xFC /xFD/xED/xE5/xF0/xE3/xE5/xF2/xE8/xF7/xE5/xF1/xEA/xE8
/xED/xE5/xE7/xE0/xE2/xE8/xF1/xE8/xEC /xEE/xF2 /xE2/xED/xE5/xF8/xED/xE8/xF5 /xE8/xF1/xF2/xEE/xF7/xED/xE8/xEA /xEE/xE2 /xEF/xE8/xF2 /xE0/xED/xE8/xFF/x2C /xE2 /xF1/xE8/xEB/xF3 /xF2/xEE/xE3/xEE/x2C /xF7/xF2/xEE /xED/xE0 /xED/xBC/xEC /xF3 /xF1/xF2 /xE0/xED/xEE/xE2/x2D
/xEB/xE5/xED/xFB /xF1/xEE/xEB/xED/xE5/xF7/xED/xFB/xE5 /xE1/xE0/xF2 /xE0/xF0/xE5/xE8/x2E/x5B/x31/x33/x5D
/xD0/xE8/xF1/x2E /x32/x35/x3A /xD0 /xEE/xE1/xEE/xF2 /x53/x6F/x6C/x61/x72/x62 /x6F/x74/x69/x63/x73
/xCD/xE8/xE6 /xE5 /xEF/xF0/xE8/xE2/xE5/xE4/xE5/xED /xF0/xEE/xE1/xEE/xF2 /x52/x6F/x73/x70/x68/x65/x72/x65/x15/xF0/xE0/xE7/xF0/xE0/xE1/xEE/xF2/xEA /xE0 /xE8/xF1/xEF/xE0/xED/xF1/xEA/xE8/xF5 /xF3/xF7/xE5/xED/xFB/xF5 /xE8 /xE8/xED/xE6 /xE5/xED/xE5/x2D
/xF0/xEE/xE2 /xE4/xEB/xFF /xED/xF3/xE6/xE4 /xE0/xE3/xF0/xEE/xEF/xF0/xEE/xEC/xFB/xF8/xEB/xE5/xED/xED/xEE/xE3/xEE /xEA /xEE/xEC/xEF/xEB/xE5/xEA /xF1/xE0/x5B/x31/x34/x5D/x2E /xCF/xF0/xE5/xE4/xEF/xEE/xEB/xE0/xE3 /xE0/xE5/xF2/xF1 /xFF/x2C /xF7/xF2/xEE /xF1/xF4/xE5/x2D
/xF0/xE8/xF7/xE5/xF1/xEA /xE0/xFF /xF4/xEE/xF0/xEC/xE0 /xE8 /xEC/xE0/xEB/xFB/xE9 /xE2/xE5/xF1 /xEF/xEE/xE7/xE2/xEE/xEB/xFF/xF2 /xF0/xEE/xE1/xEE/xF2/xF3 /xEB/xE0/xE2/xE8/xF0/xEE/xE2/xE0/xF2/xFC /xEC/xE5/xE6/xE4/xF3 /xF0/xE0/xF1/xF2/xE5/xED/xE8/xFF/xEC/xE8/x2C
/xED/xE5 /xEF/xEE/xE2/xF0/xE5/xE6/xE4/xE0/xFF /xE8/xF5/x2E /xC4/xE2/xE8/xE6 /xE5/xED/xE8/xE5 /xEE/xF1/xF3/xF9/xE5/xF1/xF2/xE2/xEB/xFF/xE5/xF2/xF1 /xFF /xE7/xE0 /xF1/xF7/xE5/xF2 /xF1/xEC/xE5/xF9/xE5/xED/xE8/xFF /xF6/xE5/xED/xF2/xF0/xE0 /xEC/xE0/xF1/xF1/x2E
/xD0/xE8/xF1/x2E /x32/x36/x3A /xD0 /xEE/xE1/xEE/xF2 /x52/x6F/x73/x70/x68/x65/x72/x65
/xC2 /xD0 /xEE/xF1/xF1/xE8/xE8 /xF2/xEE /xE6 /xE5 /xE8/xE4/xF3/xF2 /xF0/xE0/xE7/xF0/xE0/xE1/xEE/xF2/xEA/xE8 /xE2 /xE4/xE0/xED/xED/xEE/xEC /xED/xE0/xEF/xF0/xE0/xE2/xEB/xE5/xED/xE8/xE8/x2E /xCF/xF0/xE8/xEC/xE5/xF0/xEE/xEC /xEC/xEE /xE6 /xE5/xF2
/xEF/xEE/xF1/xEB/xF3/xE6/xE8/xF2/xFC /xF0/xEE/xE1/xEE/xF2 /x53/x70/x68/x65/x52/x6F/x62 /x28/xCC/xEE/xF1/xEA/xE2/xE0/x2D/xC8/xE6 /xE5/xE2/xF1/xEA/x2D/xD1/xE0/xED/xEA/xF2/x2D/xCF/xE5/xF2/xE5/xF0/xE1/xF3/xF0/xE3/x29/x3A
/xD0/xE8/xF1/x2E /x32/x37/x3A /xD0 /xEE/xE1/xEE/xF2 /x53/x70/x68/x65/x52/x6F/x62
/x32/x39/x35 /xC1/xE8/xE1/xEB/xE8/xEE/xE3/xF0/xE0/xF4/xE8/xF7/xE5/xF1/xEA/xE8/xE9 /xF1/xEF/xE8/xF1/xEE/xEA
/x31/x2E /x52/x6F/x74/x75/x6E/x64/x75/x73/x2E /x5B/xDD/xEB/xE5/xEA/xF2/xF0/xEE/xED/xED/xFB/xE9 /xF0/xE5/xF1/xF3/xF0/xF1/x5D /xD0 /xE5/xE6/xE8/xEC /xE4/xEE/xF1/xF2/xF3/xEF/xE0 /x68 /x74/x74/x70/x3A/x2F/x2F/x77/x77/x77/x2E/x72/x6F/x74/x75/x6E/x64/x75/x73/x2E/x73/x65/x2F
/x32/x2E /xC2/x2E/xC5/x2E/xCF/xE0/xE2/xEB/xEE/xE2/xF1/xEA/xE8/xE9/x2C /xC3 /x2E/xCF/x2E /xD2 /xE5/xF0/xE5/xF5 /xEE/xE2 /xD3/xEF/xF0/xE0/xE2/xEB/xE5/xED/xE8/xE5 /xEC/xEE/xE1/xE8/xEB/xFC/xED/xFB/xEC /xF1/xF4/xE5/xF0/xE8/xF7/xE5/xF1/xEA/xE8/xEC /xE8/xED/x2D
/xF4/xEE/xF0/xEC/xE0/xF6/xE8/xEE/xED/xED/xFB/xEC /xF0/xEE/xE1/xEE/xF2/xEE/xEC /xF1 /xF2/xF0/xE5/xEC/xFF /xEE/xF0/xF2/xEE/xE3/xEE/xED/xE0/xEB/xFC/xED/xFB/xEC/xE8 /xEC/xE0/xF5 /xEE/xE2/xE8/xEA /xE0/xEC/xE8/x2E /x2F/x2F /xD1/xEF/xE5/xF6/xF2/xE5/xF5/x2D
/xED/xE8/xEA /xE0 /xE8 /xF1/xE2/xFF/xE7/xFC/x2C /x9D/x33/x2F/x32/x30/x31/x32 /xF1/x2E/x31/x39/x2D/x32/x35/x2E
/x33/x2E /xC0/x2E/xC2/x2E/xC1/xEE/xF0/xE8/xF1/xEE/xE2/x2C /xC0/x2E/xC0/x2E/xCA/xE8/xEB/xE8/xED/x2C /xC8/x2E/xD1/x2E/xCC/xE0/xEC/xE0/xE5/xE2/x2E /xCA/xE0/xEA /xF3/xEF/xF0/xE0/xE2/xEB/xFF/xF2/xFC /xF8/xE0/xF0/xEE/xEC /xD7/xE0/xEF/xEB/xFB/xE3/xE8/xED/xE0
/xF1 /xEF/xEE/xEC/xEE/xF9/xFC/xFE /xF0/xEE/xF2/xEE/xF0/xEE/xE2/x2E /x2F/x2F /xCD/xE5/xEB/xE8/xED/xE5/xE9/xED/xE0/xFF /xE4/xE8/xED/xE0/xEC/xE8/xEA /xE0/x2C /x32/x30/x31/x32/x2E /xD2/x38/x2C /x9D/x32 /xF1/xF2/xF0/x2E /x32/x38/x39/x2D/x33/x30/x37/x2E
/x34/x2E /xC0/x2E/xC2/x2E/xC1/xEE/xF0/xE8/xF1/xEE/xE2/x2C /xC0/x2E/xC0/x2E/xCA/xE8/xEB/xE8/xED/x2C /xC8/x2E/xD1/x2E/xCC/xE0/xEC/xE0/xE5/xE2/x2E /xCA/xE0/xEA /xF3/xEF/xF0/xE0/xE2/xEB/xFF/xF2/xFC /xF8/xE0/xF0/xEE/xEC /xD7/xE0/xEF/xEB/xFB/xE3/xE8/x2D
/xED/xE0 /xF1 /xEF/xEE/xEC/xEE/xF9/xFC/xFE /xF0/xEE/xF2/xEE/xF0/xEE/xE2 /x2F/x2F /xCC/xEE/xE1/xE8/xEB/xFC/xED/xFB/xE5 /xF0/xEE/xE1/xEE/xF2/xFB/x3A /xF0/xEE/xE1/xEE/xF2/x2D/xEA /xEE/xEB/xE5/xF1/xEE /xE8 /xF0/xEE/xE1/xEE/xF2/x2D/xF8/xE0/xF0/x2E
/xD1/xE1/x2E/xF0/xE0/xE1/xEE/xF2 /x2E/x2D/xCC/x2E/x2D/xC8/xE6 /xE5/xE2/xF1/xEA/x3A /xC8/xED/xF1/xF2/xE8/xF2/xF3/xF2 /xEA /xEE/xEC/xEF/xFC/xFE/xF2/xE5/xF0/xED/xFB/xF5 /xE8/xF1/xF1/xEB/xE5/xE4/xEE/xE2/xE0/xED/xE8/xE9/x2C /x32/x30/x31/x33/x2C /xF1/x2E /x31/x33/x31/x2D
/x31/x36/x38
/x35/x2E /xC0/x2E/xC2/x2E/xCA/xE0/xF0/xE0/xEF/xE5/xF2 /xFF/xED/x2E /xC4/xE2/xF3/xF5/xEF/xE0/xF0/xE0/xEC/xE5/xF2/xF0/xE8/xF7/xE5/xF1/xEA /xE0/xFF /xEC/xEE /xE4/xE5/xEB/xFC /xF2/xF0/xE5/xED/xE8/xFF/x2E /x2F/x2F /xCF/xCC/xCC /xF2 /x2E/x37/x33 /xE2/xFB/xEF/x2E/x34/x2C
/x32/x30/x30/x39
/xF1/x2E/x35/x31/x35/x2D/x35/x31/x39/x2E
/x36/x2E /xC0/x2E/xC2/x2E/xCA/xE0/xF0/xE0/xEF/xE5/xF2 /xFF/xED /xCE /xEC/xEE /xE4/xE5/xEB/xE8/xF0/xEE/xE2/xE0/xED/xE8/xE8 /xF1/xE8/xEB /xF2/xF0/xE5/xED/xE8/xFF /xE2 /xE4/xE8/xED/xE0/xEC/xE8/xEA /xE5 /xF8/xE0/xF0/xE0 /xED/xE0 /xEF/xEB/xEE/xF1/xEA /xEE/x2D
/xF1/xF2/xE8/x2E /x2F/x2F /xCF/xCC/xCC /xF2 /x2E/x37/x34 /xE2/xFB/xEF/x2E/x34/x2C /x32/x30/x31/x30/x2C /xF1/x2E/x35/x33/x31/x2D/x35/x33/x35/x2E
/x37/x2E /xD2 /x2E/xC2/x2E/xD1/xE0/xEB/xFC/xED/xE8/xEA /xEE/xE2/xE0/x2C /xC4/x2E/xC2/x2E/xD2/xF0/xE5/xF9/xE5/xE2/x2C /xD1/x2E/xD0 /x2E/xC3 /xE0/xEB/xEB/xFF/xEC/xEE/xE2 /xC4/xE2/xE8/xE6 /xE5/xED/xE8/xE5 /xF1/xE2/xEE/xE1/xEE /xE4/xED/xEE/xE9 /xF8/xE0/xE9/xE1/xFB
/xEF/xEE /xE3/xEE/xF0/xE8/xE7/xEE/xED/xF2 /xE0/xEB/xFC/xED/xEE/xE9 /xF8/xE5/xF0/xEE /xF5 /xEE/xE2/xE0/xF2/xEE/xE9 /xEF/xEB/xEE/xF1/xEA /xEE/xF1/xF2/xE8/x2E /x2F/x2F /xCD/xE5/xEB/xE8/xED/xE5/xE9/xED/xE0/xFF /xE4/xE8/xED/xE0/xEC/xE8/xEA /xE0/x2C /x32/x30/x31/x32/x2E
/xF2 /x2E/x38/x2C /x9D/x31 /xF1/x2E /x38/x33/x2D/x31/x30/x31/x2E
/x38/x2E /xC2/x2E/xD4/x2E/xC6/xF3/xF0/xE0/xE2/xEB/xE5/xE2 /xCE /xEC/xEE /xE4/xE5/xEB/xE8 /xF1/xF3/xF5 /xEE/xE3/xEE /xF2/xF0/xE5/xED/xE8/xFF /xE2 /xE7/xE0/xE4/xE0 /xF7/xE5 /xEA /xE0 /xF7/xE5/xED/xE8/xFF /xF2/xE2/xE5/xF0 /xE4/xFB/xF5 /xF2/xE5/xEB/x2E /x2F/x2F
/xCF/xCC/xCC/x2C /x31/x39/x39/x38/x2E /xF2 /x2E/x36/x32 /xE2/xFB/xEF/x2E /x35 /x2E /x37/x36/x32/x2D/x37/x36/x37/x2E
/x39/x2E /xCA/xEE/xED/xF2/xE5/xED/xF1/xF3 /xCF/x2E /xD1/xE2/xFF/xE7/xFC /xEC/xE5/xE6/xE4/xF3 /xF2/xF0/xE5/xED/xE8/xE5/xEC /xF1/xEA /xEE/xEB/xFC/xE6 /xE5/xED/xE8/xFF /xE8 /xF2/xF0/xE5/xED/xE8/xE5/xEC /xE2/xE5/xF0/xF7/xE5/xED/xE8/xFF /xE8 /xE5/xE5
/xF3/xF7/xE5/xF2 /xE2 /xF2/xE5/xEE/xF0/xE8/xE8 /xE2/xEE/xEB/xF7/xEA /xE0/x2E /x2F/x2F /xCF/xF0/xEE/xE1/xEB/xE5/xEC/xFB /xE3/xE8/xF0/xEE/xF1/xEA /xEE/xEF/xE8/xE8 /xCC/x2E/x3A /xCC/xE8/xF0/x2C /xF1/x2E /x36/x30/x2D/x37/x37/x2E
/x31/x30/x2E /xCC/x2E/xC2/x2E/xC8/xF8/xF5 /xE0/xED/xFF/xED/x2E /xC4/xE8/xED/xE0/xEC/xE8/xEA /xE0 /xEE /xE4/xED/xEE/xF0/xEE /xE4/xED/xEE/xE3/xEE /xF8/xE0/xF0/xE0 /xED/xE0 /xE3/xEE/xF0/xE8/xE7/xEE/xED/xF2 /xE0/xEB/xFC/xED/xEE/xE9 /xEF/xEB/xEE/xF1/xEA /xEE/x2D
/xF1/xF2/xE8 /xF1 /xF2/xF0/xE5/xED/xE8/xE5/xEC /xF1/xEA /xEE/xEB/xFC/xE6 /xE5/xED/xE8/xFF/x2C /xE2/xE5/xF0/xF7/xE5/xED/xE8/xFF /xE8 /xEA /xE0 /xF7/xE5/xED/xE8/xFF/x2E /x2F/x2F /xC4/xE8/xF1/x2E /xEA /xE0/xED/xE4/x2E /xF4/xE8/xE7/x2E/x2D/xEC/xE0/xF2 /x2E /xED/xE0 /xF3/xEA/x2C
/x30/x31/x2E/x30/x32/x2E/x30/x31/x2C /x32/x30/x31/x30/x2E /xCC/xC3/xD3 /xE8/xEC/x2E/xCC/x2E/xC2/x2E /xCB/xEE/xEC/xEE/xED/xEE/xF1/xEE/xE2/xE0/x2C /xEC/xE5/xF5 /xE0/xED/xE8/xEA /xEE/x2D/xEC/xE0/xF2/xE5/xEC/xE0/xF2/xE8/xF7/xE5/xF1/xEA/xE8/xE9 /xF4/xE0/xEA/xF3 /xEB/xFC/x2D
/xF2/xE5/xF2 /x2E
/x31/x31/x2E /x5B/xDD/xEB/xE5/xEA/xF2/xF0/xEE/xED/xED/xFB/xE9 /xF0/xE5/xF1/xF3/xF0/xF1/x5D /xD0 /xE5/xE6/xE8/xEC /xE4/xEE/xF1/xF2/xF3/xEF/xE0 /x68 /x74/x74/x70/x3A/x2F/x2F/x77/x77/x77/x2E/x73/x70/x68/x65/x72/x6F/x2E/x63/x6F/x6D/x2F
/x31/x32/x2E /x5B/xDD/xEB/xE5/xEA/xF2/xF0/xEE/xED/xED/xFB/xE9 /xF0/xE5/xF1/xF3/xF0/xF1 /xD0 /xE5/xE6/xE8/xEC /xE4/xEE/xF1/xF2/xF3/xEF/xE0 /x68 /x74/x74/x70/x3A/x2F/x2F/x6E/x65/x77/x73/x2E/x62/x62 /x63/x2E/x63/x6F/x2E/x75/x6B/x2F/x32/x2F/x68/x69/x2F/x73/x63/x69/x65/x6E/x63/x65/x2F/x6E/x61/x74/x75/x72/x65/x2F
/x31/x38/x39/x38/x33/x34/x32/x2E/x73/x74/x6D
/x31/x33/x2E /x5B/xDD/xEB/xE5/xEA/xF2/xF0/xEE/xED/xED/xFB/xE9 /xF0/xE5/xF1/xF3/xF0/xF1/x5D /xD0 /xE5/xE6/xE8/xEC /xE4/xEE/xF1/xF2/xF3/xEF/xE0 /x68 /x74/x74/x70/x3A/x2F/x2F/x77/x77/x77/x2E/x72/x6F/x62 /x6F/x74/x6C/x69/x76/x69/x6E/x67/x2E/x63/x6F/x6D/x2F/x72/x6F/x62 /x6F/x74/x2D
/x6E/x65/x77/x73/x2F/x73/x6F/x6C/x61/x72/x2D/x72/x6F/x62 /x6F/x74/x2D/x62/x61/x6C/x6C/x2F
/x31/x34/x2E /x5B/xDD/xEB/xE5/xEA/xF2/xF0/xEE/xED/xED/xFB/xE9 /xF0/xE5/xF1/xF3/xF0/xF1/x5D /xD0 /xE5/xE6/xE8/xEC /xE4/xEE/xF1/xF2/xF3/xEF/xE0 /x68 /x74/x74/x70/x3A/x2F/x2F/x77/x77/x77/x2E/x61/x67/x72/x69/x74/x69/x6D/x65/x73/x2E/x72/x75
/x33/x30/xD1/xEE /xE4/xE5/xF0 /xE6 /xE0/xED/xE8/xE5
/x31 /xC2/xE2/xE5/xE4/xE5/xED/xE8/xE5 /x33
/x32 /xC4/xE8/xED/xE0/xEC/xE8/xEA /xE0 /xE8 /xF3/xEF/xF0/xE0/xE2/xEB/xE5/xED/xE8/xE5 /xF0/xEE/xE1/xEE/xF2/xEE/xEC/x2D/xF8/xE0/xF0/xEE/xEC /x34
/x32/x2E/x31 /xCE/xEF/xE8/xF1/xE0/xED/xE8/xE5 /xEC/xEE /xE4/xE5/xEB/xE8/x2E /xD3/xF0/xE0/xE2/xED/xE5/xED/xE8/xFF /xE4/xE2/xE8/xE6 /xE5/xED/xE8/xFF /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x34
/x32/x2E/x32 /xC4/xE2/xF3/xF5/xEF/xE0/xF0/xE0/xEC/xE5/xF2/xF0/xE8/xF7/xE5/xF1/xEA /xE0/xFF /xEC/xEE /xE4/xE5/xEB/xFC /xF2/xF0/xE5/xED/xE8/xFF /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x36
/x32/x2E/x33 /xCF/xEE/xE2/xEE/xF0/xEE/xF2 /xF0/xEE/xE1/xEE/xF2 /xE0 /xED/xE0 /xEC/xE5/xF1/xF2/xE5 /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x38
/x32/x2E/x34 /xC4/xE2/xE8/xE6 /xE5/xED/xE8/xE5 /xF0/xEE/xE1/xEE/xF2 /xE0 /xEF/xEE /xEE/xF2/xF0/xE5/xE7/xEA/xF3 /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x31/x30
/x32/x2E/x34/x2E/x31 /xC0/xED/xE0/xEB/xE8/xE7 /xF1/xE8/xEB/xFB /xE8 /xEC/xEE/xEC/xE5/xED/xF2 /xE0 /xF2/xF0/xE5/xED/xE8/xFF /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x31/x32
/x32/x2E/x34/x2E/x32 /xCD/xE5/xEA /xEE/xF2/xEE/xF0/xFB/xE5 /xE0/xF1/xEF/xE5/xEA/xF2/xFB /xF1/xE2/xEE/xE1/xEE /xE4/xED/xEE/xE9 /xE4/xE8/xED/xE0/xEC/xE8/xEA/xE8 /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x31/x34
/x32/x2E/x34/x2E/x33 /xCF/xF0/xE8/xEC/xE5/xF0 /xEF/xEE/xF1/xF2/xF0/xEE/xE5/xED/xE8/xFF /xF3/xEF/xF0/xE0/xE2/xEB/xE5/xED/xE8/xFF /xE4/xEB/xFF /xE4/xE2/xE8/xE6 /xE5/xED/xE8/xFF /xEF/xEE /xEE/xF2/xF0/xE5/xE7/xEA/xF3 /x31/x38
/x32/x2E/x35 /xCE/xE1 /xF5 /xEE /xE4 /xEF/xF0/xE5/xEF/xFF/xF2/xF1/xF2/xE2/xE8/xE9/x2E /xCA/xF0/xE8/xE2/xEE/xEB/xE8/xED/xE5/xE9/xED/xEE/xE5 /xE4/xE2/xE8/xE6 /xE5/xED/xE8/xE5 /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x32/x30
/x32/x2E/x35/x2E/x31 /xCE/xF1/xED/xEE/xE2/xED/xFB/xE5 /xE7/xE0/xEC/xE5/xF7/xE0/xED/xE8/xFF /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x32/x30
/x32/x2E/x35/x2E/x32 /xC0/xED/xE0/xEB/xE8/xE7 /xF1/xE8/xEB /xE8 /xEC/xEE/xEC/xE5/xED/xF2/xEE/xE2 /xE4/xEB/xFF /xE4/xE2/xE8/xE6 /xE5/xED/xE8/xFF /xE1/xE5/xE7 /xE2/xE5/xF0/xF7/xE5/xED/xE8/xFF /x2E /x2E /x2E /x32/x32
/x32/x2E/x35/x2E/x33 /xCF/xF0/xE8/xEC/xE5/xF0/xFB /xF2/xF0/xE0/xE5/xEA/xF2/xEE/xF0/xE8/xE9 /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x2E /x32/x33
/x33 /xC7/xE0/xEA/xEB/xFE/xF7/xE5/xED/xE8/xE5 /x32/x37
/x34 /xCF/xF0/xE8/xEB/xEE /xE6 /xE5/xED/xE8/xE5 /x31/x2E /xCF/xF0/xE8/xEC/xE5/xF0/xFB /xF0/xEE/xE1/xEE/xF2/xEE/xE2 /xF8/xE0/xF0/xEE/xE2 /x32/x38
/x35 /xC1/xE8/xE1/xEB/xE8/xEE/xE3/xF0/xE0/xF4/xE8/xF7/xE5/xF1/xEA/xE8/xE9 /xF1/xEF/xE8/xF1/xEE/xEA /x33/x30
/x33/x31MathNet.Ru
All Russian mathematical portal
O. I. Davydov, A. K. Platonov, Database for semantic model of the operating
environment of mobile service robot, Keldysh Institute preprints , 2017, 007
DOI: 10.20948/prepr20177
Use of the allRussian mathematical portal MathNet.Ru imp lies that you have read and agreed to these terms of use
http://www.mathnet.ru/eng/agreement
Download details:
IP: 79.139.215.77
December 17, 2023, 00:47:21ИПМ им.М.В.Келдыша РАН   •  Электронная библиотека
Препринты ИПМ   •  Препринт № 7 за 2017 г.
ISSN 20712898 (Print)
ISSN 20712901 (Online)
Давыдов О.И.,  Платонов А.К.
База данных для
семантической модели
операционной среды
мобильного сервисного
робота
Рекомендуемая форма библиографической ссылки:   Давыдов О.И., Платонов А.К. База
данных для семантической модели операционной среды мобильного сервисного робота //
Препринты ИПМ им.  М.В.Келдыша. 2017. №  7. 24  с. doi:10.20948/prepr20177  
URL: http://library.keldysh.ru/preprint.asp?id=20177О р д е н а  Л е н и н а  
ИНСТИТУТ ПРИКЛАДНОЙ МАТЕМАТИКИ  
имени М.В.Келдыша  
Р о с с и й с к о й  а к а д е м и и  н а у к  
 
 
 
 
 
 
 
 
О.И. Давыдов, А.К. Платонов  
 
 
База данных для семантической модели 
операционной среды  
мобильного сервисного робота  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Москва — 2017 Давыдов О.И.,   Платонов А.К.  
База данных для с емантическ ой модел и операционной среды 
мобильного сервисного робота  
В работе описывается база данных  для семантическ ой модел и операционной среды 
сервисного мобильного робота  РБ2. В соответствии с архитектурой семантической  
модели операционной среды в разделах базы данных содержится информация обо всех  
элементах модели , включая  Термы , Предикаты, Высказывания , Правила и Сценари и. В 
данной работе п риводят ся форматы  элементов  семантической модели , приводятся их 
примеры , описыва ется структура базы данных, в том числе состав таблиц, отдельных 
полей в таблицах, связей между таблицами.  
Ключевые слова: мобильный робот, семантическая  модел ь, операционн ая сред а,  база 
данных, таблица базы данных, поля таблицы . 
Oleg  Izmailovich  Davydov , Alexandr  Konstantinovich  Platonov  
Database for semantic model of the operating environment of mobile 
service robot   
The paper describes the database for the semantic model of the operating environment of the 
service mobile robot RB 2. In accordance with the architecture of the semantic model of the 
operating environment the database partition s contain information about model elements, 
including Terms , Predicates, Propositions, Rules, and Scripts. This paper represent s formats of 
the elements of the semant ic model, provides examples, describes the database structure, 
including composition of tables, individual fields in the tables  and relationships between tables . 
Keywords : mobile  robot , semantic  model , operating environment , database , database  table , table  
fields . 
Работа  выполнена  при финансовой  поддержке  РФФИ  (грант  № 15 0806431) и РНФ   
(грант  № 16 1910705).  
Оглавление  
Введение  ................................ ................................ ................................ .......................  3 
1. База данных в системе  управления робота  ................................ ...........................  4 
2. Термы  ................................ ................................ ................................ ........................  6 
3. Предикаты  ................................ ................................ ................................ .................  8 
4. Высказывания  ................................ ................................ ................................ .........  11 
5. Правила  ................................ ................................ ................................ ...................  13 
 5.1. Правило типа Логика ................................ ................................ ....................  15 
 5.2. Правило типа Действие  ................................ ................................ ................  16 
 5.3. Правило типа Событие  ................................ ................................ .................  17 
6. План , Сценарий   ................................ ................................ ................................ ..... 18 
7. Заключение  ................................ ................................ ................................ .............  23 
Список литера туры  ................................ ................................ ................................ .... 24 
 3 
Введение  
Проблемой создания с емантически х модел ей операционной среды  робота 
занимаются научные и исследовательские центры во всем мире . В этом 
направлении вед ется разработк а специализированных языков  для описания 
среды , алгоритмов построени я семантических моделей  на основании данных  
сенсоров , созда ются  специализированны е базы семантическ ой информации , 
[1], [2], [3] .  Однако  в настоящее время, несмотря на значительные усилия, 
предпринимаемые мировыми производителями,  на рынке практически нет 
робот ов, которые  использ овали бы  семантическ ую информацию  для 
построения целенаправленного поведения . 
Предлагаемая нами работа проводится в рамках проекта, цель которого – 
создание недорогой , но эффективн ой системы  управления робот а с 
элементами иск усственного интеллект а. В рамках этого проекта 
разрабатыва ется семантическая модель операционной среды , которая  
предназначена для управления поведением  сервисного мобильного робота 
РБ2 в помещениях,  в динамически меняющейся среде обитания человека , 
где робот  должен п олуавтономно выполнять различные команды человека и 
перемещаться внутри этих помещений.  
Робот РБ 2 представляет собой подвижную платформу, на которой 
установ лен манипулятор  с пятью степенями свободы . Подвижная платформа 
робота оборудована дифференциальным  приводом с двумя передними 
ведущими колесами и двумя задними поддерживающими омни колесами. 
Робот оборудован контактными датчиками препятствий, инфракрасными и 
ультразвуковыми датчиками малых расстояний. На корпусе робота 
установлен лазерный сканер, котор ый является основным источником 
данных для управления движением робота.  Программное обеспечение 
системы управления установлено на бортовом компьютере с двухъядерным 
процессором Intel, тактовой частотой 1.8 ГГц, работающим под 
операционной систем ой Windows 7 Embeded.   
Робот РБ2 должен управляться в командно супервизорном режиме, а в 
ряде случаев действовать автономно. При т аком управлении человек 
оператор  робот а формулирует текущее задание, которое робот выполняет в 
автономном режиме. Человек контролирует д ействия робота и корректирует 
задание. Такой способ управления должен иметь большую степень 
независимости от человека , обладать хорошими способностями  «понимания» 
окружающей обстановки  и иметь возможность естественного 
взаимодействия с людьми.  Только иногд а, когда это просто необходимо, 
оператор  берет  на себя прямое управление механизмами робота.   
Для того чтобы иметь возможность управлять поведением  робота, его 
система управления должна обладать адекватной моделью операционной 
среды [4]. Система  управления  робота РБ 2 состоит из  двух уровн ей. 4 
Верхний уровень, формирующий  поведение робота , использует 
семантическую модель операционной среды. Он генериру ет 
последовательность  инструкци й, которые  передаются  на исполнение 
нижн ему уровн ю системы  [5]. Нижний уровен ь, использу я метрико 
топологическую модель среды, на основе этих инструкций формирует  
последовательность конкретных команд для исполнительн ых механизмов  
робота  [6].  
Семантическая модель , используемая  верхн им уровн ем системы, 
описыва ет среду в виде набора предикатных выражений, в виде логических 
отношений между явлениями, объектами и свойствами в этой операционной  
среде . В сервисном роботе такая модель важна  как для обеспечения диалога с 
человеком оператором робота , так и для выполнения его заданий . Для 
общения с  человек ом робот должен  иметь описание семантики предметной 
области , уметь интерпретировать  словарную и грамматическую структуру  
задания, которое формулир уются оператором.  Для выполнения этого задания 
робот должен обладать возможностью формировать  последовательность 
целенаправленн ых действий, которые с большой долей вероятности приведут 
его к цели.   
В данной работе  описывается только та часть семантическ ой модел и, 
которая позволя ет робот у планирова ть действия и прогнозиров ать развити я 
ситуации , а такж е исполнять построенные планы . Модель созда на пока 
только для решения задач управления движением подвижной платформы  
робота . Модель для управления манипулятором робота находится в стадии 
разработки.  Задачи общения робота с человеком , задачи обработки 
сенсо рной информации , а также  задачи  занесения  в базу данных модели 
операционной среды в данной работе не рассматриваются.   
1. Базы данных  в системе управления робота  
Архитектура систем ы управления робота РБ 2 соответствует архитектуре, 
приведен ной в работе [7]. Она воспроизведена на рисунке 1. Из всех 
элементов этой архитектуры в управлении движением  робота принимают 
участие Монитор , Планировщик  и Агент навигации и построения 
движения платформы робота . Семантическая модель операционной среды 
хранится в Базе дан ных.  
Целенаправленное п оведение  – это способность  робота  планировать и 
выполнять последовательность  действи й для достижения  поставленной цели, 
учитывая  влияни е всех  внутренних и внешних факторов.  Целенаправленное 
поведение робота  реализуется системой упра вления в два этапа. На первом  
этапе осуществляется  прогнозировани е ситуации и формирование плана 
поведения робота . Эти задачи решаются Планировщиком. На втором этапе 
сформированный план  выполн яется Агент ом навигации и построения 5 
движения платформы робота.  Монитор контролирует весь этот процесс и 
управляет  им. 
 
 
Рис. 1 . Архитектура системы управления робота РБ 2 
Монитор и Планировщик представляют собой  верхн ий уров ень системы  
управления , а Агент навигации и построения движения платформы  – 
нижн ий. Семантичес кая модель  среды используется Монитором и 
Планировщиком, которые ф ормируют  последовательность специальных 
инструкци й для Агент а навигации и построения движения платформы . На 
основании этих инструкций Агент управляет  движением  робота, 
контролирует состояние  робота в операционной среде и передает на верхний 
уровень информацию о б успешности выполнения инструкций.   
Семантическая модель операционной среды хранится в базе данных 
системы  управления робота РБ 2. В данной публикации описывается 
структура базы данных  для семантической модели  операционной среды 
робота РБ 2, которая основана на следующих элементах: Термы , 
Предикаты , Высказывания , Правила  и Сценари и. Для описания модели  
используется  версия  языка  STRIPS  [8]. Обработки семантических 
выражений , логический в ывод и планирование осуществляется 
Планировщиком , работа которого основана на классическом алгоритме 
Графплан [9].   
Таблицы базы данных связаны между собой полями, названия которых 
содержат сочетание букв “ID”. На рисунках связи между таблицами 6 
обозначены стрелками  между связанны ми поля ми. Направление стрелок 
обозначает о бъединение всех записей из таблицы, откуда стрелка исходит,  и 
только тех записей из второй таблицы , в которых связанные поля совпадают . 
Почти все таблицы имеют три поля – Deleted , RecDate  и RecUser , которые 
используются как вспомогательные поля, служащие для документирования 
истории изменений, сделанных в базе данных.  
Для отладки  совместной работы б азы данных  с систем ой управления  
создана семантическ ая модел ь некой городской квартиры, котора я является  
тестов ой сред ой для робота РБ 2. Эта тестовая модель постоянно 
видоиз меняется и пополняется.  В отличие от структуры базы данных и 
концепции самой семантической модели ч исло записей в таблицах базы 
данных  постоянно меняется.  
2. Термы  
Термы  явля ются  основополагающим и элемента ми семантическ ой 
модел и операционной среды  РБ2. К Терм ам относя тся любые поняти я, 
использу емые в системе управления робота , в том числе  объект ы, события , 
свойств а. Каждый Терм определяется своим название м и объемом . Название  
– это слово или словосочетание , уникальное для каждого Терм а, объем  – это 
некоторый набор свойств , который связыва ет данн ый Терм  с другими 
Терм ами из базы данных , то есть с  другими  объектами, события ми или 
свойствами.  
Примерами Термов, используемых робот ом РБ 2, являются:  
Комната , Стол , Стол Офисный , Шкаф Платяной , Дверь , Стул . 
В рамках проекта РБ 2 все слова в названиях Термов, которые состоят из 
словосочетаний, связываются между собой дефисом( ).  
Структура информации, связанной с понятием Терма в базе данных 
робота, приведена  на рисунке 2.  
Корневая таблица – Terms  – содержит основные данные о Терма х: 
ID – идентификатор Терма ; 
Name  – имя Терма ; 
Desc  – словесное описание  Терма  объемом до 255 символов . 
С корневой таблицей связана таблица  TermTypes , в кото рой содержится 
классификация Термов. Здесь:  
Term TypeID  – идентификатор Терма ; 
TermID  – идентификатор  дочернего  Терма . 7 
 
Рис. 2 . Структура информации, формирующая понятие Терм   
Классификация определя ет структуру  Термов в  модели  операционной 
среды. В качеств е примера рассмотрим фрагмент классификации  модели  
операционной среды робота  РБ2: 
Шкаф Платяной  это Шкаф   
Шкаф  это Мебель  
Здесь Шкаф Платяной  является подклассом, т.е. дочерним  классом,  а 
Шкаф  для Шкаф Платяной  является суперклассом, т.е. родительским . В 
свою очередь   Шкаф  является подклассом  для Мебель , следовательно , и 
Шкаф Платяной  является подклассом  для Мебель . Для этой 
классификации  в таблице  TermTypes  сформированы следующие три записи:  
   TermTypeID  TermID  
Мебель   Шкаф  
Мебель   Шкаф Платяной  
Шкаф   ШкафПлатяной  
В структуре модели  среды робота РБ 2 заложена концепция сетевой 
классификации Термов, что  позволяет определять для каждого Терма  
несколько суперклассов.  
Структура описываемой  модел и среды  предполагает наличие Термов 
Констант, которые не являют ся суперклассами для других Термов. Термы 
Константы используются для описания индивидуальных  объектов или 
понятий, присутствующих в  операционных средах сервисного робота, 
например: Кресло кабинетное . Образом этого Терм а является конкретное 
кресло в кабинет е тестовой квартиры , которая используется как  среда для  
отладки системы управления РБ 2. В таблице  TermTypes  Термы Константы в 
поле TermTypeID  никогда не появляются.  
В отличие от Термов Констант, Термы Типы являются суперклассами 
для других Термов. Они об общают в одном понятии группу однотипных 
объектов, свойств или явлений. Например:  Кресло офисное  – это Терм Тип, 8 
к которому  относится Кресло кабинетное . Термы Типы могут заносит ься в 
таблицу  TermTypes  и в поле TermTypeID , и в поле TermID . 
3. Предикаты  
Термы не изолированы друг от друга. Они находятся между собой во 
множестве связей, отношений. Эти связи представлены в виде Предикатов , 
т.е. суждени й,  которые чтолибо утвержда ют или отрица ют об отношениях 
между Термами, являющихся параметрами Предиката . Кажд ый Предикат  
определяется своим название м – словосочетание м, обозначающим данный 
Предикат,  и набором параметров – Термов, между которыми определяется  
связь. Универсальный формат всех Предикатов в базе данных робота:  
НАЗВАНИЕ (Терм1, Терм2,… ТермN) 
В рамках п роекта РБ 2 названия Предикатов записываются прописными 
(заглавными) буквами. Все слова в названиях Предикатов, состоящих из 
словосочетаний, связываются между собой дефисом( ) или нижним 
подчеркиванием(_) , которое используется только там, где по синтаксис у 
русского языка должны стоять названия Термов.  
В качестве примера, рассмотрим Предикат , используемый роботом РБ 2: 
_НАХОДИТСЯ В_(Стол письменный, Кабинет)  
Данный Предикат  состоит из  названия _НАХОДИТСЯ В_ и двух Термов – 
Столписьменный,  Кабинет . 
Предикат ы определяют отношения только между Термами Типами и 
описывают только абстрактные  операционн ые среды. Связи  между 
Термами Константами и/или Термами Типами, описывающими реальные  
объект ы, события , свойства  операционной  среды робота , определяются  
Высказыван иями, которы е строятся на основе Предикат ов. Подробнее 
Высказывания будут  обсуждаться в разделе 4.  
Отметим, что совокупность всех Предикатов и Высказывани й, в которых 
в качестве параметра участвует один и тот же Терм, определяет объем этого 
Терма.  Для каж дого Терма объем  в базе данных робота долж ен быть 
уникальн ым.  
На рисунке  3 приведена структура информации  в базе данных робота , 
связанной с понятием Предиката.  Корневая таблица Predicates : 
ID – идентификатор Предикат а; 
Name  – имя Предикат а; 
Desc  – словесн ое описание  Предикат а объемом до 255 символов ; 
TypeID  – идентификатор типа Предикат а; 
TermCount  – количество Термов в Предикате.  9 
 
Рис. 3. Структура информации, формирующая понятие Предикат   
С корневой таблицей связана таблица  PredicateTerms , которая содер жит 
списки Термов, относящихся к каждому Предикату. Здесь:  
PredicateID  – идентификатор  Предикат а; 
TermNo  – порядковый номер Терма в Предикате;  
TermID  – идентификатор Терма . 
С корневой таблицей связана также сервисная таблица  PredicateTypes , в 
которой приве ден список типов Предикатов, идентификатор ы типов и их 
наименования.  В этой таблице в настоящее время содержатся пять  типов 
Предикатов: Свойство , Классификация , Состояние , Позиция , 
Принадлежность ( Часть целое ). 
Предикат ы типа Свойство  опре деля ют отличитель ные признак и Терм ов. 
Все они имеют один из нескольких унифицированны х формат ов, например : 
_ИМЕЕТ _=_ (Терм, Признак , Значение)   
Это означает , что  Терм  ИМЕЕТ  Признак  =Значение . Например:  
_ИМЕЕТ _=_ (Стол, Цвет, Черный)  
Предусмотрены также и другие форматы Предикатов  типа Свойство, 
например : 
_ИМЕЕТ _>_ (Терм, Признак , Значение)  
_РАВЕН _ (Терм, Значение)  10 
Отметим, что Признак  и Значение в формате Предикатов типа Свойство 
– это Термы, причем Признак  – это всегда Терм Тип, а Значение  – это или 
подкласс , или Терм Конс танта, относящийся к типу Признак . 
Для целостного описания каждого Терма  необходимо иметь п олный  
набор его свойств . Однако хранени е в базе данных  всех возможных свойств  
не реализуемо, поскольку их количество и сложность могут быть 
неисчерпаем ыми. На практи ке в базе данных робота РБ 2 содержатся  лишь те 
Предикаты типа Свойство , которые используются  в задач ах, реша емых  
роботом.  
Большинство п редикат ов типа Классификация  имеют следующий 
формат:  
_ЭТО_ (Терм A, Терм B) 
Суть данного предиката состоит в том, что  ТермA для Терм B является 
подклассом, т.е. дочерним  классом , а Терм B для Терм A является 
супер классом , т.е. родительским .  
Таблица TermTypes , описанная в предыдущем разделе , формируется 
автоматически в процессе занесения /удаления записей  типа  Классификаци я в 
таблице Predicates . 
Предикаты  типа Состояние  опре деляют состояние Термов, которые по 
своей природе могут иметь несколько состояний.  Большинство предикатов  
данного  типа имеют следу ющее название и  формат : 
_НАХОДИТСЯ ВСОСТОЯНИИ_(Терм A, Терм B) 
В качеств е примера приведем Предикат ы: 
_НАХОДИТСЯ ВСОСТОЯНИИ_(Дверь Х, Открыта)   
_НАХОДИТСЯ ВСОСТОЯНИИ_(Дверь Х, Закрыта)  
Предикаты типа Позиция  определяют положение в пространстве, чаще всего 
относительно  других объектов среды : 
_НАХОДИТСЯ ОКОЛО_( Кресло офисное , Стол письменный ) 
_НАХОДИТСЯ В_(Стол письменный , Кабинет ) 
Пример П редикат а типа Принадлежность : 
_ЯВЛЯЕТСЯ ЧАСТЬЮ_( Спинка стула , Стул)  
Как правило, Предикаты такого типа определяют состав сложных объектов 
событий или свойств .  11 
4. Высказывания  
Как было отмеч ено в предыдущем разделе, с вязи между конкретными 
объектами реальной среды робота описываются в виде Высказывани й. 
Высказывания  определяют отношения между любой  комбинацией Терм ов
Типов  и ТермовКонстант . По сути Предикаты  являются  шаблонами для 
Высказыван ий, поэтому по формат у они идентичны  друг друг у. Однако , в 
отличие от Предикатов , каждому Высказывани ю припис ывается  целое число 
в диапазоне от 0 до 100,  называемое достоверностью,  которое отражает 
степень довери я к его истинности.  
Высказывания  формально м ожно разделить на Факт ы и Предположени я, 
которые  отличаются друг от друга по степени их достоверности. Факт ом 
является  отношение между Термами, истинность  которого  никогда  не 
подвергается сомнению , т.е. достоверность равна 100 . Достоверность 
неложных Предп оложений всегда меньше 100, но больше 0. Если 
достоверность рана 0, то Предположение является ложным.   
Робот, функционирующий в операционной среде, должен иметь 
стационарную модель этой среды, которая описывает ее постоянную, 
неменяющуюся часть. Например,  двигаясь в помещении, робот должен 
обладать информацией о числе комнат, о наличии дверей, о мебели, которая 
постоянно и стационарно находится в помещении и т.д. Эти данные в виде 
набора Фактов и являются стационарной моделью  среды . Например:  
_НАХОДИТСЯ В_(Стол письменный , Кабинет ) 
_ИМЕЕТ _=_(Кабинет , Длин а, 4метра ) 
Если Факт ом является априори достоверн ое отношение между  Терм ами, 
то достоверность Предположени я не очевидна , и в каждо м конкретно м 
случае  требует  оценки . Предположени ями описывается непостоянная , 
меняющаяся часть операционной среды робота , например : 
_НАХОДИТСЯ ОКОЛО _(Кресло офисное, Стол письменный ) 
Априор ных данных об истинност и или ложност и данного Факта нет и быть 
не может. М ожно только оценить  степень  достоверности  того,  что данны й 
факт являе тся истинным. В каждом конкретном случае это зависит от 
некоторого набора  внешних условий , причем одно и то же Высказывани е в 
зависимости от условий  может быть и Фактом , и Предположением.   
В базе данных семантической модели среды робота РБ 2 все 
Высказыван ия хранятся в таблице  Props , которая представлена на рисунке 4. 
Таблица Props  по составу полей почти полностью повторяет таблицу 
PredicateTerms, приведенную на рисунке 3. 12 
 
Рис. 4.  Структура информации, формирующая понятие Высказывание  
В таблице Props : 
ID – идентификатор Высказывания ; 
PredicateID  – идентификатор  Предикат ашаблона ; 
TermNo  – порядковый номер Терма в Высказывани и; 
TermID  – идентификатор Терма . 
Отметим, что в таблице  Props  в поле TermID  заносится или 
идентификатор  соответствующего терма из табл ицы PredicateTerms , или 
идентификатор  его любого дочернего терма.  
Дополнительно для удобства агрегирования элементов введено понятие 
Группы . Обычно  в Группы объединяются Высказывани я, которые относ ятся 
к одному  и тому же  набору внешних условий . Одно и то же Высказывани е 
может быть членом нескольких Групп. Высказывани я объединяются в 
группы вручную, по  неформальным признакам, позволяющим облегчить 
разработку и сопровождение базы данных.  
Таблица  Prop Groups , связанная с  таблицей Props , содержит 
идентификатор ы Групп и списки Высказывани й, относящихся к этим 
Группам. Поле PropValidity  в таблице Prop Groups  определяет достоверность 
каждого Высказывани я в зависимости от Группы. Если значение этого поля 
равно 100, то данн ое Высказывани е является абсолютно достоверны м 
Фактом. Если значение этого поля равно 0, то данн ое Высказывани е ложно. 
Все остальны е Высказывани я, у которых значения находятся в интервале от  
0 до 1 00, являются Предположениями, имеющими соответствующую 
достоверность в данной Групп е.  
Отметим, что зап иси Высказывани я с одним и тем же Prop ID могут 
присутствовать в таблице в нескольких экземплярах, но они должны 
относиться к разным Группам. Это означает, что в каждой группе 
Высказывани е имеет единственное  значение достоверности  в этой Группе . 
 13 
5. Правила  
Правила  также являются элемент ами семантической модели среды  
робота  РБ2. Формат любого Правила  представляется в следующем виде :  
Тип:  
Название  
(Параметры:  
Список параметров)  
(Предусловие:   
Список Условий)  
(Эффект+:   
Список Последствий +) 
(Эффект :  
Спис окПоследствий ) 
Параметры  Правила – это список Термов Типов. В процессе применения 
Правила параметры могут быть заменены на любые дочерние Термы   или на 
Терм ыКонстант ы, относящ иеся к данному типу . Все параметры имеют 
имена идентификаторы , у которых стоит  в качестве первого символа  стоит 
вопросительный знак . Если производится замена параметра на дочерний 
Терм  или на Терм Констант у, то эта замена должна быть выполнена 
идентичн о для всех Терм ов с одинаковыми именами идентификатор ами, 
представленны ми в Правиле . Эту замену будем называть означиванием . 
Означивание  выполняется Планировщиком для того, чтобы 
сформировать в разделах  Предусловие , Эффект+  и Эффект  Высказывани я, 
описывающие операционную среду робота и обстоятельства, в которых 
используется данно е Правило.  
Предусловие  Правила – это список  Предикатов, которые после  их 
означивания становятся Высказывани ями и которые  должны быть 
истинными, чтобы Правило  было применимо . 
Эффект+ содержит список Предикатов, которы е после их означивания  
становятся  Выска зываниями  и про которые заранее известно, что они будут 
истинными в результате применения  Правил а. Соответственно,  в подразделе 
Эффект  содержится список Предикатов, которые после означивания  
становятся Высказываниями  и про которые заранее известно, что он и станут 
ложными  в результате применения Правила . 
Предположен ия в разделе  Предусловие  отличаются по степени своей 
достоверности . На стадии планирования и/или прогнозирования  Правило 
считается применимым, если  степень достоверности  всех Высказывани й в 
разделе Предусловие  в данных конкретных обстоятельствах не ниже , чем 
некоторое пороговое значение. Пороговая величина задается  вручную,  на 
основании опыта  использовани я данного Правила. Достоверность  всех 14 
Высказывани й в разделе Эффект+  и Эффект  после применен ия Правила  
устанавливается равной минимальному значению достоверности всех 
Высказывани й в разделе Предусловие . 
На рисунке  5 приведена структура таблиц  в базе данных робота , 
связанн ых с понятием Правила.   
 
 
Рис. 5. Структура информации, формирующая понятие  Правило  
В этой структуре корневой таблицей является Rules , в которой:  
ID – идентификатор Правила ; 
Name  – имя Правила ; 
Desc  – словесное описание  Правила ; 
TypeID  – идентификатор типа Правила ; 
ParamCount  – количество параметров в Правиле.  
С корневой таблицей  Rules  связаны две таблицы, определяющие 
структуру каждого Правила. Таблица RuleVariables  содержит с писок  
параметров  Правила. Здесь:  
Rule ID – идентификатор Правила ; 
VarNo – порядковый номер параметр а в Правиле;  
VarTermID  – идентификатор Терма Типа  параметр а в Правиле ; 
VarName  – имяидентификатор параметр а в Правиле.  
В таблице RuleStatements  содержится список всех  разделов  Правила,  
Условий и Последствий  применения данного Правила. Здесь:  
Rule ID – идентификатор Правила ; 
TypeID – идентификатор раздела  Правила ; 15 
PredicateNo  – порядковый номер Предиката в Правиле;  
PredicateID  – идентификатор  Предикат а; 
Term No – порядковый номер Терма в Предикате;  
VarOrTerm  – признак, допускает ли Терм в Предикате замену;  
VarName  – имяидентификатор параметр а в Правиле;   
TermID  – идентификатор Терма  в Предикате.  
С таблицей RuleStatements  связана сервисная таблица  RuleStatement Types , 
в которой приведен список разделов Правила, их идентификатор ы разделов и 
их наименования. В этой таблице содержатся только три типа разделов: 
Предуслов ие, Эффект+ и Эффект . 
С корневой таблицей Rules  связана сервисная таблица  Rule Types , в 
которой приведен список  типов Правил, идентификатор ы типов и их 
наименования. В этой таблице содержатся только три типа Правил , которые 
используются системой управления  робота РБ 2 в настоящее время : Логика, 
Действие и Событие . 
5.1. Правило  типа Логика  
Правило  типа Логик а – это Правил о логического в ывода , которое  
позволяет форми ровать  новые  Высказывани я, основываясь  на исходном 
наборе Высказывани й. Правила  типа Логика  в системе управления робота 
РБ2 используются для пополнения Высказывани й в модели операционной 
среды робота. В качестве примера р ассмотрим  Правило  типа Логика , которое 
реально используется  в семантической модели операционной среды робота 
РБ2: 
Логика :  
Насл едование типа терма  
(Параметры:  
 Терм  ?x, Терм ?y, Терм  ?z) 
(Предусловие:  
_ЭТО_ ( Терм  ?x, Терм  ?y) 
_ЭТО_ ( Терм ?y, Терм  ?z)) 
(Эффект+:  
_ЭТО_ ( Терм  ?x, Терм  ?z)) 
Это Правило определяет тот факт, что если  ?x имеет тип ?y, а ?y имеет тип 
?z, то ?x относится также к типу ?z. Например, рассмотрим Факты:  
_ЭТО_ ( Шкаф Платяной , Шкаф ) 
_ЭТО_ ( Шкаф , Мебель ) 
На основании представленного выше Правила  типа Логика  можно сделать 
заключение:  
_ЭТО_ ( Шкаф Платяной , Мебель ) 16 
По определению  все дочерние Термы, в том числе и Тер мыКонстанты, 
обладают свойствами своих Термов Типов. В семантической модели 
операционной среды робота  РБ2 это сформулировано в виде следующего  
Правил а: 
Логика:  
Наследование свойств  
(Параметры:  
 Терм ? x, Терм ? t, Терм  ?s, Терм  ?z) 
(Предусловие:  
_ЭТО_ ( Терм ? x, Терм ? t) 
_ЭТО_ ( Терм ? z, Терм ? s) 
_ИМЕЕТ_=_( Терм ? t, Терм ? s, Терм ? z)) 
(Эффект+:  
_ИМЕЕТ_=_( Терм ? x, Терм ? s, Терм ? z)) 
В соответствии с этим правилом можно утверждать, что Шкаф Платяной  
обладает свойствами Терма Типа Шкаф  и Терма Типа  Мебель . 
5.2. Правило  типа Действие  
Правило  типа Действие  определяет действие робота, которое может быть 
им выполнено при наличии определенных  исходных условий, и  указывает на 
последствия, возникающие после выполнения этого действия. Правила  типа 
Действие  используются  при планировании и прогнозировании поведения  
робота. Конкретное д ействие  определяется названием соответствующего 
Правила. Система этих Правил  сформирована таким образом, что действия, 
заложенные в их названии, могут быть реально исполнены роботом , поэтому  
можно утверждать, что эти Правила являются также моделью 
функциональных возможностей самого робота.  
В качестве примера р ассмотрим  Правило  типа Действие,  которое 
используется  в семантической модели операционной среды робота РБ2: 
Действие:  
Движение в_от двери_до позиции _объекта_  
(Параметры:  
Помещение ?x, Дверь ?y, Позиция  ?z, Объект ? r) 
(Предусловие:  
  _НАХОДИТСЯ В_(Объект ? r, Помещение ?x)  
  _НАХОДИТСЯ У_(Объект ? r, Дверь ?y)  
  _НАХОДИТСЯ В_(Позиция  ?z, Помещение ?x)  
  _НАХОДИТСЯ В_(Дверь ?y, Помещение ?x)) 
(Эффект+:  
_НАХОДИТСЯ НА_(Объект ? r, Позиция  ?z)) 
(Эффект :   
_НАХОДИТСЯ У_(Объект ? r, Дверь ?y)  17 
Это правило определяет условия, при выполнении которых объект  может 
переместиться от двери до некоторой целевой позиции в помещении. Если в 
ходе движения робота это правило буде т применено и действие будет 
исполнено  роботом , то в результате робот окажется не у двери помещения , а 
в целевой позиции.  
Разновидностью Правила типа Действие  являются Правила, у которых 
отсутствует список Высказывани й в разделах Эфф ект+  и Эффект . Такие  
Правила определяют действия робота, которое должны быть выполн ены при 
наличии некоторых исходных условий  без учета последстви й, возник ающих  
после выполнения таких действий. Правила такого типа  используются в 
ситуациях, когда планирова ть действия робота не имеет смысла, когда 
заранее известно как должен действовать робот независимо от последствий 
этих действий . Эти Правила  моделирует рефлекторн ую реакцию  робота  и 
используются системой робота РБ 2 только для экстремальных ситуаци й, 
напри мер: 
Действие:  
Остановка иззаблизости препятствия  
(Параметры:  
Препятствие ?х , Мин Дист ) 
(Предусловие:  
  ПЕРЕД РБНАХОДИТСЯ_( Препятствие  ?х) 
ДИСТАНЦИЯ ОТРБДО_ <_(Препятствие ?х , Мин Дист )) 
(Эффект+: )  
(Эффект :  ) 
Данное Правило используется Планировщи ком для формирования 
условий, при которых робот должен однозначно останавливаться, несмотря 
на все возможные последствия этой остановки.  В этом правиле два 
параметра : Препятствие и Мин Дист. Параметр Мин Дист не допускает 
замены , так как он является Термом Константой. В базе данных робота РБ 2 
для этого Терм а определен Факт типа Свойство:  
_РАВЕН _(Мин Дист , 40) 
Параметр  Препятствие  допускает замену на любой дочерний Терм, в число 
которых входит все, что находится в помещении и может являться 
препятствием дви жению робота, в том числе: Человек , Мебель , Стена . 
5.3. Правило  типа Событие  
Правило  типа  Событие  определяет последствия какого то внешнего 
событи я, которое может  возникнуть  при наличии определенных исходных 
условий  и оказыва ет влияние и на самого робота и/или на его операционную 
среду.  Эти событи я не зависят от действий робота и являются или 
следствием воздействия людей или свойств ами самой  операционной среды. 18 
Человек обычно знает о происходящих и о возможных событиях, об их 
истоках и последствиях и испол ьзует эти знания в своей повседневной 
деятельности. Робот должен  также обладать моделями внешних событий , 
чтобы адекватно реагировать на них.   
Конкретное событие определяется названием соответствующего Правила.  
В качестве примера р ассмотрим  Правило  типа Событие , которое 
используется  в семантической модели операционной среды робота РБ2: 
Событие :  
Стул _отодвинут человеком_ отстола _ 
(Параметры:  
Стул  ?x, Человек  ?y, Стол  ?z) 
(Предусловие:  
  _НАХОДИТСЯ У_(Стул  ?x, Стол  ?z) 
  _НАХОДИТСЯ У_(Человек  ?y, Стул  ?x) 
(Эффект+: )  
(Эффект :   
_НАХОДИТСЯ У_(Стул  ?x, Стол  ?z)) 
Выполнение события, описанное данным Правилом, не зависит от робота, а 
зависит от человека , находящегося у стула. Предугадать заранее , состоится 
это событие или нет , невозможно. Можно только оценить вероятность того, 
что данн ое событие  произойдет, причем эта оценка должна основываться на 
статистическ ой информации . Оценка вероятност и событий производится 
вручную в процессе занесения Правил в базу данных семантической модели 
робота.  
Правила типа Событи е используются при планировании поведения  
робота.  В ходе выполнения построенного плана робот должен  проверять , 
состоялось ли п редполагаемое  событие или нет, и в зависимости от 
результата этой проверки следовать по одно й из альтернативных ветвей 
плана.  
6. План, Сценарий  
Используя Термы, Факт ы, Предположения  и Правила , Планировщик  
создает последовательность инструкций, которые должны выполняться 
всеми Агентами системы управления робота РБ 2. Эта последовательность 
инструкций называется Планом Поведения  робота . Из этого плана Монитор 
выделяет куски и передает их  для исполнения Агент у навигации и 
построения движения платформы  робота. Каждый из таких  куск ов явля ется 
Планом Движения  робота.  Так как наша семантическая модель создается 
пока только для решения задач управления движением платформы  робота, 
мы в дальнейшем под термином План  будет понимать только План 
Движения.  19 
Формат План а имеет следующий вид:  
План:  
Идентификатор Плана  
(Предусловие:   
Список Фактов ) 
(Список Шагов)  
 
Под названием  Список Шагов  подразумевает ся перенумерованн ая 
последовательность Шагов  Плана , каждый из которых имеет следующий 
формат : 
(Номер Шага:  
  Идентификатора Действия   
   Список Фактов Шага ) 
В свою очередь  Идентификатор Действия  имеет формат:  
Название действия (Терм1, Терм2,…  ТермN) 
Здесь Название действия  совпадает с Названием Правила типа Действие, 
которое выбрано Планировщиком для данного шага.   
Все Факты в Списках Фактов  и в разделе  Предуслови е и в составе 
каждого Шага  проверя ются на истинность Агент ом навигации и построения 
движения пла тформы  перед  переходом к выполнени ю следующего  Шага. 
Последний  Список  Фактов  проверя ется после выполнения действия, 
предусмотренного последн им Шагом Плана. Если хотя бы один Факт из этих 
Списк ов оказывается ложным, то такая ситуация определяется  как не 
предусмотренная Планом . При возникновении н епредусмотрен ной ситуаци и 
Агент навигации и построения движения платформы  остан авливает  
движения робота, прерыва ет выполнения Плана и перед ает Монитору 
информации о том , какой именно Факт оказался ложным. Если в проц ессе 
выполнения Плана  все Факты из всех списков оказываются истинными, то 
выполнение плана считается успешным и соответствующая информация 
передается Монитору.  
В Списках Фактов  могут содержаться Факты, истинность которых 
должн а проверяться не только перед , но и в ходе  выполнения следующего  
Шага . Такие Факты  названы  Контрольными . Они используются для контроля 
возникновения Событий, в результате которых План должен быть изменен. 
Контрольные Факты помечаются Планировщиком специальными символами.   
План может н е содержать  Спис окШагов . В этом случае в разделе 
Предуслови е не должны присутствовать Контрольные Факты. В любом 
Шаге Плана может отсутствовать Список Фактов Шага . 20 
Любой  Шаг Плана  может представлять собой также План.  В этом  случае 
вместо Идентификатора Действия  Шага ставится  Идентификатор Плана . 
В качестве примера р ассмотрим План , в котором  робот, двигаясь в 
операционной среде, должен выполнить три Шага. На первом Шаге он 
должен , двигаясь  из исходной Позици яС, приблизит ься к Двер ьХ, 
ведущ ей из Комнат аА в Комнат аВ. На втором Шаге он должен пройти 
через дверь из Комнат аА в Комнат аВ. На третьем шаге он должен п ерейти 
к выполнению плана  движения в Комнат аВ до Объект Z, который , 
возможно , также состоит из нескольких шагов :  
План:  
Движение изКомната АвКомнат аВ 
(Предусловие:   
РБНАХОДИТСЯ НА_(Позиция С) 
РБНАХОДИТСЯ В_(Комната А) 
_НАХОДИТСЯ В_( Объект Z, Комнат аВ) 
_НАХОДИТСЯ ВСОСТОЯНИИ_(Дверь Х, Открыта) *) 
(1: 
Движение РБв_от_до_(Комнат аА, Позици яС, Двер ьХ) 
РБНАХОДИТСЯ У_(Дверь Х) 
РБНАХОДИТСЯ В_(Комната А) 
_НАХОДИТСЯ ВСОСТОЯНИИ_(Дверь Х, Открыта) *) 
(2: 
Движение РБиз_в_через _(Комнат аА, Комнат аВ, Двер ьХ)  
РБ2НАХОДИТСЯ У_(Дверь Х) 
РБ2НАХОДИТСЯ В_(Комнат аВ)) 
(3: 
План:  Движение вКомнат аВдоОбъект Z) 
В этом примере второй Шаг можно выполнит ь, если Двер ьХ открыта. 
Да и первый Шаг имеет  смысл, только если Двер ьХ открыта.  Поэтому  
одним из исходных условий данного Плана является истинность Факта о том, 
что Двер ьХ открыта . Этот Факт необходимо контролировать постоянно в 
течение времени выполне ния Шагов 1 и 2 , то есть он  является Контрольным 
и помечен звездочкой. После того как робот окажется в Комнат аВ, 
проверять данный Факт на истинность нет смысла.  
При построении этого Плана Планировщик использовал следующее 
Правило типа Событие:  
Событие :  
Дверь_закрылась  
(Параметры:  
Двер ьХ,) 
(Предусловие:  
  _НАХОДИТСЯ ВСОСТОЯНИИ_( Двер ьХ, Открыта))  21 
     (Эффект+:  
_НАХОДИТСЯ ВСОСТОЯНИИ_( Двер ьХ, Закрыта))  
(Эффект :   
_НАХОДИТСЯ ВСОСТОЯНИИ_( Двер ьХ, Открыта))  
Вероятность осуществления этого События в люб ой момент времени 
выше 0, но ниже 100 . Планировщиком  был сформирован  План, в котором 
проверка истинности Факта об открытой двери  поставлена  под контроль в 
течение всего времени движения робота до двери и через дверь.  
Сервисный робот РБ 2 предназначен для в ыполнения широкого круга 
заданий. Однако очевидно, что некоторые из  этих заданий однотипны и даже 
одинаковы . Например , робот вынужде нно совершает некоторые типовые 
действия для обеспечения своей деятельности.  
Сразу после включения робот должен обязательно протестировать все 
свои системы. Если что то не работает или работает неправильно, робот 
должен сгенерировать соответствующее сообщение и выдать его оператору. 
Если все системы работают штатно, то далее  робот должен определить свое 
местоположение.  Если ем у это не удается, например , он оказался  в среде, 
которую он не может идентифицировать, ему следует  сделать 
соответствующий запрос оператору и перейти в режим ожидания ответа. 
Если же он определил  свое местоположение или ему сообщил эту 
информацию человек оператор, то робот  должен перейти в режим ожидания 
задания от оператора.  
Описанная последовательность представляет собой  План Поведения,  
который должен выполняться  каждый раз, когда вкл ючается  питание робота. 
Существует также и типовой План Поведения при  выключени и робота.   
Стандартные  План Поведения и План Движения  робота РБ2 называ ются 
Сценарием  Поведения  и Сценарием  Движения  соответственно . 
Сервисный робот, выполняющий функции экскурсовода в музее , должен   
действовать по достаточно жесткому плану, назы ваемому  планом экскурсии. 
Такой робот регулярно выполняет практически одно и то же  задани е и может 
действовать по одному и тому же Сценарию. Робот , помогающий одиноким 
малоподвижным людям , чаще всего выполняет однотипные задания, 
например, выключить освеще ние в удаленной комнате или принести 
человеку небольшой предмет, и т.д.  Можно каждый раз заново строить План 
Поведения и План Движения  робота , но разумнее заранее предусмотреть  
стандартные Сценарии.  
Формат Сценария Движения  полностью идентичен  формат у План а 
Движения . Если План ы создаются Планировщиком  каждый раз, когда они 
необходимы и после выполнения забываются, то С ценарии  являются частью 
семантической модели операционной среды  робота РБ 2 и хранятся в базе 
данных . Монитор  в соответствии с задание м челов екаоператор а ищет в базе 22 
данных подходящий Сценарий и , если не находит, то инициирует 
Планировщик на формирование Плана.  
На рисунке 6 приведена группа таблиц базы данных  робота РБ 2, 
связанн ая с понятием Сценария .  
 
Рис. 6. Структура информации, формирую щая понятие Сценария  
В этой структуре корневой является таблица Scripts , в которой:  
ID – идентификатор Сценария ; 
Name  – имя Сценария ; 
Desc  – словесное описание  Сценария ; 
StepCount  – количество шагов в Сценарии.  
С таблицей Scripts  связаны две таблицы, опред еляющие шаги каждого 
Сценария: ScriptActions  и ScriptConditions . 
В таблице ScriptActions  задается действие, которое должно  выполняться 
на данном шаге:  
ScriptID  – идентификатор Сценария ; 
StepNo  – номер шага Сценария, нумерация начинается с шага 1;  
RuleOrScr ipt – признак, определяющий тип действия на данном шаге,  
Правило или Сценарий;  
RuleOrScriptID  – идентификатор  Правила или Сценария ,  котор ые 
должно  выполняться на данном шаге.  С таблицей  ScriptActions  связана 
таблица ScriptActionTerms , в которой содержится  список  Термов для 
действи я, если оно определено Правилом. Если же действие определено 23 
Сценарием, то в таблице ScriptActionTerms  записи для такого шага  
отсутствуют.  В таблице ScriptActionTerms :   
ScriptID  – идентификатор Сценария ; 
StepNo  – номер шага Сцена рия, нумерация начинается с шага 1;  
Term No – порядковый номер Терма в параметрах Правила;  
TermID  – идентификатор Терма  в параметрах Правила . 
Таблица ScriptConditions  содержит перечень Фактов , которые следует 
проверять на истинность по завершени и действия, предусмотренного шагом. 
Здесь:  
ScriptID  – идентификатор Сценария ; 
StepNo  – номер шага Сценария, нумерация начинается с шага 0;  
FactID  – идентификатор проверяемого Факта ; 
Contr  – признак, является ли  Факт Контрольным . 
В этой таблице шаг с номером 0 использ уется для определения Предуслови я 
выполнения Сценария.  
8. Заключение  
Описанн ая база данных для семантическ ой модел и операционной среды 
робота РБ 2 находится в завершающей стадии отладки . Разработаны 
алгоритмы Планировщика и Монитора системы управления робо та, 
непосредственно использующие семантическую  модель среды. Для 
занесения информации в базу данных модели , которое выполняется  
человеком вручную , создано программное обеспечение, работающее 
совместно с программами и базой данных метрико топологической мод ели 
среды [ 4], [5].  
 Тестировани е модели и программ  показал о, что процесс  формирования 
модели достаточно трудоемкий. Он близок процессу программирования, 
связан с большим количеством ошибок, вносимых поправок и изменений.  
Отладка модели с использованием П ланировщика в связке  с Монитором и 
Агент ом навигации и построения движения платформы робота  требует много 
времени. Так как алгоритм Планировщика является наиболее сложным, д ля 
ускорения тестирования модели создано специальное программное 
обеспечение, в кот ором полностью используется Планировщик, а Монитор и 
Агент навигации и построения движения заменены имитаторами.  
Текущая стадия формирования и тестирования семантической модели в 
совокупности с метрико топологической моделью среды  подтверждает  
возможность эффективно го ее использования для решения задач навигации и 
построения движения робота, обладающего элементами искусственного 
интеллекта.  На этой стадии робот РБ2 при включении в новом месте 
квартиры  способен определять свое положение , формировать план дв ижения 
к поставленной цели, используя заложенные в базе данных Сценарии, 24 
выполнять этот план, объезжа я препятстви я по ходу движения  и определя я 
состояние двер ей. 
Список литературы  
1. Tenorth M., Kunze L., Jain D., Beetz M. KNOWROB MAP – Knowledge 
Linked Sem antic Object Maps. //In 10th IEEE RAS  International Conference on 
Humanoid Robots, Nashville, TN, USA,  December 6 8 2010, pp. 430 –435. 
2. Galindo C., Saffiotti A., Coradeschi S., Buschka P., Fernandez Madrigal J.,  
Gonzalez J.  Multi hierarchical semantic maps for mobile robotics. //In 
Proceedings of the IEEE/RSJ Int. Conf. on Intelligent Robots and  Systems 
(IROS), 2005, pp. 3492 –3497 . 
3. Mozos O., Mizutani H., Kurazume R., Hasega wa T.  Categorization of indoor  
places using the kinect sensor. //  Sensors 201 2, 12(5), pp. 6695 –6711.  
4. Давыдов О.И., Платонов А.К. Организация и структура комплексной карты 
операционной среды сервисного робота. //  Препринты ИПМ им. 
М.В.Келдыша . 2015.  № 72. 28 с.   
5. Давыдов О.И., Платонов А.К. База данных для модели операционной среды 
сервисного робота. //  Препринты ИПМ им. М.В.Келдыша . 2016.  № 132. 
20 с. 
6. Давыдов О.И., Платонов А.К. Алгоритм управления дифференциальным 
приводом мобильного робота РБ 2. // Препринты ИПМ им. М.В.Келдыша . 
2015. № 25. 17 с.  
7. Давыдов О.И., Прянични ков В.Е. Архитектура системы управления 
мобильного сервисного робота. //  Информационно измерительные и 
управляющие системы, №  7, т.13 2015, стр.41 50. 
8. Lifschitz V. On the Semantics of STRIPS. // Reasoning about Actions and 
Plans. Morgan  Kaufmann  Publish ers Inc., 1987, pp. 1–9. 
9. Рассел С., Норвиг П. Искусственный интеллект: Современный подход. // 
М.: Издательский дом «Вильямс», 2006, с. 541 545. MathNet.Ru
All Russian mathematical portal
D. S. Ivanov, M. D. Koptev, Ya. V. Mashtakov, N. N. Proshunin, S. S. Tkachev,
A. I. Fedoseev, M. O. Shachkov, Determination of aerodynami c table disturbances
acting on microsatellite control system mockups, Keldysh Institute preprints , 2017, 014
DOI: 10.20948/prepr201714
Use of the allRussian mathematical portal MathNet.Ru imp lies that you have read and agreed to these terms of use
http://www.mathnet.ru/eng/agreement
Download details:
IP: 79.139.215.77
December 17, 2023, 00:49:16ИПМ им.М.В.Келдыша РАН   •  Электронная библиотека
Препринты ИПМ   •  Препринт № 14 за 2017 г.
ISSN 20712898 (Print)
ISSN 20712901 (Online)
Иванов Д.С. , Коптев М.Д.,
Маштаков Я.В.,  Прошунин Н.Н. ,
Ткачев С.С. , Федосеев А.И.,
Шачков М.О.
Определение возмущений,
действующих на макеты
малых спутников на
аэродинамическом столе
Рекомендуемая форма библиографической ссылки:   Определение возмущений,
действующих на макеты малых спутников на аэродинамическом столе / Д.С.Иванов [и др.] //
Препринты ИПМ им.  М.В.Келдыша. 2017. №  14. 32  с. doi:10.20948/prepr201714  
URL: http://library.keldysh.ru/preprint.asp?id=201714О р д е н а  Л е н и н а  
ИНСТИТУТ ПРИКЛАДНОЙ МАТЕМАТИКИ  
имени М.В.  Келдыша  
Р о с с и й с к о й  а к а д е м и и  н а у к  
 
 
 
 
 
 
 
 
Д.С. Иванов, М.Д. Коптев,  
Я.В. Маштаков , Н.Н. Прошунин, С.С. Ткачев,  
А.И. Федосеев, М.О. Шач ков 
 
Определение  возмущений,  
действующих на макеты малых спутник ов 
на аэродинамическом столе  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Москва — 2017  
Иванов Д.С., Коптев М.Д. , Маштаков Я.В., Прошунин Н.Н.,  
Ткачев С.С., А.И. Федосеев, Шачков М.О.  
 
Определение  возмущений, действующих на макеты малых спутников  
на аэродинамическом столе  
 
В ИПМ им . М.В. Келдыша создан стенд, представляющий собой аэрод и
намический стол, по которому на воздушной подушке движутся управля емые 
макеты малых спутников  с тремя степенями свободы  каждый  — одной вращ а
тельной и двумя поступательными. Вследствие возмущений со с тороны неро в
ностей поверхности стола и аэродинамических сил в воздушном потоке св о
бодное движение макетов не является поступательными  и прямолинейным. В 
настоящей работе решается задача определения возмущений, действующих  на 
движущиеся по  аэродинамическом у столу макеты . 
 
Ключевые слова:  малый спутник, система управления движением, аэрод и
намический стол, возмущения  
 
 
Ivanov  D.S., Koptev  M.D., Mashtakov  Y.V., Proshunin  N.N., Tkachev  S.S., 
Fedoseev  A.I., Shachkov  M.O. 
 
Determination of Aerodynamic Table Distur bances Acting on Microsate l
lite Control System Mock Ups 
 
A laboratory facility developed in KIAM allows to simulate microsatellite free 
planar motion due to aerodynamic cushion. Despite of disturbance  caused by uneven 
surface of the table and the aerodynam ic forces in the air flow  free movement is not a 
transl ational straight.  The determination of those distortions is presented in the paper.  
 
Key words:  small satellites , air table, movement control system, disturbances  
 
 
 
Исследование поддержано  Министерством образования и науки Росси й
ской Федерации (С оглашение  № 14.607.21.0144  , уникальный идентифик атор 
ПНИЭР – RFMEFI60716X0144) . 3 
Введение  
Для проведения полунатурных испытаний системы управления движен и
ем космического аппа рата используются наземные стенды, позволяющие им и
тировать в усеченном в иде его орбитальное и угловое движение. В ИПМ им. 
М.В. Келдыша  РАН  совместно с ОАО Спутникс создан стенд  КОСМОС  (КОм
плекС для МОделирования движения Спутников ), представляющий собой 
аэродинамический стол, по которому на воздушной подушке движутся упра в
ляемые макеты спутников с тремя степенями свободы :  одной враща тельной и 
двумя поступательными . Однако , вследствие возмущений со стороны неровн о
стей поверхности стола и аэродинамических с ил в воздушном потоке , свобо д
ное дв ижение макетов не является поступатель ным и  прямолинейным. Поэтому 
возникает задача определения возмущений, действующих на макет на аэрод и
намическом столе, которые нужно учитывать  при построении  точных  алгори т
мов управлен ия движ ением макетов.  
В состав стенда входит аэродинамический стол, промышленный вентил я
тор с блоком управления и системой трубопроводов, а также макеты системы 
управления движением спутников . Аэродинамический стол представляет собой 
плоское металлическое основание с отверстиями, через которые поступает во з
дух, нагнетаемый промышленным вентилятором по системе воздуховодов. Та
ким образом создается воздушная подушка между поверхностью стола и ди с
кообразной платформой, на которую устанавливается макет системы управл е
ния. Общий вид стенда представлен на рис. 1. Подробное о писание стенда 
представлено в работе [1].  
 
 
Рис.1. Стенд КОСМОС в ИПМ им.  М.В. Келдыша  РАН  
 
Аэродинамический стол  
Макеты систем 
управления  Отве рстие  
для забора  
воздуха  Промышленный 
вентилятор  4 
Несмотря на широкое рас пространение подобных стендов в  зарубежных 
университетах и исследовательских центрах (обзор представлен в работе [1]), 
исследов ание возмущений , действующих на аэродинамическом  столе, встреч а
ется крайне редко в литературе. С одной стороны , это объясняется тем, что а л
горитмы управления движением макетов нацелены на парирование этих во з
мущений , которые остаются неизвестными . Однако т акой подход может пр и
меняться только в случае малых возмущений по сравнению с управляющим 
воздействием , но и в этом случае учет возмущений может значительно умен ь
шить ошибки управления. С другой стороны , на зарубежных стендах возду ш
ная подушка , как правило , создается с пом ощью установленных на макетах 
баллонов со сжатым воздух ом, и основной причиной возмущений является н е
ровность гладкой поверхности стола . На стенде КОСМОС воздушная подушка  
создается благодаря перфорированной поверхности , через которую под давл е
нием подается воздух. Вследствие неоднород ного потока воздуха через отве р
стия в столе могут возникать значительные  неоднородные  аэродин амичес кие 
силы, действующие на макет  и приводящие к отличию его движения от равн о
мерн ого. 
Для измерения гравитационн ой составляющей возмущения  достаточно 
измерить неровности поверхности стола. Одним из способов является испол ь
зование инклинометра, с помощью которого с заданным шагом промеряется 
отклонение локальной нормали к столу от вертикали. Таким образом была п о
луче на форма поверхности стола из эпоксидной смолы в Технологическ ом ин
ститут е Джорджии  [2] (см. рис. 2), разница высот достигает 2,5 мм. По локал ь
ному углу  накло на нормали стола  
 можно грубо оценить гравитационное во з
мущение по формуле 
sin ag , где 
g  – ускорение свободного падения на п о
верхности Земли. Для рассматриваемого эпокси дного стола максимальное 
ускорение с оставило 
32
max 6.7 10 м/c a . 
 
 
  
Рис. 2. Стол из эпоксидной смолы  и его форма  (высота в дюймах)  [2] 
Другой вариант оценки возмущения  – его измерение при неуправляемом  
движении макета по поверхности стола. В римском университете "La Sapienza " 
макет PINOCCHIO  двигается по стеклянному столу  (рис. 3) . С помощью спец и5 
альной метки  на крышке  оценивается ускорен ие движения  макета . Результаты 
измер ения представлены в работе [3], однако , судя по рис.  3a и 3b, ускорения не 
изменяются вдоль оси y, что оставляет о ткрытым вопрос о методике измерений . 
Для этого макета  максимальное уск орение  
2
max 0.15м/c a . 
 
 
 
Рис. 3. Макет PINOCCHIO  и карта ускорений – направление ( a) и величина в м /c2 (b) [3] 
Целью настоящей работы является разработка методики определения 
возмущений, действующих  на макеты на аэродинамическом столе.  Для этого 
проводится анализ основных факторов, приводящих к ускорениям : неровн ости 
поверхности стола и неравномерности истечения во здуха из отверстий в п о
верхности стола . Далее с помощью определения неуправлямого движения ди с
ка по столу определяется распределение ускорений на поверхн ости стола.  
1.  Определение гравитационных возмущений  
При движении по столу в идеальном случае макет не ис пытывает никаких 
возмущающих ускорений и моментов. В реальности же это, конечно, не так: из 
за неравномерности распределения давления воздуха на поверхности стола, а 
также вследствие того, что из за неровностей поверхности стола невозможно 
обеспечить парал лельность нормали к поверхности и направления действия с и6 
лы т яжести, на макет действуют различные возмущения. Здесь мы подробнее 
остановимся на влиянии именно гравитации на движение макета.  
Выпишем выражение для возмущающего ускорения 
da , которое приобр е
тет макет под действием гравитации в случае, когда угол между нормалью к 
поверхности стола 
n  и вертикальной осью, вдоль которой направлена сила т я
жести 
mg , равен 
  (рис. 4 ): 
si.ndag
  (1) 
 
Рис. 4. Возмущающее ускорение сил ы тяжести  
Таким образом, для учета влияния возмущающего ускорения (1) необх о
димо знать его как функцию нормали к поверхности стола в каждой точке. На 
практике положение нормали к поверхности может быть определено п ри п о
мощи уже упомянутого выше  инклинометра. В то же время сделать это для 
каждой точки стола или даже на очень мелкой сетке не представляется возмо ж
ным. Значит, необходимо разработать способ определения полож ения нормали 
к поверхности, который позволил бы  определить функцию нормали по сущ е
ственно меньшему колич еству измерений.  
Необходимо отметить, что если перепад высот на поверхности стола д о
вольно большой, то возможна ситуация, когда макет, вместо того чтобы «п а
рить» над столом на воздушной подушке, буде т задевать стол основанием 
(рис. 5). Как следствие , возникающее трение  скольжения  будет также влиять на 
движение маке та. Следовательно, кроме  функции нормали к поверхности, 
необходимо также и знание функции самой по верхн ости стола.  
 
 
Рис. 5. Трение макета  о поверхность стола в случае большого перепада в ысот 7 
1.1.  Построение сетки опорных точек  
В силу технических ограничений невозможно абсолютно точно определить 
форму п оверхности стола. Однако  можно определить положение в простра н
стве конечного количества точек его поверхности и построить таким образом 
некоторую сетку опорных точек. В дальнейшем при помощи этой сетки п о
верхность стола может быть аппроксимирована . 
Для построения сетки опорных точек в настоящей работе предлагается и с
пользовать специальный набор инс трументов, состоящий из достаточно жес т
кой и гладкой поверочной линейки, а также нескольких щупов различной то л
щины  (рис. 6) . Повер очная линейка имеет длину 1 м с допуском неплоскостн о
сти 6 мкм. При помощи щупов  можно измерить рассто яние между линейкой и 
поверхностью стола и таким образом построить карту п оверхности.  
 
Рис. 6. Поверочная линейка и набор щупов  
 
Однако при примен ении этого подхода возникает ряд трудностей. Во первых, 
для обеспечения высокой жесткости линейки она должна быть достаточно к о
роткой, и тогда ее длины не хватает для того, чтобы измерить все точки вдоль 
поверхности стола. Во вторых, каждый раз при установке линейки на столе ее 
наклон в инерциальной системе координат  в общем случае  получ ается разный  
(рис. 7). 
 
Рис. 7. Изменение накл она линейки в зависимости от места ее приложения  
Для решения описанных выше трудностей предлагается использовать сл е
дующий подход . 
1. Вся поверхность стола размечается прямоугольной сеткой, линии 
которой п араллельны границам стола.  8 
2. В каждом узле этой сетки пр оводится измерение расстояния между 
поверхностью стола и линейкой.  
3. Так как длина линейки меньше размеров стола, измерения вдоль одной и 
той же линии проводится путем нескольких серий измерений со сдвигом  и с 
перекрытием, то есть несколько точек в каждой се рии измер яется  несколько 
раз. Это позволяет при помощи метода наименьших квадратов определить 
взаимный наклон разных положений линейки (коэффициенты 
1 1 2 2, , ,a abb  на рис.  
7) и, таким образом, привести измерения к такому виду, как будто бы они  были 
сделаны при помощи одной длинной линейки.  
4. После того как проведены измерения всех линий прямоугольной сетки, а 
полученные значения для каждой линии приведены к одной линейке, при 
помощи метода наименьших квадратов вычисляются значения высоты точек 
поверхности стола в системе координат, базисными векторами которой 
являются орты границ  стола.  
Результаты работы этого подхода для стенд а КОСМОС представлены на 
рис. 8. Промеры были сделаны на сетке с шагом 100 мм. Перепады высот на 
всем столе составляют до  3,5 мм . 
 
Рис. 8. Результаты измерений высоты точек поверхности стола  
Таким образом, при помощи предложенного подхода можно построить 
сетку опорных точек, которая в дальнейшем может использоваться для опис а
ния уже всей поверхности стола при помощи интерп оляции.  
1.2.  Нахождение формы  поверхности стола  
При интерполяции поверхности стола будем предполагать, что известно 
положение некоторого набора опорных точек поверхности стола в инерциал ь
ном пространстве в виде “тройки ” чисел  
  , , (x ,)j i j i y P x y , 
1,..., , 1,...,i n j m , 
где 
(x ),i jy  – координаты, заданные на прямоугольной сетке  в некоторой пло с9 
кости, причем 
11,j i i jxyx y , 
(),j iPx y  – расстояние от рассматриваемой 
точки до этой плоскости.  
Одним из с пособов  описания поверхности являются так называемые бик у
бические поверхности Кунса. При использовании этого подхода  поверхность 
стола разбивается на несколько прямоугольных частей, которые потом скле и
ваются таким образом, чтобы функции нормалей и касатель ных были непр е
рывными. При этом сами границы представляют собой кубические сплайны 
Эрмита, записываемые в виде 




1 1 2 2 1
32
1
32
2
32
2
433 4 2
3,
3
32 1,
,
,
,2
2tP
tt
fP t f f t P f t P
tt
t t t
ttf t P
ft
ft
f tt







  (2) 
где 
[0,1],t  
12,PP  – значение функции высоты границы поверхности в начал ь
ной и конечной точке границы соответственно, 
2 1,PP  – значение ее произво д
ной в начальной и конечной точке соответствен но. С использованием введе н
ных функций (2) бикубическая поверхность Кунса может быть записана в виде  









1
22
41
33
40,0 0,1 0,0 0,1
1,0 1,1 1,0 1,1,0,0 0,1 0,0 0,1
1,0 1,1 1,0 1,1ww
ww
uw uwT
uwuu
uu uwf u P P P P f w
f u P P P P f wP u wf u P P P P f w
f u P P P P f w    
    
        
        
, (3) 
где 
,P i j  – значение высоты поверхности, 
 , , ,u w P i j P i j  – значения прои з
водных функции высоты поверхности вдоль прямых 
const, constwu  соот
ветственно, 
,uwP i j  – значения смешанных производных функции высоты п о
верхности стола. Как уже отмечалось выше, непосредственно измеренными 
предп олагаются величины 
,P i j . Значения смешанных прои зводных 
,,uwP i j
 полагаются равными нулю, что соответствует случаю поверхности 
Фергюсона  [4]. 
Рассмотрим более по дробно , как задаются значения производных в угл о
вых точках моделируемой поверхности. Как уже упоминалось ранее, предпол а
гаются известными значения высоты стола на некоторой прямоугольной сетке . 
Пусть направление 
u  границы  стола  совпадает с направлением оси 
x , а 
напр авление  
w – с направлением оси 
y . Выпишем уравнение, связывающее 
производную функции высоты границы по безразмерному параметру 
u  и раз
мерной координате 
x  на отрезке границы 
  1 [y,],i i jxx : 10 
1
1( , ) ( , )
iidP x y dP u wxdx dux
 
. (4) 
Это выражение напрямую следует из определения 
u  как безразмерного пар а
метра, принимающего значения из отрезка [0, 1] на области определения 
1,iixx
, то есть  
1.i
iixxuxx
  (5) 
Аналогичным образом по формулам (4) и (5) задается и связь между 
yP  и 
wP на 
участке границы
 1 x ,[y , ]i j j y : 
1
1( , ) ( , )
j jdP x y dP u wydy dwy
 
.  (6) 
Следовательно, для задания значений производных, указанных в (3), достато ч
но указать соответствующие производные функции высоты по размерным п а
раметрам 
,xy  в опорных то чках 
,ijxy . Сделать это можно, например, след у
ющим образом:  

11
11
11
11, 2,..., 1,
, 2,...,,,,
0, 1, ,
,,
,
0, 1,,
.1|
|i
j
i
ji j i j
ii xx
i j i j
jj xxyy
yyP x y P x ydP x yxxdxin
P x y P x y
dP x yyydi
yjm
jmn


 

 
  
 
  
 
 (7) 
Таким образом, с использованием бикубической поверхности Кунса и 
формул (4)(7) можно описать форму поверхности стола, а также получить в ы
ражения для касательных и нормалей к ней. Поверхность, получившаяся а п
прок симацией данных для аэродинамического стола, входящего в испытател ь
ный стенд КОСМ ОС, представлена на рис.  9. По производным сплайнов были  
оценены гравитационные ускорения . На рис. 10 пре дставлена карта ускорений, 
действующих на столе – их величина и направ ление. Макс имальные локальные 
ускорения  наблюдаются в середине левой части стола и составляют до 0.09 
м/c2. Также из за резкого перепада высот  в этой части стола  на 1.5 мм возможно 
касание диск ом поверхности , что приведет к трени ю скольжения (эта ситуация 
изображена на рис. 5). 
 11 
 
Рис. 9. Поверхность стола, построенная при помощи бикубических поверхностей Кунса  
 
Рис. 10. Гравитационные ускорения на поверхности стола : величина и направление  
 
Следует отметить, что на макет действуют не локальные ускорения , 
изображенные на рис. 10, а некоторое их усредненное значение, так как макет 
помещается на диск диаметром 30  см. Используя форму поверхности, заданную 
сплайнами , можно найти наклон лежащего на ней диска и по наклону оценить 
его гравитационное ускорение. На рис. 11 представлены гравитационные 
ускорения диска.  Видно, что ускорения диска имеют несколько меньшую 
величину за счет его линейных размеров, но качественная картина  в целом 
остаётся прежней . 12 
 
Рис. 11. Гравитационные ускорения  диска  на поверхности стол а: величина и направление  
2. Аэродинамические возмущения  
Для понимания природы аэродинамической составляющей  возмущений 
следует подробнее рассмотреть , как создается воздушная подушка  на аэрод и
намическом столе . Промышленный вентилятор всасывает воздух из возду хово
да и загоняет его по прямоугольному каналу переменного сечения в камеру ст а
тического давления в нижней части стола. Далее воздух из камеры истекает на 
поверхность стола через отверстия  диаметром 1 мм и равномерной сеткой с ш а
гом 2 см. Следует отметить,  что воздушный поток после промышленного ве н
тилятора становится турбулентным  и его завихрения в камере статического 
давления могут привести к неравномерной скорости истечения воздуха через 
отверстия на поверхности. Ситуация усугубляется  тем, что к поверхно сти кр е
пятся специаль ные опоры для предотвращения про гибания и выгибания  по
верхности стола  (рис. 12) . Эти опоры и отверстия в них создают дополнител ь
ные препятствия для воздушного п отока. 
   
 
Рис. 12. Поперечный и продольный разрезы аэродинамического стола  
 
Для определения стационарности и равномерности воздушного потока из 
отверстий  были проведены измерения расхода воздуха с использованием 
крыльчатого анемометра  WM100 с цилиндрическим воздуховодом, и зобр а
Воздушный 
поток 
13 
женным  на рис. 13. Внутри цилиндра находится небольшого размера вентил я
тор, который начинает вращаться благодаря набегающему воздушному потоку. 
Частота его вращения пересчитывается в скорость воздушного  потока и выв о
дится на циферблате.  Так как поток воздуха из одного отверстия на поверхн о
сти стола  слишком мал , чтобы привести измерительный вентилятор анемометра  
в движение, цилиндр устанавливался на  четыре  близ лежащих отверстия . Дис
кретность измерений  анемоме тра составляет 0.05 м /с. 
 
 
Рис. 13 . Крыльчат ый анемометр  WM100 
 
Измерения показали, что поток из отверстий стационарен и наблюдается 
его повторяемость  на одних и тех же отверстиях  при запуске аэродинамическ о
го стола  с одной и той же частотой промышленного вентилятора. Однако ра с
пределение потока по  поверхности стола оказалось крайне неравномерным.  На 
частоте промышленного вентилятора 35 Гц с заданным шагом был измерен п о
ток воздуха , как изображено на рис. 14. Скорость потока на сосе дних точках в 
некоторых областях поверхности стола отличалась в неск олько раз. Это может 
быть обусловлено как завихрениями воздушного потока в камере статич еского 
давления, так и частичной засоренностью отверстий, например, частичками 
пыли.  14 
 
Рис. 14 . Распределение с корост ей потока воздуха по поверхности стола  
на частоте вентилятора 35 Гц  
Чтобы оценить , насколько меняется поток  воздуха при различных частотах 
промышленного вентилятора , было проведено измерение на небольшом учас т
ке в центре стола на частотах 3 5, 40 и 50 Гц.  Из рис. 15  можно увидеть в опр е
деленной мере пропор ционально изменяющуюся картину  при увеличении ч а
стоты, однако о тносительная неравномерность потока сохраняется.  
 
Рис. 15. Распределение скоростей  потока воздуха на участке стола 5х5  
при различных частотах промышле нного вентилятора  15 
 
Неравномерность пото ка воздуха из отверстий на поверхности стола пр и
водит к тому, что воздушная прослойка между столом и плоской нижней ч а
стью диска  является неравномерной , что приводит к наклону нормали диска  
n 
в ту или иную сторону относительно вер тикали  
z на некоторый угол 
  
(рис.  16). В результате возникает горизонтальная составляющая аэродинамич е
ской силы , которая в упрощенном варианте может быть записана в виде  
2sinaaF C V S
, 
где 
aC  – аэродинамический коэффициент, 
  – плотность воздуха, 
V  – усре д
ненное значение скорости потока, 
S  – площадь диска.  
 
Рис. 16. Схематичное изображение влияния неравномерности потока на движение диска  
 
Ещё одним фактором, влияющим на возникновение наклона диска, являе т
ся смещение центра масс от центра давления  (который соответствует геометр и
ческому центру)  диска . Если сам диск  может быть выполнен так, что это отл и
чие будет очень малым, то при установке на него макета уже не следует над е
яться на близкое положение центра масс к оси симмет рии макета, так как ра с
пределение массы в приборах макета и их положение могут быть весьма произ
вольными.  
Чтобы рассчитать положение равновесия и угол 
 , необходимо записать 
условие равенства нулю момента  аэродинамических сил . Рассмотрим задачу в 
упрощенном виде. Диск со смещенным центром тяжести находится в равнове с
ном с остоянии над столом с двумя отверстиями  (см. рис. 17) . 
 
 
Рис. 17 . Упрощенн ая схема взаимодействия  диска с воздушным потоком  
на столе с двумя отверстиями   
Поверхность стола  
с отверстиями  Воздушный  
поток  
n 
z  

 
aF
 Диск  16 
 
Скорость истечения воздуха из отверстий не одинаковая. Примем, что  ско
рость воздуха в струе падает обратно пропорционально расстоянию от отве р
стия , тогда  можно выразить силы, действующие на диск , следующим обр азом: 
22
1 1 2 2
12,        CCF = f F = fhh         
. 
Здесь C – константа, зависящая от параметров стола, h1 и h2 – расстояния до 
краев диска, 
12,ff  – аэродинамические силы  для каждого из отверстий.  
Запишем условия равенства сил и моментов, а также соотношение, связ ы
вающее расстояния до диска и угол α: 
 1 1 2 2 1 2 2 1 1 2 0,    cos ,     sin M = Fr + F r = F + F α=mg h =h+ r+r α 
. 
Эта система уравнений имеет аналитиче ское решение  
2
2
22 2
1
11
1cos 1 ,
1
=.222α= A + A
frfCfrAmgr (r + r )

 
Это решение соответствует двум конфигурациям системы : горизонтальному 
положению пластины при 
0A  и наклонному положению пластины при  
2cos 1α= A + A 
. Для равновесия требуется выпо лнение следующе го соот
ношени я: 
2 2 1 1 . f r f r
 
Следовательно, уже при малейших изменениях в скорости воздушного п отока 
из отверстий 
12ff или смещении центра тяжести  
12rr  происходит перекос 
диска, в ызывающ ий его движение вдоль горизонтальной оси.  
Можно задать соотношения между силами воздушного потока и рассто я
ниями от края диска до центра масс следующим образом:  
22
11,frβ= γ=fr
, 
тогда решение системы уравнений можно представить в в иде: 
22
1111
22fCβγ +γA=mgr
. 
На рис.18  представлено значение угла α для диапазонов β и γ [0,8; 1.2] при 
остальных параметрах, близких к тем, что наблюдаются для диска на поверхн о
сти аэродинамического стола.  17 
 
Рис. 18 . Значение угла α в зависимости  от соотношений β и γ 
 
Наряду с аэродинамической силой  на макеты также действу ет гравитац и
онная составляющая , и в общем случае можно наблюдать лишь результат их 
суперпозиции. Неровность стола в совокупности с неравномерн остью потока 
воздуха из отверстий в трёхмерном случае приводит к завихрениям воздуха 
между столом и диском, что влечет возникновение момента , вращающего диск. 
Оценить величины сил и  моментов при известной карте высот стола и потоке 
через отверстия возможно только с использованием численных г азодинамич е
ских расчетов , учитывающих не только движение относ ительно центра масс, но 
и центра масс.  
Угол α, град  18 
 
3. Экспериментальная оценка возмущений  
Оценим суперпозицию возмущений экспериментальным путём. Так как 
поток из отверстий является стационарным, т.е. не изм еняющимся во времени, 
но зависящим от расположения на  поверхн ости стола, то можно надеяться, что 
и возмущения , действующие в некоторой точке стола, будут стационарными  
для заданной частоты вращения промышленного вентилятора . Если предпол о
жения о стационарн ости окажутся верн ыми, то можно построить карту сил и 
моментов, действующих на тело на п оверхности стола.  
Рассмотрим тело с известными массой и тензором инерции, например, 
диск, на который устанавливается макет. По свободному движению диска на 
столе можно оценить действующие на него силы и моменты . Для определения 
движения диска воспользуемся системой измерений, разработанной для стола 
[5]. На диск п омещается метка , похожая на  QRкод, а над поверхностью стола – 
вебкамера  (рис. 19 ). По снимкам визуальной метки определяется положение 
диска в системе координат, связанной со столом . Далее по этим измерениям 
оцениваются линейное и угловое ускорения диск а, которые можно потом пер е
считать в силы и м оменты.  
 
 
Рис. 19. Снимок веб камеры д иска с меткой на столе  и система координат стола  
 
Так как измерения, полученные в результате обработки снимков веб 
камеры, зашумлены, то при дифференцировании положения  
,xy  и угла пов о
рота  
 конечно разностным методом для получения ускорений будут возн и
кать неприемлемые ошибки. Поэтому  для оценки возмущений измерения обр а
батывались с использованием динамической фильтрации  – фильтра Калмана. 19 
Вектор состояния системы состоял из фазовых переменных,  линейных и угл о
вого положения и скоростей и ускорений:  
  , , , , , , , ,Tx y x y x yx
. 
Была выбрана модель свободного движения диска   
0,    0,    0xy    
. 
Матрица динамики при этом имеет вид  
3x3 3x3 3x3
3x3 3x3 3x3
3x3 3x3 3x300
00
0 0 0E
FE


, 
где 
3x30  и 
3x3E  – нулевая и единичная матрицы  размера 3х3 соответственно. Так 
как измеряются непосредственно положение и угол, то матрица измерений 
имеет вид  
  3x3 3x3 3x300 HE
. 
Система измерений имеет среднеквадратическую погрешность измерений 
около 
r 5 мм по положению  и 
 0.2 град по углу.  Поэтому матрица ош и
бок измерений имеет вид  
222( , , )rr R diag
.  
Матрица ошибок модели движения 
Q  выбиралась исходя из того, чтобы 
при интегрировании полученных оценок ускорений положение и угол были 
близки к значениям измерений. Это позволяет надеяться, что полученные оце н
ки ускорений являются а декватными.  
3.1. Проверка стационарности возмущений  
Для проверки предположения о стационарности возмущений были пров е
дены предварительные тесты, которые заключались в определении движения 
диска при старте движения из одних и тех  же точ ек на столе с нулевой нача ль
ной скоростью. Эксперименты показали хорошую повторяемость траектори й 
движения диска . Их небольшой разброс можно объяснить неидеально одинак о
выми начальными условиями  и некоторой флуктуацией в скорости возду шного 
потока . К измерениям траектории был приме нен фильтр Калмана для оценки 
возмущающих ускорений , описанный выше. На рис. 20 представлен пример 
оценки величины и направления возмущающих линейных ускорений при трех 
запусках диска из одной точки. Как видно, и временн ая, и пространственная за
висимости оцененных ускорений имеют хорошую повторя емость . 
 20 
 
Рис. 20. Пример свободного движения диска  из одной точки  
 и оценка направления и велич ины линейных ускорений  
 
Если же теперь провести тот же эксперимент , но при различных частотах 
вращения промышленного в ентилятора, то получается к артина, как , например, 
на рис. 21 . С увеличением частоты вентилятора траектория движения пост е
пенно сдвигается , так как поле ускорений в окрестности точки старта также 
пропор ционально изменяется. На рис. 22  представлен пример оце нок линейных 
и углового ускорения для траекторий, выходящих из этой точки. Видно, что 
они также плавно изменяются с изменением частоты вентилятора. Но , так как 
траектория постепенно смещается, то получающиеся ускорения нельзя сравн и
вать напрямую, ибо они о тносятся к разным точкам на траектории дв ижения.  
Таким образом, можно считать, что предположение о стационарности во з
мущений вполне оправдано. Это означает, что для тела известной массы и м о
мента инерции (диска) можно составить карту возмущений на аэродина миче
ском столе.  
 
Рис. 21. Пример свободного движения диска из одной точки  
 при различных частотах вентилятора  21 
 
Рис. 22. Оценка линейных и  углового ускорения при движении из одной точки  
с разными частотами вентилятора  
3.2. Составление карты возмущений  
Для нахождения карты возмущений  диск запускался из разных начальных 
поло жений на столе с нулевой начальной скоростью . Частота промышленного 
вентилятора – 35 Гц. Диск двигался свободно до удара о борт стола. Отрезки 
траектори и на столе изображены на рис. 23 . Из рисунка можно увидеть, что в 
некоторых областях на столе диск может двигаться свобо дно достаточно долго, 
тогда как в других диск почти сразу “сносит ” на борт ст ола.  
 
Рис. 23 . Траектории неуправляемого  движения диска на столе  22 
 
На свободном участке траект ории определялись ускорения с помощью 
фильтра Калмана , а затем  эти данные использовались для нахождения некот о
рой аппроксимирующей поверхности  с помощью метода наименьших квадр а
тов. Поверхность аппроксимировал ась с пом ощью полинома 5 го порядка  от 
переменн ых x и y. На рис. 2426 представлен вид полиномиальных  поверхн о
стей для линейных и углового ускорений , а также  гистограммы отклонений и з
меренных ускорений от найден ных поверхно стей. Среднеквадратическое о т
клонение для линейных ускорений  составило около 0. 01 м/c2, а для угловых 
ускорений – 0.01 рад /c2. 
 
Рис. 24 . Полиномиальная поверхность и отклонения от неё для ускорения по оси Ох  
 
Рис. 25 . Полиномиальная поверхность и отклонения от неё для ускорения по оси О y 
 23 
 
Рис. 2 6. Полиномиальная поверхность и о тклонения от неё для углового ускорения  
 
На полиномиальны х поверхностя х для компонент линейных ускорений 
строится карта  их величин и направлени й, изображенная на рис. 27 .  На п о
верхности стола есть несколько положений равновесия, где на диск  почти не 
дейст вуют возмущения, но из них только одно является устойчивым и распол а
гается слева внизу около борта. Если срав нить оценку ускорений на рис. 27  и 
оценку гравитационных ускорений на рис. 10, то можно увидеть корре ляцию  в 
направлении ускорений в некоторых обла стях стола, однако  положение равн о
весия несколько смещены, что можно объяснить  влиянием  аэродинамической 
составляющей , вызванной нера вномерностью истечения воздуха из отверстий 
стола.  
 
 
Рис. 27 . Величина и направление линейного ускорения  
 
Интересно распр еделение углового  возмущающего  ускорения на повер х
ности стола, изобр аженное на рис. 28 . Наибольший крутящий момент действует 
на макеты вдоль борта стола . Это можно объяснить тем , что, возможно, вых о24 
дящий из промежутка между столом и диском воздух начинает взаимодейств о
вать со стенкой  и отраженный поток создает допо лнительный момент силы.  
 
Рис. 28 . Величина углового ускорения  
 
Теперь проверим , насколько соотве тствует карта ускорений (рис. 27 и 28 ) 
для конкретных траекторий . Рассмотрим в качестве примера набор конкретных  
свободных  траек торий, изображенных  на рис. 29 , при движении из одной то ч
ки. На этих траекториях действовали ускорения, изоб раженные на рис. 30 а тон
кой линией , а ускорения в точках траектории согл асно карте изображены на 
рис. 30 а жирной линие й. На рис. 30 б изображена их разность. Максимальные 
отклонения достигают значения около 0.015 м /c, однако в основном они нах о
дятся в пределах величины 0.01 м /c. Таким образом, карта ускорений адекватно 
приближает уровень ускорений в конкретных точках траек тории диска на ст о
ле. 
 
Рис. 29 . Контрольные траектории диска на столе  25 
а)
 б)
  
Рис. 30. Ускорения диска по измерениям и по полиномиальной модели  (а) и их разность  (б) 
4.  Учет возмущений в алгоритмах управления  
Рассмотрим , как учет возмущающих ускорений в алго ритмах управления 
влияет на характеристики движения . В качестве примера возьмем алгоритм л я
пуновского управления  для поддержания движения вдоль требуемой траект о
рии. 
4.1. Алгоритм управления  
Рассмотрим кандидат функцию Ляпунова в виде  
22
11
2rv VK ee
, 
где 
TTT
rde q q  – ошибка траектории, 
 ,,Txyq  – обобщенный  вектор  
положения макета , 
dq – опорная траектория , 
TTT
vde q q
  – ошибка скор о
сти, 
1K  – диагон альная  положительно определенная матрица размером 3 x3, 
элементы которой положительные . Пусть модель движения макета по столу 
учитывает только управляющее во здействие : 
qu
, (8)  
где 
u  – вектор управления . Тогда производная кандидат функции Ляпунова  в 
силу системы  
  1 1 1r r v v v r v v r d V K K K          e e e e e e e e e u q
. 
Для выполнения теоремы Барбашина Красовского об асимптот ической 
устойчивости потребуем, чтобы 
0V
  (
0V
  только при 
0ve ). Для этого 
должно выполняться соотношение  
12r d vKK  e u q e
, 
где 
2K  – диагональная положительно определенная матрица размером 3 x3. От
сюда получаем выражение для управляющего воздействия:  
r r v v dKK  u e e q
. (9) 26 
Алгоритм  управления  (9) совпадает с классическим пропорционально 
диференциальным (ПД) регулятором  в случае, если для опорной траектории 
0dq
. Так как уравнения движения не имеют перекрестных членов, то они 
разбиваются на систему независимых уравнений вида:  
12rv q k e k e 
, (10) 
где 
q  — компонента  обобщенного вектора , 
120, 0kk . Собственные числа 
однородной части уравнения (10) определ яются следу ющим образом:  
2
2 2 1
1,24
2k k k  
. 
Для обеспечения апериодического движения можно выбрать коэффициенты 
так, чтобы выполнялось соотношение:  
2
2
14kk
. (11) 
Чтобы выбрать коэффициенты 
12,kk , можно задаться целью обеспечить 
ненасыщение управляющего воздействия с максимальным абсолютным значе
нием 
max 0 u  при заданных возм ожных отклонениях траектории 
0re  и 
0ve
. Для этого нужно решить относительно 
2k  следующее уравнение:  
1 2 maxrvk e k e u  
. (12) 
Подставляя соотношение (11) в (12), получим  
2
2 2 max 4 4 0rvk e k e u  
. 
Отсюда:  
2
max
222v v r
re e e uke  
. 
Так как коэффициент 
20k , тогда нужно выбрать од ин корень  
2
max
222v v r
re e e uke  
. (13) 
Таким образом, можно применить алгоритм управления (9) с коэффицие н
тами, определенными соотношениями (11) и (13). 
4.2. Моделирование уп равляемого движения  
Проведем численное моделирование управляемого движения макета на 
поверхности аэродинамического стола. Пусть максимальная тяга, создава емая 
вентиляторными двигателями , составляет 2 Н, плечо составляет 0.2  м, масса м а
кета 5 кг  и момент ине рции 1.5 
2кг м . Тогда 
max 0.4 u  м/c2 для поступательн о
го движения и 0.5 рад/c2 для углового движения. Максимальные отклонения 
траектории от опорной пусть будут равны: по положению  —1 м, по ск орости 
— 0.1 м /с, по углу — 
 и 
/ 10  рад/с — по угловой скорости . 
Сначала проведем моделирование для движения  с моделью (8), учитыв а
ющей влияние только управляющего воздействия . В качестве опорной траект о
рии возьмем неподвижную точку на столе , т.е. целью алгоритма управления я в27 
ляется переход из начальной точки в некоторую заданную на столе. Пример 
траектории управляемого движения макета  и отклонения траекторий  на столе  
показан на рис. 31 . Траектория представляет собой прямую, оканчивающуюся в 
требуемом положении, а отклонение траектории экспонен циально сходится  к 
нулю.   
 
 
Рис. 31 . Траектория движения и отклонения траектории в отсутстви е возмущ ений 
 
Теперь добавим в моделирование движения возмущения  – силы  и моме н
ты, действующие на макет . Будем задавать возмущения в виде полиномов 5 го 
порядка , коэффициенты которых были определены в предыдущем ра зделе. Так 
как отклонение измеренных ускор ений от полиномиальной поверхности име ет 
гауссово распределение (рис. 24 26, справа) , то добавим к возмущениям сл у
чайную составляющую со среднеквадратическим отклонением  
38 10  м/c2 
при линейном движении  и 
38 10  рад/c2 — при угловом. Однако  закон 
управления (10) оставим прежним, т.е. в алгоритме управления эти возмущения 
не будут учтены . На рис. 30 а слева представлен п ример траектории при движ е
нии из начальной точки в заданную, из которого видно, что вследствие де й
ствия возмущений  макет не приходит в окрестность требуемой точки, а ост а
навлив ается в положении равновесия  на некотором расстоянии от этой точки . 
Как вид но из  рис. 30 б ошибки траектории стабилизируются. Отклонение коор
динат 
iq  можно вычислить, если приравнять пропорциональную часть регул я
тора (дифференциальная равна нулю , так как макет остановился) к действу ю
щему  постоянному  возмущ ению 
iD: 
1 iik q D
. 28 
а)
 б)
  
Рис. 32. Траектория движения  (а) и отклонения траектории (б)  под воздействием  возмущ ений 
 
Однако в  случае  если в алгоритм е управления учитывать  возмущающие 
ускорения (только п остоянную их сос тавляющую) , то постоянного отклонения 
траектории можно изб ежать. Пусть  
12 i i i iu k q k q D    
, 
т.е. управление будет компенсировать возникающие в каждой точке поверхн о
сти стола возмущения. В этом случае траектория движения и отклонения пре д
ставлены  на рис. 33 . Ошибки траектории экспоненциально стремятся к нулю  и 
после достижения требуемого положения они не превышают нескольких са н
тиметров.  
а)
 б)
  
Рис. 33. Траектория движения  (а) и отклонения траектории  (б)  
при учете возмущений в управлении  
 
При модели ровании относительного движения двух спутников  в групп о
вом полете может потребоваться облет одного спутника другим. Для этого 
можно задать требуемую траекторию в виде круговой траектории по координ а
там и постоянное угловое вращение  с угловой скоростью, рав ной угловой ск о
рости движения по кругу , 29 
0
0
0sin( ) ,
cos( ) ,
,d
d
dx A t x
y A t y
t

  


 
где 
A  – радиус окружности, 
00,xy  – центр окружности, 
0  – начальная ор и
ентация. Это движение со ответствует траектор ии слежения, когда упра вляемый 
макет движется вокруг другого  макета , а камера  слежения при ее наличии все
гда направлена на второй аппарат. Пример управляемого движения в случае, 
если возмущения не учитываются в алгоритме управления и в случае  если они 
вклю чены, представлен на р ис. 31 . На левом рисунке видно, что траектория  
движения далека от требуемой окружности, так как неу чтенные возмущения 
смещают траекторию . Справа же можно увидеть, что траектория близка к тр е
буемой окружности.  Таким образом, этот приме р также демонстрирует, 
насколько критичным для выполнения требуемого эксперимента является и с
следование и учет возмущений в алгоритмах управления макет ами. 
а)
 б)
  
Рис. 31. Траектория движения для отслеживания цели без учета  (слева)  и с учетом  (справа)  
возм ущений в а лгоритме управления  30 
 
Заключение  
Использование лабораторных стендов для наземного тестирования систем 
и алгоритмов управления спут никами необходимо д ля повышения уверенности 
их успешной  работы в орбитальном полете. Однако сами лабо раторные стенды  
необходимо изуча ть на степень соответствия движения макетов орбитальному 
движению спутников , чтобы правильно проецировать результаты экспериме н
тов на реальный полет. Поэтому настоящая работа  по изучению возмущений, 
действующих на макеты систем управления на аэродинамическом столе, явл я
ется неотъемлемым этапом тестирования алгоритмов. Разработанная методика 
экспериментального определения возмущений является достаточно униве р
сальной, что позволяет использовать ее и на других стендах со схожим принц и
пом дейст вия. Используемые модели возмущений и движения макетов по столу 
являются , с одной стороны,  весьма простыми , но в то же время позволяют п о
лучить достоверные результаты, применимые для тестиров ания алгоритмов.  31 
Литература  
1.  Иванов Д.С., Овчинников М.Ю., Ткачев С.С. Стенд КОСМОС для 
моделирования движения макетов системы управления микроспутников и 
обзор мировых аналогов // Препринты ИПМ им. М .В. Келдыша . 2016. 
№ 138. 32  с. 
2.  Tsiotras P. ASTROS: A 5 DOF experi mental facility for research in space 
proximity operations // Proc. 37th AAS Guid. Control Conf. Breckenridge. 
2014. P. 14.  
3.  Sabatini M. et al. Image based control of the “PINOCCHIO” experimental free 
flying platform // Acta Astronaut. Elsevier, 2014. V ol. 94, № 1. P. 480 –492. 
4.  Ferguson J. Multivariable curve interpolation // J. ACM. 1964. Vol . 11, № 2. 
P. 221–228. 
5.  Коптев М.Д., Прошунин Н.Н., Иванов Д.С. Определение движения 
макетов системы управления микроспутников на аэродинамическом столе 
с исп ользованием видеокамеры // Препринты ИПМ им. М.В. Келдыша. 
2015. № 109.  32  с. 
 32 
 
Оглавление  
Введение  ................................ ................................ ................................ .......................  3 
1. Определение гравитационных  возмущений  ................................ .......................  5 
1.1.  Построение сетки опорных точек  ................................ ........................  7 
1.2.  Нахождение формы поверхности стола  ................................ ..............  8 
2. Аэродинамические возмущения  ................................ ................................ ........  12 
3. Экспериментальная оценка возмущений ................................ ..........................  18 
3.1.  Проверка стациона рности возмущений  ................................ ............  19 
3.2.  Составление карты возмущений  ................................ ........................  21 
4. Учет возмущений в алгоритмах управления  ................................ ....................  25 
4.1.  Алгоритм управления  ................................ ................................ .........  25 
4.2.  Моделирование управляемого движения  ................................ .........  26 
Заключение  ................................ ................................ ................................ .................  30 
Литература  ................................ ................................ ................................ .................  31 
 Acta Astronautica 214 (2024) 125–136
Available online 18 October 2023
00945765/© 2023 IAA. Published by Elsevier Ltd. All rights reserved.
Contents lists available at ScienceDirect
Acta Astronautica
journal homepage: www.elsevier.com/locate/actaastro
Research paper
Distributed safe trajectory optimization for largescale spacecraft formation
reconfiguration
Junyu Chena, Baolin Wua,∗, Zhaobo Suna, Danwei Wangb
aResearch Center of Satellite Technology, Harbin Institute of Technology, 150001, Harbin, China
bNanyang Technological University, Singapore, 639798, Singapore
A R T I C L E I N F O
Keywords:
Largescale spacecraft formation
Distributed optimization algorithm
Trajectory optimization
Collision avoidance
Autonomous reconfigurationA B S T R A C T
This paper presents a distributed trajectory optimization algorithm for the reconfiguration of largescale
spacecraft formation, which uses a low thrust propulsion system to safely guide the spacecraft formation
to a desired formation. Formation reconfiguration is formulated as a trajectory optimization problem with
complex constraints, and the relative motion is accurately described by a nonlinear relative dynamics
considering 𝐽2perturbation. The collision avoidance constraint is convexified into a tangent plane to ensure
the accuracy of the solution. The resulting nonlinear trajectory optimization problem is solved by applying
theℎ𝑝adaptive pseudospectral method to convert it into a nonlinear programming problem. In order to
overcome the disadvantage of huge computation of centralized algorithm considering collision avoidance,
‘‘predicted trajectory" is introduced to transmit information between spacecraft, and the parallel computing
is implemented. Finally, a numerical simulation is given to verify the computational efficiency and collision
avoidance effectiveness of the proposed distributed algorithm.
1. Introduction
With the continuous development of space technology, spacecraft
formation flying (SFF) has become a hot topic in the aerospace field [ 1].
SSF can use a variety of sensors to form a ‘‘large virtual spacecraft’’ to
complete highprecision and highly complex space missions that cannot
be completed independently by a single spacecraft [ 2]. SFF offers ad
vantages such as enhanced mission flexibility, decreased cost and risk,
and so on. With the wide application of formation, smallscale SFF can
no longer meets the needs of some future space missions. Largescale
SSF and related technologies of dozens or even hundreds of space
craft are the key development direction of future space multisatellite
missions. At present, countries around the world have put forward
networking plans for largescale SSF in the fields of communication,
remote sensing, technology testing, etc [ 3].
Formation reconfiguration refers to the formation maneuver from
the current formation to another desired formation due to the need
of space tasks. As we all know, reconfiguration is one of the most
challenging problems in SSF. Collision avoidance of SSF is the first
problem to be considered. Due to the large number of spacecraft, the
trajectory optimization for formation reconfiguration needs to ensure
that there is no collision between spacecraft in the formation, which
makes the trajectory optimization problem complex [ 4]. In order to
∗Corresponding author.
Email address: wuba0001@e.ntu.edu.sg (B. Wu).solve the spacecraft trajectory optimization problem with complex con
straints, the methods proposed by researchers can be roughly divided
into two categories: analytical methods and numerical optimization
methods [ 5]. The analytical methods are generally based on the relative
orbital elements, using artificial potential function and other tools to
solve the reconfiguration problem relied on impulse control [ 6–8].
Numerical optimization methods can be divided into two categories:
indirect methods and direct methods [ 9]. In the indirect methods, the
optimal conditions are derived by using the variational method, and the
nonlinear multipoint boundary value problem consisting of necessary
conditions is then solved. The main disadvantage of indirect methods
is that the convergence radius is usually very small, and it is difficult to
analytically derive the optimal conditions for complex constraints [ 10].
In the direct methods, the system dynamics is discretized into a set of
algebraic constraints, and the reconfiguration trajectory optimization
problem is converted into a complex linear/nonlinear programming
problem for solution, which is often used to solve the control problem
of continuous low thrust. Low thrust engines (such as ion thrusters and
Hall thrusters) can generate accurate and variable control forces, and
can effectively reduce fuel consumption due to high specific impulse, so
they have broad application prospects in the future [ 11]. Wu et al. [ 12]
used highprecision nonlinear relative dynamics to study the trajectory
optimization problem of formation maneuver by the direct methods.
https://doi.org/10.1016/j.actaastro.2023.10.012
Received 6 January 2023; Received in revised form 11 August 2023; Accepted 11 October 2023Acta Astronautica 214 (2024) 125–136
126J. Chen et al.
The disadvantages of the direct methods are that the number of discrete
variables is large, the constraints are complex, the calculation cost is
large, and it is difficult to deal with nonconvex constraints such as
collision avoidance. Convexification is critical for accurate solutions.
In order to reduce the calculation cost, one method is to use binary
variables to convexify collision avoidance constraint and describe the
trajectory optimization as a mixed integer linear programming (MILP)
problem [ 13,14]. In addition, other authors converted the complex
constraints considering collision avoidance into convex sets to reduce
the computation, and used convex optimization methods to solve the
trajectory optimization problem [ 15–18].
However, the above mentioned centralized or decentralized algo
rithms have disadvantages. For instance, the computational load will
increase sharply with the formation scale. Therefore, for largescale
formation system, it is critical to design a distributed optimization
algorithm to reduce the computation. Different from centralized and
decentralized algorithms, the distributed algorithm does not require
a data processing center and distributes the computational burden to
each agent through pointtopoint communication, achieving parallel
computing [ 19]. In the field of multiagent, many scholars have done a
lot of research on distributed algorithms, and designed distributed pro
tocols based on different methods to ensure the convergence of control
algorithms and the effectiveness of collision avoidance [ 20–23]. In the
aerospace field, Silvestrini et al. [ 24] proposed reverse reinforcement
learning and long shortterm memory network to predict neighboring
trajectories to ensure collisionfree and distributed computing. Other
authors employed graph theory to describe information interaction,
and designed distributed algorithms for spacecraft formation recon
figuration considering collision avoidance by using artificial potential
function [ 25,26], convex optimization [ 27] and other methods [ 28].
However, the control accuracy is not high because the perturbation
term is ignored or the linearization approximation is adopted. Based
on the above discussion, the main research efforts are dedicated to the
development of distributed safe reconfiguration algorithms with fast
computation and high control accuracy.
The contribution of this paper is to develop a distributed trajectory
optimization algorithm for largescale spacecraft formation reconfigu
ration, which realizes parallel computing. Specifically, the nonlinear
relative dynamics considering 𝐽2perturbation is used to accurately de
scribe relative motion constraint. The collision avoidance is convexified
by unfolding the sphere into a tangent plane, which reduces the compu
tational complexity and guarantees the accuracy of the solution. Then,
the ‘‘predicted trajectory’’ is proposed to decouple the state variables of
each spacecraft in optimization problem, so that each spacecraft solves
the optimization problem independently. In addition, communication
traffic is reduced by considering neighbor update. Finally, the trajectory
optimization problem is converted into a nonlinear trajectory program
ming problem in discrete time by using the ℎ𝑝adaptive pseudospectral
method. Each spacecraft solves the optimization problem through sev
eral iterations to generate the collisionfree optimal trajectory. The
proposed algorithm is tested with a largescale spacecraft formation
reconfiguration containing more than a dozen microsatellites as a
scenario.
This paper is organized as follows. In Section 2, the nonlinear
relative dynamics considering 𝐽2perturbation and graph theory are
introduced. Section 3 describes the centralized optimization algorithm
of formation reconfiguration. In Section 4, a distributed trajectory op
timization algorithm is designed. In Section 5, the proposed distributed
algorithm is used to reconfigure a fueloptimal and collisionfree ma
neuver trajectory for the largescale spacecraft formation. Finally, Sec
tion 6 gives the conclusion of this paper.
2. Preliminaries
2.1. Equation of relative motion
In order to generate accurate formation maneuver trajectory, a high
precision relative dynamics is needed. In this paper, a nonlinear relative
Fig. 1. LVLH frame.
dynamics considering 𝐽2perturbation is used, which is briefly described
below. Readers can refer to Section 2.2 of Ref. [ 29] written by the
authors for more details of the dynamics.
First, define the localvertical/localhorizontal (LVLH) rotating fra
me as shown in Fig. 1. This frame is centered at the chief spacecraft, and
the unit vector 𝒙is directed from the spacecraft radially outward from
the Earth center; 𝒛is perpendicular to the orbital plane in the direction
of the instantaneous angular momentum vector; and 𝒚is determined
by the righthand rule.
The𝐽2nonlinear differential equations describing the relative mo
tion of spacecraft are as follows:
̈ 𝑥𝑗= 2̇ 𝑦𝑗𝜔𝑧−𝑥𝑗(
𝜂2
𝑗−𝜔2
𝑧)
+𝑦𝑗𝛼𝑧−𝑧𝑗𝜔𝑥𝜔𝑧−(𝜁𝑗−𝜁)sin𝑖sin𝜃
−𝑟(
𝜂2
𝑗−𝜂2)
+𝑢𝑗,𝑥
̈ 𝑦𝑗= − 2̇ 𝑥𝑗𝜔𝑧+ 2̇ 𝑧𝑗𝜔𝑥−𝑥𝑗𝛼𝑧−𝑦𝑗(
𝜂2
𝑗−𝜔2
𝑧−𝜔2
𝑥)
+𝑧𝑗𝛼𝑥
−(𝜁𝑗−𝜁)sin𝑖cos𝜃+𝑢𝑗,𝑦
̈ 𝑧𝑗= − 2̇ 𝑦𝑗𝜔𝑥−𝑥𝑗𝜔𝑥𝜔𝑧−𝑦𝑗𝛼𝑥−𝑧𝑗(
𝜂2
𝑗−𝜔2
𝑥)
−(𝜁𝑗−𝜁)cos𝑖+𝑢𝑗,𝑧(1)
where𝒑𝑗= (𝑥𝑗,𝑦𝑗,𝑧𝑗) represents the three axis components of the
relative position vector of the jth deputy spacecraft in the LVLH frame.
𝑼𝑗= (𝑢𝑗,𝑥,𝑢𝑗,𝑦,𝑢𝑗,𝑧) represents the control acceleration of the jth deputy
spacecraft in the LVLH frame.
The five differential equations describing the changes of relevant
parameters of the chief spacecraft affected by 𝐽2perturbation are as
follows:
̇𝑟=𝑣𝑥
̇ 𝑣𝑥= −𝜇∕𝑟2+ℎ2∕𝑟3−𝑘𝐽2(1 − 3 sin2𝑖sin2𝜃)∕𝑟4
̇ℎ= −𝑘𝐽2(sin2𝑖sin 2𝜃)∕𝑟3
̇𝜃=ℎ∕𝑟2+ 2𝑘𝐽2(cos2𝑖sin2𝜃)∕(ℎ𝑟3)
̇𝑖= −𝑘𝐽2(sin 2𝑖sin 2𝜃)∕(2ℎ𝑟3)(2)
where𝑟,𝑣𝑥,ℎ,𝑖,𝜃respectively represent the distance from the chief
spacecraft to the geocenter, the radial velocity, the orbital angular
momentum, the orbital inclination and the latitude argument. 𝜇=
398,600 km3∕s2represents the standard gravitational parameter.
(𝜔𝑥,𝜔𝑧) and (𝛼𝑥,𝛼𝑦) are the orbital angular velocity and accelera
tion of the chief spacecraft, given by the following formula:
𝜔𝑥= −𝑘𝐽2(sin 2𝑖sin𝜃)∕(ℎ𝑟3)(3)
𝜔𝑧=ℎ∕𝑟2(4)Acta Astronautica 214 (2024) 125–136
127J. Chen et al.
𝛼𝑥= −𝑘𝐽2(sin 2𝑖cos𝜃)∕𝑟5+ 3𝑣𝑥𝑘𝐽2(sin 2𝑖sin𝜃)∕(𝑟4ℎ)
−8𝑘2
𝐽2sin3𝑖cos𝑖sin2𝜃cos𝜃∕(𝑟6ℎ2) (5)
𝛼𝑧= −2ℎ𝑣𝑥∕𝑟3−𝑘𝐽2(sin2𝑖sin 2𝜃)∕𝑟5(6)
𝜂2,𝜂2
𝑗,𝜁𝑗and𝜁are defined as follows:
𝜂2=𝜇∕𝑟3+𝑘𝐽2∕𝑟5− 5𝑘𝐽2sin2𝑖sin2𝜃∕𝑟5(7)
𝜂2
𝑗=𝜇∕𝑟3
𝑗+𝑘𝐽2∕𝑟5
𝑗− 5𝑘𝐽2𝑟2
𝑗𝑧∕𝑟7
𝑗(8)
𝜁𝑗= 2𝑘𝐽2𝑟𝑗𝑧∕𝑟5
𝑗, 𝜁 = 2𝑘𝐽2(sin𝑖sin𝜃)∕𝑟4(9)
𝑘𝐽2,𝑟𝑗and𝑟𝑗𝑧are defined as follows:
𝑘𝐽2= 3𝐽2𝜇𝑅2
𝑒∕2 (10)
𝑟𝑗=√(𝑟+𝑥𝑗)2+𝑦2
𝑗+𝑧2
𝑗(11)
𝑟𝑗𝑧=(𝑟+𝑥𝑗)sin𝑖sin𝜃+𝑦𝑗sin𝑖cos𝜃+𝑧𝑗cos𝑖 (12)
where𝐽2= 1.08262×10−3and𝑅𝑒= 6371 kmrepresent the second zonal
harmonic constant and the average radius of Earth, respectively.
2.2. Graph theory
In distributed algorithm, information interaction between spacecraft
is required. For the convenience of description, a graph 𝑮= (𝑽,𝑬,𝑨)
is introduced to describe the topology of information interaction [30],
where𝑽={1,2,…,𝑁𝑎}represents the set of 𝑁𝑎spacecraft in the
formation system; 𝑽is the set of edges, and 𝑒𝑖𝑗= (𝑖,𝑗)indicates that
jth spacecraft can obtain the information of the ith spacecraft; 𝑨=[𝑎𝑖𝑗]∈R𝑁𝑎×𝑁𝑎represents the adjacency matrix. Define 𝑎𝑖𝑗= 1when
𝑒𝑖𝑗= (𝑖,𝑗) ∈𝑬, otherwise 𝑎𝑖𝑗= 0. Since each spacecraft does not need
to communicate with itself, 𝑎𝑖𝑗= 0,∀𝑖∈𝑽. If∀𝑖,𝑗∈𝑽,𝑒𝑖𝑗&𝑒𝑗𝑖∈𝑬,
that is, information interaction can be achieved between spacecraft 𝑖
and𝑗, then the topology of the system is undirected, otherwise it is
directed. The undirected communication topology of formation system
is considered in this paper.
3. Centralized formation reconfiguration trajectory optimization
To facilitate the reader’s understanding, this paper first describes
the centralized formation reconfiguration trajectory optimization algo
rithm. Then, based on this, the distributed formation reconfiguration
trajectory optimization algorithm is proposed in the next section.
For the numerical optimization methods, the formation reconfig
uration problem is regarded as a complex constrained optimization
problem with twopoint boundary values, and its general framework
is [16]:
minimize 𝐽(𝑼)
subject to system dynamics
initial & terminal state
maximum & minimum thrust
collision avoidance
Next, each part will be introduced in detail.3.1. Cost function
The aim of the trajectory optimization for spacecraft formation
reconfiguration is to minimize fuel consumption. For the formation
system of𝑁𝑎deputy spacecraft, the cost function is selected:
𝐽(𝑼) =𝑁𝑎∑
𝑗=11
2∫𝑡f
𝑡0𝑼𝑇
𝑗(𝑡)𝑼𝑗(𝑡)d𝑡 (13)
where𝑡0and𝑡𝑓are the time corresponding to the initial and terminal
state of the spacecraft respectively. The optimization problem is con
strained by system dynamics, initial and terminal state, maximum and
minimum thrust, and collision avoidance, which will be described in
detail in the following sections.
3.2. System dynamics
For the formation system of 𝑁𝑎spacecraft, complete set is defined
asN𝑎={1,2,…,𝑁𝑎}. For graph 𝑮= (𝑽,𝑬,𝑨),𝑽=N𝑎. In the LVLH
frame,𝑿𝑗=[𝑥𝑗,𝑦𝑗,𝑧𝑗, ̇ 𝑥𝑗, ̇ 𝑦𝑗, ̇ 𝑧𝑗]𝑇is defined as the state variable de
scribing the relative motion of spacecraft 𝑗. According to Eq. (1), system
dynamics is formulated as the following nonlinear state equation:
∀𝑗∈N𝑎,̇𝑿𝑗(𝑡) =𝒇(𝑿𝑗(𝑡),𝝈(𝑡))+𝑩𝑼𝑗(𝑡) (14)
where𝑩=[
𝟎3×3,𝑰3×3]𝑇.𝒇(⋅)is the nonlinear vectorvalued func
tion.𝝈(𝑡) =[𝑟(𝑡),𝑣𝑥(𝑡),ℎ(𝑡),𝑖(𝑡),𝜃(𝑡)]𝑇represents the change of relevant
parameters caused by 𝐽2perturbation of the chief spacecraft. It can
be seen from Eq. (2) that the change of 𝝈(𝑡)is independent of 𝑿𝑗.
Therefore, Eq. (2) is simply expressed as the following closed form:
̇𝝈(𝑡) =𝒈(𝝈(𝑡)) (15)
3.3. Initial state and terminal state
The initial state constraint refers to the relative motion state of the
jth spacecraft at the initial time 𝑡0. The relevant equality constraint is
given by:
𝑿𝑗(𝑡0)=[𝑥𝑗(𝑡0),𝑦𝑗(𝑡0),𝑧𝑗(𝑡0), ̇ 𝑥𝑗(𝑡0), ̇ 𝑦𝑗(𝑡0), ̇ 𝑧𝑗(𝑡0)]𝑇
=[𝑥𝑗,0,𝑦𝑗,0,𝑧𝑗,0, ̇ 𝑥𝑗,0, ̇ 𝑦𝑗,0, ̇ 𝑧𝑗,0]𝑇(16)
The initial state can be obtained by relative measurement and recur
sion before maneuvering. For example, the current relative motion state
𝑿𝑗(𝑡0−𝛥𝑡)is measured by 𝛥𝑡(𝛥𝑡>𝑡𝑐𝑜𝑚𝑝𝑢𝑡𝑒 ,𝑡𝑐𝑜𝑚𝑝𝑢𝑡𝑒 is the computation
time) before the start of the maneuver, and the state 𝑿𝑗(𝑡0)of the
spacecraft at time 𝑡0is recursively obtained onboard (the state is
considered to be accurate due to the short recursion time).
The terminal state constraint characterizes the relative motion state
of the spacecraft at the terminal time 𝑡𝑓. In this paper, the equality
constraint is:
𝑿𝑗(𝑡𝑓)=[𝑥𝑗(𝑡𝑓),𝑦𝑗(𝑡𝑓),𝑧𝑗(𝑡𝑓), ̇ 𝑥𝑗(𝑡𝑓), ̇ 𝑦𝑗(𝑡𝑓), ̇ 𝑧𝑗(𝑡𝑓)]𝑇
=[𝑥𝑗,𝑓,𝑦𝑗,𝑓,𝑧𝑗,𝑓, ̇ 𝑥𝑗,𝑓, ̇ 𝑦𝑗,𝑓, ̇ 𝑧𝑗,𝑓]𝑇(17)
The terminal state is given according to the desired formation prior,
which satisfies the energy matching condition to ensure the longterm
passive stability of the formation. The energy matching condition for
bounded relative motion of spacecraft considering nonlinearity and
orbital eccentricity is shown in the formula [31]:
1
2{(̇ 𝑥𝑗,𝑓−𝜔𝑧,𝑓𝑦𝑗,𝑓+̇𝑟𝑓)2+[̇ 𝑦𝑗,𝑓+𝜔𝑧,𝑓(𝑥𝑗,𝑓+𝑟𝑓)]2+̇ 𝑧2
𝑗,𝑓}
−𝜇∕√(𝑟𝑓+𝑥𝑗,𝑓)2+𝑦2
𝑗,𝑓+𝑧2
𝑗,𝑓= −𝜇∕2𝑎(18)Acta Astronautica 214 (2024) 125–136
128J. Chen et al.
where𝑎is semimajor axis of the chief spacecraft. For instance, a circle
flyaround formation under the twobody condition can be designed as
follows [29]:
⎧
⎪
⎨
⎪⎩𝑥(𝑡0)=(𝑟cir∕2)cos𝜑, ̇ 𝑥(𝑡0)=(−𝑟cir𝜔𝑧∕2)sin𝜑
𝑦(𝑡0)= 2̇ 𝑥0∕𝜔𝑧, ̇ 𝑦(𝑡0)= −𝜔𝑧(2 +𝑒)𝑥(𝑡0)∕[(1 +𝑒)1∕2(1 −𝑒)3∕2]
𝑧(𝑡0)= ±√
3𝑥(𝑡0), ̇ 𝑧(𝑡0)= ±√
3̇ 𝑥(𝑡0)
(19)
where𝑟𝑐𝑖𝑟is the radius of the formation, 𝜑is the phase angle of the
formation, 𝜔𝑧and𝑒is the average orbital angular velocity and orbital
eccentricity of the chief spacecraft, respectively. The relative motion
state in Eq. (19) satisfies Eq. (18). In natural motion, due to various
perturbation effects, it will drift slowly.
3.4. Maximum and minimum thrust
Because the continuous low thrust engines of micro spacecraft
can only generate a certain range of variable thrust. Therefore, it is
necessary to consider the maximum and minimum thrust constraints.
For the jth spacecraft, the maximum and minimum thrust constraints
are expressed as:
‖‖‖𝑼𝑗(𝑡)‖‖‖𝑝≤𝑢𝑗,max, 𝑝 = 2or∞ (20)
‖‖‖𝑼𝑗(𝑡)‖‖‖𝑝≥𝑢𝑗,min, 𝑝 = 2or∞ (21)
where𝑢𝑗,𝑚𝑎𝑥 and𝑢𝑗,𝑚𝑖𝑛represents the maximum and minimum control
accelerations provided by the 𝑗th spacecraft thruster, respectively. ‖⋅‖𝑝
represents the 𝑝norm. If the spacecraft carries a single thruster, 𝑝= 2; if
it carries multiple thrusters, 𝑝= ∞. Note that the Eq. (21) represents a
nonconvex constraint, which reduces the accuracy of the solution and
increases the computation. Then, the binary variable 𝑏𝑗𝑘(𝑡)is used to
convexify it into a mixed integer linear constraint:
𝑢𝑗,𝑥(𝑡)≥𝑢𝑗,min−𝑀𝑏𝑗1(𝑡)
−𝑢𝑗,𝑥(𝑡)≥𝑢𝑗,min−𝑀𝑏𝑗2(𝑡)
𝑢𝑗,𝑦(𝑡)≥𝑢𝑗,min−𝑀𝑏𝑗3(𝑡)
−𝑢𝑗,𝑦(𝑡)≥𝑢𝑗,min−𝑀𝑏𝑗4(𝑡)
𝑢𝑗,𝑧(𝑡)≥𝑢𝑗,min−𝑀𝑏𝑗5(𝑡)
−𝑢𝑗,𝑧(𝑡)≥𝑢𝑗,min−𝑀𝑏𝑗6(𝑡)
6∑
𝑘=1𝑏𝑗𝑘(𝑡)≤5, 𝑏𝑗𝑘(𝑡) ∈ {0,1}(22)
where𝑀is a large number.
3.5. Collision avoidance
Define the safe distance as 𝑑𝑠𝑎𝑓𝑒, and the relative positions of
two different spacecraft 𝑗and𝑖at time𝑡are expressed as 𝒑𝑗(𝑡) =
[𝑥𝑗(𝑡),𝑦𝑗(𝑡),𝑧𝑗(𝑡)]𝑇and𝒑𝑖(𝑡) = [𝑥𝑖(𝑡),𝑦𝑖(𝑡),𝑧𝑖(𝑡)]𝑇. Collision avoidance can
be described as:
‖‖‖𝒑𝑗(𝑡) −𝒑𝑖(𝑡)‖‖‖2≥𝑑𝑠𝑎𝑓𝑒,∀𝑗,𝑖∈N𝑎 (23)
Eq. (23) is nonlinear and describes the keepoutzone as a non
convex ‘‘repulsive ball’’ model, as shown in Fig. 2(a). Inspired by
Ref. [15], the nonconvex constraint in Eq. (23) is convexified by
unfolding the sphere into a tangent plane, as shown in Fig. 2(b). The
new collision avoidance constraint is:
(𝒑𝑗(𝑡) −𝒑𝑖(𝑡))𝑇(𝒑𝑗(𝑡) −𝒑𝑖(𝑡))≥𝑑𝑠𝑎𝑓𝑒‖‖‖𝒑𝑗(𝑡) −𝒑𝑖(𝑡)‖‖‖2,∀𝑗,𝑖∈N𝑎(24)
where𝒑𝑗(𝑡)and𝒑𝑖(𝑡)are the nominal trajectories, which are the ini
tial guesses of the actual trajectories 𝒑𝑗(𝑡)and𝒑𝑖(𝑡), and are used to
convexify the collision avoidance constraint. The value of the nominal
trajectory will be given in Section 4.2.4. Distributed formation reconfiguration trajectory optimization
For the centralized trajectory optimization algorithm [12–18], all
spacecraft are required to jointly solve the optimization problem con
sidering collision avoidance. Because the state variables of each space
craft are coupled, the computation will increase sharply with the scale
of the formation, which is unsuitable for application in engineering.
Therefore, it is necessary to design a distributed trajectory optimization
algorithm that can be quickly calculated under complex constraints
such as collision avoidance.
In the following section, a distributed trajectory optimization algo
rithm is designed by introducing ‘‘predicted trajectory’’. The parallel
computation of the trajectory optimization problem is achieved by
information interaction between neighbors.
4.1. Definition of neighbor
In order to accurately describe information interaction and im
plement parallel computing to reduce computation, the concept of
‘‘neighbor’’ is introduced. Define the neighbor distance as 𝑑𝑛𝑒𝑖𝑔ℎ𝑏𝑜𝑟
(𝑑𝑛𝑒𝑖𝑔ℎ𝑏𝑜𝑟>𝑑𝑠𝑎𝑓𝑒). For ∀𝑗,𝑖∈𝑉,𝑗≠𝑖, spacecraft 𝑗and𝑖become neigh
bors if the distance of their optimal trajectories is less than 𝑑𝑛𝑒𝑖𝑔ℎ𝑏𝑜𝑟 .
Information can be transmitted between them, i.e. 𝑎𝑖𝑗=𝑎𝑗𝑖= 1. Because
the distance between neighbors is closer and the collision risk is higher,
collision avoidance between neighbors is only considered. Define the
set of𝑗’s neighbors as: N𝑗= {𝑖∣𝑒𝑖𝑗∈𝑬}, with𝑁𝑗neighbors.
4.2. Predicted trajectory
Since the collision avoidance constraint (24) contains the actual
trajectories of other spacecraft, it is infeasible for spacecraft 𝑗to solve
the trajectory optimization problem considering collision avoidance
independently.
In order to make the optimization problem solvable, the actual
trajectories of other spacecraft are replaced by the predicted trajec
tories. It is important to note that since the predicted trajectory is
not equal to the actual trajectory, it takes several iterations to solve
the optimization problem to obtain the optimal trajectory for effective
collision avoidance [23].
Define𝒑(𝑛)∗
𝑗(𝑡) = [𝑥𝑗(𝑡),𝑦𝑗(𝑡),𝑧𝑗(𝑡)](𝑛)∗,∀𝑡∈[𝑡0,𝑡𝑓]be the optimal
trajectory obtained by solving the trajectory optimization problem of
spacecraft𝑗at the nth iteration. When the spacecraft 𝑗’s neighbors
solve their own trajectory optimization problem at the 𝑛th iteration, the
predicted trajectory transmitted by spacecraft 𝑗iŝ𝒑(𝑛)
𝑗(𝑡),∀𝑡∈[𝑡0,𝑡𝑓].
The relationship between the predicted trajectory and the optimal
trajectory is
̂𝒑(𝑛)
𝑗(𝑡) =𝒑(𝑛−1)∗
𝑗(𝑡), 𝑛≥2 &𝑛∈Z∀𝑗∈N𝑎 (25)
Since the predicted trajectory can reflect the future movement trend
of the spacecraft, then the nominal trajectory in Eq. (24) is equal to the
predicted trajectory:
𝒑𝑗(𝑡) =̂𝒑(𝑛)
𝑗(𝑡),∀𝑗∈N𝑎 (26)
When spacecraft 𝑗solves its own trajectory optimization problem at
thenth iteration, the set of predicted trajectories of all its neighbors is
defined as:
̂(𝑛)
𝑗(𝑡) =[
̂𝒑(𝑛)
𝑖1(𝑡),…,̂𝒑(𝑛)
𝑖𝑁𝑗(𝑡)]𝑇
,∀𝑡∈[𝑡0,𝑡𝑓], 𝑖1,…,𝑖𝑁𝑗∈N𝑗 (27)Acta Astronautica 214 (2024) 125–136
129J. Chen et al.
Fig. 2. Convexification of the collisionavoidance constraint.
4.3. Optimization problem formulation
Replacing the actual trajectories in the collision avoidance con
straint (24) with the predicted trajectories of the neighbors. For each
spacecraft𝑗= 1,…,𝑁𝑎, the initial state 𝑿𝑗,0and the terminal state 𝑿𝑗,𝑓
are known when solving its own trajectory optimization problem at the
𝑛th iteration. In particular, when 𝑛≥2, the set of predicted trajectories
of neighbors is ̂(𝑛)
𝑗(𝑡) =[
̂𝒑(𝑛)
𝑖1(𝑡),…,̂𝒑(𝑛)
𝑖𝑁𝑗(𝑡)]𝑇
,∀𝑡∈[𝑡0,𝑡𝑓], 𝑖1,…,𝑖𝑁𝑗∈
N𝑗. Decision variables in optimization problem include 𝑿𝑗(𝑡),𝑼𝑗(𝑡), and
𝑏𝑗𝑘(𝑡),∀𝑡∈[𝑡0,𝑡𝑓]. The optimization problem for spacecraft 𝑗(Problem
1) is formulated as follows:
𝑚𝑖𝑛 𝐽𝑗=1
2∫𝑡f
𝑡0𝑼𝑇
𝑗(𝑡)𝑼𝑗(𝑡)d𝑡 (28)
∀𝑡∈[𝑡0,𝑡𝑓], subject to Eqs. (14), (16), (17), (20), (22) and
(
̂𝒑(𝑛)
𝑗(𝑡) −̂𝒑(𝑛)
𝑖(𝑡))𝑇(
𝒑𝑗(𝑡) −̂𝒑(𝑛)
𝑖(𝑡))
≥𝑑𝑠𝑎𝑓𝑒‖‖‖̂𝒑(𝑛)
𝑗(𝑡) −̂𝒑(𝑛)
𝑖(𝑡)‖‖‖2,∀𝑖∈N𝑗,𝑛≥2
(29)
For the first optimization, i.e. 𝑛= 1, since the predicted trajectory
of each spacecraft does not exist, the problem is to solve an optimal
trajectory without considering collision avoidance. When 𝑛≥2, for
any spacecraft 𝑗, the ‘‘predicted trajectory’’ is obtained by Eq. (25).
Then, the predicted trajectory is transmitted to the neighbors based
on the adjacency matrix 𝑨, and the predicted trajectories of neighbors
are received at the same time. Then trajectory optimization problem
of spacecraft 𝑗by using the predicted trajectories of its neighbors to
achieve collision avoidance is then solved.
Define (𝑓(𝑁))as the computation time complexity as a function
𝑓(𝑁)of varying formation scale 𝑁. According to Eq. (29), it can
be seen that the larger the number of neighbors 𝑁𝑗, the higher the
computation time complexity of the collision avoidance constraint,
and it increases linearly, i.e., (𝑁𝑗). The computational complexity of
the remaining constraints does not change with the formation scale.
Therefore, for spacecraft formations of different scales, the computation
time complexity of Problem 1 is(𝑁𝑗)(only related to the number of
neighbors𝑁𝑗), which will be verified in Section 5.
4.4. Discretization and implementation
In the previous section, Problem 1 is formulated on the basis of
continuous system. In numerical simulation, it is discretized by using
theℎ𝑝adaptive pseudospectral method. Taking advantages of the Gauss
pseudospectral method and finite element method, the method divides
the problem into several units, each of which is approximated by a
polynomial with a relatively low order. An adaptive method is used
to determine the number of divisions and the order of interpolationpolynomials. Based on the spectral formation method used in solv
ing differential equations, various complex constraints are allocated
to the Legendre–Gauss–Lobatto (LGL) points. LGL points are applied
to discretize the nonlinear optimal control problem into a nonlinear
programming problem. It has been found that this method produces
a more accurate solution than the global pseudospectral formation
with less computation time and resources. A detailed description of
theℎ𝑝adaptive pseudospectral method is provided in Ref. [ 32]. A
sparse nonlinear optimization software named GPOPS is used to solve
the problem. GPOPS is a stateoftheart MATLAB toolbox that solves
multistage optimal control problems using the ℎ𝑝adaptive pseudospec
tral method. It can discretize multistage optimal control problems
into largescale nonlinear programming problems [ 33–35]. Therefore,
GPOPS is well suited to solve the proposed trajectory optimization
problem.
4.5. Algorithm implementation
The proposed distributed trajectory optimization algorithm is il
lustrated by the flow chart in Fig. 3. Specific steps are described as
follows:
Step 1 : In the first optimization ( 𝑛=1), for each spacecraft 𝑗=
1,2,…,𝑁𝑎, the initial state 𝑿𝑗,0and terminal state 𝑿𝑗,𝑓are known.
Then the optimal trajectory without considering collision avoidance,
𝒑(1)∗
𝑗(𝑡),∀𝑡∈[𝑡0,𝑡𝑓]is obtained by solving Problem 1 .
Step 2 : According to the initial adjacency matrix 𝑨0, each spacecraft
𝑗receives the optimal trajectory 𝒑(1)∗
𝑖(𝑡),𝑖∈N𝑗,∀𝑡∈[𝑡0,𝑡𝑓]from
its neighbors and transmits its own optimal trajectory 𝒑(1)∗
𝑗(𝑡),∀𝑡∈[𝑡0,𝑡𝑓]to its neighbors. Fig. 4(a) shows the topology of information
interaction between neighbors. Spacecraft 𝑗calculates the relative dis
tance𝑑𝑗,𝑖(𝑡) =‖‖‖𝒑(𝑛)∗
𝑗(𝑡) −𝒑(𝑛)∗
𝑖(𝑡)‖‖‖2,∀𝑡∈[𝑡0,𝑡𝑓]with its neighbors to
determine whether 𝑑𝑗,𝑖(𝑡)is less than 𝑑𝑠𝑎𝑓𝑒. If𝑑𝑗,𝑖(𝑡)> 𝑑𝑠𝑎𝑓𝑒,∀𝑡∈[𝑡0,𝑡𝑓]& ∀𝑖,𝑗∈N𝑎, the reconfiguration is completed. Otherwise, the
trajectory optimization needs to be carried out again.
Step 3 : If it needs to be optimized again, first define the neighbor
distance as 𝑑𝑛𝑒𝑖𝑔ℎ𝑏𝑜𝑟 (𝑑𝑛𝑒𝑖𝑔ℎ𝑏𝑜𝑟> 𝑑𝑠𝑎𝑓𝑒). As shown in Fig. 4(b), when
𝑑𝑖,𝑗(𝑡)> 𝑑𝑛𝑒𝑖𝑔ℎ𝑏𝑜𝑟 ,∀𝑡∈[𝑡0,𝑡𝑓], the trajectories are considered far
apart from each other and there is no collision risk. Otherwise, the
collision risk is considered, so they are neighbors to each other and con
tinue to maintain information interaction during optimization. Update
adjacency matrix 𝑨=[𝑎𝑖𝑗]∈R𝑁𝑎×𝑁𝑎and iteration 𝑛=𝑛+1.
Step 4 : For each spacecraft 𝑗= 1,2,…,𝑁𝑎, the𝑛th(𝑛≥2) itera
tion considers the collision avoidance with the predicted trajectories
̂(𝑛)
𝑗(𝑡) =[
̂𝒑(𝑛)
𝑖1(𝑡),…,̂𝒑(𝑛)
𝑖𝑁𝑗(𝑡)]𝑇
,∀𝑡∈[𝑡0,𝑡𝑓]of its neighbors, then obtains
the optimal trajectory 𝒑(𝑛)∗
𝑗(𝑡),∀𝑡∈[𝑡0,𝑡𝑓]by solving Problem 1 .
Step 5 : According to the adjacency matrix 𝑨, each spacecraft 𝑗
receives the optimal trajectories 𝒑(𝑛)∗
𝑖(𝑡),𝑖∈N𝑗,∀𝑡∈[𝑡0,𝑡𝑓]from itsActa Astronautica 214 (2024) 125–136
130J. Chen et al.
Fig. 3. Flow chart of the distributed trajectory optimization algorithm.
neighbors and transmits its own optimal trajectory to its neighbors.
Spacecraft𝑗calculates the relative distance 𝑑𝑗,𝑖(𝑡),∀𝑡∈[𝑡0,𝑡𝑓]with its
neighbors to determine whether 𝑑𝑗,𝑖(𝑡)is less than 𝑑𝑠𝑎𝑓𝑒. If𝑑𝑗,𝑖(𝑡)>𝑑𝑠𝑎𝑓𝑒,
∀𝑡∈[𝑡0,𝑡𝑓]& ∀𝑖,𝑗∈N𝑎, the optimization is completed. Otherwise,
return to Step 3 until all𝑑𝑗,𝑖(𝑡)>𝑑𝑠𝑎𝑓𝑒,∀𝑡∈[𝑡0,𝑡𝑓].
Finally, at the starting maneuver time 𝑡0, the optimal control input
sequence is applied to the spacecraft for openloop guidance. The
information to be transmitted in the algorithm is the optimal trajectory
obtained by each spacecraft after each iteration to solve the opti
mization problem, i.e. 𝒑(𝑛)∗
𝑗(𝑡),∀𝑡∈[𝑡0,𝑡𝑓], which is only a series of
discrete points. 𝒑(𝑛)∗
𝑗(𝑡)is transmitted to 𝑁𝑗neighbors of the spacecraft
𝑗. After over 1000 times of simulation calculation, it is found that
even for the formation reconfiguration problem composed of hundreds
of spacecraft, it can be solved after 2–3 iterations. With the increase
of the number of iterations, the number of neighbors is decreased,
and the amount of information to be transmitted is gradually reduced.
Therefore, the information interaction required for the algorithm is
feasible in engineering.
5. Numerical simulation
In this section, the numerical simulation of largescale spacecraft
formation reconfiguration is given. The effectiveness of the proposed
distributed trajectory optimization algorithm for collision avoidanceas well as the computational efficiency are mainly verified. The lap
top computer performance used for simulation is: 16 GB of memory;
processor 13th Gen Intel Core i913900HX GPU @2.20 GHz.
As shown in Fig. 5, the formation system consists of thirteen space
craft, including one chief spacecraft and twelve deputy spacecraft.
Among them, four spacecraft in the inner circle are evenly distributed
on the𝑟01= 500 m space circle, and eight spacecraft in the outer
circle are evenly distributed on the 𝑟02= 750 m space circle. The
twelve spacecraft are reconfigured to a inplane formation. The initial
and terminal states of each spacecraft in the LVLH frame are shown in
Table 1. Table 2 gives the parameters needed for simulation. Table 3
gives the initial orbital elements of the chief spacecraft.
5.1. Initial guess of adjacency matrix
For the proposed distributed optimization algorithm, collision avoid
ance between neighbors is considered, and the updated adjacency
matrix is based on the initial adjacency matrix 𝑨0. Therefore, to
ensure the effectiveness of collision avoidance, the initial guess of the
adjacency matrix is very important. For initial adjacency matrix 𝑨0,
spacecraft with high collision probability should be neighbors as far
as possible to ensure the effectiveness of collision avoidance. At the
same time, spacecraft with low probability of collision should not be
allowed to become neighbors, which can reduce computation. For this
simulation, spacecraft with initial distance and terminal distance less
than 2𝑑𝑠𝑎𝑓𝑒= 300 m are neighbors, and the information interactionActa Astronautica 214 (2024) 125–136
131J. Chen et al.
Fig. 4. Information interaction topology and neighbors updating.
Table 1
Initial and terminal states of the spacecraft formation (S.I. unit).
Spacecraft Initial states Initial states
1 [250;0;433; 0; −0.551;0] [0; −900;0;0;0;0]
2 [0; −500;0; −0.275;0; −0.477] [0;100;0;0;0;0]
3 [ −250;0; −433; 0;0.551;0] [0;900;0;0;0;0]
4 [0;500;0; 0.275;0;0.477] [0; −100;0;0;0;0]
5 [375;0;649.5; 0; −0.826;0] [0; −700;0;0;0;0]
6 [265.2; −530.3;459.3; −0.29; −0.58; −0.51] [0; −1100;0;0;0;0]
7 [0; −750;0; −0.413;0; −0.76] [0; −300;0;0;0;0]
8 [ −265.2; −530.3; −459.3; −0.29;0.58; −0.51] [0;500;0;0;0;0]
9 [ −375;0; −649.5; 0;0.826;0] [0;700;0;0;0;0]
10 [ −265.2;530.3; −459.3; 0.29;0.58;0.51] [0;1100;0;0;0;0]
11 [0;750;0; 0.413;0;0.716] [0;300;0;0;0;0]
12 [265.2;530.3;459.3; 0.29;0.58;0.51] [0; −500;0;0;0;0]
Fig. 5. Initial spacecraft formation topology network model.
Table 2
Parameters of simulation.
Parameters Values
Reconfiguration time: 𝑡𝑓 3000 s
LGL points 59
Safe distance: 𝑑𝑠𝑎𝑓𝑒 150 m
Neighbor distance: 𝑑𝑛𝑒𝑖𝑔ℎ𝑏𝑜𝑟 180 m
Mass of the deputy spacecraft: 𝑚0 100 kg
Maximum thrust: 𝐹𝑚𝑎𝑥 50 mN
Minimum thrust: 𝐹𝑚𝑖𝑛 2 mN
Thruster specific impulse: 𝐼𝑠 2000 sTable 3
Initial orbital elements of chief spacecraft.
Orbit elements Values
Semimajor axis 6900 km
Eccentricity 1.2e −03
Inclination 53 deg
Argument of periapsis 45 deg
Right ascension of the ascending node 50.2 deg
True anomaly 0 deg
topology between initial neighbors is shown in Fig. 6(a). The values of
each element of 𝑨0are as follows:
𝑎15=𝑎51= 1,𝑎16=𝑎61= 1,𝑎24=𝑎42= 1,𝑎2,11=𝑎11,2= 1,
𝑎39=𝑎93= 1,𝑎3,10=𝑎10,3= 1
a47=𝑎74= 1,𝑎5,12=𝑎12,5= 1,𝑎7,12=𝑎12,7= 1,
𝑎89=𝑎98= 1,𝑎8,11=𝑎11,8= 1
all other elements are zero.
5.2. Collision avoidance effectiveness
In the simulation, the optimal trajectory satisfying the collision
avoidance constraints is obtained by solving the optimization problem
through two iterations.
The reconfiguration trajectories of the first and second optimization
are shown in Fig. 7. After the first optimization, each spacecraft trans
mits the optimal trajectory to the neighbors according to the initial
adjacency matrix 𝑨0, and receives the optimal trajectories from the
neighbors at the same time, thus generating the relative distances with
the neighbors. Because of the limited space, only the result that the
distances with the neighbors are less than 𝑑𝑠𝑎𝑓𝑒is given. Fig. 8 show the
relative distances of spacecraft 1 and 3 with their neighbors after theActa Astronautica 214 (2024) 125–136
132J. Chen et al.
Fig. 6. Initial neighbors information interaction topology and neighbors update.
Fig. 7. Spacecraft trajectories for formation reconfiguration.
Fig. 8. Relative distances between some spacecraft and their neighbors after first optimization.
first optimization. It can be seen that the distance between spacecraft 1
and 5 is less than 𝑑𝑠𝑎𝑓𝑒and that between spacecraft 3 and 9 is less than
𝑑𝑠𝑎𝑓𝑒. In the simulation, only the distances between neighbors are used
to determine whether there is collision risk in the formation system. For
actual trajectory, if the distances between nonneighbors are less than𝑑𝑠𝑎𝑓𝑒, this situation will not be discovered, resulting in no guarantee for
the effectiveness of collision avoidance. Fortunately, at the beginning,
spacecraft with high collision probability became neighbors, making
the collision risk between nonneighbors very low. The statistical result
of distances between all spacecraft is called global statistics, and theActa Astronautica 214 (2024) 125–136
133J. Chen et al.
Fig. 9. Relative distances between all spacecraft during formation reconfiguration.
Fig. 10. Comparison of relative position error for the cases with or without considering 𝐽2perturbation.
Fig. 11.𝛥Vcomparison of two optimizations.
statistical result of distances between spacecraft and their neighbors is
called local statistics. To prove that the result of local statistics is the
same as the global statistics, the global statistical result after the first
optimization is shown in Fig. 9(a), totaling (12 × 11)∕2 = 66 groups of
distances. Statistically, only spacecraft 1 and 5, as well as spacecraft 3
and 9, have distances less than 𝑑𝑠𝑎𝑓𝑒, which are the same as the result
of local statistics.
For the second trajectory optimization, the adjacent matrix 𝑨is
updated using the distance 𝑑𝑗,𝑖(𝑡)>𝑑𝑛𝑒𝑖𝑔ℎ𝑏𝑜𝑟 ,∀𝑡∈[𝑡0,𝑡𝑓],𝑗≠𝑖obtainedby each spacecraft in the previous iteration. If 𝑑𝑗,𝑖(𝑡)> 𝑑𝑛𝑒𝑖𝑔ℎ𝑏𝑜𝑟 ,∀𝑡∈[𝑡0,𝑡𝑓], consider that there is no collision risk, cancel the neighbor
hood, otherwise continue to be neighbors. The updated information
interaction topology is shown in Fig. 6(b). It is clear that the number
of information interaction has been reduced from 11 sets at the first
optimization to only 2 sets at the second optimization. It can be con
cluded that the communication resources of formation system can be
significantly reduced by updating the information interaction topology
with the current optimal trajectory. The updated adjacency matrix 𝑨
is a sparse matrix with only 𝑎15=𝑎51= 1,𝑎39=𝑎93= 1and all other
elements are zero.
According to adjacency matrix 𝑨, it can be seen that after the first
optimization, only spacecraft 1 and 5, and spacecraft 3 and 9 have dis
tances less than 𝑑𝑛𝑒𝑖𝑔ℎ𝑏𝑜𝑟 . Therefore, their collision avoidance needs to
be considered in the second trajectory optimization. Taking spacecraft
1 and 5 as examples, in the second optimization, they transmit their
‘‘predicted trajectory’’ to each other, and then solve a trajectory opti
mization problem considering collision avoidance with the neighbor’s
predicted trajectory. The relative distances of all spacecraft after the
second optimization are shown in Fig. 9(b). It is obvious that all the
distances are larger than 𝑑𝑠𝑎𝑓𝑒after the second optimization, which
realizes collision avoidance. Finally, after two trajectory optimization,
the fuel optimal trajectory realizing the collision avoidance is obtained
for the formation system.
The control acceleration generated by the ℎ𝑝adaptive pseudospec
tral method is used for openloop guidance of the formation reconfigu
ration process. Since the ℎ𝑝adaptive pseudospectral method only gives
state estimation and control at LGL points, the control between LGLActa Astronautica 214 (2024) 125–136
134J. Chen et al.
Fig. 12. Comparison of relative position trajectory of spacecraft 5 of two optimizations.
Fig. 13. Comparison of control acceleration of spacecraft 5 of two optimizations.
points is obtained by using cubic spline interpolation. In the simulation,
the open loop optimal control of the spacecraft is not modified, and
the actual trajectory is generated by using highprecision orbital prop
agator (HPOP) integration. The HPOP model includes the gravitational
field model EGM2008 21*21, the atmospheric model NRLMSISE2000,
considering the solar and lunar third body force and the spherical
solar radiation pressure (SRP). The error between the actual trajectory
and the optimized trajectory is shown in Fig. 10(a). For comparison,
another trajectory without considering 𝐽2perturbation is generated.
The error between the actual trajectory and the optimized trajectory
is shown in Fig. 10(b). It can be seen from the results that the control
error considering 𝐽2perturbation is much smaller than that without 𝐽2
perturbation. Therefore, it can be concluded that the nonlinear relative
spacecraft dynamics considering 𝐽2perturbation is necessary to obtain
the accurate trajectory of the spacecraft formation maneuver.
Fig. 11 shows the velocity increment 𝛥Vcomparison between the
first optimization and the optimization completed for each spacecraft.
It can be seen that the 𝛥Vof spacecraft 1, 3, 5 and 9 have changed
compared with the first optimization, which is also consistent with
the previous analysis. In the second trajectory optimization, spacecraft
1, 3, 5 and 9 adjust the maneuvering strategy to avoid collision with
neighbors by considering predicted trajectories of neighbors.
Taking spacecraft 5 as an example, the change of maneuver trajec
tory during the optimization process is analyzed in detail next. Figs. 12
and 13 show the comparison of the two optimization results. The
red asterisk curve is the first optimization result of spacecraft 5 and
the blue circle curve is the second optimization result. Wherein, the
comparison of relative position trajectory of two optimizations is shown
in Fig. 12, and the comparison of optimal control acceleration is shown
in Fig. 13. It can be seen that in order to achieve collision avoidance,
the control acceleration of spacecraft 5 in the 𝑥and𝑦directions has
changed greatly, which makes the radial and intrack relative position
significantly different from those in the first optimization. At the same
time, finetuning is made in the crosstrack ( 𝑧) direction, enabling
spacecraft 5 to reach the terminal state at the end time, while avoiding
collisions with neighbor.
Table 4 shows the comparison of fuel consumption 𝛥mbetween
the first optimization and the optimization completed, as well as the
comparison of 𝛥V. For the first optimization, 𝛥V= 15.996 m/s, andTable 4
Fuel consumption comparison between first optimization and
optimization completed.
Cases 𝛥m, g 𝛥V, m/s
First optimization 81.56 15.996
Optimization completed 82.77 16.233
when the optimization is completed, 𝛥V= 16.233 m/s. 𝛥Vincreases
by only 1.48% compared to the first optimization. Due to the high
specific impulse of the low thrust engines, only 1.21 g of extra fuel
is consumed to avoid collision. Therefore, it can be concluded that the
proposed trajectory optimization algorithm can achieve safe formation
reconfiguration maneuver with little additional fuel consumption.
5.3. Comparison of computation time
Due to the parallel computation of the distributed algorithm, the
average computation time for each spacecraft to solve the optimization
problem for the first and second iteration is statistically analyzed, as
shown in Table 5. For the first optimization, the computation time is
only 0.209 s, and for the subsequent optimization solution of collision
avoidance by considering ‘‘predicted trajectory’’ with neighbors, the
computation time is 1.141 s. For this numerical simulation, the optimal
trajectory for collision avoidance is obtained after two optimizations,
and the total computation time is only 1.35 s.
By calculating over 1000 numerical simulations, the computation
time of different number of neighbors for Problem 1 is shown in
Fig. 14(a). It can be seen that the computation time increases linearly
with the number of neighbors, i.e. the computation time complexity is
(𝑁𝑗), which verifies the analysis in Section 4.3. It is easy to know that
even a largescale formation of thousands of spacecraft, each spacecraft
can only collide with several or more spacecraft around it (become
neighbors). Therefore, the distributed algorithm can quickly solve the
trajectory optimization problem of largescale spacecraft formation.
Next, we illustrate the rapidity of the proposed algorithm by com
parison. The decentralized sequential convex programming (SCP) algo
rithm proposed by Ref. [15] and the distributed trajectory optimizationActa Astronautica 214 (2024) 125–136
135J. Chen et al.
Fig. 14. Computation time statistics (calculated over 1000 numerical simulations).
Table 5
Average computation time of trajectory optimization.
Cases Computation time (s)
First optimization 0.209
Second optimization 1.141
Optimization completed 1.350
(DTO) algorithm are used to solve the formation reconfiguration prob
lems of different scales respectively. The simulation parameters are the
same as Table 2, and the collisionfree optimal trajectory is obtained by
solving the respective optimization problems. The average computation
time is shown in Fig. 14(b). It can be clearly seen that regardless of
the scale of the formation, the computation time of DTO is less than
that of SCP. This is because DTO can be calculated in parallel, while
SCP requires adjacent spacecraft to solve the optimization problem
according to the sequential. With the increase of the formation scale,
the advantage of DTO rapidity is more obvious and more suitable for
engineering application. In addition, the computation time of the DTO
algorithm is also significantly less than the centralized algorithm of
Ref. [12] and the convex optimization method of Ref. [18] through
verification.
6. Conclusions
In this paper, we present a distributed trajectory optimization al
gorithm considering collision avoidance for largescale spacecraft for
mation reconfiguration. The nonlinear relative spacecraft dynamics
considering 𝐽2perturbation is used to obtain the highprecision ma
neuver trajectory. The ‘‘predicted trajectory’’ is introduced to decouple
the state variables of each spacecraft, so that each spacecraft solve its
own trajectory optimization problem independently, which is the main
reason for the improvement of computational efficiency. In addition,
the collision avoidance convexification ensures the accuracy of the so
lution and improves the computational efficiency. Finally, the nonlinear
optimal control problem is discretized by the ℎ𝑝adaptive pseudospec
tral method. Numerical simulation results validate that the proposed
algorithm has higher computational efficiency than the centralized and
decentralized algorithms, and collision avoidance is achieved.
The distributed algorithm provides an optimal openloop solu
tion for spacecraft formation maneuver. However, further research
is needed to make the proposed distributed algorithm adapt to on
board realtime guidance and control. It must be combined with the
closedloop control design to ensure that the optimal trajectory can be
obtained in the case of system uncertainty and external disturbances.
Our future research work will focus on using the proposed distributed
algorithm to solve this closedloop control problem.Declaration of competing interest
We wish to confirm that there are no known conflicts of interest
associated with this publication and there has been no significant
financial support for this work that could have influenced its outcome.
We confirm that the manuscript has been read and approved by all
named authors and that there are no other persons who satisfied the
criteria for authorship but are not listed. We further confirm that the
order of authors listed in the manuscript has been approved by all of
us.
Acknowledgment
This work was supported by the National Natural Science Founda
tion of China (Grant No. 62188101).
References
[1] Z. Zhang, L. Deng, J. Feng, L. Chang, D. Li, Y. Qin, A survey of precision
formation relative state measurement technology for distributed spacecraft,
Aerospace 9 (7) (2022) 362.
[2] D. Gu, B. Ju, J. Liu, J. Tu, Enhanced GPSbased GRACE baseline determination by
using a new strategy for ambiguity resolution and relative phase center variation
corrections, Acta Astronaut. 138 (2017) 176–184.
[3] Y. Ding, J. Yang, Y. Hao, A review on coordinated control of formation config
uration of space solar power station energy transmission system, J. Aeronaut.,
Astronaut. Aviat. 54 (1) (2022) 49–65.
[4] G. Ma, H. Dong, Q. Hu, Faulttolerant translational control for spacecraft for
mation flying with collision avoidarce requirement, Acta Aeronaut. et Astronaut.
Sinica 38 (10) (2017) 206–216.
[5] J. Wang, J. Zhang, X. Cao, F. Wang, Optimal satellite formation reconfiguration
strategy based on relative orbital elements, Acta Astronaut. 76 (2012) 99–114.
[6] Z. Wang, Y. Xu, C. Jiang, Y. Zhang, Selforganizing control for satellite clusters
using artificial potential function in terms of relative orbital elements, Aerosp.
Sci. Technol. 84 (2019) 799–811.
[7] J. Wang, C. Zhang, J. Zhang, Analytical solution of satellite formation impulsive
reconfiguration considering passive safety constraints, Aerosp. Sci. Technol. 119
(2021) 107108.
[8] C. Lippe, S. D’Amico, Safe, deltavefficient spacecraft swarm reconfiguration
using Lyapunov stability and artificial potentials, J. Guid. Control Dyn. 45 (2)
(2022) 213–231.
[9] J.T. Betts, Practical methods for optimal control and estimation using nonlinear
programming, Soc. Ind. Appl. Math., SIAM Rev. 53 (2010) 183–185.
[10] H.K. Sipowa, J. McMahon, Fueloptimal geometric path planning algorithm for
spacecraft formation flying, J. Guid. Control Dyn. 45 (10) (2022) 1862–1872.
[11] N. Pillet, P. Bousquet, E. Chesta, R. Cledassou, M. Delpech, E. Hinglais,
Propulsion options for preliminary formation flying missions studies at CNES,
in: 42nd AIAA/ASME/SAE/ASEE Joint Propulsion Conference & Exhibit, 2006,
p. 5221.
[12] B. Wu, D. Wang, E.K. Poh, G. Xu, Nonlinear optimization of lowthrust trajectory
for satellite formation: Legendre pseudospectral approach, J. Guid. Control Dyn.
32 (4) (2009) 1371–1381.Acta Astronautica 214 (2024) 125–136
136J. Chen et al.
[13] A. Richards, T. Schouwenaars, J.P. How, E. Feren, Spacecraft trajectory planning
with avoidance constraints using mixedinteger linear programming, J. Guid.
Control Dyn. 25 (4) (2002) 755–764.
[14] G.D. Mauro, D. Spiller, S.F.R. Carnà, R. Bevilacqua, Minimumfuel control
strategy for spacecraft formation reconfiguration via finitetime maneuvers, J.
Guid. Control Dyn. 42 (4) (2019) 752–768.
[15] D. Morgan, S.J. Chung, F.Y. Hadaegh, Model predictive control of swarms of
spacecraft using sequential convex programming, J. Guid. Control Dyn. 37 (6)
(2014) 1725–1740.
[16] S. Sarno, M. D’Errico, J. Guo, E. Gill, Path planning and guidance algo
rithms for SAR formation reconfiguration: Comparison between centralized and
decentralized approaches, Acta Astronaut. 167 (2020) 404–417.
[17] B. Li, H. Zhang, W. Zheng, L. Wang, Spacecraft closerange trajectory planning
via convex optimization and multiresolution technique, Acta Astronaut. 175
(2020) 421–437.
[18] F. Scala, G. Gaias, C. Colombo, M. MartínNeira, Design of optimal lowthrust
manoeuvres for remote sensing multisatellite formation flying in low Earth orbit,
Adv. Space Res. 68 (11) (2021) 4359–4378.
[19] T. Timmons, J. Beeley, G. Bailet, C.R. Mclnnes, Rangebased relative navigation
for a swarm of centimeterscale femtospacecraft, J. Guid. Control Dyn. 45 (9)
(2022) 1583–1597.
[20] L. An, G. Yang, Collisionsfree distributed optimal coordination for multiple
EulerLagrangian systems, IEEE Trans. Automat. Control 67 (1) (2021) 460–467.
[21] P. Wang, B. Ding, Distributed RHC for tracking and formation of nonholonomic
multivehicle systems, IEEE Trans. Automat. Control 59 (6) (2014) 1439–1453.
[22] L. Chen, H. Duan, Collisionfree formationcontainment control for a group of
UAVs with unknown disturbances, Aerosp. Sci. Technol. 126 (2022) 107618.
[23] Y. Lyu, J. Hu, B. Chen, C. Zhao, Q. Pan, Multivehicle flocking with collision
avoidance via distributed model predictive control, IEEE Trans. Cybern. 51 (5)
(2019) 2651–2662.
[24] S. Silvestrini, M. Lavagna, Neuralbased predictive control for safe autonomous
spacecraft relative maneuvers, J. Guid. Control Dyn. 44 (12) (2021) 2303–2310.[25] Y. Guo, J. Zhou, Y. Liu, Distributed RISE control for spacecraft formation
reconfiguration with collision avoidance, J. Franklin Inst. B 356 (10) (2019)
5332–5352.
[26] X. Xue, X. Yue, J. Yuan, Connectivity preservation and collision avoidance control
for spacecraft formation flying in the presence of multiple obstacles, Adv. Space
Res. 67 (11) (2021) 3504–3514.
[27] S. Sarno, J. Guo, M. D’Errico, E. Gill, A guidance approach to satellite formation
reconfiguration based on convex optimization and genetic algorithms, Adv. Space
Res. 65 (8) (2020) 2003–2017.
[28] C. Vela, R. Opromolla, G. Fasano, A lowthrust finite state machine based
controller for Nsatellites formations in distributed synthetic aperture radar
applications, Acta Astronaut. 202 (2023) 686–704.
[29] D. Wang, B. Wu, E.K. Poh, Satellite Formation Flying: Relative Dynamics, For
mation Design, Fuel Optimal Maneuvers and Formation Maintenance, Springer,
Singapore, 2017.
[30] F. Di, A. Li, Y. Guo, C. Xie, C. Wang, Eventtriggered sliding mode attitude
coordinated control for spacecraft formation flying system with disturbances,
Acta Astronaut. 188 (2021) 121–129.
[31] P. Gurfil, Relative motion between elliptic orbits: Generalized boundedness
conditions and optimal formation keeping, J. Guid. Control Dyn. 28 (4) (2005)
761–767.
[32] C.L. Darby, W.W. Hager, A.V. Rao, An ℎ𝑝adaptive pseudospectral method for
solving optimal control problems, Optim. Control Appl. Methods 32 (4) (2011)
476–502.
[33] D.A. Benson, G.T. Huntington, T.P. Thorvaldsen, A.V. Rao, Direct trajectory
optimization and costate estimation via an orthogonal collocation method, J.
Guid. Control Dyn. 29 (6) (2006) 1435–1440.
[34] D. Garg, W.W. Hager, A.V. Rao, Pseudospectral methods for solving
infinitehorizon optimal control problems, Automatica 47 (4) (2011) 829–837.
[35] M.A. Patterson, A.V. Rao, GPOPSII: A MATLAB software for solving multiple
phase optimal control problems using hpadaptive Gaussian quadrature colloca
tion methods and sparse nonlinear programming, ACM Trans. Math. Softw. 41
(1) (2014) 1–37.MathNet.Ru
All Russian mathematical portal
A. Veresov, On a possible embedding of Lisp into the C languag e,Keldysh Institute
preprints , 2022, 030
DOI: 10.20948/prepr202230
Use of the allRussian mathematical portal MathNet.Ru imp lies that you have read and agreed to these terms
of use
http://www.mathnet.ru/eng/agreement
Download details:
IP: 79.139.215.77
December 17, 2023, 00:24:20ИПМ им.М.В.Келдыша Р АН  •  Электронная биб лиотека
Препринты ИПМ   •  Препринт № 30 з а 2022 г .
ISSN 20712898 (Print)
ISSN 20712901 (Online)
А.К. Вере сов
О возможной инт еграции
Лиспа в язык Си
Статья дост упна по лиц ензии
Creative Commons Attribution 4.0 International
Рекомендуемая фор ма библиографиче ской ссылки:   Верес ов А.К. О возможной интеграции
Лиспа в язык Си // Препринты ИПМ им. М.В.Ке лдыша. 2022. № 30. 35 с.
https://doi.org/10.20948/prepr202230  
https://library .keldysh.ru/preprint.asp?id=202230О р д е н а Л е н и н а
ИНСТИТУТ ПРИКЛАДНОЙ МАТЕМАТИКИ
имени М.В. КЕЛДЫША
Р о с с и й с к о й а к а д е м и и н а у к
А.К. Вересов
О возможной интеграции Лиспа в язык Си
Москва — 2022А.К. Вересов
О возможной интеграции Лиспа в язык Си
Предложена реализация вычислительной модели языка Лисп, на
писанная на языке Си и предназначенная для применения в проектах,
основным языком которых является Си. Реализация позволяет записы
ватьSвыражения языка Лисп в форме суперпозиции вызовов функций Си,
таким образом синтаксис и семантика Лиспа моделируются средствами
языка Си, при этом не требуется дополнительное препроцессирование
исходного кода.
Ключевые слова: языки программирования, интеграция языков про
граммирования, компиляция, парадигмы программирования, Лисп, язык
программирования Си
A.Veresov
On a possible embedding of Lisp into the C language
An implementation of the Lisp computational model is proposed, written
in the C language and intended for use in projects whose main language is C.
The implementation allows Lisp Sexpressions to be written in the form of a
superposition of C function calls, thus syntax and semantics of Lisp are modeled
with C language capabilities, without the need for additional preprocessing of
the source code.
Keywords: programming languages, embedding of programming
languages, compilation, programming paradigms, Lisp, the C programming
language
Исследование поддержано РНФ (проект №197130004).
© Институт прикладной математики им. М.В.Келдыша, 2022
© А.К. Вересов, 20223
1Введение
1.1Мультипарадигмальное программирование
Различные задачи удобно решать разными методами, и для каждого
языка набор предоставляемых методов отличается, порой существенно.
При таких значительных отличиях языки относят к разным парадигмам,
будь то логическое, объектноориентированное, функциональное или иное
программирование. При этом под парадигмой понимается подход к реше
нию задач определёнными методами.
Разные парадигмы показали себя эффективными в решении разных
задач. Например, ООП успешно используется для построения графических
интерфейсов, логическое программирование — в переборных задачах,
а функциональное — в символьных вычислениях. Во многих проектах
разные подзадачи наиболее очевидно решаются в разных парадигмах.
Так, почти любой проект, использующий базы данных, сочетает в себе
разные парадигмы для основной работы и для обращения к базе данных.
Приведённый пример показывает необходимость сочетания различных
парадигм в рамках одного проекта.
Это же наблюдение подтверждается статистикой использования язы
ков программирования в проектах с открытым исходным кодом. Исследо
вание [7] показало для языков с наибольшей популярностью повышенную
долю многоязыковых проектов, превышающую 20%.
В статье [ 1] приведены и проанализированы следующие подходы к
решению этой проблемы:
•применение нескольких систем программирования;
•создание нового языка;
•расширение существующего языка;
•непосредственная интеграция.
Из них остановимся на методе непосредственной интеграции — он озна
чает моделирование средствами базового языка синтаксиса и семантики
альтернативных языков. В качестве достоинств этого метода авторы вы
деляют неизменность базового языка, лёгкость взаимодействия частей
программы, написанных в разных парадигмах, и относительную простоту
реализации.4
1.2Выбор языков для непосредственной интеграции
ЯзыкСиявляется одним из самых популярных языков программиро
вания [23,25,7], широко используется в системном, научном и приклад
ном программировании, а также в разработке встроенного программного
обеспечения, обладает большим числом поддерживаемых различными
компиляторами целевых платформ. Из этого следует особая привлека
тельность Си в качестве базового языка, подтверждаемая высокой долей
многоязыковых проектов среди проектов на Си — свыше 9% [7].
Отметим, что язык препроцессора является отдельным от самого Си
языком, в частности не учитывающим систему типов последнего. Это и
другие свойства препроцессора обеспечили ему репутацию инструмента,
активное использование которого приводит к повышенному числу оши
бок [16]. В силу этого наблюдения предлагаемый метод не опирается на
препроцессор.
Несмотря на высокую актуальность языка Си в качестве базового
языка для непосредственной интеграции, существует относительно ма
лое число исследований по теме. К их числу можно отнести библиотеку
Cello [10], активно использующую препроцессор для предоставления мо
дели динамического объектноориентированного программирования для
Си. Непопулярность выбора языка Си в качестве базового можно объяс
нить, в частности, ограниченностью его возможностей. В языках с более
гибким синтаксисом известен ряд проектов, например для C+ +: InteLib [ 2],
Castor [17], LC+ + [ 15], FC+ + [ 14]; для Java известен проект поддерж
ки функционального программирования Pizza [ 18]; для Haskell: Haskell
Rules [12], исследование возможности встраивания вычислительной моде
ли языка Пролог [22], а также постфиксных языков [19].
Языки семейства Лиспсильно отличаются от языка Си по своим воз
можностям и предоставляемой парадигме. Они известны своей гибкостью
и динамической природой, тогда как Си известен своей эффективностью и
близостью к машине. Это различие отражается и в области применения —
языкисемействаЛиспособенноактивноиспользуютсяввебразработкедля
написания серверной части приложений, а также для разработок в области
искусственного интеллекта. На этом контрасте задача непосредственной
интеграции Лиспа в Си выглядит особо актуально и требует разработки
нового метода использования возможностей языка Си для обеспечения
поддержки чужеродных ему выразительных конструкций.
Актуальность задачи дополнительно подтверждается высокой попу
лярностью языков этого семейства. Несмотря на их отличия от языков
доминирующей императивной парадигмы, около 2% программистов про5
фессионально используют эти языки, что выше аналогичного показателя
таких языков, как Хаскель, Паскаль, Erlang, Ада и Фортран [7, 23].
Ещё одна причина привлекательности диалектов Лиспа в качестве
языков для непосредственной интеграции заключается в их минимали
стичном в своей основе синтаксисе. В языках этого семейства программы
традиционно записываются как данные, а именно как данные, представля
ющиеихсинтаксическоедрево.Причёмдлязаписипрограммиспользуется
префиксная нотация, а скобки позволяют описывать списки произвольной
длины и использовать функции с переменным числом параметров.
1.3Постановка задачи и достигнутые результаты
Целью работы является реализация вычислительной модели Лиспа в
рамках языка Си методом непосредственной интеграции. Для достижения
поставленной цели предлагается рассмотреть следующие задачи:
1.разработать способ представления данных Лиспа, удовлетворяющий
требованиям наглядности и компактности их записи средствами
языка Си;
2.реализовать библиотеку, исполняющую записанные разработанным
способом программы на диалекте Лиспа;
3.на основе полученного исполнителя создать интерпретатор про
грамм, записанных в классическом синтаксисе Лиспа;
4.используя для первичной раскрутки созданный интерпретатор, на
писать на избранном диалекте Лиспа самоприменимый транслятор,
переводящий программы из традиционной записи Лиспа в запись на
Си с использованием разработанного способа.
В ходе проведённого исследования получены следующие основные резуль
таты:
1.предложен подход к представлению Sвыражений, допускающий их
наглядную запись средствами языка Си в виде суперпозиции вызовов
функций;
2.создана библиотека модулей Си, реализующая вычислительную мо
дель Лиспа на основе Sвыражений, представленных в соответствии
с вышеупомянутым подходом;
3.создан интерактивный интерпретатор диалекта языка Лисп, а также
самоприменимый транслятор, принимающий на вход текст на Лиспе
в традиционном синтаксисе и создающий соответствующий модуль
языка Си.6
2Вычислительная модель Лиспа
В Лиспе и его диалектах используется единое представление про
грамм и данных — в виде Sвыражений .Sвыражение программы пода
ётся функции вычисления , возвращающей в качестве результата также
Sвыражение.
2.1Представление данных
Изначально определённые создателем языка Лисп Джоном Маккар
ти[13],Sвыражения используютсякакбазоваяструктураданныхвЛиспе
и его потомках, а также в проектах, не связанных с Лиспом непосредствен
но, но заимствующих эту концепцию в силу её простоты и гибкости. При
мерами могут служить WebAssembly, KiCad, Emacs, Racket, Scheme [ 11],
Common Lisp [24], Curl [26] и другие.
Sвыражение является атомом (идентификатором, константой неко
торого типа и т.п.) или же точечной парой — упорядоченной парой
Sвыражений . Своё имя атом получил в силу того, что он не подлежит
дальнейшему разбору в рамках считывания Sвыражения , а точечная пара
называется так изза своей классической записи в скобках с разделяю
щей вложенные Sвыражения точкой. Можно записать такое определение
Sвыражений в виде БНФ [5]:
<Sexpression> ::= <atom> | <dotted pair>
<dotted pair> ::= "(" <Sexpression> "." <Sexpression> ")"
Диалекты Лиспа поддерживают достаточно широкое множество типов
атомов. При наличии таковых сущностей в языке к атомам относятся
числовые, логические, символьные и строковые константы. Отдельным
случаем атома является символ — наиболее близкой аналогией которому
из более распространённых языков будет идентификатор — в частности,
символы используются для именования переменных и вычислимых форм.
Вызов формы с некоторым набором параметров приводит к её вычисле
нию, что возвращает результат. Сами объекты форм также считаются ато
мами. Кроме того, некоторые диалекты поддерживают дополнительные
структуры данных, такие как массивы, записи или хештаблицы; в модели
Sвыражений такие объекты тоже относятся к атомам. В диалекте Лиспа
под названием Arc возможно установить произвольный символ в качестве
типа объекта, в частности возможно динамически расширять набор типов
атомов [21].7
голова хвост голова хвост голова хвост
1 2 3 ()
Рис. 1: Представление списка (1 2 3)
Левое подвыражение точечной пары будем называть головным или
головой , а правое — хвостовым илихвостом . Исторически им соответ
ствуют названия CAR и CDR.
Списком в терминологии Sвыражений называется пустой список или
же точечная пара, хвост которой является списком. Можем записать это
определение в виде БНФ:
<list> ::= <empty list> | "(" <Sexpression> "." <list> ")"
Так как пустой список , по определению точечной пары, должен быть
Sвыражением и не является точечной парой, то он является атомом. Этот
атом обычно записывают в виде NILили же().
Распространена сокращённая запись списка, при которой все элемен
ты списка, кроме оконечного пустого списка, указываются через пробел и
оборачиваются в скобки. Например, следующие записи эквивалентны, то
естьпорождаютвпамятиодинитотжеобъект,изображённыйнарисунке1:
(1 2 3)
(1 . (2 . (3 . ())))
Точечный список —Sвыражение , структурно идентичное списку, но
заканчивающееся не пустым списком, а другим атомом [ 2]. Для таких кон
струкций также предусмотрена сокращённая запись, обобщающая запись
точечной пары, при которой последовательность Sвыражений в скобках
имеет перед последним своим элементом точку. При этом образуемое
Sвыражение можно описать как список L, построенный из всех элементов,
кроме стоящего за точкой, а этот последний элемент заменяет пустой
список в конце списка L. Приведём пример эквивалентных записей, анало
гичный примеру сокращённой записи списков, но где вместо оконечного
пустого списка стоит атом 4:
(1 2 3 . 4)
(1 . (2 . (3 . 4)))8
Отметим, что детали синтаксиса записи Sвыражений в различных диалек
тах Лиспа могут существенно отличаться — вплоть до, например, измене
ния скобок с круглых на фигурные [26].
2.2Исполнение программ
Программа на Лиспе представляет собой последовательность вы
числяемых (evaluated) Sвыражений , а выполнение программы состоит в
вычислении этих выражений.
Пусть вычисляется некоторое Sвыражение , тогда по определению
оно может быть точечной парой или атомом, при этом атом может быть
одного из множества типов.
Особо выделим возможность атома быть символом , при вычислении
которого возвращается ассоциированное с ним значение. Языки семейства
Лисп обычно допускают большую гибкость в записи символов, позволяя
использовать в них такие спецзнаки, как +++++++++++++++++,,?????????????????и др.
К записываемым явно константам обычно относят числа ( 1,9.999.999.999.999.999.999.999.999.999.999.999.999.999.999.999.999.99,73,
…),текстовыесимволы( #\a#\a#\a#\a#\a#\a#\a#\a#\a#\a#\a#\a#\a#\a#\a#\a#\a,#\@#\@#\@#\@#\@#\@#\@#\@#\@#\@#\@#\@#\@#\@#\@#\@#\@,…)истроки( "sunrise""sunrise""sunrise""sunrise""sunrise""sunrise""sunrise""sunrise""sunrise""sunrise""sunrise""sunrise""sunrise""sunrise""sunrise""sunrise""sunrise" ,"Dijkstra""Dijkstra""Dijkstra""Dijkstra""Dijkstra""Dijkstra""Dijkstra""Dijkstra""Dijkstra""Dijkstra""Dijkstra""Dijkstra""Dijkstra""Dijkstra""Dijkstra""Dijkstra""Dijkstra" ,…).
Атомы константных типов вычисляются сами в себя. Отметим, что символ,
ассоциированным значением которого является он сам, также вычисляется
сам в себя и часто тоже называется константой.
Некоторые атомарные значения не могут быть записаны явно, а явля
ются результатом получения значения предопределённого символа или ре
зультатом вычисления формы. Вычисление этих атомов варьируется в раз
личных диалектах Лиспа и их реализациях. Так, в описании языка Scheme
вычисление функционального атома остаётся неопределённым [ 11], а реа
лизации разнятся в своём поведении — MIT Scheme вычисляет такой атом
в самого себя, а Chicken Scheme выдаёт ошибку.
В случае точечной пары она в основном рассматривается как список,
приэтомпервыйэлементобозначаетвызываемуюформу,апоследующие—
её аргументы. Для записи вызовов в Лиспе используется префиксная нота
ция, при которой 2 + 2становится:
(+ 2 2)
Наличие скобок позволяет использовать в Лиспе вариадические формы.
Так, функция сложения обычно определена не для двух, а для произволь
ного числа аргументов, и сумму чисел от трёх до семи можно записать
так:
(+ 3 4 5 6 7)9
Формы делятся на функции, макросы и спецформы. При вызове функ
циивычисляются все аргументы, после чего исполняется сама функция и
результат этого исполнения возвращается в качестве результата вызова.
При вызове макроса аргументы макроса обрабатываются им не будучи
предвычисленными, а результат работы макроса подвергается вычислению
в контексте вызова. К спецформам относят все остальные случаи.
Также формы классифицируются на встроенные в систему и поль
зовательские , то есть определяемые в ходе исполнения. Среди встроен
ных форм, как следствие, должны присутствовать такие, что позволяют
определять пользовательские формы. При этом обычно пользовательская
форма определяется двумя частями — своим заголовком , то есть переч
нем формальных параметров, и телом, то есть Sвыражением . В случае
определения пользовательской функции фактические аргументы будут
вычислены в контексте вызова, после чего подставлены вместо соответ
ствующих формальных в тело функции, которое затем будет исполнено в
контексте определения функции. В случае макросов аналогично подстав
ляются в тело фактические параметры вместо формальных, но в том виде,
в каком они присутствовали в вызове, после чего в контексте определения
макроса вычисляется полученное подстановками тело, а результат этого
вычисления вычисляется ещё раз, но уже в контексте вызова.
Отметим, что ни при перечислении параметров форм, ни при уста
новке значений символам не указываются типы. Это происходит оттого,
что Лисп — язык с динамической типизацией, и тип является свойством не
имени связанного со значением, но самого этого значения. Как следствие,
в языках семейства Лисп обычно доступны функции, проверяющие тип
переданного им значения.
3Использование средств языка Си
3.1Поддержка динамической типизации
Лисп и другие языки, которым необходимо динамически определять
информацию о типах, будь то сам тип — как, например, в Smalltalk, или
же адреса функций, реализующих методы — как в C+ +при использова
нии ключевого слова virtual, вынуждены так или иначе хранить такую
информацию во время исполнения своих программ.
Несмотря на отсутствие поддержки со стороны языка Си, в нём воз
можна реализация этого механизма несколькими способами. Сформули
руем идею требуемого объекта: это должна быть сущность, хранящая ин10
дополнительная информация данные объекта
жирный указатель
Рис. 2: Расширение объекта техникой жирного указателя
формацию о своём типе, а также интерпретируемые в соответствии с этим
типом данные объекта. Наивной реализацией типа подобного объекта
будет:
1struct object {
2enum objtype { objtype_1, /* ... */ objtype_n } type;
3union objdata {
4 objdata_1 data_1;
5 /* ... */
6 objdata_n data_n;
7} data;
8};
Такая реализация не позволяет непосредственный доступ к данным объек
тов, что затрудняет взаимодействие с объектами при помощи стандартных
средств языка Си. Кроме того, при добавлении нового типа пользователь
будет вынужден изменять код системы, реализующей динамическую типи
зацию таким способом, все типы при этом должны быть известны уже на
момент компиляции.
Решим проблему добавления новых типов через void *void *void *void *void *void *void *void *void *void *void *void *void *void *void *void *void *. Указатели
этого типа могут приводиться к любому другому, за исключением указате
лей на функцию [ 4], в силу чего позволяют пользователю вводить новые
типы без необходимости изменять код системы динамической типизации.
Эта же техника успешно применяется при построении систем с функци
ями обратного вызова, где пользовательские данные обычно передаются
именно через void *void *void *void *void *void *void *void *void *void *void *void *void *void *void *void *void *. Из недостатков такого подхода можно назвать необ
ходимость разыменования указателя даже в случае данных простого типа,
какint.
Теперь решим проблему опосредованного доступа к данным объекта.
Предыдущее решение подразумевает, что все данные объектов доступны
по указателю. Одна из техник неявного расширения указателя дополни
тельной информацией известна в англоязычной литературе под названием
fat pointers [8], что дословно можно перевести как жирные указатели .
При использовании жирных указателей подразумевается, что допол
нительнаяинформацияобобъектенаходитсяпередосновнымиданными,а11
самжирныйуказательсодержитадресэтихосновныхданных,какнарисун
ке2.РассмотримдляпримерарасширениестрокязыкаСидополнительной
информацией об их длине по технике жирных указателей. Запишем обоб
щённую реализацию жирных указателей:
1extra *obj_extra(void *obj)
2{
3return (extra *)obj  1;
4}
5void *obj_new(extra *info, int size)
6{
7extra *res = malloc(sizeof(extra) + size);
8memcpy(res, info, sizeof(extra));
9return res + 1;
10}
11void obj_free(void *obj)
12{
13free((extra *)obj  1);
14}
Здесь типом extraобозначен тип дополнительной информации, размеща
емой перед основными данными. Поскольку в рассматриваемом примере
требуется расширить строки информацией об их длине, будем считать, что
extraзадано синонимом int, используя typedef . Теперь опишем создание
требуемой строки:
1char *fatstr_new(const char *cstr)
2{
3int len = strlen(cstr);
4char *res = obj_new(&len, len + 1);
5memcpy(res, cstr, len + 1);
6return res;
7}
Приведём также пример использования полученной системы:
1int main()
2{
3char *fatstr = fatstr_new("Hello, World!");
4puts(fatstr);
5printf("%ld = %d\n", strlen(fatstr), *obj_extra(fatstr));12
6printf("second character is '%c'\n", fatstr[1]);
7obj_free(fatstr);
8return 0;
9}
Как видно на этом примере, использование жирных указателей позволя
ет расширить доступный по указателю объект произвольной информа
цией, сохраняя частичную совместимость с оригинальными функциями
над объектами такого типа. Существенное ограничение на такие функ
ции — требование инвариантности дополнительной информации объекта
относительно их применения. Так, при расширении строк информаци
ей об их длине оригинальные функции, меняющие длину поданной им
строки, нарушат согласование дополнительной информации и данных в
объекте, вследствие чего возможны ошибки. Как правило, несложно моди
фицировать такие оригинальные функции для работы с расширенными
объектами или же написать функциюобёртку, восстанавливающую после
использования оборачиваемой функции согласованность дополнительной
информации и данных изменяемого объекта.
Для реализации динамической типизации с помощью приведённой
техники достаточно задать extraсинонимичным типу, описывающему всю
требуемую от типа информацию. В случае Sвыражений можно оставить
intи завести перечисление ( enum) всех требуемых типов: точечной пары,
данные для которой будут парой жирных указателей на головное и хвосто
вое подвыражения; пустого списка, данные которого не рассматриваются
программой; а также всех остальных требуемых типов атомов — будь то
целые числа или символы, данные при этом должны интерпретироваться
соответственно. Однако без поддержки сборки мусора исполнение про
грамм на Лиспе приведёт к утечке памяти, а потому станет невозможно
использовать разработанную систему на практике. Таковая поддержка
потребует расширить хранимую дополнительную информацию об объекте.
В разработанной системе для сборки мусора используется алгоритм по
меток (markandsweep ), описанный в соответствующем разделе. При этом
итоговый тип дополнительной информации имеет вид:
1typedef struct extra {
2int mark;
3int type;
4} extra;
При известном extraможно конкретизировать и упростить obj_new :13
1void *obj_new(int type, int size)
2{
3extra *res = malloc(sizeof(extra) + size);
4res>mark = 0;
5res>type = type;
6return res + 1;
7}
3.2Поддержка функциональных объектов
При описании исполнения программ на Лиспе мы выделили встро
енные формы, которые должны быть также доступны как Sвыражения .
Чтобы упростить расширение системы новыми встроенными формами со
стороныпользователя,можнопредставитьвстроенныеформыкакфункции
Си. В наиболее общем виде встроенная форма принимает и возвращает
Sвыражение , где принимаемое Sвыражение соответствует хвосту вычис
ляемой точечной пары, у которой головой оказалась встроенная форма.
Тогда можно так описать тип указателя на функцию, реализующую встро
енную форму:
typedef void *(*embedded_form)(void *tail);
Скрытые при обычном использовании системы детали её реализации опре
делимвотдельномзаголовочномфайле—представляетсяцелесообразным
использовать открывающиеся при этом возможности в рамках описания
встроенных форм.
Однако указатель функционального типа не может быть приведён
к типуvoid *void *void *void *void *void *void *void *void *void *void *void *void *void *void *void *void *, так как не является указателем на объект [ 4]. Поэтому
непосредственное использование определённых таким образом функций в
качестве Sвыражений невозможно.
Решением этой проблемы может служить организация жирного ука
зателя на указатель на функцию:
1embedded_form *new_embedded_form(embedded_form f)
2{
3embedded_form *res = obj_new(type_embedded_form, sizeof(f));
4*res = f;
5return res;
6}
Пусть задана функция fсо следующим заголовком:14
void *f(void *tail);
—тогдасозданиесоответствующего Sвыражения иегоявныйвызовможно
записать так:
1void *sexpr = new_embedded_form(f);
2(*(embedded_form *)sexpr)(tail);
3.3Поддержка сокращённой записи списков
Язык Си позволяет передавать в функцию произвольное число пара
метров — такие функции называются вариадическими . В их заголовках
после некоторого количества обычных параметров ставится многоточие:
void variadic_function(int arg_1, /* ... */ int arg_n, ...);
Возможнотакжеопределитьфункцию,безразличнуюксвоимаргументам—
в этом случае в заголовке функции список аргументов оставляют пустым.
Однако, без знаний о реализации вызова функции в конкретной системе
получить доступ к аргументам в таком случае невозможно, поэтому в
дальнейшем тексте рассматривать их не будем.
Например,вариадическойявляетсястандартнаяфункция printf.Пер
вый аргумент этой функции указан в её заголовке явно, а остальные пе
редаются через многоточие. Чтобы получить к ним доступ, используется
функционал стандартной библиотеки языка Си, описанный в заголовоч
ном файле stdarg.hstdarg.hstdarg.hstdarg.hstdarg.hstdarg.hstdarg.hstdarg.hstdarg.hstdarg.hstdarg.hstdarg.hstdarg.hstdarg.hstdarg.hstdarg.hstdarg.h . Стандартная библиотека не предоставляет средств
для определения типов и количества фактически переданных аргументов,
но поддерживает считывание очередного аргумента определённого типа
через макрос va_arg. Функция printfиспользует этот подход, разбирая
форматную строку, переданную первым аргументом. При встрече сочета
ния символов, обозначающих команду печати данных указанного типа,
происходит считывание очередного аргумента и его печать в соответствии
с типом. Таким образом информация о типах и количестве аргументов
извлекается из первого аргумента, то есть форматной строки. Приведём
пример вызова printf:
printf("Coordinates: (%d, %d)\n", x, y);
Используем возможность вариадических функций принимать произволь
ное число аргументов для построения функции, строящей списки в соот
ветствии с их сокращённой записью в традиционном синтаксисе Лиспа.15
При считывании очередного аргумента вариадической функции требу
ется указать его тип. В рамках разработанной системы представления
Sвыражений все они обладают одним типом — void *void *void *void *void *void *void *void *void *void *void *void *void *void *void *void *void *. Это значит, что
требуется передать только информацию о числе аргументов, но не об их
типах.
По аналогии с определением функции printfможно передавать чис
ло аргументов в качестве первого аргумента функции построения списков,
которую обозначим за L:
L(n, obj_1, obj_2, /* ... */ obj_n);
При использовании такого подхода необходимо производить дополнитель
ные изменения кода при добавлении элементов в список. Эти изменения
требуютнайтиначалосписка,чтоможетбытьзатруднительноприбольшом
количестве элементов в нём, а кроме того требуют помнить количество
добавленных элементов и складывать его с уже имеющимся размером. Ис
пользование предложенной записи списков в сравнении с использованием
классической существенно повысило бы трудоёмкость написания кода и
вероятность допустить ошибку, отчего можно считать, что необходимость
такого рода изменений неприемлема.
Решением может служить введение маркера конца, помимо скобки,
закрывающей список аргументов функции. В силу описанных ограничений
языка Си и его стандартной библиотеки, маркер конца сам должен быть
аргументом функции, а именно — последним из них.
Поскольку было решено обрабатывать Sвыражения через жирные
указатели, разумно использовать в качестве маркера конца списка нулевой
указатель, ведь ни один объект в предлагаемой системе не будет иметь
такое значение. При этом отметим, что NIL, представляемый атомом осо
бого типа « пустой список », сам является объектом, и потому его указатель
не является нулевым.
Пусть функция, создающая список, именуется L, тогда использование
разработанного решения будет выглядеть так:
L(obj_1, obj_2, /* ... */ obj_n, 0);
Что соответствует следующему Sвыражению , записанному на языке Лисп:
(obj_1
obj_2
; ...
obj_n)16
Теперь продумаем поддержку сокращённой записи точечных списков .
Пусть идентификатор oиспользуется как обозначение точки, тогда для
построения точечного списка можно использовать такой вызов:
L(obj_1, obj_2, /* ... */ o, obj_n, 0);
— ноль в этом случае избыточен, так как точка в записи списка может
появиться только один раз, перед последним элементом. Однако для еди
нообразия записи предлагается оставлять ноль, играющий в таком случае
вместе с закрывающей скобкой роль закрывающей скобки в рамках класси
ческого синтаксиса Лиспа.
Чтобы реализовать такое поведение, достаточно гарантировать уни
кальность адреса, связанного с o. Это свойство можно будет использовать
при реализации функции L: встретив среди аргументов этот адрес, функ
ция извлечёт очередной аргумент, вставит его в хвост последней точечной
пары конструируемого списка и завершит работу.
Уникальным является, например, адрес глобальной переменной —
достаточно присвоить его в указатель o. Однако, так как сама переменная
в описываемом случае не имеет никакого применения, следует завести её
в качестве статической и оставить доступной только в рамках библиотеки,
предоставляющей Лиспвычислитель.
4Лиспвычислитель
В этой главе описан реализуемый Лиспвычислитель, который мы
будем называть CSX — от C Sexpressions .
4.1Система типов
По определению Sвыражений требуется наличие типа точечной па
ры, обозначенного в CSX символом pair. Данными этого типа, доступ
ными по жирному указателю, является структура из двух указателей на
Sвыражения ,headиtail. Так, если эти идентификаторы связаны с соот
ветствующими головным и хвостовым подвыражениями точечной пары, её
создание можно записать как L(head, o, tail, 0)L(head, o, tail, 0)L(head, o, tail, 0)L(head, o, tail, 0)L(head, o, tail, 0)L(head, o, tail, 0)L(head, o, tail, 0)L(head, o, tail, 0)L(head, o, tail, 0)L(head, o, tail, 0)L(head, o, tail, 0)L(head, o, tail, 0)L(head, o, tail, 0)L(head, o, tail, 0)L(head, o, tail, 0)L(head, o, tail, 0)L(head, o, tail, 0) .
Отдельным типом, состоящим ровно из одного значения и потому
не имеющим данных, было решено сделать пустой список, доступный по
символу nil. Получить его в рамках программы на Си можно, например,
вызовом L(0).17
указатель на символ +
указатель на символ symbol
……'+'0
…'s''y''m''b''o''l'0доступные в системе объекты
Рис. 3: Организация таблицы символов
Для поддержки вычислений имеется тип int, обозначающий целые
числа. Его данные имеют тип intязыка Си, а создание Sвыражения этого
типа происходит вызовом функции I, например I(37).
Имеетсятип str,данныекоторогоестьоканчивающаясянулёмстрока,
а именно динамический массив языка Си, состоящий из значений типа
char. При создании строки её содержимое копируется в выделенную на
куче область памяти. Примером вызова конструктора этого типа может
служить T("wind") .
Имеется тип symbol, представляющий символы Лиспа. Его данными,
так же как и у str, является строка, однако принципиально отличается
её способ хранения и создания. Система организует таблицу символов,
представляющую собой массив указателей на все доступные на данный
момент в системе символы, как на рисунке 3. При создании очередного
символа, например вызовом S("a"), происходит поиск по таблице, при
этом переданная конструктору строка сравнивается со строкой очередно
го символа. Если требуемый символ был найден в таблице, то создание
символа не происходит, а возвращается указатель из таблицы на уже су
ществующий. Если же символ с требуемым именем не оказался доступен в
системе, то происходит создание нового символа и занесение указателя на
него в таблицу. Такое решение позволяет производить сравнение символов
по их указателям, то есть независимо от длины соответствующих строк.
Это свойство значительно ускоряет поиск значений символов.
Имеется тип embedded_form , которым обладают все встроенные фор
мы CSX и данными которого является указатель на функцию языка Си
принимающую и возвращающую Sвыражение.
Последние два типа отражают два варианта определения пользова
тельской формы. Это типы lambdaиmacro, соответствующие функции и
макросу. Данные этих типов устроены одинаково: это тройки из списка
формальных параметров, Sвыражения тела и контекста определения. Кон
текст при этом также является Sвыражением, а именно списком фреймов.18
Фрейм в свою очередь тоже список, но состоящий из точечных пар, где
голова — это некоторый символ, а хвост — его определение, то есть S
выражение, на которой символ будет заменён при вычислении. Можем
сформулировать тип данных обоих этих типов так:
1struct form_data {
2void *params;
3void *body;
4void *context;
5};
Явные конструкторы значений этих типов, доступные из Си, не преду
смотрены — для создания таковых значений следует воспользоваться
встроенными формами, доступными по символам lambdaиmacro.
4.2Модель исполнения
Запишем вычисление и вывод суммы 37 и 73 с использованием CSX:
printf("%d\n", *(int *)E(L(S("+"), I(37), I(73), 0)));
— здесьEявляется функцией, принимающей Sвыражение , вычисляющей
его и возвращающей полученный результат.
Опишем, как происходит вычисление объектов каждого из типов.
Вычисление объектов типа str,int,base,lambda,macroиnilвоз
вращает их самих без изменений.
Для объектов типа symbolвозвращается связанное с символом в теку
щем контексте значение. Контекст при этом является списком из фреймов.
Фрейм представляется списком точечных пар, где голова — это символ, а
хвост — соответствующее значение. Такая организация позволяет легко ор
ганизоватьлексическоесвязывание,темсамымнедопускаявозникновения
фунаргпроблемы [3].
Объекты типа consвоспринимаются как вызовы форм . При этом го
ловное подвыражение пары всегда вычисляется, и в зависимости от типа
полученного выражения дальнейшее вычисление организуется поразному.
Если получен объект типа base, то хвостовое подвыражение вызова
передаётся в качестве аргумента функции языка Си, доступной по указате
лю в данных объекта встроенной формы. Результат вызова этой функции
является результатом вызова встроенной формы.
Если вызывается lambda, то вычисляется каждый элемент хвостового
подвыражения, воспринимаемого как список. Элементы полученного спис19
ка сопоставляются с соответствующими символами из списка формальных
параметров. Список формальных параметров может быть точечным, тогда
все оставшиеся фактические аргументы, кроме сопоставленных, форми
руют список, который будет связан с символом, являющимся последним
элементом точечного списка формальных параметров. Такая реализация
позволяет описывать вариадические пользовательские функции. После
сопоставления аргументов сохранённый контекст функции расширяется
фреймом из полученных сопоставлений и происходит исполнение тела
функции в полученном контексте. Полученный результат возвращается
непосредственно.
Если вызывается macro, то происходит процесс, аналогичный вызову
lambda, с той разницей, что список фактических параметров сопоставля
ется с формальными без вычисления, но результат вычисления тела в
расширенном аргументами контексте вычисляется повторно, уже в контек
сте вызова.
4.3Сборка мусора
Ресурсы компьютера конечны, в частности ограничена оперативная
память,доступнаяпрограмме.ОднакоклассическийЛиспиразработанный
вычислитель не предоставляют программисту способов явного контроля
потребления памяти — во многом это ограничение обусловлено чрезмер
ной трудностью ручного управления памятью в рамках вычислительной
модели Лиспа. Разрешить это противоречие призван сборщик мусора , из
начально придуманный создателем Лиспа Джоном Маккарти [ 13]. Это
неявная часть программы, отвечающая за освобождение памяти, занятой
недоступными из остальной программы объектами.
Существуют разные подходы к организации сборки мусора. Домини
рующими являются алгоритмы, основанные на подсчёте ссылок ( reference
counting) и алгоритме пометок ( markandsweep ).
Приподсчёте ссылок каждый объект снабжается информацией об
имеющихся на него ссылках из других объектов. Уменьшение счётчика
ссылок до нуля означает отсутствие к нему доступа из системы, в си
лу чего занимаемая им память может быть освобождена. При этом для
всех объектов, на которые ссылался освобождаемый, следует уменьшить
счётчик ссылок и проверить, не стал ли он равен нулю. При создании
нового объекта, до тех пор пока он непосредственно достижим, его счётчик
ссылок устанавливается в единицу. При нарушении непосредственной
достижимости объекта счётчик декрементируется. Если созданный объект20
содержит ссылки на уже присутствовавшие в системе объекты, их счётчики
инкрементируются.
Важными достоинствами подсчёта ссылок являются простота реали
зации и незамедлительное освобождение памяти недоступных объектов,
что позволяет обеспечить предсказуемую отзывчивость программы. Суще
ственным недостатком является возможность утечки памяти ввиду неспо
собностинаивнойреализациираспознаватьциклыссылок,тоестьвслучае,
когда объект прямо или косвенно ссылается сам на себя. Известны вари
анты алгоритма [ 6,20], при которых происходит распознавание циклов,
однако они значительно усложняют реализацию и обладают собственными
недостатками.
Алгоритм пометок является изначально представленным в рамках
Лиспа алгоритмом сборки мусора. Алгоритм периодически вызывается си
стемой для очистки от накопленных недостижимых объектов. Все объекты
системы снабжаются битом пометки об их достижимости — при запуске
алгоритма все объекты помечаются как недостижимые. Затем для каждо
го непосредственно достижимого объекта вызывается функция пометки,
устанавливающая бит в состояние достижимости. Для каждой ссылки,
хранящейся в помечаемой объекте, рекурсивно вызывается функция по
метки. Когда все объекты помечены, все объекты системы проверяются на
состояние бита пометки и освобождаются, если остались недостижимыми.
В отличие от алгоритма подсчёта ссылок, алгоритм пометок способен
распознаватьциклы.Однакоалгоритмпометоктребуетостановкисистемы
на время своей работы, которое порой может быть существенным. Это
приводит к проблемам с отзывчивостью у программ, использующих этот
сборщик мусора. Эдсгер Дейкстра, Лесли Лэмпорт и другие в работе [ 9]
описывают алгоритм трёхцветных пометок, лишённый этого недостатка и
работающий параллельно с управляемой им программой.
В рамках поставленной задачи наиболее целесообразным представля
ется использование наивного алгоритма пометок, который и был реализо
ван в CSX. Непосредственно достижимыми объектами системы считаются
объекты стека временных объектов вызовов форм, а также текущий кон
текст.Приэтомиспользуетсясвойствоопределенияконтекста,покоторому
он является Sвыражением , что позволяет не обходить входящие в него
объекты явно, но положиться на рекурсию функции пометки. В случае
CSX она носит имя deepmark , а рекурсивный вызов происходит только для
типовpair,lambdaиmacro:
1static void deepmark(void *p)
2{
3if (mark(p)) return;21
4setmark(p);
5if (type(p) == type_pair) {
6 deepmark(head(p));
7 deepmark(tail(p));
8} else if (type(p) == type_lambda ||
9 type(p) == type_macro) {
10 form_data *fd = p;
11 deepmark(fd>params);
12 deepmark(fd>body);
13 deepmark(fd>context);
14}
15}
Как было упомянуто, полный проход алгоритма пометок может зани
матьсущественноевремя,апотомуегоисполнениеприкаждомизменении
системы вызвало бы заметные задержки в работе программы. Решением
может служить введение некоторого ограничения — в случае CSX было
принято решение запускать алгоритм сборки мусора только тогда, когда
объём занимаемой объектами системы оперативной памяти превышает
объём объектов, оставшихся после прошлого прохода алгоритма, более
чем в два раза. Единственно возможным местом запуска сборщика мусора
является начало функции вычисления Sвыражения.
4.4Встроенные формы
Укажемвстроенныеформыпосимволам,черезкоторыеонидоступны.
cons: функция, возвращающая точечную пару из двух своих аргумен
тов.
car:функция,ожидающаяединственнымсвоимаргументомточечную
пару и возвращающая её головное подвыражение.
cdr:функция,ожидающаяединственнымсвоимаргументомточечную
пару и возвращающая её хвостовое подвыражение.
setcar!setcar!setcar!setcar!setcar!setcar!setcar!setcar!setcar!setcar!setcar!setcar!setcar!setcar!setcar!setcar!setcar! :функция,принимающаяпервымаргументомточечнуюпару
иизменяющаяеё,устанавливаявкачествеголовногоподвыражениявторой
аргумент.
setcdr!setcdr!setcdr!setcdr!setcdr!setcdr!setcdr!setcdr!setcdr!setcdr!setcdr!setcdr!setcdr!setcdr!setcdr!setcdr!setcdr! : функция, принимающая первым аргументом точечную па
ру и изменяющая её, устанавливая в качестве хвостового подвыражения
второй аргумент.
str: функция, принимающая символ или последовательность чисел.
Если аргументом является символ, то возвращает соответствующую ему22
строку, если передана последовательность чисел, то каждое число обреза
ется до байта и из них формируется новая строка.
symbol: функция, принимающая единственным своим аргументом
строку и возвращающая соответствующий её символ.
len: функция, принимающая единственным аргументом строку или
список и возвращающая их длину.
define: спецформа, устанавливающая символу значение. При этом
первый аргумент (символ) не вычисляется, а второй вычисляется в контек
сте вызова и используется в качестве устанавливаемого значения.
defined?defined?defined?defined?defined?defined?defined?defined?defined?defined?defined?defined?defined?defined?defined?defined?defined? :функция,принимающаяединственнымаргументомсимвол.
Если этот символ определён, то возвращается единица, иначе — пустой
список. Эта функция полезна при расширении системы, если заранее неиз
вестен набор встроенных форм.
quote: спецформа, возвращающая свой единственный аргумент невы
численным.
eqv?eqv?eqv?eqv?eqv?eqv?eqv?eqv?eqv?eqv?eqv?eqv?eqv?eqv?eqv?eqv?eqv?: функция, принимающая произвольное число аргументов. Если
аргументы разного типа, возвращается пустой список. Если в качестве ар
гументов поданы числа и среди них есть хотя бы два неравных, то вернётся
пустой список. Для других типов аргументов пустой список вернётся при
наличии объектов с неравными представляющими их жирными указателя
ми. Во всех остальных случаях возвращается единица.
type:функция,возвращающаясимвол,соответствующийтипуеёедин
ственного аргумента.
begin: функция, возвращающая свой последний аргумент.
if: спецформа, принимающая произвольное число аргументов. Если
передан только один аргумент, то он вычисляется в контексте вызова,
и полученный результат возвращается. Иначе первый аргумент всё рав
но вычисляется в контексте вызова, и если получен пустой список, то
второй аргумент пропускается, а все оставшиеся подаются в спецформу
рекурсивно. Если же первый аргумент вычислился не в пустой список,
то возвращается результат вычисления второго аргумента в контексте
вызова — остальные аргументы при этом игнорируются.
eval: спецформа, вычисляющая свой аргумент дважды.
exit: функция без аргументов, завершающая исполнение программы.
writecharwritecharwritecharwritecharwritecharwritecharwritecharwritecharwritecharwritecharwritecharwritecharwritecharwritecharwritecharwritecharwritechar : функция, принимающая единственным аргументом чис
ло и выводящая текстовый символ, код которого равен переданному числу.
readcharreadcharreadcharreadcharreadcharreadcharreadcharreadcharreadcharreadcharreadcharreadcharreadcharreadcharreadcharreadcharreadchar : функция без аргументов, возвращающая в виде числа код
считанного из ввода текстового символа.
context : функция без аргументов, возвращающая текущий контекст.23
newcontextnewcontextnewcontextnewcontextnewcontextnewcontextnewcontextnewcontextnewcontextnewcontextnewcontextnewcontextnewcontextnewcontextnewcontextnewcontextnewcontext : функция без аргументов, создающая и возвращающая
новыйконтекст,вкоторомприсутствуютвсевстроенныевCSXопределения
символов.
+++++++++++++++++,*****************: функции от набора чисел, возвращают их сумму и произведение
соответственно.
<<<<<<<<<<<<<<<<<,>>>>>>>>>>>>>>>>>: функции от последовательности чисел, возвращают единицу,
если переданная последовательность упорядочена соответственно по воз
растанию и по убыванию. В противном случае возвращают пустой список.
neg: функция отрицания числа.
div: функция от двух чисел, возвращает целую часть от деления
первого аргумента на второй.
mod: функция от двух чисел, возвращает остаток от деления первого
аргумента на второй.
5Трансляция диалекта Лиспа в Си
5.1Базовый транслятор
Рассмотрим сначала задачу трансляции отдельного Sвыражения для
последующего использования полученного кода в программе на Си. При
этом предполагается, что заголовочные файлы библиотеки CSX уже под
ключены.
Если транслятор встретил открывающую скобку, то он выводит L(L(L(L(L(L(L(L(L(L(L(L(L(L(L(L(L(.
Если встречена закрывающая скобка, то транслятор выводит 0)0)0)0)0)0)0)0)0)0)0)0)0)0)0)0)0), добавляя
ещё запятую, если скобка вложенная. Если встречена отдельно стоящая
точка, то транслятор выводит o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,.
Есливстреченыкавычки,тотрансляторвыводит T("T("T("T("T("T("T("T("T("T("T("T("T("T("T("T("T(".Затемповторяет
на вывод ввод до закрывающих кавычек с учётом возможного экранирова
ния. При закрытии выводит "),"),"),"),"),"),"),"),"),"),"),"),"),"),"),"),"),.
Если встречен знак минус или цифра, то транслятор выводит I(I(I(I(I(I(I(I(I(I(I(I(I(I(I(I(I(и
повторяет встреченный символ и все последующие цифры до разделителя.
При закрытии выводит ),),),),),),),),),),),),),),),),),.
Если был встречен иной символ, то транслятор выводит S("S("S("S("S("S("S("S("S("S("S("S("S("S("S("S("S("и встре
ченный символ. Затем повторяет на вывод ввод, по необходимости экрани
руя символы до разделителя. При завершении выводится "),"),"),"),"),"),"),"),"),"),"),"),"),"),"),"),"),.
Можно модифицировать транслятор для поддержки более человеко
читаемого вывода, а именно вывода с корректными отступами и переноса
ми строк при объявлении каждого нового элемента списка. Такой вывод
используется в итоговом трансляторе.24
Описанный транслятор иллюстрирует успех в представлении S
выражений в языке Си, ведь их перевод в такое представление прост и
нагляден. Рассмотрим пример перевода следующего Sвыражения:
((lambda (p) (+ (car p) (cdr p))) (37 . 73))
— которое после обработки транслятором станет следующим кодом на Си:
1L(L(S("lambda"),
2L(S("p"),
3 0),
4L(S("+"),
5 L(S("car"),
6 S("p"),
7 0),
8 L(S("cdr"),
9 S("p"),
10 0),
11 0),
120),
13L(I(37),
14o,
15I(73),
160),
170)
5.2Трансляция символов
Теперь рассмотрим отдельно проблему трансляциисимволов. Решить
эту задачу необходимо для того, чтобы построить компилятор с возмож
ностью явного использования из Си сущностей, определённых в рамках
Лиспа. Таким образом можно будет избежать использования конструктора
символов Sпри каждом использовании символа в коде на Си.
Так как набор разрешённых к использованию знаков не совпадает
у идентификаторов Си и символов Лиспа, требуется предложить схему
перевода. В работе [ 2] была предложена модель, использующая чувстви
тельность к регистру Си+ +для обозначения букв латинского алфавита
верхним регистром, а для обозначения спецсимволов используется ниж
ний регистр. При этом делается предположение о нечувствительности к25
регистру интегрируемого диалекта Лиспа. Опишем модель трансляции
символов, не опирающуюся на это предположение.
Для наглядности представления каждую букву латинского алфавита
будем переводить в неё саму. Тогда, согласно определению идентификато
ра Си [4], остаётся возможность использовать цифры и нижнее подчёрки
вание. Цифры будем также переводить в самих себя, ведь идентификаторы
в Лиспе, как и в Си, не могут начинаться с цифры, но могут иметь их в
дальнейшем.Аоставшеесянижнееподчёркиваниебудемиспользоватьвка
чествесимволаэкранирования—междудвумянижнимиподчёркиваниями
будет находиться имя используемого спецсимвола. В силу популярности
использования дефиса в качестве разделителя частей символа в Лиспе,
дефис будем по умолчанию обозначать двойным нижним подчёркиванием.
С учётом выработанных правил покажем пример трансляции следую
щего Sвыражения:
(setcar! x (+ 37 GREEN))
— что будет скомпилировано в:
1L(set__car_excl_,
2x,
3L(_plus_,
4I(37),
5GREEN,
60),
70)
Несложно заметить, что при использовании такой системы трудно будет
избежать конфликта идентификаторов в коде на Си, в том числе конфлик
тов с ключевыми словами Си, такими как if. Решить проблему можно
снабдив образуемые идентификаторы префиксом. Так как выбор префикса
и именований спецсимволов в общем произвольный, следует предоставить
возможность настройки из кода на Лиспе поведения транслятора.
Введём символ %%%, который определим в базовом контексте фор
мой, игнорирующей свой вход. При этом транслятор, встретив первым
Sвыражением в файле вызов этого символа, считает каждый его аргумент
как свою настройку.
Так как в начале файла используется базовый контекст, то исполь
зование в первом в файле Sвыражении в качестве самой внешней формы
той, что доступна по %%%, не может иметь другого эффекта, кроме как её
игнорирования. Это свойство позволяет транслятору не транслировать26
эту конструкцию. При дальнейшем изменении значения этого символа
разницы поведения интерпретатора и компилятора не возникнет, так как
транслятор поособому реагирует только на вхождение этого символа в
качестве самого внешнего в первом Sвыражении файла.
Такой формат настройки транслятора одновременно удобен и для
реализации, и для использования. Так как в Лиспе данные и код записыва
ются одинаково, то запись настроек не потребует со стороны пользователя
изучения нового формата записи данных.
Для решения описанных проблем трансляции имён можно ввести
нижеследующие настройки.
(declarechar <char> <image>)(declarechar <char> <image>)(declarechar <char> <image>)(declarechar <char> <image>)(declarechar <char> <image>)(declarechar <char> <image>)(declarechar <char> <image>)(declarechar <char> <image>)(declarechar <char> <image>)(declarechar <char> <image>)(declarechar <char> <image>)(declarechar <char> <image>)(declarechar <char> <image>)(declarechar <char> <image>)(declarechar <char> <image>)(declarechar <char> <image>)(declarechar <char> <image>) позволяет установить для указан
ного кода символа charстрокуimage, которая будет использована для
подстановкивнутриподчёркиванийпритрансляцииэтогосимвола.Строка
imageсодержит только буквы латинского алфавита и цифры.
(declarename <name> <image>)(declarename <name> <image>)(declarename <name> <image>)(declarename <name> <image>)(declarename <name> <image>)(declarename <name> <image>)(declarename <name> <image>)(declarename <name> <image>)(declarename <name> <image>)(declarename <name> <image>)(declarename <name> <image>)(declarename <name> <image>)(declarename <name> <image>)(declarename <name> <image>)(declarename <name> <image>)(declarename <name> <image>)(declarename <name> <image>) позволяет установить для указан
ного символа непосредственное правило трансляции.
(prefix <name>)(prefix <name>)(prefix <name>)(prefix <name>)(prefix <name>)(prefix <name>)(prefix <name>)(prefix <name>)(prefix <name>)(prefix <name>)(prefix <name>)(prefix <name>)(prefix <name>)(prefix <name>)(prefix <name>)(prefix <name>)(prefix <name>) позволяет установить префикс для оттранслирован
ных имён, по умолчанию используется "csx__""csx__""csx__""csx__""csx__""csx__""csx__""csx__""csx__""csx__""csx__""csx__""csx__""csx__""csx__""csx__""csx__" .
5.3Многомодульная компиляция
Для компиляции многомодульной программы требуется определить
правила получения полноценных файлов исходного кода на Си. Рас
смотрим компиляцию файла modulename.csxmodulename.csxmodulename.csxmodulename.csxmodulename.csxmodulename.csxmodulename.csxmodulename.csxmodulename.csxmodulename.csxmodulename.csxmodulename.csxmodulename.csxmodulename.csxmodulename.csxmodulename.csxmodulename.csx . Имя файла до расширения
(modulename) запомним в качестве имени модуля по умолчанию. Отметим,
что имя модуля является настройкой компилятора, кроме того, можно
настроить имена получаемых заголовочного файла и файла исходного ко
да, а также набор публичных символов. Опишем структуру заголовочного
файлаmodulename.hmodulename.hmodulename.hmodulename.hmodulename.hmodulename.hmodulename.hmodulename.hmodulename.hmodulename.hmodulename.hmodulename.hmodulename.hmodulename.hmodulename.hmodulename.hmodulename.h :
1#ifndef CSX_MODULE_INCLUDED_modulename
2#define CSX_MODULE_INCLUDED_modulename
3extern void *csx_public_symbol; /* ... */
4void *csx_load_modulename();
5#endif
Теперь рассмотрим структуру файла исходного кода modulename.cmodulename.cmodulename.cmodulename.cmodulename.cmodulename.cmodulename.cmodulename.cmodulename.cmodulename.cmodulename.cmodulename.cmodulename.cmodulename.cmodulename.cmodulename.cmodulename.c :
1#include "modulename.h"
2#include <csx.h>
3#include "additional_header.h" /* ... */27
4extern void *csx__external__symbol; /* ... */
5void *csx__public__symbol; /* ... */
6static void *csx__local__symbol; /* ... */
7void *csx_load_modulename()
8{
9csx__public__symbol = S("publicsymbol"); /* ... */
10csx__local__symbol = S("localsymbol"); /* ... */
11E(/* Sexpression */); /* ... */
12return E(/* last Sexpression */);
13}
Для объявления публичных символов следует воспользоваться настройкой
транслятора publicsymbolspublicsymbolspublicsymbolspublicsymbolspublicsymbolspublicsymbolspublicsymbolspublicsymbolspublicsymbolspublicsymbolspublicsymbolspublicsymbolspublicsymbolspublicsymbolspublicsymbolspublicsymbolspublicsymbols , для указания альтернативного имени моду
ля —modulenamemodulenamemodulenamemodulenamemodulenamemodulenamemodulenamemodulenamemodulenamemodulenamemodulenamemodulenamemodulenamemodulenamemodulenamemodulenamemodulename , для указания имён загловочного и исходного файла
на Си — moduleheadermoduleheadermoduleheadermoduleheadermoduleheadermoduleheadermoduleheadermoduleheadermoduleheadermoduleheadermoduleheadermoduleheadermoduleheadermoduleheadermoduleheadermoduleheadermoduleheader иmodulesourcemodulesourcemodulesourcemodulesourcemodulesourcemodulesourcemodulesourcemodulesourcemodulesourcemodulesourcemodulesourcemodulesourcemodulesourcemodulesourcemodulesourcemodulesourcemodulesource соответственно. Дополнитель
ные заголовочные файлы можно указать используя additionalheadersadditionalheadersadditionalheadersadditionalheadersadditionalheadersadditionalheadersadditionalheadersadditionalheadersadditionalheadersadditionalheadersadditionalheadersadditionalheadersadditionalheadersadditionalheadersadditionalheadersadditionalheadersadditionalheaders .
Внешние символы перечисляются в externalsymbolsexternalsymbolsexternalsymbolsexternalsymbolsexternalsymbolsexternalsymbolsexternalsymbolsexternalsymbolsexternalsymbolsexternalsymbolsexternalsymbolsexternalsymbolsexternalsymbolsexternalsymbolsexternalsymbolsexternalsymbolsexternalsymbols .
Объявление символов в виде Sвыражений позволяет ускорить испол
нение, так как избавляет от необходимости повторно находить символ в
таблице символов. Кроме того, символ, доступный непосредственно в виде
переменной языка Си, проще использовать при ручном написании кода с
использованием Sвыражений в рамках их представления в CSX.
6Эффективность решения
Оценимпоказателиэффективностиразработаннойсистемы,аименно
скорость исполнения программ и потребление памяти в ходе их выполне
ния. Измерения будем приводить в сравнении с результатами исполнения
того же кода на MIT Scheme — это потребует писать программы для оценки
на подмножестве созданного диалекта Лиспа и диалекта, используемого в
MIT Scheme.
Отметим, что данные для графиков потребления памяти получены
посредством измерений одиночного исполнения программы, тогда как
данные по скорости получены в результате запуска программы 1000 раз
для каждого исполнителя. Тестирование проводилось на компьютере с
процессором Intel Pentium Silver N5000 и оперативной памятью объёмом в
четыре гигабайта. В качестве операционной системы использовался Linux,
компиляция производилась вызовом gcc с флагом O3O3O3O3O3O3O3O3O3O3O3O3O3O3O3O3O3.
В качестве первого примера программы воспользуемся разработан
ным самоприменимым транслятором, написанным на требуемом подмно28
жестве диалектов. В качестве тестовых данных на вход транслятора будем
подавать его собственный исходный код. Выбор этой программы для при
мера обуславливается большей схожестью её кода с промышленным — как
по размерам, так и по структуре — чем у более формальных примеров,
таких как вычисление чисел Фибоначчи или факториала.
На рисунке 4 можно увидеть графики потребления транслятором
оперативной памяти, в частности отчетливо видна работа сборщика мусо
ра CSX. Рваный характер графика вызван принятым решением о вызове
сборщика мусора, а именно что сборка мусора происходит только то
гда, когда занимаемая объектами системы оперативная память по объёму
превосходит объём оставленных после прошлой сборки мусора объектов
более чем в два раза. Подчеркнём, что занимаемая системой CSX память
при исполнении транслятора не превышает 205 килобайт, тогда как MIT
Scheme требует более 277 мегабайт — то есть для запуска транслятора
с помощью CSX требуется в тысячу раз меньше оперативной памяти, что
может позволить использовать разработанную систему на большем числе
устройств.
На рисунке 5a показаны диаграммы распределения времени исполне
ния, на которых изображены (сверху вниз): максимум, верхний квартиль,
медиана, нижний квартиль и минимум. Средним временем самопримене
ния транслятора для CSX является 186 миллисекунд, а для MIT Scheme —
554 миллисекунды.
В качестве второго примера воспользуемся программой вычисления
функции Аккермана, также написанной на подмножестве избранных диа
лектов. Эта функция при наивной рекурсивной реализации известна быст
рым ростом сложности, и в частности высокой глубиной рекурсии, в силу
чего может служить удобным примером для проверки поведения систе
мы при исполнении ресурсоёмких задач. Приведём определение функции
Аккермана:
Ack(m; n ) =8
><
>:n+ 1; m = 0;
Ack(m 1;1); m > 0; n= 0;
Ack(m 1; Ack (m; n 1)); m > 0; n > 0:
На рисунке 6 изображён график потребления памяти при вычислении
Ack(3;7). Несмотря на повышение потребления по сравнению с примером
исполнения транслятора, CSX всё ещё потребляет значительно меньше
памяти, чем MIT Scheme.
Нарисунке5bпоказанораспределениевременивычисления Ack(3;7);
среднимвременемдляCSXявляется1300миллисекунд,адляMITScheme—29
70 000140 000210 000байты
(a) CSX
283 000 000287 000 000291 000 000байты
(b) MIT Scheme
Рис. 4: Потребление памяти в куче при трансляции
CSXMIT0:20:40:6
(a) ТрансляторCSXMIT0:91:11:3
(b)Ack(3;7)CSXMIT345
(c)Ack(3;8)
Рис. 5: Распределения времени исполнения30
50 000490 000930 000байты
(a) CSX
283 000 000287 000 000291 000 000байты
(b) MIT Scheme
Рис. 6: Потребление памяти в куче при вычислении Ack(3;7)
927 миллисекунд. Видим, что при повышении алгоритмической сложно
сти задачи преимущество CSX в скорости перед MIT Scheme пропало. Это
наблюдение говорит о том, что CSX обладает крайне быстрым временем
загрузки,ноприэтомнеоптимизируетисполняемыйкод,вотличиеотMIT
Scheme. Однако даже при отсутствии оптимизаций, несмотря на достиже
ние задачей времени исполнения, заметного пользователю, CSX остаётся
не более чем в два раза медленней MIT Scheme.
На рисунке 5c показаны аналогичные графики для Ack(3;8), среднее
время исполнения системой CSX — 5157 миллисекунд, MIT Scheme справ
ляется за 2644 миллисекунды. Время загрузки в рамках этого примера
играет ещё меньшую роль, при этом соотношение скорости исполнения
программ системами CSX и MIT Scheme слабо изменилось в сравнении с
предыдущей задачей и остаётся ниже двойки.
Проведённые измерения свидетельствуют о приемлемых показате
лях потребления ресурсов компьютера разработанной системой CSX. Из
полученных данных можно сделать вывод о перспективности построения
оптимизирующего компилятора на основе предложенного подхода — при
этом представляется возможным достичь скорости исполнения программ,
продемонстрированной MIT Scheme.31
7Заключение
7.1Перспективы
К перспективам дальнейшей работы можно отнести исследование
возможности построения оптимизирующего транслятора, использующего
предложенный метод. Желательно расширить возможности взаимодей
ствияполученнойсистемысвнешнимисредствамиразработкиикомпонен
тами системы программирования, такими как отладчики и профилиров
щики. Актуальной выглядит задача поддержки исполнения параллельных
программ в рамках предложенного подхода. Перспективно продолжить
исследование расширением набора поддерживаемых системой языков,
например такими языками, как Пролог, Рефал и Форт.
7.2Выводы
В рамках проведённой исследовательской работы получены следую
щие основные результаты:
1.предложен подход к представлению Sвыражений, допускающий их
наглядную запись средствами языка Си в виде суперпозиции вызовов
функций;
2.создана библиотека модулей Си, реализующая вычислительную мо
дель Лиспа на основе Sвыражений, представленных в соответствии
с вышеупомянутым подходом;
3.создан интерактивный интерпретатор диалекта языка Лисп, а также
самоприменимый транслятор, принимающий на вход текст на Лиспе
в традиционном синтаксисе и создающий соответствующий модуль
языка Си.
Оценка реализованной системы позволяет предположить высокий
потенциалиактуальностьописанныхперспектив.Обэтомсвидетельствует
в частности неожиданная для автора относительная эффективность испол
нения программ в рамках предложенного метода. Кроме того, наглядность
описанного представления программ на Лиспе в Си позволяет программи
сту писать, модифицировать и анализировать исходных код программы,
частичнонаписаннойнаЛиспе,ачастичнонаСи,сбольшейлёгкостью,чем
при альтернативных подходах — в частности этому способствует выбран
ное представление Sвыражений, упрощающее использование результатов
вычисления форм Лиспа в основной программе на Си.32
7.3Благодарности
Благодарю участников спецсеминара Парадигм Программирования
факультета ВМК МГУ им.М.В.Ломоносова, в особенности Андрея Вик
торовича Столярова, а также Игоря Геннадьевича Головина, Екатерину
Владимировну Галкину и Никиту Викторовича Орлова, за их обширную
поддержку и конструктивную критику в ходе выполнения работы. Кро
ме того, благодарю сотрудников ИПМ им.М.В.Келдыша за их огромную
помощь — в частности Александра Ивановича Аптекарева, Владимира
Генриховича Лысова и Михаила Александровича Бочева.
Список литературы
[1]И.Г.Головин , А.В.Столяров .Объектноориентированный под
ход к мультипарадигмальному программированию. Вестник МГУ,
сер.15 (ВМК), №1, с.46–50, 2002.
[2]А.В.Столяров .Интеграция изобразительных средств альтернатив
ных языков программирования в проекты на С+ +. Деп.в ВИНИТИ РАН
06.11.2001 №2319В2001, Москва, 2001.
[3]А.В.Столяров .Программирование:введениевпрофессию. МАКСПресс,
Издание второе, том III: Парадигмы , с.351–360, 2021.
[4]ANSI X3.1591989 .Programming Language C .
[5]John W. Backus.The Syntax and Semantics of the Proposed International
AlgebraicLanguageoftheZurichACMGAMMConference. Proceedingsofthe
InternationalConferenceonInformationProcessing,UNESCO,p.125–132,
1959.
[6]David F. Bacon, V.T.Rajan.Concurrent Cycle Collection in Reference
Counted Systems. Proceedings of the 15th European Conference on Object
Oriented Programming, p.207–235, 2001.
[7]Tegawendé Bissyandé , Ferdian Thung, David Lo, Lingxiao Jiang,
LaurentRéveillère .Popularity, Interoperability, and Impact of Programming
Languages in 100,000 Open Source Projects. 2013 IEEE 37th Annual
Computer Software and Applications Conference, p.303–312, 2013.
[8]WalterBright.C’s Biggest Mistake. // Digital Mars, 2009. URL (date of
access: 10.05.2022):
https://www.digitalmars.com/articles/C biggestmistake.html33
[9]Edsger W. Dijkstra , Leslie Lamport , A.J.Martin, C.S.Scholten ,
E.F.M.Steffens.Onthefly Garbage Collection: an Exercise in Cooperation.
Communication of the ACM, №11, p.966–975, 1978.
[10]DanielHolden.Cello library. // Cello, 2015. URL (date of access:
10.05.2022):
https://libcello.org/
[11]R.Kelsey, W.Clinger, J.Rees. (eds.).Revised5Report on the Algorithmic
Language Scheme. ACM SIGPLAN Notices, №33(9), p.26–76, 1998.
[12]SteveKollmansberger , Martin Erwig.Haskell Rules: Embedding Rule
Systems in Haskell. // Haskell Rules, 2006. URL (date of access:
10.05.2022):
https://web.engr.oregonstate.edu/~erwig/HaskellRules/
[13]JohnMcCarthy .Recursive Functions of Symbolic Expressions and Their
Computation by Machine, Part I. Communications of the ACM, №3(4),
p.184–195, 1960.
[14]BrianMcNamara , Yannis Smaragdakis .Functional Programming in C+ +.
ICFP 2000. // FC+ +: The Functional C+ +Library, 2012. URL (date of
access: 10.05.2022):
https://people.cs.umass.edu/~yannis/fc++/
[15]BrianMcNamara , Yannis Smaragdakis .Logic Programming in C+ +with
the LC+ +library. // LC+ +: Logic Programming in C+ +, 2003. URL (date
of access: 10.05.2022):
https://people.cs.umass.edu/~yannis/lc++/
[16]FlávioMedeiros , Márcio Ribeiro, RohitGheyi.Investigating Preprocessor
Based Syntax Errors. ACM SIGPLAN Notices, №49(3), p.75–84, 2014.
[17]RoshanNaik.Blending the Logic Paradigm into C+ +. // Castor: Logic
paradigm for C+ +, 2008. URL (date of access: 10.05.2022):
http://www.mpprogramming.com/resources/CastorDesign.pdf
[18]MartinOdersky , PhilipWadler.Pizza into Java: Translating theory into
practice. Proceedings of the 24th ACM SIGPLANSIGACT symposium on
Principles of programming languages (POPL ’97), p.146–159, 1997.
[19]ChrisOkasaki .Techniques for embedding postfix languages in Haskell.
Proceedings of the 2002 ACM SIGPLAN Haskell Workshop, p.105113,
2002.34
[20]HarelPaz, David F. Bacon, Elliot K. Kolodner , ErezPetrank, V.T.Rajan.
An efficient onthefly cycle collection. ACM Transactions on Programming
Languages and Systems, №29(4), p.20–es, 2007.
[21]KenShirriff.Arc Programming Language Reference. // Arc Programming
Language, 2008. URL (date of access: 10.05.2022):
https://arclanguage.github.io/ref/
[22]Michael Spivey, SilvijaSeres.Embedding PROLOG in HASKELL. Haskell
Workshop, p.25–38, 1999.
[23]Stack Overflow Developer Survey 2021 . // Stack Overflow, 2022. URL
(date of access: 10.05.2022):
https://insights.stackoverflow.com/survey/2021
[24]G.L.Steele.Common Lisp the Language. Digital Press, 2ndedition, 1990.
[25]TIOBE Index for May 2022 . // TIOBE, 2022. URL (date of access:
10.05.2022):
https://www.tiobe.com/tiobe index/
[26]SteveWard, MatHostetter .Curl: A language for web content. International
Journal of Web Engineering and Technology, No1(1), p.41–62, 2003.35
Оглавление
1 Введение 3
1.1 Мультипарадигмальное программирование . . . . . . . . . . 3
1.2 Выбор языков для непосредственной интеграции . . . . . . . 4
1.3 Постановка задачи и достигнутые результаты . . . . . . . . . 5
2 Вычислительная модель Лиспа 6
2.1 Представление данных . . . . . . . . . . . . . . . . . . . . . . 6
2.2 Исполнение программ . . . . . . . . . . . . . . . . . . . . . . 8
3 Использование средств языка Си 9
3.1 Поддержка динамической типизации . . . . . . . . . . . . . . 9
3.2 Поддержка функциональных объектов . . . . . . . . . . . . . 13
3.3 Поддержка сокращённой записи списков . . . . . . . . . . . . 14
4 Лиспвычислитель 16
4.1 Система типов . . . . . . . . . . . . . . . . . . . . . . . . . . . 16
4.2 Модель исполнения . . . . . . . . . . . . . . . . . . . . . . . . 18
4.3 Сборка мусора . . . . . . . . . . . . . . . . . . . . . . . . . . . 19
4.4 Встроенные формы . . . . . . . . . . . . . . . . . . . . . . . . 21
5 Трансляция диалекта Лиспа в Си 23
5.1 Базовый транслятор . . . . . . . . . . . . . . . . . . . . . . . . 23
5.2 Трансляция символов . . . . . . . . . . . . . . . . . . . . . . . 24
5.3 Многомодульная компиляция . . . . . . . . . . . . . . . . . . 26
6 Эффективность решения 27
7 Заключение 31
7.1 Перспективы . . . . . . . . . . . . . . . . . . . . . . . . . . . . 31
7.2 Выводы . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 31
7.3 Благодарности . . . . . . . . . . . . . . . . . . . . . . . . . . . 32MathNet.Ru
All Russian mathematical portal
E. Yu. Kolesnichenko, V. E. Pavlovsky, D. A. Gribkov, I. A. Or lov, A. P. Aliseychik,
Kinematic motion control of sixwheeled mecanumrobot, Keldysh Institute preprints ,
2016, 127
DOI: 10.20948/prepr2016127
Use of the allRussian mathematical portal MathNet.Ru imp lies that you have read and agreed to these terms of use
http://www.mathnet.ru/eng/agreement
Download details:
IP: 79.139.215.77
December 17, 2023, 01:00:51ИПМ им.М.В.Келдыша РАН   •  Электронная библиотека
Препринты ИПМ   •  Препринт № 127 за 2016 г.
ISSN 20712898 (Print)
ISSN 20712901 (Online)
Колесниченко Е.Ю. ,
Павловский В. Е. , Грибков Д.А.,
Орлов И.А. , Алисейчик А.П.
Кинематическое управление
движением шестиколесного
меканумробота
Рекомендуемая форма библиографической ссылки:   Кинематическое управление
движением шестиколесного меканумробота / Е.Ю.Колесниченко [и др.] // Препринты ИПМ
им. М.В.Келдыша. 2016. №  127. 26  с. doi:10.20948/prepr2016127  
URL: http://library.keldysh.ru/preprint.asp?id=2016127О р д е н а  Л е н и н а  
ИНСТИТУТ ПРИКЛАДНОЙ МАТЕМАТИКИ  
имени М.В.Келдыша  
Р о с с и й с к о й  а к а д е м и и  н а у к  
 
 
 
 
 
 
 
 
 
Е.Ю.  Колесниченко , В.Е.  Павловский, Д.А. Грибков,  
И.А. Орлов, А.П. Алисейчик  
 
Кинематическое управление движением  
шестиколесного меканум робота  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Москва — 2016УДК 796.012:612.7:531.1  
 
Колесниченко Е.Ю., Павловский В.Е., Грибков Д.А., Орлов И.А., Алисейчик 
А.П.  
Кине матическое управление движением шестиколесного меканум 
робота  
В работе рассматривается теоретическая механическая модель 
многоколесног о мобильного робота на меканум колесах, кратко обсуждаются 
вопросы ее аппаратной реализации. Основная цель работы – синтез 
управляемого движения аппарата по криволинейным траекториям. 
Использование меканум колес (роликонесущих колес всенаправленного 
движен ия) упрощает кинематическую схему аппарата за счет отказа от 
сложных рулевых механизмов и приводов, и при этом полностью сохраняет 
возможности управления криволинейными движениями. В работе показаны 
способы управления аппаратом по различным траекториям . 
Ключевые слова: меканум колесо, шестиколесный робот, движение по 
криволинейной траектории, сплайн интерполяция  
 
 
Elena Yu. Kolesnichenko, Vladimir E. Pavlovsky, Dmitry A. Gribkov, Igor A. 
Orlov, A nton P. Aliseychik  
Kinematic motion control of six wheeled mec anum robot  
The work considers a theoretical model of the multi wheel mobile robot on 
mecanum wheels. It also briefly discusses the hardware implementation. The main 
purpose of the work is synthesis of controlled machine movement along the curved 
trajectori es. Mecanum wheels (wheels with a series of rollers attached to their 
circumference that can move a vehicle in any direction) simplify the kinematic 
scheme of the machine because the vehicle doesn’t need sophisticated steering 
mechanisms and drives.  The v ehicle fully preserves the control possibilities for 
curvilinear motion. This work shows ways of the machine con trol for different 
trajectories . 
Key words:  mecanum wheel, six wheeled robot, motion along curved 
trajectories, spline interpolation  
 
 
Работа вы полнена при поддержке Росси йского научного фонда, проект 
№ 161910705, а также  при поддержке Российского фонда фундаментальных 
исследований, проекты № 16 0800880, № 15 0808769, № 16 0100131 . Введение. Состояние проблемы  
Меканум колеса были изобретены шведским инженером Бенгтом 
Эрландом Айлоном, которому принадлежат идея и патент США на эту 
конструкцию. Он придумал идею [1] в 1973 г., когда был сотрудником в 
шведской компании Mecanum AB. По этой причине эти колеса в зарубежной 
литературе часто называют шведскими колесами или колесами Айлона. 
Меканум колеса являются одной из возможных моделей омни колес (колес 
всенаправленного движения), но имеют ряд отличий, главным из которых 
является использование специальных роликов, установленных на ободе под 
углом ( обычно 45 град.) к оси и к плоскости колеса. В результате меканум 
колесо демонстрирует ряд специфических свойств сложной механической 
природы, среди которых весьма интересное и важное — движение под углом к 
плоскости колеса. Виды меканум колес для разных т иповых конструкций 
приведены на рис.1.  
 
  
Рис.1.  Меканум колесо, типовые конструкции.  
Типичная конфигурац ия аппарата на меканум колесах  четырехколесный 
аппарат, хотя есть и другие решения. Использование мекану мколес приводит к 
следующему:  изменяя скорос ть и направление вращения каждого колеса , 
можно обеспечить движение корпуса аппарата обычным для четырехколесных 
шасси образом, реализовать поступательное движение корпуса или 
произвольное его вращение и повороты. Можно создать, например, поперечное 
движен ие аппарата, комбинации движений колес позволяют строить движение 
в любом направлении с любым вращением. К настоящему времени разработано 
уже большое число меканум роботов и аппаратов [1 8], как исследовательских, 
так и коммерческих.  
Вначале укажем пример ы исследовательских аппаратов.  
Одним из первых таких роботов был робот "Уран" (URANUS) 
Университета Карнеги Меллон, США, 1985 г. [2]. Шасси этого робота показано 
на рис.2. Кроме шасси , робот оснащался системой датчиков навигации и 4 
ориентации, был способен двигаться в помещении, в том числе в затрудненной 
стесненной обстановке.  
 
Рис.2.  Шасси робота Ура н, Университет Карнеги Меллон, США, 1985 г.  
На рис.3 приведены разработки коллектива Лаборатории Роботики и 
Автоматики Университета Западной Австралии [3,4]. Показаны робот OMNI 2 
(всего в Лаборатории разработаны три робота  OMNI 1, OMNI 2, OMNI 3, 
последний мог везти человека), и роботизированное кресло на меканум 
колесах.  
 
  
Рис.3.  Роботы Лаборатории Роботики и Автоматики  
Университета Западной Австралии.  
На рис.4 показаны российские роботы Института прикладной математики 
им.М.В.Келдыша РАН, шасси Омнибот 1 и полнофункциональный робот 
Омнибот 2 [5].  
 
  
Рис.4.  Роботы Омнибот 1 и Омнибот 2. ИПМ им.  М.В.Келдыша РАН.  5 
Заметим, что кроме этих роботов в России ещ е разработаны меканум 
роботы в Ижевске в УдГУ и Институте компьютерных исследований [6].  
Укажем далее несколько коммерческих разработок.  
На рис. 5 слева показан аппарат Omni Directional Vehicle (ODV) для 
транспортировки грузов [7], разработанный лаборатори ей ВМС США в 
Панама Сити по патенту Айлона,  ВМС США купили этот патент в 1980 х, 
аппарат построен к 1997 г., в настоящее время находится в производстве. 
Аппарат используется для транспортировок в узких пространствах, например, 
на служебных палубах корабле й. Подобные погрузчики используются также 
при загрузке самолетов. На рис. 5 справа показана современ ная версия 
подобного аппарата транспортное шасси фирмы КУКА с манипулятором 
(Германия) [8].  
 
  
Рис. 5.  Аппарат ODV  ВМС США (слева) и транспортное шасси  
фирмы КУКА  с манипулятором (справа).  
На рис. 6 слева показан вилочный погрузчик на меканум колесах, 
разработка фирмы Airtrax, ныне производится компанией Vetex (США), 
аппарат поставляется по Северной Америке, в Израиль и И ндию [9,10]. Справа 
на рис. 6 футур истический дизайн "машины будущего", автор концепции  
дизайнер из Германии Себастьян Тодденрот, концепция получила название 
Volkswagen Rescue Rover, аппарат имеет функции омни движения, при этом 
способен плыть, предназначен в качестве спасательного средст ва [11].  
 
  
Рис. 6.  Погрузчик фирмы Airtrax (слева), концепт С. Тодденрота (справа)  6 
В настоящее время развитие этого направления продолжается, появляются 
новые фирмы (Китай), выполняющие разработки колес и роботов по меканум 
технологиям, например [12].  
Примеры перечисленных аппаратов, опубликованные результаты 
экспериментов подтверждают эффективность меканум технологии для 
реализации движения в стесненных условиях.  
Теория движения меканум машин развита в меньшей степени и касается в 
основном только отдель ных колес или четырехколесных аппаратов [13 16]. 
Поэтому в настоящей работе делается попытка развить теорию 
кинематического управления более сложными шестиколесными аппаратами. 
Статья продолжает и развивает краткое исследование, приведенное в [17].  
1. Исхо дные геометрические соотношения  
Мобильный робот с меканум колесами может двигаться по плоскости (или 
слабо неровной поверхности) в произвольном направлении без поворотов 
корпуса или при произвольных поворотах. А тем самым можно не встраивать в 
робот сложны е рулевые механизмы и приводы и обеспечивать рулевую 
функцию робота за счет использования способности меканум колес двигаться в 
произвольном направлении. Аппарат, имеющий несколько меканум колес, 
должен лишь реализовать необходимую различную скорость враще ния колес 
[1317]. 
Будем рассматривать модель шестиколесного меканум робота и будем 
считать, что колеса расположены в два ряда вдоль сторон прямоугольного 
корпуса, так, как показано на рис.7 (слева).  При этом важно отметить, что 
согласно рис.7 меканум колеса могут иметь при монтаже на корпус разную 
ориентацию – правую и левую. В качестве первого, основного, варианта будем 
рассматривать симметричную конфигурацию, в которой колеса 1,3,5 являются 
правыми, а колеса 2,4,6 – левыми (см. рис.7 в центре). Вторым в ариантом будем 
рассматривать такой, в котором колеса 1,2,6 – левые, колеса 3,4,5 – правые (см. 
рис.7 справа). Отметим, что всего возможно 64 разных варианта компоновки 
колес [17], что должно учитываться при реализации конструкции робота.  
 
 
  
Рис.7.  Схем ы шестиколесного меканум робота.  7 
2. Кинематика шестиколесного меканум робота  
Исследуем кинематику робота на шести меканум колесах. Пусть его 
корпус пре дставляет собой прямоугольную платформу со сторонами
lL  (для 
определенности 
lL ). Свяжем с его центром 
1O  систему координат так, чтобы 
оси 
xO1  и 
yO1  были осями симметрии робота (см. рис.7). Оси всех шести колес 
параллельны оси 
xO1 . Координаты центров 
61,iAi  в этой системе координат 
следу ющие:  
,2;21LlA
 
,0;22lA
,2;23

LlA
,2;24 

LlA
,0;25

lA


2;26LlA . 
Нумерация колес показ ана на рис.7. Углы отклонения осей роликов от осей 
колес либо 45, либо 45 град усов. 
Согласно [16] уравнение для одного меканум колеса имеет следующий 
вид: 
  y x x y a v a v
rq 
 cos sin
sin1
, 
где 
q  – угловая скорость колеса, r – его радиус, 
  – угол отклонения оси 
ролика от оси кол еса, 
  – угол отклонения оси колеса от оси 
xO1 , 
,,y xvv  – 
линейные и угловая скорости роб ота, 
y xaa,  – координаты центра к олеса.  
Для рассматриваемого в данной статье робота выполнено условие 
0  
для всех колес. Т огда угловые скорости колес в этом случае выражаются 
следующим образом:  
             




  










6 6 6 61 1 1 1
61
11
,1
ctga a ctgctga a ctg
M vv
Mrqq
y xy x
yx
 
 ,   (1) 
где 
iy ixaa,  – координаты центров 
61,iAi . Уравнения (1) задают 
обратную кин ематическую задачу. В зависимости от углов 
61,ii  матрица 
M имеет разный вид. Для двух случаев, изображенных на рис.7 
(предполагается, что 
45  или 
45 ), соответствующие матрицы M для 
решения обратной кинемат ической задачи (1 – для левого варианта, 2 – для 
правого):  






2/ 2/ 112/ 112/ 2/ 112/ 2/112/ 112/ 2/11
1
L llL lL llL l
M
, 




 

2/ 2/ 112/ 112/ 2/ 112/ 2/112/ 112/ 2/11
2
L llL lL llL l
M . 8 
Ниже приведены еще 12 неидентичных друг другу вариантов того, как 
могут распол агаться меканум колеса в зависимости от углов 
61,ii . 
 




 

2/ 2/ 112/ 112/ 2/ 112/ 2/112/ 112/ 2/11
3
L llL lL llL l
M
, 




 

2/ 2/ 112/ 112/ 2/ 112/ 2/112/ 112/ 2/11
4
L llL lL llL l
M , 




  

2/ 2/ 112/ 112/ 2/ 112/ 2/112/ 112/ 2/11
5
L llL lL llL l
M . 
 




 

2/ 2/ 112/ 112/ 2/ 112/ 2/112/ 112/ 2/11
6
L llL lL llL l
M
, 




  

2/ 2/ 112/ 112/ 2/ 112/ 2/112/ 112/ 2/11
7
L llL lL llL l
M , 




 

2/ 2/ 112/ 112/ 2/ 112/ 2/112/ 112/ 2/11
8
L llL lL llL l
M . 
 9 




  

2/ 2/ 112/ 112/ 2/ 112/ 2/112/ 112/ 2/11
9
L llL lL llL l
M
, 




 

2/ 2/ 112/ 112/ 2/ 112/ 2/112/ 112/ 2/11
10
L llL lL llL l
M , 




  

2/ 2/ 112/ 112/ 2/ 112/ 2/112/ 112/ 2/11
11
L llL lL llL l
M . 
 




 

2/ 2/ 112/ 112/ 2/ 112/ 2/112/ 112/ 2/11
12
L llL lL llL l
M
, 




  

2/ 2/ 112/ 112/ 2/ 112/ 2/112/ 112/ 2/11
13
L llL lL llL l
M , 






2/ 2/ 112/ 112/ 2/ 112/ 2/112/ 112/ 2/11
14
L llL lL llL l
M . 
На приведенных схемах прямоугольниками с те мной заливкой и 
штриховкой вправо выделены кол еса, для которых 
45 , а со светлой 
заливкой и штриховкой влево – колеса с 
45 . Под каждым в ариантом 
выписана соответствующая матрица M для решения обратной кинематической 
задачи, подсч итанная для данного случая.  
Остальные 50 вариантов а налогичны рассмотренным. В этом смысле 
приведенные варианты исчерпывают возможные схемы компоновок для 
шестиколесного аппарата с рядным расположением колес. В каждом случае 
несложно вычи слить псевдообратные матрицы для решения прямой 
кинематической задачи.  Но наиболее интересными являются варианты 1 и 2 в 
силу того, что они не сводятся к ч етырехколесным роботам . 
Для них ниже приведены псевдообратные матрицы 
2,1,i Mi , где индекс 
обозначает номер рассма триваемого варианта:  

  


 


2 2 2 2 2 22 22 2
2 22 2
2 22 2
1
3 4232
3 42
3 423261
61
613 442 2
3 422
3 442 2
L lLl
L ll
L lLlL lL lLl
L lLl
L lL lLl
M
 

 



2 2 2 2 2 22 22 2
2 22 2
2 22 2
3 4232
3 42
3 423261
61
613 442 2
3 422
3 442 2
L lLl
L ll
L lL lL lL lLl
L lL l
L lL lLl , 10 


  









2 2 2 2 2 22 22
2 22 2
2 222 22 2
2 22 2
2 22 2
2
424
4 422432 2
463 2 4
4324122 12
463
4122 6
L lLl
L lLl
L lLlL llL l
L lL lL l
L llLlL lL lLl
L lL lLl
L lL lLl
M
 


 








2 2 2 2 2 22 22
2 22 2
2 222 22 2
2 22 2
2 22 2
424
4 422432 2
463 2 4
4324122 12
463
4122 6
L lLl
L lLl
L lLlL llL l
L lL lL l
L llLlL lL lLl
L lL lLl
L lL lLl . 
3. Движение робота по касательной к траектории  
Рассмотрим движение робота вдоль различных траекторий при условии, 
что в каждый момент вр емени ось 
xO1  робота со впадает с касательной к 
траектории. Тогда 
kv , где k – кривизна трае ктории (со знаком).  
Предполагаем, что в начальный момент корпус робота уже расположен 
так, что ось 
xO1  и касательная к графику совпадают. Тогда угло вые скорости 
колес выражаются следующим обр азом: 














2
22
121
611 1

 

kMrvv
Mrqq
yx
. 
3.1. Движение по эпитрохоиде  
Эпитрохоида – это кривая класса циклоидальных, схема ее построения для 
робота приведена на рис.8.  
 
Рис.8.  Эпитрохоида (кривая L1). 
Эпитрохоида в парамет рическом виде в некоторой системе координат 
21O
 задается следующим образом:  11 












tRR Rd R RRR Rd R R
, sin sin, cos cos
22 1
2 1 222 1
2 1 1
    (2) 
где
,,,2 1 dRR  – параметры эпитрохо иды. Нетрудно получить выражение 
кривизны для эпитрохо иды: 
 
23
21
22
22
22
2 121
2
22 1
3
23
22
2 1
cos2cos2










 


RR
Rd
RR dR RRR
RdR R
RR dR R
k
. 
Тогда для варианта 1 расстановки колес угловые скорости колес после 
преобраз ований имеют вид:  
  , 2/ 2/1 1 k L l vrq 
 
 , 2/2 2 k l vrq   
  , 2/ 2/1 3 k L l vrq   
  , 2/ 2/2 4 k L l vrq 
 
 , 2/1 5 k lvrq   
  , 2/ 2/2 6 k L l v
rq   
где 











21 2
2 22
2221
2 2 13
22
2 1
cos 2cos 2
RRdR RR dRRdRR R R dR R
k
, 










22 1
22 1 14sin4sin 2RR R
RdR R v
, 










22 1
22 1 24cos4cos 2RR R
RdR R v
. 
Для варианта 2 расстановки колес угловые скорости колес в тех же 
обозначениях имеют вид:  
  , 2/ 2/2 1 k L l vrq 
 
 , 2/2 2 k l vrq   
  , 2/ 2/1 3 k L l vrq   
  , 2/ 2/1 4 k L l vrq 
 
 , 2/1 5 k lvrq   
  . 2/ 2/2 6 k L l vrq   12 
3.2. Движение по "змейке"  
Рассмотрим движение по синусоидальной траектории: 
t t sin ,2 1 . 
Кривизна такой траектории:  
2/3 2) cos1(sin
ttk
. 
Тогда для варианта 1 расстановки колес угловые скорости колес после 
преобраз ований имеют вид:  
  , 2/ 2/1
1 1 k L l vrq 
 
 , 2/1
2 2 k lvrq   
  , 2/ 2/1
1 3 k L l vrq   
  , 2/ 2/1
2 4 k L l vrq 
 
 , 2/1
1 5 k lvrq   
  , 2/ 2/1
2 6 k L l v
rq   
где  
tt
k 2cos1sin

, 
t v cos11 , 
t v cos12 . 
Для варианта 2 расстановки колес угловые скорости колес в тех же 
обозначениях имеют вид:  
  , 2/ 2/1
2 1 k L l vrq 
 
 , 2/1
2 2 k lvrq   
  , 2/ 2/1
1 3 k L l vrq   
  , 2/ 2/1
1 4 k L l vrq 
 
 , 2/1
1 5 k lvrq   
  . 2/ 2/1
2 6 k L l vrq   
Ниже на рис.9 приведены графики угловых скоростей колес при движении 
по "змейке" для 1 го варианта расстановки колес.  
Заметим, что на всех графиках оси абсцисс – это время в секундах, оси 
ординат – угловые скорости колес в (рад/сек). Из графиков видно, что  скорости 
пар колес "первое пятое" и "второе шестое" и третьего и четвертого колес в 
значительной степени аналогичны и отличаются фактически только знаками, 
т.е. указанные колеса вращаются в противоположные стороны.  
 
  
          а) первое и пятое колеса                  б) второе и шестое колеса  13 
 
  
в) третье колесо                          г) четвертое колесо  
Рис.9.  Скорости вращения колес для движения по "змейке"  
при параметрах r=0.1, l = 0.5, L=1. 
Для второго варианта скорости вращения колес аналогич ны с точностью 
до перестановок по номерам колес.  
3.3. Движение по сплайн траектории четвертого порядка  
Предположим, что система управления робота (система маршрутизации) 
выбирает точки, по которым должен проезжать робот. Приведем явное решение 
задачи управ ления.  
Пусть задано несколько точек, через которые должен проехать робот. 
Чтобы его движение было гладким, сначала построим путь через данные точки 
с помощью сплайнов так, чтобы в точках, где стыкуются различные 
полиномиальные функции, они совпадали по зна чению, по первой, второй и 
третьей производной. Это условие обеспечит гладкое движение робота по 
касательной к траектории. При этом в такой постановке задачи достаточно 
интерполяции сплайнами четвертой степени.  
Рассмотрим пример с 4 заданными точками: (x0,y0), (x1,y1), (x2,y2), (x3,y3). 
Точки соединим тремя сплайн кривыми:  



  

. ,, ,, ,
3 2 30 312
323
334
34 32 1 20 212
223
234
24 21 0 10 112
123
134
14 1
xx x cxc xc xc xc yxx x cxc xc xc xc yxx x cxc xc xc xc y
y
               (3) 
Потребуем выполнения следующих условий гладкости (штрихами 
обозначены производные по времени соответствующего порядка):  
. )(, )(,)( )(,)( )(,)( )(, )(, )(,)( )(,)( )(,)( )(,0)(,0)(,0)(, )(, )(
3 3 3 2 2 32 3 2 2 2 3 2 2 2 3 2 2 2 2 2 1 1 2 1 2 1 11 2 1 1 1 2 1 1 0 1 0 1 0 1 1 1 1 0 0 1
y xyy xyxy xy xy xy xy xyy xyy xy xy xyxy xy xy xy xy xy xyy xyy xy
    
Все вышеперечисленные условия задают систему уравнений на 
полиномиальные коэффициенты cij. Эту систему удобно записать в следующем 
виде:  
,BcA
 14 
где 
Tccccccccccccccc ) (30 31 32 33 34 20 21 22 23 24 10 11 12 13 14c
, 
Tyy yy yy ) 000 000000 (3 2 2 1 1 0B
, 






1 000 0 0 000 0 01 000 0 0 000 0 000 0 6 24000 6 24000 0 0002 6 1200 2 6 12000 0 001 2 3 401 2 3 4000 0 00 0 0 0 0 1 000 0 00 0 0 0 0 1 000 0 00 0 0 0 000 0 6 24000 6 240 0 0 0 000 2 6 12002 6 120 0 0 0 001 2 3 401 2 3 40 0 0 0 000 0 0 0 000 6 240 0 0 0 000 0 0 0002 6 120 0 0 0 000 0 0 0 01 2 3 40 0 0 0 000 0 0 0 10 0 0 0 000 0 0 0 1
32
33
34
322
23
24
23
22
222
2 22
222
23
2 22
23
222
23
24
212
13
14
11 112
1 12
11 2
13
1 12
13
1002
002
03
012
13
14
102
03
04
0
x x x xx x x xx xx x x xx x x x x xx x x xx x x xx xx x x xx x x x x xxx xx x xx x x xx x x x
A
 
После нахождения ре шения 
BAc1  будет получена уже конкретная 
траектория для робота. Найдем выражения для угловых скоростей колес для 
движения по такой траектории. Предполагая, что изначально центр робота 
находится в точке (x0,y0) и своей продольной осью роб от направлен 
параллельно оси Ox, имеем при параметризации x=t, y=y(t) для линейной и 
угловой скоростей робота:  



   

. , 2 3 4, , 2 3 4, , 2 3 4
,1
3 2 31 322
333
342 1 21 222
233
241 0 11 122
133
14
xt x ctc tc tcxt x ctc tc tcxt x ctc tc tc
v vy x
 15 





. ,) 2 3 4(12 6 12, ,) 2 3 4(12 6 12, ,) 2 3 4(12 6 12
3 2 2
31 322
333
3432 332
342 1 2
21 222
233
2422 232
241 0 2
11 122
133
1412 132
14
xt xctc tc tcc tc tcxt xctc tc tcc tc tcxt xctc tc tcc tc tc
kv
 
Заметим, в последней формуле k – это алгебраическая (со знаком) 
кривизна траектории, по которой д вижется центр робота , и начало связанной с 
его корпусом системы координат. Заметим также, что линейная и угловая 
скорости робота являются непрерывными функциями в силу наложенных 
условий на коэффициенты cij. Здесь и далее принято, что при движении 
продольн ая ось корпуса робота движется по касательной к траектории его 
центра.  
Окончательно, для первого варианта расположения меканум колес (см. 
рис.2 слева) угловые скорости колес имеют вид:  
  , 2/ 2/1
1  L l v vrqy x 
 ,2/1
2 l v vrqy x
  (4) 
  , 2/ 2/1
3  L l v vrqy x 
 
  , 2/ 2/1
4  L l v vrqy x 
 ,2/1
5 l v vrqy x
 
  , 2/ 2/1
6  L l v vrqy x 
 
для второго варианта (см. рис.2 справа):  
  , 2/ 2/1
1  L l v vrqy x 
 ,2/1
2 l v vrqy x
 
  , 2/ 2/1
3  L l v vrqy x 
 
  , 2/ 2/1
4  L l v vrqy x 
 ,2/1
5 l v vrqy x
 
  . 2/ 2/1
6  L l v v
rqy x 
 
В качестве примера рассмотрим случай, когда роботу требуется проехать 
через точки (0,0), (1,2), (3,1), (5,5) . Решая систему на коэффициенты cij, 
получаем:  16 


   853825, 8944,417727,958,8601,16161,4161,8483,4161,16129 0, 0, 0, 0, 2,jic
.     (5) 
Соответствующие графики приведены на рис.10, на левом – траектор ия 
согласно (3) и (5), на правом – график угловой скорости вращения первого 
колеса (4), графики угловых скоростей остальных колес робота аналогичны. На 
графике траектории показаны также точки, задающие построенную 
траекторию.  
 
  
Рис.10.  Траектория (слева ). Угловая скорость вращения первого колеса (справа) 
при выбранных параметрах r=0.1, l = 0.5, L=1. 
Заметим, что существенное колебание  траектории ("выброс") между 3 й и 
4й определяющими точками на рис.10 (слева) связано с особенностями 
сплайновой аппрокси мации траектории, но эта особенность не повлияла на 
возможность реализации движения робота. Расчеты показывают также, что 
скорости колес для второго варианта компоновки колес на роботе аналогичны 
скоростям первого варианта и описываются близкими к рис.10 ф ункциями и 
графиками.  
Реализуя указанные законы движения колес, робот способен двигаться по 
достаточно сложным траекториям, с поворотами значительной кривизны, и все 
повороты реализуются без использования рулевых механизмов на роботе.  
3.4. Движение по спла йнтраектории пятого порядка  
Рассмотрим аналогичную предыдущей задачу о прохождении робота вдоль 
траектории, построенной на четырех точках, но потребуем выполнения 
дополнительных условий: 
0)(,0)(,0)(3 3 3 3 3 3  xy xy xy . Эти условия 
гарантируют нам, что робот прид ет в конечную точку параллельно оси Ох (как 
и начинал своё движение) и остановится. Таким образом матрица A становится 
размера 18 на 18 (а не 15 на 15, как это было ранее), а траектория имеет вид:  17 



 

. ,, ,, ,
3 2 30 312
323
334
345
35 32 1 20 212
223
234
245
25 21 0 10 112
123
134
145
15 1
xx x cxc xc xc xc xc yxx x cxc xc xc xc xc yxx x cxc xc xc xc xc y
y
    (6) 
Задача решается аналогично п редыдущему варианту. Пусть сплайн 5 го 
порядка должен пройти через те же точки (0,0), (1,2), (3,1), (5,5) . Коэффициенты 
сплайн кривой вычисляются аналогично предыдущему случаю, с той лишь 
разницей, что их будет не 15, а 18:  
cij  = (  3.0000, 5.0000, 0, 0,  0, 0.0000, 1.2422, 13.0078,  49.6094, 83.2031,  
58.3984, 15.0391, 0.3047,  6.7578,  58.9844, 251.9531, 522.4609,  420.0391)  (7) 
Соответствующий график траектории построен на рис.11. Важно отметить, 
и рис.11 это подтверждает, что колебания (выбросы) траектории для сплайна 5 
го порядка будут меньше, что важно для синтеза движения робота.  
 
Рис.11.  Траектория 5 го порядка.  
На последующем рисунке 12 показаны угловые скорости колес для 
первого варианта их компоновки, реализующие движение робота по 
построе нной траектории. Как и ранее, ось абсцисс – это время в сек., ось 
ординат – угловая скорость в рад/сек . 
Целесообразно отметить, что угловые скорости колес принимают разные 
знаки, стало быть, при данном движении на разных участках траектории колеса 
вращаютс я в разные стороны.  18 
 
  
            первое колесо                                                второе колесо  
 
  
             третье колесо                                                четвертое колесо  
 
  
             пятое колесо                                                   шестое колесо  
Рис.12.  Угловые скорости колес при движении по траектории 5 го порядка.  
4. Поступательное движение робота вдоль траектории  
Благодаря тому, что с помощью меканум колес можно реализовать 
движение в любом направл ении, роботу  необязательно поворачивать сво й 19 
корпус при движении по траектории. Рассмотрим вариант перемещения робота, 
при котором корпус всегда остается параллелен себе, при этом движение по 
прежнему задается некоторой криволинейной траекторией. Если корп ус робота 
не может вращаться вокруг своей оси 
zO1 , то 
0 . Будем считать, центр 
робота уже находится в к акойто точке траектории, а его ось 
xO1  находится под 
некоторым углом 
  к оси 
1O  и, согласно постановке задачи, должен его 
сохранять. Матрица перехода от системы 
xyO1  к системе 
21O  – это матрица 
поворота 




 
cos sinsin cos . Таким образом, угловые скорости колес  выражаются 
следующим образом:  















0cos sinsin cos
1
01
2 12 1
61

  

Mrvv
Mrqq
yx
 
Интересно заметить, что для данных меканум колес (с углом роликов 45 
градусов), чтобы сохранять угол в 45 градусов, выражения для угловых 
скоростей колес имеют простой вид, а именно: для 1 варианта рас положения 
колес  
,21,21
1 2 6 4 2 2 1 5 3 1     
rq q qrq qq  
 
и для варианта 2 в тех же обозначениях 
,1 5 4 3  q q q 
2 6 2 1  q q q  . 
4.1. Движение по эпитрохоиде  
Рассмотрим поступательное движение робота вдоль эпитрохоиды. 
Напомним, что эпитрохоида описывается у равнениями (2).  
Для варианта 1 расстановки колес угловые скорости колес имеют вид:  
, ,2 6 4 2 1 5 3 1    q q q q q q 
 где 
 



    
22 1
22 1
1 sin sin cos sinRR R
Rd
rR R
 
 




    
22 1
2cos cos sin cosRR R
Rd
, 
 



    
22 1
22 1
2 sin sin cos sinRR R
Rd
rR R
 
 




    
22 1
2cos cos sin cosRR R
Rd
. 20 
Для варианта 2 расстановки колес угловые скорос ти колес выражаются 
теми же комбин ациями, отличие только в номерах колес: 
,1 5 4 3  q q q 
2 6 2 1  q q q 
. 
4.2. Движение по «змейке»  
Рассмотрим поступательное движение по синусоидальной траектории.  
Для варианта 1 расстановки колес угловые ск орости колес имеют вид: 
, ,2 6 4 2 1 5 3 1    q q q q q q 
 где 
   , sin cos cos sin cos1
1      tr
 
      sin cos cos sin cos1
2   tr . 
Для варианта 2 расстановки колес угловые скорости колес выражаются 
теми же комбин ациями, отличие только в номерах колес: 
,1 5 4 3  q q q 
2 6 2 1  q q q 
. 
Ниже на рис.13 приведены графики этих угловых скоростей. Для первого 
варианта слева дан график угловых скоростей 1,3 и 5 колес, а справа – 2,4,6 
колес.  
         
  
Рис.13.  Графики угловых скоростей 
1  (слева)  
и 
2 (справа) при r=0.1, 
 =90°.  
4.3. Движение по сплайн траектории четвертого порядка  
Рассмотрим поступательное движение по сплайн траектории 4 го порядка, 
заданной уравнениями (3).  
Для варианта 1 расстановки колес угловые с корости колес имеют вид: 
, ,2 6 4 2 1 5 3 1    q q q q q q 
 где 
   , sin cos sin cos1
1     yvr
 
      sin cos sin cos1
2  yvr , 21 



   

. , 2 3 4, , 2 3 4, , 2 3 4
3 2 31 322
333
342 1 21 222
233
241 0 11 122
133
14
xt x ctc tc tcxtx ctc tc tcxt x ctc tc tc
vy
 
Для варианта 2 расстановки колес угловые скорости колес выражаются 
теми же комбин ациями, отличие только в номерах колес: 
,1 5 4 3  q q q 
2 6 2 1  q q q 
. 
Ниже на рис.14 изображены графики угловых скоростей 
1  (слева) и 
2  
(справа) при r=0.1, 
 =90° и коэффициентах cij (5). 
           
  
Рис.14.  Графики угло вых скоростей 
1  (слева)  
и 
2 (справа) при r=0.1, 
 =90°.  
4.4. Движение по сплайн траектории пятого порядка  
Рассмотрим поступательное движение по сплайн траектории 5 го порядка, 
заданной уравн ениями (6).  
Общее решение для обоих случаев расстановки колес повторяет описанное 
выше в п.4.3 с тем лишь исключением, что в выражении для 
yv добавляются 
новые слагаемые за счет увеличения степени сплайна:  



   

. , 2 3 4 5, , 2 3 4 5, , 2 3 4 5
3 2 31 322
333
344
352 1 21 222
233
244
251 0 11 122
133
144
15
xt x ctc tc tc tcxtx ctc tc tc tcxt x ctc tc tc tc
vy
 
Ниже н а рис.15 изображены графики угловых скоростей 
1  (слева) и 
2  
(справа) при r=0.1, 
 =90° и коэффициентах cij (7). 22 
   
  
Рис.15. Графики угловых скоростей 
1  (слева)  
и 
2 (справа) при r=0.1, 
 =90°.  
5. Модель меканум робота  
На рис.  16 показано шасси шестиколесного меканум робота, 
разработанного в ИПМ им.  М.В.  Келдыша РАН при участии авторов настоящей 
работы. Разработчиками робота был и сотрудники Лаборатории «Интеллект и 
Мехатроника» ФИЦ «Институт прикладной математики им.М.В.Келдыша 
РАН», основной вклад в создание механической части внесли Д.А.Грибков, 
И.А.Орлов.  
В качестве демонстрационной задачи выбрана задача управления и 
навигаци и колесной платформы с роботом манипулятором на борту. Создан 
макет робота омни мобильного движения на шести меканум колесах с 
двигателями постоянного тока.  
 
Рис.16. Шестиколесный меканум робот.  
Основная цель исследований  – синтез управляемого движения ап парата по 
криволинейным траекториям. Использование меканум колес (роликонесущих 
колес всенаправленного движения) упрощает кинематическую схему аппарата 23 
за счет отказа от сложных рулевых механизмов и приводов, и при этом 
полностью сохраняет возможности упра вления криволинейными движениями.  
Разработана программно аппаратная архитектура системы управления 
мобильным на базе микроконтроллера STM32F4, в качестве среды 
моделирования системы управления выбраны MATLAB Simulink, 
моделирования кинематики и динамики р оботов – программный пакет 
«Универсальный механизм».  
В графической среде имитационного моделирования MATLAB Simulink 
создана универсальная система управления низкого уровня для 
электродвигателей постоянного тока с обратной связью по датчикам тока и 
датчика м скорости на основе эффекта Холла для многофункциональной 
подвижной робототехнической платформы. Разработана архитектура системы 
навигации робота в помещении по маякам на базе ультразвуковых датчиков 
расстояния. В программном комплексе «Универсальный меха низм» создана 
динамическая модель робота  (рис. 17)  с шестью меканум колесами, состоящая 
из 61 го твердого тела, соединенных посредством вращательных шарниров : 
корпус, 6 колес, 54 ролика  (по 9 роликов на колесе). На каждом ролике задано 
по 9 контактов типа окружность плоскость, в сумме 486 контактных 
взаимодействия . Численным моделированием исследуется контактное 
взаимодействие между роликами меканум колес и поверхностью, по которой 
движется робот. Показаны способы кинематического управления аппаратом по 
различным траекториям. Продемонстрирована высокая мобильность аппарата.  
С участием всех авторов предполагается отработка полученных в 
настоящей работе схем управления на указанном роботе. Предполагается 
создание интеллектуального мобильного робота манипулятор а на базе 
реализованного меканум шасси.  
 
Рис.17. Модель меканум робота в ПК УМ.  24 
Заключение  
По предложенной схеме рассмотрены различные движения и маневры 
робота, простые и достаточно сложные. Рассмотрены простые повороты на 
различные углы, рассмотрены дви жения по заданным траекториям типа 
окружностей, или синусоидальным траекториям (задача "змейка"). 
Рассмотрены сложные движения, пример – описанное выше движение робота 
по эпитрохоиде. Робот осуществлял движение так, что продольная ось корпуса 
была направле на по касательной к траектории движения или сохранял угол при 
поступательном движении.  
Рассмотрено также достаточно сложное движение, которое можно назвать 
"вальсирующим", в нем центр корпуса робота движется по заданной кривой, 
например, по прямой, а корпу с вращается заданным образом вокруг оси, 
проходящей через центр корпуса ортогонально плоскости корпуса. Оказалось, 
что и такое движение просто реализуется соответствующим управлением 
скоростями вращения колес.  
В работе был предложен синтез управляемого дв ижения аппарата с 
меканум колесами по кр иволинейным траекториям, заданным алгебраическими 
сплайнами. Показано явное решение задачи кинематического управления 
движением аппарата. Проведенные исследования показали, что сплайновое 
задание траекторий является удобным инструментом синтеза движения 
меканум робота. По ним удается достаточно легко строить кинематические 
законы вращения колес робота, реализующих желаемое движение. Эти 
кинематические законы являются кинематическими программами движения, 
которые затем  подлежат реализации и отслеживанию в системе управления 
робота.  
Сказанное приводит к выводу, что меканум конструкция колесного 
мобильного робота может оказаться удачной альтернативой традиционным 
мобильным схемам в условиях, когда необходимо обеспечить вы сокую 
маневренность робота в стесненных условиях. Примеры этого уже появляются, 
например, в [8].  
Во всех рассмотренных случаях указанные преимущества меканум 
конструкции были очевидны.  
Библиографический  список  
1. B. Ilon. Wheels for a course stable selfpropel ling vehicle movable in any desired 
direction on the ground or some other base. Patent  USA , 3876255, 1974 .  
2. «Uranus » [Электронный ресурс] _Режим доступа :  
http://www .cs.cmu.edu/afs/cs/user/gwp/www /robots /Uranus .html 
3. Robotics  UWA  [Электронный  ресурс ] _ Режим  доступа :  
http://robotics .ee.uwa.edu.au/research .html 
4. Электронный ресурс:  http://robotics .ee.uwa.edu.au/omni /  25 
5. Лаборатория робототехники и искусственного интеллекта 
Политехнического музея/ Выставка робототехнических устройств  
[Электронный  ресурс ] _Режим  доступа : http://www .railab .ru/oldseasons /13
sorevnovaniya robotov /29vystavka robotov 2012. html 
6. Institute of computer science / Robot tango [Электронный  ресурс ] _Режим  
доступа :  http://ics.org.ru/events /5322 tango robotov / 
7. Hillery M. Omni Directional Vehcile (ODV) by the U.S. Navy [ Электронный  
ресурс ] _ Режим  доступа : http://www.a rrickrobotics.com/robomenu/odv.html  
8. KUKA Roboter GmbH KUKA OMNIMOVE [ Электронный  ресурс ] _Режим  
доступа : http://www.kuka omnimove.com/en/  
9. The Old Stageh  and Airtrax Sidewinder Forklift [ Электронный  ресурс ] 
_Режим  доступа : http://wn.com/Mecanum_wheel  
10. Vehicle Technologies, Inc. Sidewinder  [Электронный  ресурс ] _ Режим  
доступа : http://www .airtrax .com/ 
11. С.Тодденрот. Volkswagen  Rescue  Rover  [Электронный ресурс] _ Режим 
доступа:  
http://future24.ru/plavayushchii avtomobil volkswagen rescue rover  
12. Dongguan  City Omni Mechanical Technology Co. , Ltd. [Электронный  ресурс ] 
_Режим  доступа :   http://www .omrobot .com/en/index .html 
13. O. Diegel,  A. Badve,  G. Bright, J.  Podgieter, S.  Tlale Improved Mecanum 
Wheel Design for Omni directional Robots. Proc. 2002 Austr alasian Conference 
on Robotics and Automation (ARAA 2002), Auckland, 27 –29 November 2002. 
pp. 117 –121. 
14. L. Lin and H. Shih. Modeling and Adaptive Control of an Omni Mecanum 
Wheeled Robot. Intelligent Control and Automation, Vol. 4 No. 2, 2013, pp. 
166179. 
15. Hamid Taheri, Bing Qiao and Nurallah Ghaeminezhad. Kinematic Model of a 
Four Mecanum Wheeled Mobile Robot. International Journal of Computer 
Applications 113(3):6 9, March 2015.  
16. A. Gfrerrer, Geometry and kinematics of the Mecanum wheel. Comput. Aided 
Geom.  Design 25 (2008), no. 9, 784 791. 
17. Е.Ю. Баранова, В.Е. Павловский. Кинематика шестиколесного меканум 
робота. // Известия ВолгГТУ, серия "Актуальные проблемы управления, 
вычислительной техники и информатики в технических  системах".  
Волгоград, 2015.  № 13 (177). –  c. 147 152. 
 26 
 
 
 
 
 
 
 
 
Оглавление  
Введение. Состояние проблемы  ................................ ................................ ................  3 
1. Исходные геометрические соотношения  ................................ ..............................  6 
2. Кинематика шестиколесного меканум робота  ................................ .....................  7 
3. Движение робота по касательной к траектории  ................................ .................  10 
3.1. Движение по эпитрохоиде  ................................ ................................ ..... 10 
3.2. Движение по "змейке"  ................................ ................................ ...........  12 
3.3. Движение по сплайн траектории четвертого порядк а .......................  13 
3.4. Движение по сплайн траектории пятого порядка  ..............................  16 
4. Поступательное движение робота вдоль траектории  ................................ ........  18 
4.1. Движение по эпитрохоиде  ................................ ................................ ..... 19 
4.2. Движение по «змейке»  ................................ ................................ ...........  20 
4.3. Движение по сп лайн траектории четвертого порядка  .......................  20 
4.4. Движение по сплайн траектории пятого порядка  ..............................  21 
5. Модель меканум робота  ................................ ................................ .......................  22 
Заключение  ................................ ................................ ................................ .................  24 
Библиографический  список  ................................ ................................ ......................  24 
 
 Celestial Mechanics and Dynamical Astronomy (2018) 130:62
https://doi.org/10.1007/s1056901898544
ORIGINAL ARTICLE
Longterm attitude dynamics of space debris in
Sunsynchronous orbits: Cassini cycles and chaotic
stabilization
S. Eﬁmov1·D. Pritykin1,2·V. Sidorenko1,3
Received: 21 December 2017 / Revised: 19 June 2018 / Accepted: 27 August 2018 /
Published online: 19 September 2018
© Springer Nature B.V. 2018
Abstract
Comprehensive analysis of space debris rotational dynamics is vital for active debris removal
missions that require physical capture or detumbling of a target. We study the attitude motion
of large space debris objects that admittedly pose an immediate danger to space operations
in low Earth orbits. Particularly, we focus on Sunsynchronous orbits (SSO) with altitude
range 600–800 km, where the density of space debris is maximal. Our mathematical model
takes into account the gravitygradient torque and the torque due to eddy currents induced
by the interaction of conductive materials with the geomagnetic ﬁeld. Using perturbation
techniques and numerical methods, we examine the deceleration of the initial fast rotation
and the subsequent transition to a relative equilibrium with respect to the local vertical. A
better understanding of the latter phase is achieved owing to a more accurate model of the
eddycurrent torque than in most prior research. We show that SSO precession is also a crucial
factor inﬂuencing the motion properties. One of its effects is manifested at the deceleration
stage as oscillations of the angular momentum vector about the direction to the south celestial
pole.
Keywords Space debris ·Attitude dynamics ·Eddycurrent torque ·Cassini cycles
This article is part of the topical collection on Innovative methods for space threats: from their dynamics to
interplanetary missions.
Guest Editors: Giovanni Federico Gronchi, Ugo Locatelli, Giuseppe Pucacco and Alessandra Celletti.
B S. Eﬁmov
eﬁmov.ss@phystech.edu
1Moscow Institute of Physics and Technology, 9 Institutskiy per., Dolgoprudny, Moscow Region,
Russian Federation 141701
2Skolkovo Institute of Science and Technology, Nobelya Ulitsa 3, Moscow, Russian Federation
121205
3Keldysh Institute of Applied Mathematics, Russian Academy of Sciences, Miusskaya Sq., 4, Moscow,
Russian Federation 125047
12362 Page 2 of 25 S. Eﬁmov et al.
1 Introduction
This paper presents a study of rotational dynamics of large space debris objects in Sun
synchronous orbits. SSO are characterized by 600–800 km altitude and inclination of about98
◦(Vallado 2007 ). These orbits are best suited for the Earth observation from space, because
of consistent lighting conditions in their subsatellite points for all satellite passes. Extensiveuse of SSO in the last few decades has led to accumulation of a vast space debris population inthe region, a population that is beginning to pose a real threat to space activities. At present, theSSO region is characterized by the highest debris density and requires to be cleaned (Anselmoand Pardini 2016 ). Different aspects of active debris removal (ADR) missions are brought up
in Bonnal et al. ( 2013 )a n dV a nd e rP a s( 2014 ). One of the generally accepted ADR scenarios
is tugging debris objects to the lower orbits, whereupon they burn in the atmosphere or fall tothe Earth (Aslanov and Yudintsev 2013 ). Most ADR techniques are substantially inﬂuenced
by debris object’s rotational dynamics; hence, much effort has been spent lately to determinethe rotation parameters through groundbased observations (Koshkin et al. 2016 ; Kucharski
et al. 2014 ; Lemmens et al. 2013 ; Šilha et al. 2018 ; Santoni et al. 2013 ; Yanagisawa and
Kurosaki 2012 ). At the same time, much attention has been paid to study the debris attitude
dynamics theoretically (Gomez and Walker 2015 ;L i na n dZ h a o 2015 ; Ojakangas et al. 2012 ;
Praly et al. 2012 ; Albuja et al. 2015 ; Sagnieres and Sharf 2017 ).
According to observation data (Šilha et al. 2018 ), there are two major types of large debris
objects—defunct satellites and rocket bodies. Although much of what is discussed in thispaper regarding the longterm attitude motion evolution is applicable to both classes of debrisobjects, there are also distinctions, which require separate treatment, e.g., taking into accountthe effects of Solar radiation pressure (Kucharski et al. 2014 ) or residual magnetic moment
(Eﬁmov et al. 2017b ). For this reason, we shall here conﬁne ourselves to the dynamics of the
rocket bodies.
Rotational dynamics simulations for a typical object of the rocketbody class (Ariane 4 H10
stage) are conducted in Praly et al. ( 2012 ). The model we use in our study comprises the same
key factors as in Praly et al. ( 2012 ) and Gomez and Walker ( 2015 )—gravitygradient torque
and the torque due to eddy currents. We also take into account the orbit precession [cf. Lin andZhao ( 2015 )] responsible for remarkable dynamical effects unexamined in previous studies.
Besides, when calculating the eddycurrent torque, we employ a more accurate formulaproposed in Golubkov ( 1972 ) and Martynenko ( 1985 ), which includes terms describing the
inﬂuence of orbital motion that are considered small for fast rotations and are often neglected.
1
The fact that rotational dynamics at 500–1000 km altitudes is substantially inﬂuenced bytorques due to eddy currents became clear immediately after the ﬁrst artiﬁcial Earth satelliteslaunches (Smith 1964 ; Ormsby 1967 ). It so happened, however, that when dealing with this
phenomenon many researchers were mainly interested in fast rotations, whose orbital periodis signiﬁcantly greater than the rotation period. The complete formula for eddycurrent torqueallows correct description of all stages of the rotational dynamics evolution, including theone when the angular velocity is comparable to the mean motion. Moreover, it turns out thateven for relatively large angular velocities (10–50 times greater than the mean motion) theseterms can cause signiﬁcant changes in the rotational axis direction for prograde spins. As inprior research, we neglect other environmental torques, which is acceptable for the chosenclass of objects.
1Recently, Visco and Lucchesi ( 2018 ) presented an improved formula to calculate the eddycurrent torque
acting on satellites LAGEOS and LARES. However, it substantially relies on the spherical symmetry of thosesatellites, and thus it is unclear to what extent this approach can be applied to study the dynamics of other
objects.
123Longterm attitude dynamics of space debris Page 3 of 25 62
The attitude motion evolution can be divided into three stages (Eﬁmov et al. 2017a ): the
transient stage, in which an arbitrary initial rotation is transformed into the rotation about
the axis with the greatest moment of inertia (so called ﬂat rotation orprincipal axis rotation ),
exponential deceleration of angular velocity, and the stage of chaotic stabilization . During the
ﬁrst relatively brief stage, the motion is primarily determined by internal dissipation. In thesecond stage, angular velocity decreases exponentially because of the eddycurrent torque.When the angular velocity becomes comparable to the mean motion, the attitude dynamicsappears to become chaotic. This chaos, however, is temporary in the case of rocketbodydynamics. It is usually followed by a regular regime with the object remaining nearly alignedwith the local vertical. (More exactly, the ﬁnal regime corresponds to small oscillations aboutthe relative equilibrium.)
Analysis of space debris rotational motion in the stage of exponential deceleration can be
carried out by perturbation techniques. Methodologically, this is the case of a rotating rigidbody under the action of small conservative perturbations (the gravitygradient torque and theinﬂuence of the orbit precession) and even smaller nonconservative perturbation (the eddycurrent torque). Specialists, encountering similar situation in the studies of tidal evolution ofcelestial bodies’ spin states (where tidal torque is also much smaller than the gravitygradienttorque), usually start from the consideration of effects caused by conservative perturbationsand then establish how these effects are modiﬁed by smaller nonconservative perturbations(Gladman et al. 1966 ;W a r d 1975 ). One particularly effective strategy is to consider the
ﬁrst integrals of a purely conservative model and reveal the variations of these quantitiescaused by the minute nonconservative factors. Then, relying on the relationship between theproperties of the motions and values of the ﬁrst integrals in conservative model, it is possible,mutatis mutandis , to describe qualitatively the evolution of the system’s behavior over long
time intervals. This is the approach that we shall adopt. One may also note that the analogybetween secular effects due to the tidal torques and the eddycurrent torques was indicatedby Martynenko ( 1985 ).
The paper is organized as follows. Section 2describes the main assumptions of our model
and the equations for gravitygradient torque and torque due to eddy currents. Section 3
presents the analytical study of the debris objects attitude motion evolution. We derive theevolution equations and interpret their solutions geometrically in terms of angular momentumdirection. At the end of this section, we also provide the classiﬁcation of the longtermevolution scenarios. Section 4contains the simulation results validating the conclusions
drawn from the analytical study and providing an understanding of the system’s behavior inthe stage of chaotic stabilization. Finally, the last section summarizes the results obtained forthe characteristic evolution of large debris object rotational dynamics in SSO.
2 Mathematical model of a debris object rotational dynamics in SSO
Let us consider an object in a circular geocentric orbit of radius ROand inclination i.T h e
Earth’s oblateness causes the orbit’s precession with angular velocity
n/Omega1≈−3J2μ1/2
GR2
E
2R7/2
Ocosi,
where RE=6378.245 km is the Earth’s mean equatorial radius, μG=3.986×105km3/s2
is the gravitational parameter of the Earth, J2=1.082626 ×10−3is the ﬁrst zonal harmonic
12362 Page 4 of 25 S. Eﬁmov et al.
coefﬁcient in the expansion of the Earth’s gravity ﬁeld. Our model pertains to SSO, where
cosi<0 and, consequently, n/Omega1>0, i.e., the longitude of ascending node increases.
Argument of latitude uvaries as a linear function of time:
˙u=ωD,
where ωD=2π/TD,TDis the draconic period of the object’s revolution around the Earth
(the time between two consecutive passages through the ascending node). Employing theformula for draconic period, given in Vallado ( 2007 ), we obtain:
ω
D=ωo/bracketleftBigg
1−3
2J2/parenleftbiggRE
RO/parenrightbigg2
(1−4cos2i)/bracketrightBigg
, (1)
where ωois the mean motion for the circular orbit of radius ROin the central gravity ﬁeld
with parameter μG.
As in prior research (Gomez and Walker 2015 ;L i na n dZ h a o 2015 ; Praly et al. 2012 )
when modeling the rotational dynamics with respect to object’s center of mass, we shall takeinto account gravitygradient torque M
Gand torque due to eddy currents MEC.
Gravitygradient torque acting on the object in the Earth’s gravity ﬁeld is given by the
formula (Beletsky 1966 ):
MG=3μG
R5
ORO×JRO, (2)
where Jis the inertia tensor of the object and ROis the vector from the center of the Earth
to the object’s center of mass O.
Torque due to eddy currents can be expressed as (Golubkov 1972 ; Martynenko 1985 ):
MEC=− B×S(ω×B−˙B), (3)
where Sis the magnetic tensor of the object, ωis the object’s absolute angular velocity, Bis
the magnetic ﬁeld, the derivative ˙Bis calculated in a nonrotating reference frame with the
origin at point O.I ti st h e ˙Bterm that makes Eq. ( 3) different from the simpliﬁed formula
typically used in the studies of fast rotations.
The most accurate models of the geomagnetic ﬁeld are provided by Working Group V
MOD, formed by the International Association of Geomagnetism and Aeronomy (IAGA).Analysis of the models, presented on the website of the Working Group (IAGA 2014 ),
reveals that the dipole components account for 90% of the Earth magnetic ﬁeld. It allowsapproximating geomagnetic ﬁeld for astrodynamical applications by a ﬁeld of a dipole placedinto the center of the Earth (Hughes 2004 ):
B=μ
0μE
4πR3
O/bracketleftBigg
3RO(kE,RO)
R2
O−kE/bracketrightBigg
,
where μ0=4π×10−7≈1.257×10−6NA−2is the magnetic constant, μE≈7.94×
1022Am2is the Earth’s magnetic dipole moment, kEis the dipole direction.
In Sect. 3, where the evolution equations are derived, we assume for simplicity that the
dipole is directed along the Earth’s rotation axis (“axial” dipole model). In Sect. 4, we validate
this assumption by carrying out simulations with the use of a more precise model (“tilted”dipole, making an angle δ
μ=11◦33/primewith the Earth’s rotation axis). It is shown in Sect. 4.2
that within the accuracy of the averaging procedure the dipole model simpliﬁcation is validand allows studying the secular effects in the object’s motion with the use of the evolutionequations obtained for the axial dipole model.
123Longterm attitude dynamics of space debris Page 5 of 25 62
2.1 Parameters
For all simulations and numerical estimates, we shall use a circular orbit with altitude H=
RO−RE=770 km and inclination i=98.7◦. The initial motion is assumed to be a rotation
about the axis with the greatest moment of inertia. That is to say, we omit from our studythe ﬁrst transient stage and start directly from the ﬂat rotation regime, which usually sets inquite fast under the inﬂuence of internal dissipation due to the motion of residual fuel in therocketbody fuel tanks (Ojakangas et al. 2012 ; Eﬁmov et al. 2017a ).
Estimates of the inertia and magnetic tensors are made similar to those of certain actual
rocket bodies:
J=⎡
⎣10739 0 0
0 10815 00 0 1441⎤
⎦kg m
2,S=⎡
⎣2.18 0 0
02 .18 0
00 1 .32⎤
⎦×106Sm4.(4)
Here, both tensors are written in the bodyﬁxed reference frame. The magnetic tensor Sis
assumed to be diagonal with two equal components corresponding to axes perpendicular tothe rocketbody symmetry axis. The inertia tensor does have a slight asymmetry, which isneglected for simplicity in the analytical study. Thus, in Sect. 3the inertia tensor is assumed
to have a form
J=diag(A,A,C), A>C. (5)
The magnetic tensor of the form ( 4) can be represented as
S=S
∗diag(1,1, λ), (6)
where the coefﬁcient λshows the difference of the tensor from a spherical one.
Let us emphasize that the axial symmetry approximation, which is made in ( 5)–(6), is
not at all restrictive: the subsequent analysis involves averaging both inertia and magnetictensors over a period of object’s rotation about the axis with the greatest moment of inertia.After such averaging, an arbitrary tensor is not different from axially symmetric. In generalcase, for an object with principal moments of inertia J
x/primex/prime,Jy/primey/prime,Jz/primez/prime(Jy/primey/prime≥Jx/primex/prime≥Jz/primez/prime,
Jy/primey/prime>Jz/primez/prime) and magnetic tensor with diagonal components Sx/primex/prime,Sy/primey/prime,Sz/primez/primewritten in the
same axes (magnetic tensor here does not have to be diagonal) the “effective” values of A,
C,S∗,a n dλcan be calculated as follows:
A=Jy/primey/prime,C=Jz/primez/prime+Jx/primex/prime−Jy/primey/prime,
S∗=Sy/primey/prime,λ=Sz/primez/prime+Sx/primex/prime
Sy/primey/prime−1.(7)
No other modiﬁcations in any subsequent formulae are required.
Using the presented set of parameters, one can estimate the characteristic values of the
gravitygradient ( 2) and the eddycurrent ( 3) torques:
MG∼2.6m Nm ,
MEC∼0.17 mN m .(8)
The fact that MEC/lessmuchMGallows us to place these torques to the different levels of the
perturbation hierarchy.
12362 Page 6 of 25 S. Eﬁmov et al.
Fig. 1 Semiorbital reference
frame
Ascending nodeX
Y
ZO
Equatorial planeOrbital plane
parallel
3 Analytical study of fast rotations evolution
We shall start examining the secular effects in the attitude dynamics of space debris with the
analysis of fast rotations evolution. This analysis, as we have mentioned in the Introduction,is carried out in two steps. At ﬁrst, we discuss the inﬂuence of the dominant conservativedisturbances (gravitygradient torques and orbit precession). Secular effects caused by thesedisturbances are well known to specialists; nevertheless, we begin by brieﬂy reviewing theseeffects to pave the way for the next step of our analysis. Since the nonconservative perturbation (eddycurrent torque) is weaker than the conservative one [see estimates ( 8)], we
ﬁnd it possible to take the “conservative” model as a point of departure for studying the“nonconservative” evolution by perturbation techniques.
3.1 Reference frames
We shall use several reference frames with the common origin in the object’s center of mass
O.
OXYZ is a semiorbital reference frame: axis OYis perpendicular to the orbital plane,
axis OZis parallel to the vector from the Earth’s center to the ascending node, and axis OX
completes the righthanded coordinate system (Fig. 1).
Oxyz is a reference frame bound to the angular momentum Lof the object with respect
to its center of mass: axis Oygoes along L,a n da x i s Oxlies in the orbital plane (Fig. 2). The
attitude of Oxyz with respect to OXYZ is described by angles ρ,σ. (Let us note that given
the values of these angles, we deﬁne the direction of the angular momentum Las well.)
Ox/primey/primez/primeis a bodyﬁxed frame with the axes directed along the object’s principal axes of
inertia. This is the frame in which tensors Jand Sin (4)–(7) are written.
Numeric experiments show that the ﬂat rotation regime, which sets in after the transient
stage, is preserved during the subsequent stage of exponential deceleration. That is to say,vector Lremains virtually perpendicular to the object’s symmetry axis. This fact helps sim
plifying the mathematical model: we further assume that Oy
/primeis always directed along Land
123Longterm attitude dynamics of space debris Page 7 of 25 62
y, y'
zO
z'xx'
ψψy
zσρσρ
ZO
XY
x
Fig. 2 Orientation of reference frame Oxyz relative to OXYZ (left) and orientation of reference frame
Ox/primey/primez/primerelative to Oxyz (right)
thus coincides with Oy. (This approach allows rigorous justiﬁcation, which is omitted here.)
Letψbe a rotation angle around Oy, which describes the attitude of the body frame Ox/primey/primez/prime
with respect to Oxyz . When ψ=0, the two frames coincide with each other (Fig. 2).
We shall denote the unit vectors of the introduced reference frames by eξ,w h e r et h el o w e r
index ξrefers to the corresponding coordinate axis ξ∈{X,..., x..., x/prime,...}. The unit
vector eycan also be denoted by eLto emphasize that it is directed along L.
Let us introduce two transformation matrices:
/Gamma1=⎡
⎣cosσ 0 −sinσ
sinσsinρ cosρ cosσsinρ
sinσcosρ−sinρcosσcosρ⎤
⎦,/Gamma1/prime=⎡
⎣cosψ 0−sinψ
01 0
sinψ 0c o s ψ⎤
⎦,
where /Gamma1transforms vectors from semiorbital reference frame to Oxyz ,a n d/Gamma1/primetransforms
vectors from Oxyz to the body frame Ox/primey/primez/prime.
3.2 “Conservative” evolution (MEC=0)
The combined inﬂuence of the gravitygradient torque and the orbit evolution on the rotational
motion of a satellite was studied in Cochran ( 1972 ) and Henrard and Murigande ( 1987 ). In this
case, the magnitude of the angular momentum vector is an approximate integral of motion.The direction of Lwith respect to the semiorbital frame is described by the equations:
dσ
dτ=∂H
∂p,dp
dτ=−∂H
∂σ, (9)
where
H=−/radicalBig
1−p2sinσsini−pcosi−κip2
2ω,
p=cosρ, ω =|L|
Aω∗,ω ∗=3
4/parenleftbigg
1−C
A/parenrightbiggω2
o
n/Omega1κi,
κi=/parenleftbig
cos2/3i+sin2/3i/parenrightbig3/2,τ=n/Omega1t.(10)
12362 Page 8 of 25 S. Eﬁmov et al.
The idea of how to obtain the “conservative” evolution equations ( 9) is given, for example,
in the paper Fabrycky et al. ( 2007 ). To simplify further application of perturbation techniques,
Formulae ( 9)–(10) are written in terms of dimensionless variables and parameters. (For
instance, τis the dimensionless time.)
It is important to note that system ( 9) admits stationary solutions, which are referred to as
Cassini states (Henrard and Murigande 1987 ). The number of the Cassini states can be either
four or two, depending on whether the object’s angular velocity value is greater than theauxiliary quantity ω
∗introduced by ( 10). Thus, the dimensionless angular velocity ωin (10)
is deﬁned in such a way that the bifurcation is reached at ω=1. For typical rocket bodies
in SSO, the bifurcation value ω∗of angular velocity is about 100◦/s, which is signiﬁcantly
greater than the observed angular velocities immediately after payload separation. Therefore,without loss of generality, we shall further consider only ω< 1, in which case there are always
four Cassini states: three stable and one unstable (Henrard and Murigande 1987 ).
If we draw trajectories of the unit vector
e
L=/parenleftbigg/radicalBig
1−p2sinσ,p,/radicalBig
1−p2cosσ/parenrightbiggT
on the surface of a sphere S2, the separatrices proceeding out of the unstable equilibrium
divide this surface into three regions (Fig. 3). Depending on positions of these regions with
respect to the orbital plane, we shall denote them by RU(upper), RM(middle), and RL
(lower). The stable Cassini states belonging to these regions are denoted by PU,PM,a n d
PL, respectively. The unstable Cassini state is denoted by PS. The values of pin the Cassini
states are roots of the equation:
p4+2/parenleftbiggω
κi/parenrightbigg
cosi·p3+/bracketleftBigg/parenleftbiggω
κi/parenrightbigg2
−1/bracketrightBigg
·p2−2/parenleftbiggω
κi/parenrightbigg
cosi·p−/parenleftbiggω
κi/parenrightbigg2
cos2i=0.(11)
For nearly polar retrograde orbits, approximate expressions for the roots of Eq. ( 11) can
be easily obtained as:
PUstate: p=/parenleftbig
1−ω2/parenrightbig1/2+O(cosi), σ =π
2;
PSstate: p=cosi
1−ω+O(cos2i), σ =π
2;
PMstate: p=−cosi
1+ω+O(cos2i), σ =3π
2;
PLstate: p=−/parenleftbig
1−ω2/parenrightbig1/2+O(cosi), σ =π
2.
Let us use the value hof the Hamiltonian Halong the corresponding solution and the value
of the dimensionless angular velocity ωas parameters in the family of periodic solutions to
the system given by Eq. ( 9):
σ(τ, h,ω) , p(τ,h,ω) . (12)
We shall refer to these periodic solutions as Cassini cycles . They are represented by closed
curves on the sphere S2around the stable Cassini states (Fig. 3).
Let us consider the values that the Hamiltonian h(ω) can take on the solutions ( 12).
The maximum hM(ω)and the minimum hL(ω)values of the Hamiltonian correspond to
the stationary solutions PMand PL, respectively. In the region RU, the minimum of the
Hamiltonian hU(ω)is reached on the stationary solution PU. Separatrices have the same
value of the Hamiltonian h=hS(ω)with the unstable stationary solution PS. It follows
123Longterm attitude dynamics of space debris Page 9 of 25 62
Fig. 3 Cassini states and Cassini
cycles
PM
PLPU
PS
SSS
XY
Z
XY0PU
PM
PLPS
XY0.2PU
PMPS
PLXY0.4PU
PM
PLPS
XY0.6 PU
PM
PLPS
XY0.8PU
PM
PLPS
XY1
PU
PLPMSP
Fig. 4 Cassini cycles and separatrices dividing the regions RU,RM,a n d RLfor different values of dimen
sionless angular velocity ω. Cases ω=0a n dω=1 are degenerate. Bifurcation takes place for ω=1: Cassini
states PUand PSmerge, and RUregion vanishes. For ω→0 (i.e., for very slow rotations), the width of RM
region tends to zero
that for the trajectories enclosing PM(i.e., trajectories belonging to RM):h∈(hS,hM),f o r
trajectories in RU:h∈(hU,hS), and for trajectories in RLh∈(hL,hS). Transformations
of the regions RM,RU,a n d RLfor different values of ωare shown in Fig. 4.
12362 Page 10 of 25 S. Eﬁmov et al.
Vector Lmoves along a Cassini cycle with a period, which is calculated as follows
TCassini(h,ω)=2pmax/integraldisplay
pmindp
(dp/dτ)=2pmax/integraldisplay
pmindp√R4(p)=4ω
κiI0. (13)
Here, pmaxand pminare maximum and minimum values of pfor a given cycle, respectively,
and designation Ikis used for integrals
Ik=pmax/integraldisplay
pminpkdp√−(p−p1)(p−p2)(p−p3)(p−p4), (14)
where p1,..., p4are roots of the equation R4(p)=0,
R4(p)=/parenleftbig
1−p2/parenrightbig
sin2i−/parenleftbigg
h+pcosi+κip2
2ω/parenrightbigg2
. (15)
For values of h∈(hU,hS), which correspond to Cassini cycles in RLorRU, roots
p1,..., p4∈R1;f o r h<hU(Cassini cycle in RL)o r h>hS(Cassini cycle in RM)
roots p1,p2∈R1,p3,p4∈C1(p4=p3). The values of integration limits in ( 13)f o r
cycles in RLand RMarepmin=p1,pmax=p2; the corresponding values for cycles in RU
arepmin=p3,pmax=p4. (Rational roots of Eq. ( 15) are arranged in ascending order of
magnitude.)
Integrals Ikcan be expressed through complete elliptic integrals of 1st, 2nd, and 3rd kind
(Byrd et Friedman 1954 ).
3.3 Derivation of evolution equations describing the eddycurrent torque impact:
averaging along the orbital motion and rotation about the center of mass
Let us introduce the dimensionless eddycurrent torque:
MEC=(B2
∗S∗ω∗)−1MEC, (16)
where B∗=μ0μE//parenleftbig
4πR3
O/parenrightbig
is the characteristic magnitude of the magnetic ﬁeld along the
orbit, and S∗is the characteristic value of the magnetic tensor, which was previously deﬁned
by (6). Let us denote by B=B/B∗the dimensionless vector of the magnetic ﬁeld, whose
components in the semiorbital frame can be expressed in terms of inclination iand the
argument of latitude u:
BX=(1−3s i n2u)sini,BY=cosi,BZ=− 3s i n ucosusini.
To describe the evolution of rotation accounting for the inﬂuence of eddy currents, we
introduce a small nonconservative perturbation associated with MECinto the system of
equations ( 9):
dσ
dτ=∂H
∂p+εfσ,dp
dτ=−∂H
∂σ+εfp,dω
dτ=εfω, (17)
123Longterm attitude dynamics of space debris Page 11 of 25 62
where
ε=B2
∗S∗
An/Omega1,fσ=1
ω/radicalbig
1−p2/parenleftbig
ex,/angbracketleftMEC/angbracketrightψ,u/parenrightbig
,
fp=−1
ω/radicalBig
1−p2/parenleftbig
ez,/angbracketleftMEC/angbracketrightψ,u/parenrightbig
,fω=/parenleftbig
eL,/angbracketleftMEC/angbracketrightψ,u/parenrightbig
,
/angbracketleft·/angbracketrightψ,u=1
4π2/integraldisplay/integraldisplay
(·)dψdu.
Relations ( 17) can be obtained by a reduction to the case of ﬂat rotation of more general evo
lution equations, proposed by Beletsky in his classical studies on attitude dynamics (Beletsky1966 ).
To study the secular effects in the attitude motion with the use of Eq. ( 17), we need to
obtain an expression for the averaged dimensionless torque /angbracketleftM
EC/angbracketrightψ,u. For convenience, we
shall represent the MECas the sum of two terms, which will be averaged separately:
MEC=MEC,1+MEC,2. (18)
The term
MEC,1=B×/Sigma1(B×ωeL) (19)
m a yb ec a l l e da dissipative component , as it causes the slowing down of the object’s rotation
(Ormsby 1967 ). Here, /Sigma1is the dimensionless magnetic tensor obtained by transforming tensor
/Sigma1/prime=S/S∗=diag(1,1,λ )from the bodyﬁxed frame Ox/primey/primez/primetoOXYZ . The second term
in (18) will be called an orbital component , as it is related to the change of the magnetic ﬁeld
along the orbit [term ˙Bin (3)]:
MEC,2=χB×/Sigma1dB
du=−χB×/Sigma1(2B×eY+sini·eZ),χ=ωD
ω∗, (20)
where ωDandω∗were previously introduced in ( 1)a n d( 10).
Remark It follows from ωD/lessmuchω∗thatχ/lessmuch1a n d |MEC,1|/greatermuch| MEC,2|at the stage
of exponential deceleration (ω∼1). Nevertheless, our numeric experiments show that if
the inﬂuence of MEC,2is neglected, there appears a signiﬁcant discrepancy between the
solutions of nonaveraged equations and solutions of the system ( 17), which arises long
before the moment when the angular velocity value becomes comparable to ωD≈ωo.
Let us start the averaging procedure with the ﬁrst term of MEC. Introducing for vector B
the matrix
ˆB=⎡
⎣0−BZ BY
BZ 0−BX
−BY BX 0⎤
⎦,
we shall transform the expression for MEC,1as follows:
MEC,1=ωˆB/Sigma1ˆBeL=ωˆB/Gamma1T/Gamma1/primeT/Sigma1/prime/Gamma1/prime/Gamma1ˆBeL. (21)
Considering that the components of the magnetic ﬁeld vector are written in the semiorbital
reference frame, we average the expression ( 21) over ψ:
/angbracketleftbig
MEC,1/angbracketrightbig
ψ=ωˆB/angbracketleft/Sigma1/angbracketrightψˆBeL,
12362 Page 12 of 25 S. Eﬁmov et al.
where
/angbracketleft/Sigma1/angbracketrightψ=/Gamma1T/angbracketleftbig
/Sigma1/prime/prime/angbracketrightbig
ψ/Gamma1,/angbracketleftbig
/Sigma1/prime/prime/angbracketrightbig
ψ=/angbracketleftBig
/Gamma1/primeT/Sigma1/prime/Gamma1/prime/angbracketrightBig
ψ=⎡
⎣1+λ
200
010
001+λ
2⎤
⎦.
Taking into account
/Gamma1T/angbracketleftbig
/Sigma1/prime/prime/angbracketrightbig
ψ/Gamma1=1+λ
2E3+1−λ
2eLeT
L,
where E3is the identity matrix, we obtain the following expression for/angbracketleftbig
MEC,1/angbracketrightbig
ψ:
/angbracketleftbig
MEC,1/angbracketrightbig
ψ=(1+λ)ω
2ˆB2eL. (22)
Averaging of Eq. ( 22) along the orbital motion yields:
/angbracketleftbig
MEC,1/angbracketrightbig
ψ,u=−(1+λ)ω
2/Xi1eL, (23)
where
/Xi1=⎡
⎣ξ11ξ12 0
ξ21ξ22 0
00 ξ33⎤
⎦,
ξ11=1+1
8sin2i,ξ 12=ξ21=1
4sin 2 i,
ξ22=5
2sin2i,ξ 33=1+3
8sin2i.
If sin i/negationslash=0, the matrix /Xi1is positive deﬁnite. The greatest and the smallest eigenvalues
of this matrix are
ηmin,max=1
2/parenleftBigg
1+21
8sin2i±/radicalbigg
1−15
4sin2i+297
64sin4i/parenrightBigg
.
Let us proceed to the averaging of the second (orbital) term of the MECtorque. In the
expression for MEC,2, we shall also replace the dimensionless vector Bby the matrix ˆB:
MEC,2=−χ/bracketleftBig
2ˆB/Sigma1ˆBeY+sini·ˆB/Sigma1eZ/bracketrightBig
. (24)
Averaging of ( 24) yields:
/angbracketleftbig
MEC,2/angbracketrightbig
ψ,u=−χ/bracketleftBig
2/angbracketleftBig
ˆB/angbracketleft/Sigma1/angbracketrightψˆB/angbracketrightBig
ueY+sini/angbracketleftBig
ˆB/angbracketrightBig
u/angbracketleft/Sigma1/angbracketrightψeZ/bracketrightBig
.
The following relations are satisﬁed:
2/angbracketleftBig
ˆB/angbracketleft/Sigma1/angbracketrightψˆB/angbracketrightBig
ueY=−(1+λ)(ξ 12eX+ξ22eY)
−(1−λ)sinρ/bracketleftbig/angbracketleftBxBz/angbracketrightuex−/angbracketleftbig
B2
x/angbracketrightbig
uez/bracketrightbig
,
/angbracketleftBig
ˆB/angbracketrightBig
u/angbracketleft/Sigma1/angbracketrightψeZ=1
2/braceleftbig
(1+λ)/bracketleftbig/angbracketleftBY/angbracketrightueX−/angbracketleftBX/angbracketrightueY/bracketrightbig
+(1−λ)sinρcosσ/bracketleftbig
−/angbracketleftBz/angbracketrightuex+/angbracketleftBx/angbracketrightuez/bracketrightbig/bracerightbig
, (25)
123Longterm attitude dynamics of space debris Page 13 of 25 62
where
/angbracketleftBX/angbracketrightu=−1
2sini,/angbracketleftBY/angbracketrightu=cosi,/angbracketleftBx/angbracketrightu=−1
2cosσsini,
/angbracketleftBz/angbracketrightu=−1
2sinisinσcosρ−cosisinρ,/angbracketleftbig
B2
x/angbracketrightbig
u=1
4sin2i/parenleftbigg9
2+cos2σ/parenrightbigg
,
/angbracketleftBxBz/angbracketrightu=1
2sinicosσ/parenleftbigg
sinρcosi+1
2sinicosρsinσ/parenrightbigg
.
Using the relations ( 25), we obtain:
/angbracketleftbig
MEC,2/angbracketrightbig
ψ,u=9
8χsin2i/bracketleftbig
2(1+λ)eY+sinρ(λ−1)ez/bracketrightbig
. (26)
System ( 17) is of instrumental value to us. We shall use it to construct evolution equations,
describing the rotational motion of the object at long time intervals. It may be difﬁcult todraw deﬁnite conclusions about the properties of motion directly from Eq. ( 17). However,
it is worthwhile noticing that the last equation in the system ( 17) allows writing down the
following inequalities, characterizing the changes in the value of the dimensionless angularvelocity during the object’s fast rotation (Sarychev and Sazonov 1982 ):
exp/bracketleftbigg
−εη
max(1+λ)(τ−τ0)
2/bracketrightbigg
≤ω(τ)≤exp/bracketleftbigg
−εηmin(1+λ)(τ−τ0)
2/bracketrightbigg
. (27)
Inequalities ( 27) become invalid when the magnitude of the angular velocity becomes
comparable to ωo.
3.4 Averaging along Cassini cycles
For small ε, the behavior of the variables σand pin the solutions of the system ( 17) can be
described as a Cassini cycle with slowly changing parameters h,ω. Let us write the equations
forh,ωand average them along the solutions ( 12):
dh
dτ=ε
TCassini(h,ω)TCassini/integraldisplay
0/bracketleftbigg∂H
∂σfσ(σ(τ/prime,h,ω) , p(τ/prime,h,ω) ,ω)
+∂H
∂pfp(σ(τ/prime,h,ω) , p(τ/prime,h,ω) ,ω) +∂H
∂ωfω(σ(τ/prime,h,ω) , p(τ/prime,h,ω) ,ω)/bracketrightbigg
dτ/prime,
dω
dτ=ε
TCassini(h,ω)TCassini/integraldisplay
0fω(σ(τ/prime,h,ω) , p(τ/prime,h,ω) ,ω) dτ/prime. (28)
We shall refer to Eq. ( 28) as evolution equations. For convenience, let us write the right
hand sides of Eq. ( 28)a ss u m so fi n t e g r a l s Ik, which were introduced previously by Eq. ( 14):
dh
dτ=ε
2I06/summationdisplay
k=0CkIk,dω
dτ=ε
2I04/summationdisplay
k=0WkIk, (29)
12362 Page 14 of 25 S. Eﬁmov et al.
where
Ck=−(1+λ)c(1)
k+9
4χsin2i·c(2)
k,Wk=−(1+λ)w(1)
k+9
4χsin2i·w(2)
k,
c(1)
0=1
8h(1+2h2+3c o s2 i),c(1)
1=3
16cosi/bracketleftBig
8h/parenleftBigκi
3ω+h/parenrightBig
+9c o s2 i−1/bracketrightBig
,
c(1)
2=9
32ω[2hω+3κi+(5κi+6hω)cos 2 i],c(1)
3=κi
4ω2(κi−3hω)cosi,
c(1)
4=−3κi
16ω2[hκi+3ω(1+3c o s2 i)],c(1)
5=−3κ2
i
4ω2cosi,c(1)
6=−κ3
i
16ω3,
c(2)
0=−3+λ
ωcosi,c(2)
1=−3+λ
ω2(κi+hω), c(2)
3=5+3λ
2ω2κi,
w(1)
0=ω
16(19−4h2−3c o s2 i), w(1)
1=−3
2hωcosi,
w(1)
2=−1
16[4hκi+9ω(1+3c o s2 i)],w(1)
3=−3
4κicosi,w(1)
4=−κ2
i
16ω,
w(2)
1=2(1+λ).
Upper index in c(i)
k,w(i)
kdenotes the corresponding component of the eddycurrent torque
(18). All coefﬁcients that are not listed here equal zero.
Applying the method of averaging in situations where the qualitative transformation of
motion occurs (passage through the separatrix), we rely on the justiﬁcation of the correctnessof this procedure, given in Neishtadt ( 2017 ). The presence of multiple fast variables in our
system is not essential.
3.5 Evolution equations and qualitative analysis of large debris objects’ dynamics
for fast rotations about the center of mass
For a better understanding of the rotational motion evolution, let us draw phase portraits for
the system ( 28). In order to see how far a solution goes into one of the regions RL−RU,w e
shall use “relative” variables ˜hinstead of h:
˜h=h−hL(ω)
hS(ω)−hL(ω)(inRLregion) ,˜h=h−hS(ω)
hM(ω)−hS(ω)(inRMregion) ,
˜h=h−hU(ω)
hS(ω)−hU(ω)(inRUregion) .(30)
We shall also use the auxiliary variable ˜ωwhich shows the ratio of the object’s angular
velocity to the mean motion ωo. It is related to previously used dimensionless angular velocity
ωas follows:
˜ω=ω∗
ωoω. (31)
Figure 5shows the phase portraits in the space/parenleftBig
˜ω,˜h/parenrightBig
, which describe the longterm
evolution of Cassini cycles. The interval of angular velocities here corresponds to the appli
cability range of the averaged equations ( 29), i.e., from angular velocities comparable to mean
motion ( ˜ω∼1) to critical angular velocity value, at which two Cassini states vanish ( ω=1).
As the real values of the angular velocity are usually much smaller than ω∗, this practically
covers all possible variants of the exponential deceleration stage. Generally, trajectories of
123Longterm attitude dynamics of space debris Page 15 of 25 62
SPM1 101102103
1000 100 100.00.20.40.60.81.0
h
PLS1 101102103
1000 100 100.00.20.40.60.81.0
h
PUS1 101102103
1000 100 100.00.20.40.60.81.0
h
Fig. 5 Evolution of “osculating” Cassini cycles
the system depend on the object’s parameters; however, this dependence is weak and Fig. 5
correctly reﬂects the qualitative evolution of Cassini cycles in SSO for most objects.
Let us analyze the acquired results. Because of exponential deceleration due to eddy
current torque, all trajectories head toward the zone of lower angular velocity values (Fig. 5).
Am a po f RMreveals that most of the trajectories starting in this region do not leave RM
and converge toward the Cassini state PM. The trajectories entering this region through the
separatrices Salso tend to PM. Most of the trajectories in RLare directed toward the separatrix
and cross it, leaving RL.
The dynamics in the region RUis most interesting. Typical trajectories in this region
are “S” shaped. The downward ﬂow of trajectories in the region of high angular velocities(˜ω/greaterorsimilar700) exists mainly as an artifact of normalization ( 30). Because at ω=1 the region R
U
vanishes and the point PUmerges with the separatrix (Fig. 4)f o rω/lessorsimilar1, the apparent general
direction of the trajectories in Fig. 6is deﬁned by the rapid inﬂation of RU. The dynamics
in the rest of the region RUis characterized by the change in trajectories’ ﬂow direction
f r o mu p w a r dt od o w n w a r da t ˜ω∼10−50. It is governed by the interplay of two components
12362 Page 16 of 25 S. Eﬁmov et al.
Fig. 6 Multisheet phase portrait:
phase portraits for regions RU,
RM,a n d RLput togetherPM
Sln(ω)τ
PL
PU
in eddycurrent torque: dissipative MEC,1and orbital MEC,2given by Eqs. ( 19)a n d( 20),
respectively.
As|MEC,1|∝ω, while MEC,2does not depend on ω, the evolution for very fast spins
is deﬁned by the dissipative component of the eddycurrent torque, which drives the angularmomentum toward the orbital plane. Consequently, for ˜ω∈(50,700)the ﬂows of trajectories
in the R
Land RUregions are directed toward the separatrices and look very much alike.
The orbital component MEC,2of the eddycurrent torque, as seen from Eq. ( 26), has a
part directed along eY, which is close to the direction toward PU(Fig. 4). Therefore, this
component spins the debris object up about the orbital normal and results in deﬂection oftrajectories in R
Utoward PUat˜ω∼10−50. It should be noted that this interval corresponds
to relatively fast spins for which |MEC,1|/greatermuch| MEC,2|. However, near the separatrix the
directions of these torques turn out to be such that MEC,1mainly affects angular velocity
value, while the direction of rotational axis is primarily inﬂuenced by MEC,2. Thus, the orbital
component of eddycurrent torque starts to have a noticeable effect on attitude dynamics longbefore the value of the angular velocity becomes comparable to mean motion.
In other words, the orbital component of the eddycurrent torque keeps most of the tra
jectories in R
Ufrom crossing the separatrix, while in RLit only increases the rate at which
trajectories approach the separatrix. Overall, as Fig. 5indicates, most of the trajectories start
ing in RMand RUremain in respective regions. In contrast to this, almost all trajectories
from the region RLdo cross the separatrix and transit to RMorRU.
To illustrate the transitions of phase trajectories between the regions, phase portraits
(Fig. 5) are joined together along the separatrices, as shown in Fig. 6. Directions of tran
sitions are indicated in Table 1.
The values ωT1≈0.03,ωT2≈0.14,ωT3≈0.2, and ωT4≈0.27 of the dimensionless
angular velocity separate the attracting and repelling segments of the border Sof the phase
portraits in Fig. 5. Transitions in the odd columns of Table 1have quasiprobabilistic nature
(Neishtadt 2005 ). Roughly speaking, it means that the behavior of the original nonaveraged
123Longterm attitude dynamics of space debris Page 17 of 25 62
Table 1 Transitions between regions RL,RM,RUthrough separatrices
ω<ω T1 ωT1<ω<ω T2 ωT2<ω<ω T3 ωT3<ω<ω T4 ωT4<ω< 1
RL/arrownortheast
/arrowsoutheastRU
RMRU
RL/arrowsoutheast
/arrownortheastRM RL/arrownortheast
/arrowsoutheastRU
RMRM
RL/arrowsoutheast
/arrownortheastRU RM/arrownortheast
/arrowsoutheastRU
RL
system is highly sensitive to changes in the initial conditions, i.e., even small variations of
phase variables may entail the change in type of the transition to follow. Therefore, uncertainties, always existing in practice, do not allow uniquely determining the type of the system’sevolution near the separatrix S. Thus, it is more appropriate to discuss separatrix crossing,
when two regions are available for transit, in terms of the probabilities of a trajectory goingto either one of these two regions [cf. Henrard and Murigande ( 1987 )].
3.6 Classification of longterm evolution scenarios: mapping the space of initial
conditions
To study how the attitude motion evolution throughout the whole stage of exponential decel
eration depends on the initial values of ρandσ, we consider an object with parameters ( 4)
rotating with the angular velocity 12◦/s(˜ω=200,ω≈0.086). This value of the initial
angular velocity, on the one hand, is close to angular velocity of real rocket bodies afterpayload separation (De Pontieu 1997 ) and, on the other hand, corresponds to approximately
even partition of the initial conditions space to regions R
L,RM,a n d RUin terms of their
area (Fig. 4), thus producing a representative set of different dynamical cases.
Let us classify different scenarios of the attitude motion longterm evolution by pairs of
regions Ri→Rf, where index idenotes the region in which the evolution starts, and index
findicates the region in which the system is found by the end of the exponential deceleration
stage. Both indices i,f∈{L,M,U}. This notation implies nine possible scenarios. However,
judging by the phase portrait of the region RM(Fig. 5)w h a ts t a r t si n RMstays in RM, and thus
only one out of three RM→Rfscenarios actually exists, namely RM→RM. Also there
are no transitions leading into RL; therefore, RU→RLis impossible as well as RM→RL.
Lastly, the scenario RL→RL, although feasible according to Fig. 5, turns out to have a
negligibly small phase area of the corresponding initial conditions. Thus, to all practicalpurposes there remain ﬁve different scenarios of longterm evolution:
R
U→RU,RU→RM,RM→RM,RL→RM,RL→RU.
To give an idea of how the phase trajectories corresponding to different scenarios are mixed,
we present in Fig. 7the partition of the initial conditions ( ρandσ) for the twiceaveraged
system ( 17).
According to the analysis in Sect. 3.5, if evolution starts in RU, the system in most cases
remains in RUduring the whole exponential deceleration stage. However, if initial conditions
are close enough to separatrix, the transit RU→RMcan take place (Fig. 6), as revealed by
the narrow band between RUand RMcorresponding to this scenario (Fig. 7).
Trajectories starting from the region RLeventually come to the separatrix. After that they
may go into RMorRU(Fig. 6). According to the ﬁrst column of Table 1, this transition
is always quasiprobabilistic at low angular velocities. Therefore, the division of longtermevolution into scenarios R
L→RMand RL→RUin the lower region is quasiprobabilistic
12362 Page 18 of 25 S. Eﬁmov et al.
Fig. 7 Map of different evolution scenarios in the space of initial conditions for twiceaveraged system. Points
N1–N5denote initial conditions used in numerical simulations in Sect. 4. On the right side, the enlarged sector
Qof the map is shown
as well. In Fig. 7, subdomains of RLcorresponding to these two scenarios appear as tightly
interleaved stripes. This clearly demonstrates the connection between quasiprobability andthe high sensitivity to initial conditions: even a small variation of ρmay put the system onto
a different stripe leading to a different region, which is why uncertainty in initial ρvalue
does not allow uniquely determining the type of subsequent evolution.
The sensitivity to initial conditions also means that the map in Fig. 7obtained via averaged
equations ( 17) does not predict exactly the type of evolution in the original nonaveraged
system. Speciﬁcally, the stripes in the lower region of this map may have a slight offsetrelative to their positions in the corresponding cross section of the nonaveraged system’sfourdimensional map. Nevertheless, Fig. 7gives an approximately correct representation
of the stripes’ density and their relative widths, which deﬁne probabilities of occurrence forrespective scenarios.
The actual probabilities of occurrence for scenarios R
L→RMand RL→RUdepend
on the object’s parameters: numerical experiments demonstrate that the greater relative value
of the eddycurrent torque results in the greater probability of transitions into RU.
4 Numerical study of fast rotation evolution of large space debris
o b j e c t si nS S O
4.1 Numerical simulation setup
The regimes of motion described earlier in Sect. 3are of temporary character. They are
destroyed when the angular rate decreases to become comparable to ωo. From this point,
the rotation evolution cannot be described by Eq. ( 28), derived under the assumption of the
123Longterm attitude dynamics of space debris Page 19 of 25 62
Fig. 8 Comparison of numerical simulation results (black points) with solutions of twiceaveraged system
(solid orangeyellow line) and thriceaveraged system (dashed cyanblue line on ρ(t)plot)
object’s fast rotation. Hence, to study the transformations of the motion regimes and discover
the ﬁnal motion modes, we carried out numerical experiments. Furthermore, the numericalsimulation was necessary to corroborate the conclusions drawn in Sect. 3for objects with
realistic parameter values ( 4), because in that case ε≈0.5. Yet, even for such values of
the parameter εthe averaged equations ( 28) proved to be accurate enough to describe both
qualitative and quantitative properties of the object’s motion in the stage of exponentialdeceleration. We may also recall here that the averaging procedures were conducted with asimpliﬁed model of the magnetic ﬁeld (axial dipole), whereas a more precise model (tilteddipole) is employed in simulations. The validity of this assumption is conﬁrmed as well.
In all simulations, the following motion characteristics were kept track of:
– absolute value of angular velocity;
– angle δbetween the axis with the least moment of inertia and the local vertical;
– angles ρandσ, describing the angular momentum Ldirection.
All simulations start from an orbital position corresponding to the crossing of the ascending
node, and with the angular momentum directed along the axis with the greatest moment ofinertia, i.e., ﬂat rotation. The initial value of angular velocity equals 200 ω
oand is the same
as in Sect. 3.6.
4.2 Simulation results: validation of the averaged equations ( 17)a n d( 29)
Figure 8shows the comparison of numerical simulation results with the solutions of twice
averaged system ( 17) and thriceaveraged system ( 29). For the latter one, we used the mean
value of angle ρin the Cassini cycle for any given h. Thriceaveraged system is not presented
onσ(t)plot, because this angle deﬁnes the position on the cycle, and this information vanishes
when the motion is averaged over the cycle period. For both averaged systems, the set ofparameters modiﬁed in accordance with ( 7) was used.
It can be seen that solution of ( 17), which is plotted by the orangeyellow line, closely
follows the numerical results (black points) in the beginning, but then deviates from them asthe time grows. This happens due to rise of ﬂuctuations, caused by the gravitygradient torqueat smaller angular velocities. The conformity is totally lost at time t≈500 days with the
end of exponential deceleration and the beginning of the chaotic stabilization stage. Angularvelocity value at this moment equals approximately 4 ω
o(Fig. 9).
Figure 8also demonstrates how accurately the solution of the thriceaveraged system
(cyanblue line) describes the secular evolution of the angle ρ. Figure 9shows that plots of
12362 Page 20 of 25 S. Eﬁmov et al.
Fig. 9 Comparison of numerical simulation results (black points) with solutions of twiceaveraged system
(dashed orangeyellow line) and thriceaveraged system (dashed cyanblue line) for ˜ω(t)in normal (left) and
semilogarithmic (right) scales
Fig. 10 Evolution of angular velocity to mean motion ratio (left), scaled fragment of evolution showing the
stage of chaotic stabilization in greater detail (right)
angular velocity for twice and thriceaveraged systems practically coincide with each other
and, for times t/lessorsimilar500 days, with the results of numerical simulation.
4.3 Simulation results: exponential deceleration and chaotic stabilization
Numerical experiments show that the direction of the initial angular velocity has no signiﬁcant
effect on subsequent behavior of its absolute value. Typical dependence of angular velocityon time is presented in Fig. 10. It takes about 500–600 days for angular velocity to decrease
to values comparable to the mean motion. The right side of Fig. 10shows scaled graph so as
to demonstrate the stage of chaotic stabilization leading to the gravitygradient orientationof the object (˜ω∼1).
The moment t
Gwhen the graph δ(t)crosses the line δ=90◦for the last time is natural
to deﬁne as moment of gravitational capture. It is clearly seen in Fig. 11andtG=600–640
days for different simulations. At t>tG, angle δconverges to either 0◦or 180◦, as shown in
Fig. 11. These outcomes are equiprobable, the only difference between them being whether
the rocket body orbits the Earth with thrusters down or up. Gravitationally stabilized bodyrotates synchronously with the local vertical; therefore, after the t>t
Gthe angular velocity
value tends to ωo(˜ω→1), as seen in Fig. 10.
The invariable convergence of the evolution to the gravitygradient orientation is a conse
quence of signiﬁcant elongation of the considered rocketbody inertia ellipsoid, which leadsto the absolutely dominant role of the gravitygradient torque. For debris objects with less
123Longterm attitude dynamics of space debris Page 21 of 25 62
Fig. 11 Two different variants of gravitygradient orientation
Fig. 12 Evolution of angles ρandσ: an example of RM→RMscenario, based on set N1of initial conditions
elongated inertia ellipsoid, e.g., short rocket bodies similar to Ariane 5 or defunct satellites,
other ﬁnal motion regimes are possible (Eﬁmov et al. 2017b ).
4.4 Simulation results: evolution of angular momentum direction
To demonstrate all ﬁve scenarios of longterm evolution described in Sect. 3.6, numerical
simulations for ﬁve sets of initial condition N1–N5s h o w ni nF i g . 7were carried out. In all
subsequent plots, we shall use same colors as in Figs. 3,4,5and6to denote different regions
corresponding to the system’s state during the stage of exponential deceleration: orange—
RM,b l u e — RU, green— RL. Subsequent stages of chaotic stabilization and gravitygradient
orientation are colored gray.
Figure 12shows the evolution of angles ρandσin case N1, as an example of RM→RM
scenario. The middle region RMquickly becomes very narrow (Fig. 4) because ωdecreases
exponentially with time. Hence, motion in RMresembles oscillations of angular momentum
vector about direction ρ≈90◦,σ≈270◦, which for SSO approximately corresponds to
the direction toward the south celestial pole. The amplitudes of these oscillations decreaseover time (Fig. 12), as the system converges to Cassini state P
M(Fig. 3) in full agreement
with Fig. 5.
In Fig. 13, which shows the simulation results for case N2, the transition from region
RUtoRMatt≈140 days is visible. As the angular momentum vector becomes captured
in the middle region, the circulation of σover the whole interval [0◦,360◦)is replaced by
oscillation about σ=270◦.
Convex shape of plot ρin Fig. 14corresponds to the concavity of trajectories in RUin
Fig. 5at˜ω∼30. The angle ρincreases while system comes closer to the separatrix, and
12362 Page 22 of 25 S. Eﬁmov et al.
Fig. 13 Evolution of angles ρandσ: an example of RU→RMscenario, based on set N2of initial conditions
Fig. 14 Evolution of angles ρandσ: an example of RU→RUscenario, based on set N3of initial conditions
Fig. 15 Evolution of angles ρandσ: an example of RL→RMscenario, based on set N4of initial conditions
starts to decrease, when it moves back to PU. Thus, the axis of rotation in this scenario
initially leans toward orbital plane, but deﬂects back to the orbital normal at t∼300 days.
As explained in Sect. 3.5, this nonmonotonous behavior is caused by the inﬂuence of the
orbital motion on the eddycurrent torque.
Evolution for case N4is shown in Fig. 15. Here, capture in the middle region of the
trajectory that starts in RLis seen, which is very similar to case N2. Alternatively, Fig. 16
shows the evolution for case N5that starts very close to case N4(Fig. 7), but instead of being
captured into RM, the system jumps past it into RU. After that, the angular momentum vector
is carried away from the orbital plane toward PUby the orbital component of eddycurrent
torque, similar to the second half of the exponential deceleration stage in case N3.
Oscillations about the south celestial pole in RMcan also be considered as a resonance
phenomenon with resonant angle σ, since in this region mean precession rate of the angular
momentum vector in the inertial reference frame equals the precession rate of the orbital
123Longterm attitude dynamics of space debris Page 23 of 25 62
Fig. 16 Evolution of angles ρandσ: an example of RL→RUscenario, based on set N5of initial conditions
plane ( /angbracketleft˙σ/angbracketright= 0). Then, transitions into RM(Figs. 13,15) correspond to the capture into
resonance, while the transition RL→RUis passing through the resonance without capture,
which is characterized by the change of resonant angle σcirculation direction (Fig. 16).
Gray parts of plots in Figs. 12,13,14,15and16correspond to evolution following the
stage of exponential deceleration and thus complement the analytical study carried out inSect. 3. One can see that in all cases after the end of the chaotic stabilization stage, ρtends
to 0
◦, as the gravitationally stabilized object rotates about the orbital normal.
5 Conclusion
Using analytical techniques and numerical simulations, we have conducted a comprehensivestudy of the rotational motion of large objects in SSO. It is remarkable that despite seeminginsigniﬁcance, both precession of the orbit and inﬂuence of orbital motion on induced eddycurrents proved to have a major impact on attitude dynamics.
The natural next step is to discover the predicted effects in the motion of the real objects. In
particular, it would be desirable to check whether the angular momentum vector (for objectssimilar to those we have modeled) indeed oscillates in some cases about the direction to thesouth celestial pole.
The other potentially observable phenomenon is the lack of fast rotating objects with
retrograde spins (represented by region R
Lin our study). Most of them should fairly quickly
switch to prograde spins or become captured into angular momentum oscillations with theaxis of rotation lying near the orbital plane.
One of the possible prospects of our work is the study of the rotational evolution of large
space debris objects in the satellite class. In comparison with the rocket bodies, the inertiaellipsoid of a typical satellitelike object is more similar to a sphere. Preliminary simulationsshow that among the ﬁnal regimes for this class of objects there is not only the gravitygradientorientation, but also rotation about the orbital plane normal with mean angular velocity equalto 9ω
o/5(˜ω=1.8), which is governed by eddy currents. In addition, satellites might have a
signiﬁcant magnetic moment, which impacts the ﬁnal stages of evolution and leads to evengreater variety of ﬁnal regimes, including chaotic ones (Eﬁmov et al. 2017b ; Beletsky et al.
1999 ).
Acknowledgements Research reported in this paper was supported by RFBR (Grant 170100902).
12362 Page 24 of 25 S. Eﬁmov et al.
References
Albuja, A.A., Scheeres, D.J., McMahon, J.W.: Evolution of angular velocity for defunct satellites as a result
of YORP: an initial study. Adv. Space Res. 56, 237–251 (2015)
Anselmo, L., Pardini, C.: Ranking upper stages in low Earth orbit for active removal. Acta Astronaut. 122,
19–27 (2016)
Aslanov, V ., Yudintsev, V .: Dynamics of large space debris removal using tethered space tug. Acta Astronaut.
91, 149–156 (2013)
Beletsky, V .V .: Motion of an Artiﬁcial Satellite About Its Center of Mass. Israel program for scientiﬁc trans
lations, Jerusalem (1966)
Beletsky, V .V ., Lopes, R.V .F., Pivovarov, M.L.: Chaos in spacecraft attitude motion in Earth’s magnetic ﬁeld.
Chaos 9, 493–498 (1999)
Bonnal, C., Ruault, J.M., Desjean, M.C.: Active debris removal: recent progress and current trends. Acta
Astronaut. 85, 51–60 (2013)
Byrd, P.F., Friedman, M.D.: Handbook of Elliptical Integrals for Engineers and Physicists. Springer, Berlin
(1954)
Cochran, J.E.: Effects of gravitygradient torque on the rotational motion of a triaxial satellite in a precessing
elliptic orbit. Celest. Mech. 6, 127–150 (1972)
De Pontieu, B.: Database of photometric periods of artiﬁcial satellites. Adv. Space Res. 19, 229–232 (1997)
Eﬁmov, S., Pritykin, D., Sidorenko, V .: Attitude motion of large space debris in sunsynchronous orbits:
simulation of longterm evolution. Adv. Astronaut. Sci. 161, 131–142 (2017a)
Eﬁmov, S., Pritykin, D., Sidorenko, V .: Defunct Satellites in Nearly Polar Orbits: Longterm Evolution of
Attitude Motion. arXiv.1711.07046 (2017b). https://doi.org/10.1515/astro20180029
Fabrycky, D.C., Johnson, E.T., Goodman, J.: Cassini states with dissipation: why obliquity tides cannot inﬂate
hot Jupiters. Astrophys. J. 665, 754–766 (2007)
Gladman, B., Dane Quinn, D., Nicholson, P., Rand, R.: Synchronous locking of tidally evolving satellites.
Icarus 122, 166–192 (1996)
Golubkov, V .V .: Moment of forces in a magnetic ﬁeld. Cosm. Res. 10, 20–39 (1972)
Gomez, N.O., Walker, S.J.I.: Earth’s gravity gradient and eddy currents effects on the rotational dynamics of
space debris objects: Envisat case study. Adv. Space Res. 56, 494–508 (2015)
Henrard, J., Murigande, C.: Colombo’s top. Celest. Mech. 40, 345–366 (1987)
Hughes, P.C.: Spacecraft Attitude Dynamics. Dover Publications, Mineola (2004)International Association of Geomagnetism and Aeronomy. www.ngdc.noaa.gov/IAGA/vmod . Last checked
14 May 2018
Koshkin, N., Korobeynikova, E., Shakun, L., Strakhova, S., Tang, Z.H.: Remote sensing of the EnviSat and
Cbers2B satellites rotation around the centre of mass by photometry. Adv. Space Res. 58, 358–371
(2016)
Kucharski, D., Kirchner, G., Koidl, F., Fan, C., Carman, R., Moore, C.: Attitude and spin period of space debris
Envisat measured by satellite laser ranging. IEEE Trans. Geosci. Remote Sens. 52, 7651–7657 (2014)
Lemmens, S., Krag, H., Rosebrock, J., Carnelli, L.: Radar mappings for attitude analysis of objects in orbit.
In: Proceedings of the 6th European Conference on Space Debris (2013)
Lin, H.Y ., Zhao, C.Y .: Evolution of the rotational motion of space debris acted upon by eddy current torque.
Astrophys. Space Sci. 357, 167 (2015)
Martynenko, Y .G.: Effect of eddy currents on the rotation and attitude of a satellite. Cosm. Res. 23, 347–357
(1985)
Neishtadt, A.: Probability phenomena in perturbed dynamical systems. In: Gutkowski, W., Kowalewski, T.A.
(eds.) Mechanics of the 21st Century. Springer, Dordrecht (2005)
Neishtadt, A.: Averaging method for systems with separatrix crossing. Nonlinearity 30(7), 2871–2917 (2017)
Ojakangas, G.W., AnzMeador, P., Cowardin, H.: Probable rotation states of rocket bodies in low Earth orbit.
In: Proceedings of AMOS Conference (2012)
Ormsby, J.F.A.: Eddy current torques and motion decay on rotating shells. ESDTR6794 (1967)Praly, N., Hillion, M., Bonnal, C., LaurentVarin, J., Petit, N.: Study on the eddy current damping of the spin
dynamics of space debris from the Ariane launcher upper stages. Acta Astronaut. 76, 145–153 (2012)
Sagnieres, L.B.M., Sharf, I.: Stochastic modeling of hypervelocity impacts in attitude propagation of space
debris. Adv. Space Res. 59, 1128–1143 (2017)
Santoni, F., Cordelli, E., Piergentili, F.: Determination of disposedupperstage attitude motion by ground
based optical observations. J. Spacecr. Rockets 50, 701–708 (2013)
Sarychev, V .A., Sazonov, V .V .: Estimate of the inﬂuence of the dissipative magnetic moment from vortex
currents on the fast rotation of a satellite. Cosm. Res.
20, 297–300 (1982)
123Longterm attitude dynamics of space debris Page 25 of 25 62
Šilha, J., Pittet, J.N., Hamara, M., Schildknecht, T.: Apparent rotation properties of space debris extracted
from photometric measurements. Adv. Space Res. 61(3), 844–861 (2018)
Smith, G.L.: Effects of magnetically induced eddycurrents on spin motions of Earth satellite. NASA. TND
2198 (1964)
Vallado, D.A.: Fundamentals of Astrodynamics and Applications. Springer, New York (2007)Van der Pas, N., Lousada, J., Terhes, C., Bernabeu, M., Bauer, W.: Target selection and comparison of mission
design for space debris removal by DLR’s advanced study group. Acta Astronaut. 102, 241–248 (2014)
Visco, M., Lucchesi, D.M.: The LArase Satellites Spin mOdel Solutions (LASSOS): a comprehensive model
for the spin evolution of the LAGEOS and LARES satellites. ArXiv arXiv:1801.09098 (2018)
Ward, W.R.: Past orientation of the lunar spin axis. Science 183, 377–379 (1975)
Yanagisawa, T., Kurosaki, H.: Shape and motion estimate of LEO debris using light curves. Adv. Space Res.
50, 136–145 (2012)
123See discussions, st ats, and author pr ofiles f or this public ation at : https://www .researchgate.ne t/public ation/357562499
LQR based Optimal Control Design of Satellite Formation Flight in Earth
centered Circular Orbit
Conf erence Paper  · Januar y 2022
DOI: 10.2514/6.20220763
CITATIONS
2READS
1,063
2 author s:
Kumar dip Basak
Univ ersity of Mar yland, Colle ge Park
2 PUBLICA TIONS    2 CITATIONS    
SEE PROFILE
Dipak K umar Giri
Indian Instit ute of T echnolog y Kanpur
66 PUBLICA TIONS    269 CITATIONS    
SEE PROFILE
All c ontent f ollo wing this p age was uplo aded b y Kumar dip Basak  on 22 April 2022.
The user has r equest ed enhanc ement of the do wnlo aded file.1 
 LQR based Optimal Control Design of 
Satellite Formation Flight in Earth centered 
Circular Orbit  
Kumardip Basak1 
Indian Institute of Technology Kharagpur, Kharagpur, West Bengal, 721171, India  
Dipak Kumar Giri2 
Indian Institute of Technology Kanpur, Kanpur, Uttar Pradesh, 208016, India  
In this paper, the formation flight control of the relative translational dynamics of satellites 
moving in circular orbit around the Earth has been presented. Autonomous rendezvous and 
proximity operations of satellites  in formation are the one of the most advanced technologies 
in space missions. This work introduces the State space model of 2nd order approximated 
dynamics of satellite relative motion, which is further linearized to apply the Linear Quadratic 
Regulator c ontrol. The LQR optimal solution is derived with Continuous time Algebraic 
Riccati equation (CARE) and the system stability is proved using a suitable Lyapunov 
function. For the optimal solution of the quadratic cost functional, a novel approach with the 
help of Krotov conditions and convexity imposition has been derived. The existing cost 
functional for the system has been time parameterized using Extension principle and solved 
using a suitable Krotov function. The simulation results have been shown, for v arying cases 
proving the satisfactory transient and steady state response of the controlled system.  
I. Nomenclature  
𝑥,𝑦,𝑧              =    Relative position coordinates in Local Vertical Local Horizontal (LVLH) frame  
𝑥̇,𝑦̇,𝑧̇              =    Relative velocities in LVLH frame  
𝑥̈,𝑦̈,𝑧̈              =    Relative accelerations in LVLH frame  
𝜃̇= 𝜔            =    Angular velocity of satellite around the Earth  
𝜇                      =    Gravitational parameter for Earth  
𝑟𝑐                     =     Radius of the Leader satellite’s orbit with respect to the Earth’s center  
𝑢𝑥,𝑢𝑦,𝑢𝑧       =    Control thrusts/mass along x, y and z directions  
𝑀𝑒                   =    Mass of Earth  
𝑅𝑒                    =    Radius of Earth  
ℎ                      =    Altitude of satellite from Earth’s surface  
𝐺                      =    Universal Gravitational constant  
𝑡                       =    Time  
II. Introduction  
        In present day cutting edge technology and in the near future, the relative motion control of two or more 
spacecraft in orbit, as well as the automatic control of rendezvous and proximity operations are the most important 
missions in the space prog ram. Many papers have been published regarding control of spacecraft motion considering 
the nonlinear system of both translational and attitude dynamics in optimal or in non optimal way. In most of the 
                                                        
1 B.Tech Undergraduate, Department of Aerospace Engineering.  
2 Assistant Professor, Department of Aerospace Engineering.  2 
 papers, the solution is approached in an optimal way f or maintaining the tradeoff between fuel consumption and 
trajectory generation. Thus, efficient controls are one of the most critical issues.   
         In spacecraft relative motion control, two things come side by side that need to be addressed. One is th e 
translational dynamics which is related to orbital motion of both the satellites involved in Formation, and the other is 
Attitude dynamics, where the angular motion along the own body axis of the satellites is taken into fact. In this paper, 
the translat ional dynamics of spacecraft is being addressed, where relative motion control is considered and is desired 
to maintain a prescribed distance between them. The force acting in the system is the central Gravitational force 
(neglecting the J2 perturbations, solar radiation forces etc.). The relative motion in circular orbit is being considered, 
where the effect of nonlinear gravity is being approximated to 2nd order dynamics and then linearized. The quaternion 
based methods for spacecraft attitude determinati on and control are reviewed in [1]. A linearized set of equations of 
relative motion about a J2 perturbed elliptical reference orbit is being developed and simulated in [2]. In [3], the PID 
based control is done for tracking, formation and rendezvous opera tions in the Keplerian orbits taking nonlinear 
gravity into account. Both the nonlinear and linear model of translational dynamics is being modelled in State space 
form in [4] and controlled. The spacecraft with respect to which the dynamics is modelled is  called the ‘Leader’ vehicle 
in the Formation flying concept, which is assumed in this work to move in a circular orbit around the Earth. The 
companion vehicle, the ‘Follower’ spacecraft, that is to be at a desired distance from the Leader would be control led. 
The dynamics of the Leader vehicle is modelled as a circular motion in a plane with respect to the Earth frame, which 
is called Earth Cent ered Inertial (ECI) frame. Another frame of reference is described, which is though non inertial, 
and is fixed wi th the cent er of mass of the Leader vehicle, called Local Vertical Local Horizontal (LVLH) frame. The 
coordinates of the Follower are represented in the LVLH frame, whose translational dynamics is different in the ECI 
frame. The second order approximated d ynamics is considered in the LVLH frame in this paper, where angular motion 
of the Leader around the Earth is taken into calculation.  
The linearized State Space model of the system is formed with respect to a particular equilibrium point of the 
dynamical s ystem. The state vector consists of 3D position and velocity, and the inputs as the 3DOF actuator 
commands. In this model, the ideal actuators and thrusters are being considered. The optimal control (the continuous 
thrust control) of the system by the Line ar Quadratic Regulator (LQR) controller with full state feedback is designed. 
The LQR is the optimal control that takes into account the performance quality of the system, as well as the energy 
consumption as its argument and optimizes the control output. A detailed description of LQR based control and solving 
the optimization problem using the Riccati equation analytically, is presented in [1]. Nonlinear control of Error 
dynamics of the system using PID is described in [3]. An online trained neural network  for controlling the nonlinear 
system augmenting a LQR control of the linearized model is presented in [4], giving a robust and optimal control. A 
State Dependent Riccati Equation (SDRE) based nonlinear control is being approached in [5], controlling the 
Formation flight of satellites of both orbital and attitude dynamics. A separate type of optimal control, Neighboring  
Optimum feedback control law is introduced in [6] to control maneuvering  the Formation flight for fuel optimality 
condition. A real time su boptimal control for 6 DOF motion of spacecraft maneuvering  based on SDRE approach and 
realtime linearization of the equations of motion considering error dynamics of the system is presented in [7]. In the 
case of Space missions, saving the fuel is one of  the key aspects, which is needed for station keeping purpose. Thus, 
the actuator effort is taken as the primary optimizing criteria rather than trajectory performance in many cases. As 
previously stated, the dynamics is linearized and modelled about stabl e equilibrium points to get the state matrix in 
the state space model. These LQR algorithms are very effective in controlling spacecraft motion and its assembly. 
These are proved to be globally stable in the actual nonlinear spacecraft system. In this pape r, the stability is presented 
with the help of suitable Lyapunov functions and also the optimal control gain is derived using Krotov conditions of 
stability for the spacecraft motion control system, which is novel in this approach. There are many advantage s using 
this LQR optimal control. One of the most important is that the controller structure is extremely simple, 
implementation is easier, reducing computational cost without hurting the performance.  
         The novel contribution in this approach is tha t to build a suitable Krotov function to apply Krotov’s optimality 
conditions , verifying its results with the Riccati and Lyapunov method of optimal control problem  and to control the 
2nd order approximated linear model of the translational dynamics of the  relative motion of satellites.  
         As a common annotation, all the scalars are represented in normal, whereas, the vectors are annotated in bold. 
In this paper, Section III describes about the reference frames, the dynamics modelling is stated in Sec tion IV, the 
State Space model and its linearization to get linear dynamics is derived in Section V, the LQR control architecture as 
well as the system stability using Lyapunov Function is done is Section VI, the novel Krotov condition approach for 
the der ivation and verification of the optimal control solution and its connection with the system dynamics is presented 
in Section VII, and the solution to CARE, to get the control law with simulation results, the eigenvalue placement (to 
get closed loop poles) to get stable system and finally simulation results from MATLAB for varying the initial and 
final conditions  are specifically described in Section VIII.  3 
  
III. Frame of References  
       The most fundamental base with respect to which any dynamics is modeled i s the Frame of Reference. It can be 
inertial or non inertial determined by whether it’s accelerating or not. Here two of such important reference frames on 
which the translational dynamics is modeled are discussed.  
 
A. Earth Centered Inertial (ECI):   
  The ECI frame is the body frame fixed to the Earth, which is inertial (though the Earth is accelerating with respect 
to sun, but the frame fixed to this massive object is still considered to be inertial), thus Newton’s laws of motion and 
law of Gravity a re valid in this frame. And also, most of the satellites which are studied are generally inertial pointing. 
To locate a body about Earth in the ECI system, Cartesian coordinates are used. The X –Y plane coincides with the 
Earth’s equatorial plane. Sometimes  Earth’s orbital plane (ecliptic) about the Sun is also considered as this plane. The 
Xaxis is fixed (not rotating) in a particular direction with respect to the celestial body. The Z axis lies perpendicular 
to this plane and coincides with Earth’s rotati onal axis (passing through the North pole). The Y axis follows the right 
hand coordinate system rule. ECI coordinate system does not rotate as Earth’s rotation, it remains fixed in its position.   
 
B. Local Vertical Local Horizontal (LVLH):   
   This frame of reference is fixed to the body frame of the moving satellite, particularly the Leader spacecraft in 
case of Formation flying. The origin of this frame moves as the satellite’s COM trajectory. The principal axes of this 
frame are pointed towards the cent er of Earth, one towards its velocity vector, and other in the perpendicular frame in 
right handed coordinate system notation. In this paper, the x axis is taken in radially outward direction from the Earth, 
the y axis is coinciding with the local velocity  vector of the Leader satellite and the z axis, perpendicular to them. The 
relative motion dynamics of the system is modelled in this frame. As the LVLH frame rotates with the Leader motion, 
it is not an inertial frame of reference, and similarly Newton's laws couldn’t be directly applicable in this frame. The 
relative motion translational dynamics representing the relative orbital motion of two satellites now have to be 
modelled in this frame of reference.  
IV. Orbital Motion and Translational Dynamics  
        As the relative translational dynamics is considered, point mass assumption is made for the Leader and Follower 
satellite, with central Gravitational force of attraction acting both on them. The frame of reference is the LVLH frame 
fitted to the Leader sat ellite or Hill frame. The Leader is, as explained, moving in a particular circular orbit around the 
Earth, therefore, having constant angular velocity 𝜃̇. The translation dynamics is modelled, with respect to the LVLH 
frame, where x, y and z are relative position coordinates. The resulting 1st order approximate dynamics equations are 
known as Clohessy Wiltshire equations in the Hill frame. But, in this cas e, the dynamics is modelled using the 2nd 
order approximate dynamics equation. Thus, the resulting 2nd order dynamics equations (as being derived in [8]) are 
obtained as:  
     
 
    𝑥̈ − 2𝑦̇𝜃̇ − 3𝜃̇2𝑥 = (3𝜇
𝑟𝑐4)[𝑦2
2 +𝑧2
2 − 𝑥2]                                          (1)  
    𝑦̈ + 2𝑥̇𝜃̇ = (3𝜇
𝑟𝑐4)𝑥𝑦                                                                                (2)                              
    𝑧̈ + 𝜃̇2𝑧 = (3𝜇
𝑟𝑐4)𝑥𝑧                                                                                 (3)   
                                  4 
  
Fig 1.  Formation of Leader and Follower satellite.  
 
Equations (1) (3) forms a set of simultaneous, nonlinear, coupled, 2nd order ordinary Differential equations, without 
any external control thrusts applied. Control forces are therefore applied in 3 orthogonal directions to steer the current 
state to the desired final state in a controlled way. These forces are acted on the b ody, by the thrust produced by ideal 
thrusters. Therefore, these equations in the continuous thrust mapping form, are represented as:  
 
                 𝑥̈ − 2𝑦̇𝜃̇ − 3𝜃̇2𝑥 − (3𝜇
𝑟𝑐4)[𝑦2
2 +𝑧2
2 − 𝑥2] = 𝑢𝑥                                 (4) 
                 𝑦̈ + 2𝑥̇𝜃̇ − (3𝜇
𝑟𝑐4)𝑥𝑦=𝑢𝑦                                                                        (5)     
                 𝑧̈ + 𝜃̇2𝑧 − (3𝜇
𝑟𝑐4)𝑥𝑧=𝑢𝑧                                                                         (6) 
 
where, 𝑢𝑥, 𝑢𝑦, 𝑢𝑧 are the Force/mass in the x, y and z directions respectively, provided by the thrusters.  
A configuration of the system variables that define the condition of the system is called state of the system. Any state 
of the body in translational d ynamics is represented using positional coordinates and corresponding velocity in 3 axial 
directions. The state vector for the spacecraft is written as:  
 
    𝑿 = [𝑥  𝑦  𝑧  𝑥̇  𝑦̇  𝑧̇]𝑇                                                                            (7) 
 
The thrust vector can also be represented as:  
 
                                                          𝑼 = [𝑢𝑥 𝑢𝑦 𝑢𝑧]𝑇                                                                                   (8) 
 
In compact form, the whole  thrust controlled translation system dynamics can be written as:  
 
    𝑿̇ = 𝑮(𝑿,𝑼)                                                                                         (9)                                                               
 
Now, as the state of the system is defined, then the state space model will be formed after linearizing dynamics 
given by Eqs. (4) (6) at some equilibrium point to apply linear control techniques.  
 
5 
   
V. Linearized Dynamics and State Space model  
      To apply the Linear Quadratic Regulator control to determine optimal gain to the system, the system has to be 
linearized to get a continuous time invariant linear State Space model of translational dynamics given by Eqs. (4) – 
(9). The linearization of the system should be done about any of its equilibrium points or operating points. Thus, first 
of all, an equilibrium point for this system has to be determined.  
       The equilibrium point of the system is the state vector, where velocities in all dir ections are 0, thus [𝑥̇  𝑦̇  𝑧̇]𝑇=0 
and the same consequently gives [𝑥̈  𝑦̈  𝑧̈]𝑇=0. This is nothing but no net force acting on the system. Now, the 
translational dynamics Eqs. (4) – (6) can be solved taking all the velocity and acceleration terms = 0. T he equations 
reduced to three conditions:  
 
             𝑢𝑥 + 3𝜃̇2𝑥 + (3𝜇
𝑟𝑐4)[𝑦2
2 +𝑧2
2 − 𝑥2] = 0                                               (10) 
             𝑢𝑦+(3𝜇
𝑟𝑐4)𝑥𝑦=0                                                                                      (11) 
             𝑢𝑧 +(3𝜇
𝑟𝑐4)𝑥𝑧 − 𝜃̇2𝑧 = 0                                                                         (12) 
 
The equilibrium or operating point position coordinates and the acceleration due to control thrusts are related by the 
Eqs. (10) – (12). The operating point or equilibrium point or linearizing point for this problem is chosen as [0,0,0]𝑇 
for position coor dinates, which eventually gives 𝑢𝑥 =  𝑢𝑦 =  𝑢𝑧 = 0 at operating point. For the system , as given by the 
Eq. (9), the equilibrium point is given by 𝑿𝒆𝒒=[0,0,0,0,0,0]𝑇. Now, the system is to be linearized to get a linear 
form so that the linear  controls can be applied.  
 
       Let a dependent variable, 𝑥 is a nonlinear function of 𝑛 independent variables, 𝑥𝑖, where 𝑖 = 1,2,3… 𝑛. Then  𝒙 
is being linearized about any particular set of 𝑥̅𝑖’s (operating point) according to Taylor expansion taking up to first 
order terms. In the similar way, the system of equations Eqs. (4) – (6) is linearized about an equilibrium point to get 
the following,  
 
                                                       𝑿̇ − 𝑿̇𝒆𝒒= 𝑨(𝑿 − 𝑿𝒆𝒒)+ 𝑩(𝑼 − 𝑼𝒆𝒒)                                             (13) 
 
where, 𝑿̇ = [𝑥̇,𝑦̇,𝑧̇,𝑥̈,𝑦̈,𝑧̈]𝑇 and  𝑿 = [𝑥,𝑦,𝑧,𝑥̇,𝑦̇,𝑧̇]𝑇. By equilibrium conditions can be given by  
 
𝑿̇𝒆𝒒 = 0, 𝑿𝒆𝒒 = 0 ,𝑼𝒆𝒒 = 0.  
 
In Eq. (13), 𝑨 is called state matrix, and 𝑩 is called input matrix for this Multi Input Multi Output (MIMO) system. 
Using 1st order Taylor expansion, the Jacobian matrices  
 
                                                          𝑨 = 𝜕𝑮
𝜕𝑿|
𝑿 = 𝑿𝒆𝒒 ;  𝑩 = 𝜕𝑮
𝜕𝑼|
𝑼 = 𝑼𝒆𝒒                                                          (14) 
 
Therefore, the state and input matrices being derived, the State Space model of the linearized dynamics will be 
demonstrated in the following part.  
State Space Model  
        Given the dynamical equations, the linearized system is represented in its State Space model, linearizing about 
𝑿 = 0, and using full state estimation with no feedthrough, to obtain:  
 
                                   𝑿̇ = 𝑨𝑿 + 𝑩𝑼                                                                               (15) 
                                                                𝒀 = 𝑪𝑿                                                                                           (16)                               
 
 
 
 6 
 where,  
    
  𝑨 = 
[     000100
000010
000001
3𝜃̇20002𝜃̇0
000−2𝜃̇00
00−𝜃̇2000]     
,     𝑩=
[     000
000
000
100
010
001]     
,      𝑪=
[     100000
010000
001000
000100
000010
000001]     
    
 
   Linear controls are implemented in this paper to control the dynamics, or to steer the system from initial to final 
desired state. Linear controls are used, because it’s very easy to implement, the control structure is simple and also 
the computation cost is much lower than nonlinear controls. In the paper, Linear Quadratic Regulator (LQR) control 
is being used, which needs the linearized differential equations into a state space model. According to the given input 
argument, the control ler outputs a gain, which is optimized with respect to both of the system performance and fuel 
consumption. Therefore, the Linear Quadratic Regulator is needed to be designed using the derived State Space model 
of the system.  
VI. Linear Quadratic Regulator design and System Stability  
        The goal of optimal control is to control the dynamic system, but at minimum cost. This cost function is described 
in case of LQR control as a quadratic function of state vector and input thrusts. It takes two input para meters, 𝑸 and 
𝑹 matrices. These matrices make the trade off between the performance of the system and energy consumption or fuel 
consumption or actuator effort to provide an optimal state feedback gain to the system. Correspondingly the LQR 
design is to find an optimal feedback gain ( 𝑲) from the following control law:  
 
                                                                 𝑼 = −𝑲𝑿                                                                                       (17) 
 
where, 𝑲 is the opt imal gain matrix provided by LQR controller to minimize the scalar quadratic cost function, L:  
 
                        𝐿 = 1
2∫(𝑿𝑇𝑸𝑿 +∞
0 𝑼𝑇𝑹𝑼)𝑑𝑡=∫𝐼∞
0𝑑𝑡                                                     (18)     
  
where 𝑸 and 𝑹 are positive definite matrices. The term 𝑿𝑇𝑸𝑿 determines the cost of the performance of the system, 
which penalizes the system when the system is off the reference or desired state vector. The term 𝑼𝑇𝑹𝑼 determines 
the cost of energy lost or fuel c onsumed, which penalize the system when the actuator effort is more.  
         The optimization problem can be being solved by the method of control Hamiltonian  formulation,  where  Eq. 
(18) is to be minimized given the state/input constraints Eq. (15) and Eq. (16). The formulation can be given by:  
 
                                          𝐻 = 𝐼 + 𝝀𝑻𝑿̇=1
2(𝑿𝑇𝑸𝑿+ 𝑼𝑇𝑹𝑼) + 𝝀𝑻(𝑨𝑿 + 𝑩𝑼)                                    (19) 
 
where, 𝐻 that combines the objective  and state functions (in case of Dynamic optimization problem like this) needs 
to be minimized.  The variables  𝝀 are known as costate variables  analogou s to Lagrange multipliers in Lagrange 
Method of Multipliers formulation  (as in case of Static optimization) . The costate equation is given by : 
 
                                                             𝝀̇=− (𝜕𝐻
𝜕𝑿)=− (𝑸𝑿+𝑨𝑻𝝀)                                                       (20) 
 
This is an infinite horizon, continuous time LQR problem, where the optimal solution for the LQR design is given by:  
 
                                                                    𝑑𝐻
𝑑𝑼=0⇒𝑼(𝑡) = − 𝑹−1𝑩𝑇𝑷𝑿(𝑡)                                              (21) 
 
where P is a constant positive definite matrix, which is the solution of continuous time algebraic Riccati equation 
(CARE):  
 
                                    −𝑷𝑨 − 𝑨𝑇𝑷 + 𝑷𝑩𝑹−1𝑩𝑇𝑷 − 𝑸 = 0                                          (22) 
 7 
  
Now, g iven the 𝑸 and 𝑹 matrices, the 𝑷 matrix can be analytically determined for this specific dynamical system 
described by 𝑨 and 𝑩 matrices. The matrix 𝑸 determines the penalty on the state performance of the system, whereas 
𝑹 determines the penalty on fuel consumption. Both are positive definite and diagonal matrices. There is no hard and 
fast rule to determine a perfect 𝑸 and 𝑹 matrix. These matrices are chosen according to how the system is desired to 
behave. If the value o f 𝑹 is greater than 𝑸, then more care is given about its fuel consumption (i.e., more penalty the 
cost function will provide if the fuel consumption or actuator effort is high) than state performance and vice versa.  
         This Algebraic Riccati equati on (CARE) is a type of nonlinear matrix equation that arises in the context of 
solving continuous time infinite horizon optimal problems. The optimal problem stated here, i.e., control of formation 
flight is also nothing but a continuous time infinite hori zon problem. As the control forces are modelled as continuous 
time thrusts, thus it’s continuous time problem. And, due to the time independent nature of cost matrices 𝑸 and 𝑹, it’s 
an infinite horizon problem. Therefore, it is nevertheless to state that  the solution of Eq. (2 2) gives the desired 
feedback, 𝑼. In the optimal gain formulation, the Riccati equation Eq. (2 2) needs to be solved to get the gain matrix 
using Eq. (2 1). The solution of CARE takes both the system demonstrated by 𝑨 and 𝑩 with the  cost arguments 𝑸 and 
𝑹 into calculation. The Eq. (2 2) can be solved numerically and analytically. Now, the analytic solution for the CARE 
is described.      
         The LQR control ensures the optimal feedback gain by optimizing the cumulative control system error and fuel 
consumption. Solving the algebraic Riccati equation, the optimal gain can be determined methodically. Let the matrix 
is defined as:  
 
  𝑷 =  
[     𝑃11𝑃12𝑃13𝑃14𝑃15𝑃16
𝑃21𝑃22𝑃23𝑃24𝑃25𝑃26
𝑃31𝑃32𝑃33𝑃34𝑃35𝑃36
𝑃41𝑃42𝑃43𝑃44𝑃45𝑃46
𝑃51𝑃52𝑃53𝑃54𝑃55𝑃56
𝑃61𝑃62𝑃63𝑃64𝑃65𝑃66]     
                                       
 
Now, as P is a positive definite matrix (all positive eigenvalues), it clearly tells that 𝑷 is a symmetric matrix; therefore, 
𝑃𝑖𝑗 = 𝑃𝑗𝑖. Thus, 36 unknowns of 𝑷 reduces down to 21.  
        Thus, these matrices are applied in the Eq. (2 2), to get,  
 
                             −𝑷𝑨 − 𝑨𝑇𝑷 + 𝑷𝑩𝑹−1𝑩𝑇𝑷 − 𝑸 = 0 
 
Thus, the expanded form, by putting matrix 𝑷, as defined, the following is obtained:  
 
⇒ 
[      𝑃142+𝑃152+𝑃162𝑃14𝑃24+𝑃15𝑃25+𝑃16𝑃26𝑃14𝑃34+𝑃15𝑃35+𝑃16𝑃36𝑃14𝑃44+𝑃15𝑃45+𝑃16𝑃46𝑃14𝑃45+𝑃15𝑃55+𝑃16𝑃56𝑃14𝑃46+𝑃15𝑃56+𝑃16𝑃66
. 𝑃242+𝑃252+𝑃262𝑃24𝑃34+𝑃25𝑃35+𝑃26𝑃36𝑃24𝑃44+𝑃25𝑃45+𝑃26𝑃46𝑃24𝑃45+𝑃25𝑃55+𝑃26𝑃56𝑃24𝑃46+𝑃25𝑃56+𝑃26𝑃66
. . 𝑃342+𝑃352+𝑃362𝑃34𝑃44+𝑃35𝑃45+𝑃36𝑃46𝑃34𝑃45+𝑃35𝑃55+𝑃36𝑃56𝑃34𝑃46+𝑃35𝑃56+𝑃36𝑃66
. . . 𝑃442+𝑃452+𝑃462𝑃44𝑃45+𝑃45𝑃55+𝑃46𝑃56𝑃44𝑃46+𝑃45𝑃56+𝑃46𝑃66
. . . . 𝑃452+𝑃552+𝑃562𝑃45𝑃46+𝑃55𝑃56+𝑃56𝑃66
. . . . . 𝑃462+𝑃562+𝑃662]      
 
 
     = 
[      𝑄11+6𝜃̇2𝑃143𝜃̇2𝑃243𝜃̇2𝑃34−𝜃̇2𝑃163𝜃̇2𝑃44+𝑃11−2𝜃̇𝑃153𝜃̇2𝑃45+𝑃12+2𝜃̇𝑃14 3𝜃̇2𝑃46+𝑃13
. 𝑄22 −𝜃̇2𝑃26 𝑃12−2𝜃̇𝑃25 𝑃22+2𝜃̇𝑃24 𝑃23
. .𝑄33−2𝜃̇2𝑃36𝑃13−2𝜃̇𝑃35−𝜃̇2𝑃46𝑃23+2𝜃̇𝑃34−𝜃̇2𝑃56 𝑃33−𝜃̇2𝑃66
. . . 𝑄44+2𝑃14−4𝜃̇𝑃45𝑃24+2𝜃̇𝑃44+𝑃15−2𝜃̇𝑃55𝑃34+𝑃16−2𝜃̇𝑃56
. . . . 𝑄55+2𝑃25+4𝜃̇𝑃45𝑃35+𝑃26+2𝜃̇𝑃46
. . . . . 𝑄66+2𝑃36]      
                          (23) 
 
 
The matrix equation Eq. (2 3) forms a set of 21 simultaneous non linear coupled algebraic equations, spanning 21 
unknowns of the matrix 𝑷. It needs to be solved analytically, to get a full description of 𝑷. From there, calculating 
eigenvalues, it can be clearly verified that 𝑷 is a constant positive definite matrix. It gives the solution to the algebraic 
Riccati equation and in turn provides the optimal control solution for this system. In the following, the stability of the 
closed loop system given by Eqs. (15) – (17).  
 
 
 8 
 System Stability  
        The LQR controller does the action of placing the eigenvalues or the closed loop poles of the system dynamics, 
for which the system will be bounded, minimizing the quadratic cost function, which optimizes the system 
performance and fuel consumption  according to the chosen input 𝑸 and 𝑹 matrices. This adds an optimal feedback 
gain to the system, 𝑼 =−𝑲𝑿 to control it. The LQR control thus correctly places the eigenvalues. The designed 
Linear Quadratic Regulator controller is stable under given sy stem dynamics. In the following, the stability of the 
overall system is shown.  
         By choosing a proper Lyapunov function for this optimal control problem of the translational dynamics, the 
global stability of the system will be derived. Let the Lyapu nov function be defined as:  
 
          𝑉 = 1
2𝑿𝑇𝑷𝑿                                                                                (24) 
where, 𝑷 is the solution of algebraic Riccati equation, Eq. (2 2). As 𝑷 is a time independent positive definite matrix, 
the Lyapunov function V is always positive (except origin, where it’s 0) for ∀ 𝑡∈[0,∞). 
       Now,  
 𝑽̇= 1
2𝑿̇𝑇𝑷𝑿 + 1
2𝑿𝑇𝑷𝑿̇      
 
     = 1
2(𝑿𝑇𝑨𝑇+𝑼𝑇𝑩𝑇)𝑷𝑿 + 1
2𝑿𝑇𝑷(𝑨𝑿+𝑩𝑼) 
 
     = 1
2𝑿𝑻(𝑨𝑻𝑷+𝑷𝑨)𝑿−𝑿𝑇𝑷𝑩𝑹−1𝑩𝑇𝑷𝑿 
 
         = −1
𝟐𝑿𝑻(𝑸+𝑷𝑩𝑹−𝟏𝑩𝑇𝑷)X                                                                         (25)                    
 
In Eq. (2 5), as 𝑸 and 𝑹 are positive diagonal matrices, 𝑷 is a positive definite matrix, 𝑩 is also positive. Therefore, as 
𝑸>𝟎, then 𝑸+𝑷𝑩𝑹−1𝑩𝑇𝑷 is always positive definite. Henceforth, 𝑽̇ < 𝟎 ∀ 𝑿≠𝟎 and 𝑽̇ = 𝟎 for 𝑿=𝟎 only, 
which defines 𝑽 as a positive definite function . This led to the globally asymptotic stability of the closed loop system 
according to the Lyapunov theory, where the optimal control is given by, 𝑼̅ = −𝑹−1𝑩𝑇𝑷𝑿̅. Thus, the closed loop 
system formed by 𝑨 and 𝑩, with feedback 𝑲, as determined for given 𝑸 and 𝑹 matrices, is asymptotically stable in 
the whole space 𝑿.             
 
Feedback with setpoint (reference) input:  
        The LQR control regulates the system state to 0, when no reference input is given. The setpoint could not be 
directly fed into the input, unless the Step response performance is satisfactory, that is with no steady state error. If 
not, then the inp ut is fed with a gain. Though the optimization problem doesn’t change with the addition of reference 
input, as far as the system has excellent step performance with the suitable combination of 𝑨,𝑩,𝑪,𝑸,𝑹 and 𝑲. If the 
input reference is 𝑹𝒆𝒇(𝑡), then the input of the modified model is,  
 
                                                                 𝑼(𝑡) = −𝑲𝑿 + 𝑹𝒆𝒇(𝑡)                                                                 (26) 
 
Thus, the modified State Space equation with reference input is given by,  
 
                                                                  𝑿̇ = (𝑨−𝑩𝑲)𝑿+𝑹𝒆𝒇                                                                 (27) 
                
There fore, the continuous time infinite horizon problem is being solved using the Riccati equation, Eq. (2 2). The 
solution method has taken into account the fact that 𝑷 is a positive definite matrix. But due to the imposition of 
constraint, and the process of obtaining the closed form solution, given by Eq. (2 1), it exploited the relation between 
the states of the system (i.e., here 𝑿) and the costate variables 𝝀 used in the cost optimization problems, where the 
multipliers are being multiplied with the state/input constraint equations in the minimization formulation in Eq. (19). 
But the optimal theory proposed by Krotov, is freed from  all these constraints, where  the problem is solved using an 
equivalent extension of the cost functional specifically designed for the system. The following section is novel in the 
approach, where Krotov condition is implemented in a naïve way for the first time in a problem like the spacecraft 
relative motion control, and followed by the verification of this method with the good old optimal solution using 
Riccati’s method.  9 
 VII.Verification the Optimal solution based on Krotov conditions  
In case of Generic Optimal Control Problem, the cont rol law is computed to minimize an overall cost function J,  
 
                                         𝐽(𝑿(𝑡),𝑼(𝑡),𝑡)  = ∫𝑐(𝑿(𝑡),𝑼(𝑡),𝑡)𝑑𝑡𝑇
𝜏 + 𝐹(𝑿(𝑇))                                           (28) 
 
on the set of states ( 𝑿), optimizing the performance and fuel consumption of the system. The integral term 
characterizes the quality of the system in the control interval (𝜏,𝑇). And 𝐹(𝑿(𝑇)) is the quality of control at final 
time. But in this problem, as the Final state co ntains just a single point thus the final addendum reduces to 0. The 
modified cost function becomes,                                                                                                                                                                 
 
                                      𝐽(𝑿(𝑡),𝑼(𝑡),𝑡)  = ∫𝑐(𝑿(𝑡),𝑼(𝑡),𝑡)𝑑𝑡∞
0                                                    (29) 
 
This is a continuous time problem where the final time is not finite, thus the integration in the time domain is so 
justified in Eq. (2 9). The goal of the problem is to find an optimal element from the set 𝑼, satisfying the input and 
state constraints. But in many optimization problems, it might happen that the optimal solution is not found in the 
solution  set. In such a case, as proposed by Krotov in [10], the same cost functional is being equivalently extended to 
find a solution in its higher solution set, and its total decomposition with respect to time, to be done.  
 
A.  Equivalent extension:  
       The original minimization principle is replaced or extended using the introduction of parameters, which is to be 
optimized, such that the extended problem is simpler than the original. This new model of the minimization problem 
is called ‘equivalent  extension’ of the original problem.  
        As previously stated, if in case of optimization problem, the optimal solution is not found, the original cost 
functional (here represented by Eq. (2 9)) is being extended to a newly defined, simpler and another  cost functional, 
where the solution set is also extended to a higher set, say 𝑼’, where 𝑼⊂𝑼′. In doing so, in case of discrete time 
problems, as well as continuous time problems, the cost functional Eq. (2 9) is being parameterized in time (or 
decomposed in time in Discrete time problems). This simplifies the problem, by breaking it into several miniature 
optimization problems in time to be solved in case of discrete time, and a complete integral problem in t he control 
interval time domain, for which the satellite system has been controlled. The solution gives rise to the Krotov optimal 
condition, to get an admissible optimal process.  
 
B.  Krotov sufficient optimality conditions:  
      According to Krotov suff icient conditions, global optimality of the control processes can be achieved by 
decomposing the original control problem with respect to time or time parameterizing using Extension principle as 
stated above. It provides an optimal solution, [𝑿̅(𝑡),𝑼̅(𝑡)] that satisfies the constraints or the state and input equation, 
the solution thus can be concluded to be an admissible control process, ensuring global optimality by the Krotov 
conditions.  
 
Optimal control using Extension principle:  
      The goal i s to minimize the cost, in the equivalent extended form of the original global optimal control problem 
to get an admissible optimal process. Now in the problem, as it is an infinite horizon continuous time LQR problem 
(any final time terms are set to zero) , the equivalent representation in the time interval 𝑡 ∈ [0,∞] is extended.  
 
Theorem 1:  
           Let 𝜙(𝑿(𝑡),𝑡) be a continuously differentiable function in time and space, then the cost function of this Global 
Optimal Control Problem can be extended  using the Extension principle as follows:  
   
   𝐽𝑒𝑞(𝑿(𝑡),𝑼(𝑡),𝑡)= 𝜙(𝑿(𝑡0),𝑡0) +∫𝑆(𝑿(𝑡),𝑼(𝑡),𝑡)𝑑𝑡∞
0                                   (30) 
  
where (𝑡0 being initial time) , 
   
            𝑆(𝑿(𝑡),𝑼(𝑡),𝑡) ≜ 𝜕𝜙
𝜕𝑡 + 𝜕𝜙
𝜕𝑿𝐺(𝑿(𝑡),𝑼(𝑡),𝑡) + 𝑐(𝑿(𝑡),𝑼(𝑡),𝑡)                             (31) 
 10 
 If any [𝑿(𝑡),𝑼(𝑡)] pair satisfies the dynamical equation of the system, 𝑿̇ = 𝐺(𝑿(𝑡),𝑼(𝑡),𝑡) along with the state and 
input constraints, then it is an admissible process for the system. And the extended equivalent cost functional, 𝐽𝑒𝑞 
gives the global optimality of the admissible process. For this problem of LQR control, the integrable cost pe nalty 
𝑐(𝑿(𝑡),𝑼(𝑡),𝑡) or more formally, the quality of the system in the control interval, where the penalty parameters for 
state and the actuator are 𝑸 and 𝑹 matrices respectively, the function 𝑆(𝑿(𝑡),𝑼(𝑡),𝑡), given the system and cost by 
Eq. (9) and Eq. (18) respectively, can be written as:  
 
   𝑆(𝑿(𝑡),𝑼(𝑡),𝑡) ≜ 𝜕𝜙
𝜕𝑡 + 𝜕𝜙
𝜕𝑿[𝑨𝑿 + 𝑩𝑼] +𝑿𝑇𝑸𝑿 + 𝑼𝑇𝑹𝑼                (32) 
 
Theorem 2:   If any admissible process [𝑿̅(𝑡),𝑼̅(𝑡)] satisfies:  
 
                 𝑆(𝑿̅(𝑡),𝑼̅(𝑡),𝑡) =min
𝑋 ∈ 𝑿,𝑈 ∈ 𝑼𝑆(𝑿(𝑡),𝑼(𝑡),𝑡),     ∀ 𝑡∈[0,∞)                               (33) 
 
then [𝑿̅(𝑡),𝑼̅(𝑡)] is the optimal solution of the problem, and 𝑼̅(𝑡) is the optimal feedback for the system. 𝑿 and 𝑼 are 
whole set of admissible state 𝑿(𝑡) and input 𝑼(𝑡) vectors respectively which satisfies the system dynamics  
 𝑿̇(𝑡) = 𝐺(𝑿(𝑡),𝑼(𝑡),𝑡). It’s clearly understood that minimizing 𝑆(𝑿(𝑡),𝑼(𝑡),𝑡) in an iterative way as in Eq. (3 3), 
or minimizi ng it over the whole control interval as in continuous time problem, it eventually gives the minimal or 
optimal solution of 𝐽𝑒𝑞(𝑿(𝑡),𝑼(𝑡),𝑡), which is desired.  
         The differentiable function 𝜙(𝑿(𝑡),𝑡) is called Krotov function, and is totally problem specific. It changes the 
cost function, 𝐽 accordingly and so the optimization problem. It’s also called a solving function and needs to be selected 
efficiently. Now, in the following part, a problem speci fic Krotov function is being proposed, which will lead to the 
feedback, ensuring optimal control for this LQR problem.  
 
Proposition:  
For this equivalent Optimal Control Problem  for satellite formation flight control , the suitable Krotov function is 
chosen  as: 
 
                                                       𝜙(𝑿(𝑡),𝑡) = 1
2𝑿𝑇𝑷𝑿                                                                                    (34) 
 
where, matrix 𝑷 or every element of matrix  𝑷 is differentiable in the time domain ∀ 𝑡∈[0,∞). Further, another 
constraint is also imposed on 𝑷 that it’s symmetric, which is novel in this approach and can be concluded as:  
a)       𝑆(𝑿,𝑼,𝑡) is a convex function on [𝑿,𝑼]. 
b)       The matrix 𝑷 satisfies the following matrix inequality  
 
                                           1
2𝑷̇ + 𝑷𝑨 + 𝑨𝑇𝑷 + 𝑸 −𝑷𝑩𝑹−1𝑩𝑇𝑷 ≥ 0       ∀ 𝑡∈[0,∞).                            (3 5) 
 
Though, the imposition of the symmetric constraint on 𝑷, makes it still more generalised than the Riccati approach.  
 
Proof:  The selected 𝜙(𝑿(𝑡),𝑡) is applied to the function, 𝑆(𝑿(𝑡),𝑼(𝑡),𝑡) as framed in Eq. (3 2), to get  
              
                                          𝑆 = 1
2𝑿𝑇𝑷̇𝑿 + 𝑿𝑇𝑷𝑿̇ + 𝑿𝑇𝑷[𝑨𝑿 + 𝑩𝑼]+ 𝑿𝑇𝑸𝑿 + 𝑼𝑇𝑹𝑼  
 
                                               = 1
2𝑿𝑇𝑷̇𝑿 +  2(𝑿𝑇𝑷𝑨𝑿+𝑿𝑇𝑷𝑩𝑼)+ 𝑿𝑇𝑸𝑿 + 𝑼𝑇𝑹                                   (36) 
 
 As 𝑿𝑇𝑷𝑨𝑿 is a scalar then  𝑿𝑇𝑷𝑨𝑿 = 𝑿𝑨𝑇𝑷𝑿𝑇 and provided  𝑷𝑇 = 𝑷. Therefore, from Eq. (3 6),  
 
                                  𝑆= 1
2𝑿𝑇𝑷̇𝑿 +  𝑿𝑇𝑷𝑨𝑿 + 𝑿𝑨𝑇𝑷𝑿𝑇+2𝑿𝑇𝑷𝑩𝑼+ 𝑿𝑇𝑸𝑿 + 𝑼𝑇𝑹𝑼                        (37) 
 
Adding and subtracting the term  𝑿𝑇𝑷𝑩𝑹−1𝑩𝑇𝑷𝑿 to Eq. (3 7),  
   
             𝑆 = 𝑿𝑇(1
2𝑷̇+ 𝑷𝑨 + 𝑨𝑇𝑷+𝑸 −𝑷𝑩𝑹−1𝑩𝑇𝑷)𝑿 + 2𝑿𝑇𝑷𝑩𝑼+𝑼𝑇𝑹𝑼+𝑿𝑇𝑷𝑩𝑹−1𝑩𝑇𝑷𝑿        (38) 11 
  
From the LQR control logic, 𝑹 matrix is the cost penalty matrix for fuel consumption; hence, 𝑹 is always a diagonal 
matrix, having all elements positive; therefore, 𝑹>0 and represented as a square of another unique positive definite 
matrix, 𝑹̃, as 𝑹̃2=𝑹 and vice versa for inverses. Now, Eq. (3 8) can be rewritten as:  
 
                 𝑆=𝑿𝑇(1
2𝑷̇+𝑷𝑨+𝑨𝑇𝑷+𝑸−𝑷𝑩𝑹−1𝑩𝑇𝑷)𝑿+[𝑹̃𝑼+𝑹̃−1𝑩𝑇𝑷𝑿]𝑇[𝑹̃𝑼+𝑹̃−1𝑩𝑇𝑷𝑿]          (39) 
   
The second term in Eq. (3 9) is positive definite and strictly convex. Therefore, the condition for which the function, 
𝑆 can become convex is:  
 
                                           (1
2𝑷̇ + 𝑷𝑨 + 𝑨𝑇𝑷 + 𝑸 −𝑷𝑩𝑹−1𝑩𝑇𝑷 )≥0           ∀ 𝑡∈[0,∞)                                     
 
            In the above, the linear matrix inequality (LMI) relation has been derived by applying the convexi ty of 𝑆. In 
case of optimization problems, a convex optimization function is always preferred, due to the presence of global 
extremum in this situation. Now, if final time boundary condition and the time independence of 𝑷 matrix, 𝑷̇ = 0 is 
imposed in thi s LMI, for this infinite horizon problem of Satellite relative motion control, then equating Eq. (3 5) to 0, 
it will reduce down to the continuous time algebraic Riccati equation, Eq. (2 2) in non iterative method . The main goal 
of the Krotov’s  method is to formulate a more generalized  and simpler way to solve the optimization problem, given 
the cost matrices and satisfying the constraints to apply for this practical problem like Rendezvous and Proximity 
operations of satellites. The method, as presented in the Section VI, provides the optimal solution for this, by directly 
solving the Riccati equation which is obtained using the optimization method of Lagrange multipliers as stated in Eq. 
(19). But it is being derived in the preceding in a more general way, that provides the relation Eq. (3 5), which is 
encompassed just using the symmetric P constraint. Connecting with the system, the Riccati equation in Section VI 
and this relation Eq. (3 5), represents the same system, when proper boundary condit ions for this particular system are 
being imposed, which is completely being verified as the relation above reduces to Eq. (2 2).  
 
Corollary:  
For the chosen Krotov function, 𝜙(𝑿(𝑡),𝑡), these can be concluded as:  
a)       The function, 𝜙(𝑿(𝑡),𝑡) is the solution function for this Optimal Control Problem.  
b)       The global optimal control law, or the optimal feedback for the system is given by:  
 
              𝑼̅ = −𝑹−1𝑩𝑇𝑷𝑿̅                                                                        (40) 
 
where, 𝑷 is the solution of the matrix differential equation (specific for this system):  
 
                               𝑷𝑨 + 𝑨𝑇𝑷 + 𝑸 −𝑷𝑩𝑹−1𝑩𝑇𝑷 = 0  
 
Proof: An admissible process is therefore found, 𝑿̅, which is the optimal solution of the extended equivalent form of 
cost function. As the convexity condition of 𝑆 is independent of 𝑿,and satisfies the matrix 𝑷, thus, 𝜙 is the solving 
function for this Optim al Control. This Krotov function is specific for this optimization problem, whereas changing it 
will be suitable for optimization problems, for some other system dynamics, but related to the optimal solution 
admissible process still using the Krotov’s cond itions.  
          The corresponding optimal feedback for this problem can be also found, as the minimization of Eq. (3 9) is 
satisfied by the 2nd part of the equation, going to 0. Therefore,  
 
                                                                     𝑹̃𝑼+𝑹̃−1𝑩𝑇𝑷 = 0.                                                                     (41) 
From Eq. (4 1), 𝑼̅ is solved as  
            
                          𝑼̅=− 𝑹−1𝑩𝑇𝑷𝑿̅                                      
  
This is the desired optimal solution to the problem. Therefore, according to the Krotov sufficient conditions regarding 
the minimization of the cost functional for this system  [from Eq. (29) ],  
 
                                     𝐽 = 1
2∫(𝑿𝑇𝑸𝑿 +∞
0 𝑼𝑇𝑹𝑼)𝑑𝑡, 12 
  
optimizing the performance index and fuel consumption satisfying the input/ state constraints in a non iterative way 
using optimal feedback  given by,  
   
                                              𝑼̅=− 𝑹−1𝑩𝑇𝑷𝑿̅. 
  
Therefore, the result of the optimization problem in this Krotov’s method, given by Eq. ( 40) is exactly matching with 
what is being obtained for the cost minimization problem by using Riccatis’s equation, given by Eq. (2 1). In this 
continuo us time infinite horizon optimal control problem of satellite relative motion control, the method used in 
Section VI is the solving of optimization problem using the Hamiltonian ’s method, given by Eq. (19). But in this 
Krotov’s method, the idea of cost fun ctional over the set of states, is being extended to get an equivalent extension, 
given by Eq. ( 30), which is solved by taking a suitable, problem specific Krotov function in a more generic way to 
obtain a Linear Matrix Inequality relation, Eq. (3 5). This just reduced down to the Riccati Equation form in Eq. (2 2) 
using the system’s nature and boundary conditions. Thus, by both methods the same optimal control problem gives 
the same optimal feedback, 𝑼, though the solution methodology is different . So, the control problem by Krotov’s 
condition, stated here is perfectly verified to give stable optimal feedback  and being used for such an essential purpose 
of optimal control of relative translational motion of satellites, revolving around Earth.  
VIII.  Results and Discussions  
        We demonstrated the satellite formation flight control, where Leader is in the circular orbit, that is it’s in a 
particular orbit of fixed radius around the Earth, in a dedicated orbital plane, and the Follower satellite is at a desired 
and fixed distance from Leader. The control approach used is Linear Quadratic Regular, with the system translation 
linearized at one of the equilibrium points, which gives an optimal gain optimizing the system state performance and 
fuel consum ption.  
        The parameter 𝜃̇ appearing in the equations, is the angular rate of rotation of the Leader satellite, around the Earth 
in a circular orbit, which solely depends on the altitude of the satellite above Earth’s surface. For our problem, we 
took the altitude of the Leader satellite as ℎ = 340 𝑘𝑚 from the Earth’s surface. So, we get the angular velocity of 
satellite about Earth as,  
 
   𝜃̇=𝜔=√𝐺𝑀𝑒
(𝑅𝑒+ℎ)3                                                                      (42) 
  
where, 𝑀𝑒 = 5.972𝑒+24 𝑘𝑔 is the mass of Earth,  𝐺= 6.67408𝑒−11 𝑚3𝑘𝑔−1𝑠−2 is Universal Gravitational 
constant, 𝑅𝑒 = 6370 𝑘𝑚 is radius of Earth and ℎ = 340 𝑘𝑚 is altitude of the Leader from Earth surface, to get  
𝜃̇ = 0.0011486  𝑟𝑎𝑑/𝑠. Therefore, this parameter is being used in the equations, as the entries in A matrix.  The state 
space model is thus represented by equations:  
 
                                                                    𝑿̇ = 𝑨𝑿 + 𝑩𝑼 
                                                                    𝒀 = 𝑪𝑿 
 
where,  
 
matrix,    𝑨 = 
[     0 0 0 1 0 0
0 0 0 0 1 0
0 0 0 0 0 1
3.9578𝑒−60 0 0 2.2972𝑒−30
0 0 0 −2.2972𝑒−3 0 0
0 0−1.3193𝑒−6 0 0 0]     
,  
 
 
with 𝑩 and 𝑪 are as defined earlier. Firstly, the open loop stability of the system has been checked, by the method of 
eigenvectors as previously explained. The eigenvalues of 𝑨 are thus calculated in MATLAB.  The eigenvalues are 
found to lie on the imaginary axis onl y and repeated eigenvalues are present on the imaginary axis. From which we 
can conclude that the system is totally unbounded. Thus, we have to apply a feedback control to the system to stabilize  13 
  
it. Hence, LQR control comes into play. As previously stated, we are using full state observation of the states. This is 
validated by checking rank of the observability matrix of 𝑨 and 𝑪 in MATLAB and found to be full rank, i.e., 6.  
 
LQR control through the State Space model has one of its important aspects, which is controllability. Which is by 
suitable pole placing if we can steer a system from unstable to stable or not done by the feedback gain. This is validated 
by checking rank of the controllability  matrix of 𝑨 and 𝑩 in MATLAB and found to be full rank, i.e., 6.   
 
        Therefore, our model is controllable by LQR, and with full state observation. But the LQR takes two input 
parameters 𝑸 and 𝑹 matrix for optimization performance and energy by minimizing the quadratic cost function. For 
our control problem, we choose 𝑸 = 𝑑𝑖𝑎𝑔(1,1,1,1,1,1) and 𝑹 = 𝑑𝑖𝑎𝑔(1,1,1), i.e., we are equally penalizing the 
state performance and fuel consumption. A nd also take care of each state and each actuator by the same amount, 
therefore all entries of both 𝑸 and 𝑹 are set to identity.  Thus, to get the optimal gain, we solved the algebraic Riccati 
equation as described, given the 𝑨,𝑩,𝑸 and 𝑹 matrices. T he solution of 𝑷 is given by,  
 
 𝑷 = 
[     1.7320541 0 0 1.0000031 0.0013263 0
0 1.7320518 0−0.0013263 0.9999991 0
0 0 1.7320501 0 00.9999987
1.0000031 −0.0013263 0 1.7320526 0 0
0.0013263 0.9999991 0 0 1.7320503 0
0 0 0.9999987 0 01.7320501 ]     
 
  
We can see that 𝑷 is a positive definite matrix (symmetric and having positive eigenvalues). Therefore, by the optimal 
solution of the LQR problem, the optimal feedback is given by,  
 
𝑼̅ = −𝑹−1𝑩𝑇𝑷𝑿̅ = −𝑲𝑿  
 
  The optimal gain matrix 𝑲 is thus,  
 
𝑲 = [1−0.001301.7321 0 0
0.0013 1001.7321 0
0 010 01.7321] 
 
Hence, our closed loop system becomes,  
 
  𝑿̇ = (𝑨−𝑩𝑲)𝑿 = 𝑨̅𝑿                                                          (43) 
  𝒀 = 𝑪𝑿 
 
where,                       𝑨̅ = 
[     0 001 0 0
0 000 1 0
0 000 0 1
−10.00130−1.73210.0023 0
−0.0013 −10−0.0023−1.7321 0
0 0−10 0−1.7321]     
 
 
 
        So, to check the closed loop stability of the system, by the method of eigenvalues, we check the eigenvalues of 
𝑨̅ matrix in MATLAB .  
 
All eigenvalues are found  to be in the left half of the plane, thus having a negative real part. Henceforth we can 
conclude that our feedback system is totally controlled and bounded for any time 𝑡>0. We also checked the Step 
response of the closed loop system,  
 14 
  
Fig.2:  The step respon se of the closed loop feedback system.  
 
It’s clearly seen from the step response in Fig. 2, that for each of the corresponding Input actuator thrusts represented 
by In, the corresponding positional coordinate correctly responds to the step response, giving  no steady state error. 
Similarly, the velocity coordinates are also behaving satisfactorily. Thus, as previously stated in Section VI, for this 
closed loop, the input reference positional coordinates can be fed, without any further gain. The whole simulat ion is 
done in SIMULINK, and necessary codes are run in MATLAB. The simulation results are as follows. For all 
simulations, we have chosen the same Q and R matrix.  
    
     The first simulation is carried out with the initial state as 𝑿(0) = [1000,1000,1000,0,0,0]𝑇 and the desired final 
state is set to 𝑿𝒅𝒆𝒔= [200,−50,100,0,0,0]𝑇. The simulation results are shown in Fig. (3). The Fig. 3(A) is showing 
the variation of the relative position coordinates of the Follower satellite, starting in itially from  [1000,1000,1000]𝑇. 
It clearly seemed to have converged to the desired final state position [200,−50,100]𝑇, within 7 seconds from the 
start of its observed motion under this controlled trajectory. Therefore, satisfactory transient and steady state 
performance is observed for the model. The Fig. 3(B), is the variation of x, y and z relative velocities of the Follower 
that converged to 0 within 7 seconds. The plot in Fig. 3(C) is the control thrusts/mass provided by the thrusters in 3 
directions . The thrusts correctly reached convergence to 0 within 7 seconds which is also expected, to reach 
equilibrium.  
 
        The second simulation is carried out with the initial state as 𝑿(0) = [750,1000,−1000,0,50,0]𝑇 and the desired 
final state is set to  𝑿𝒅𝒆𝒔= [0,400,100,0,0,0]𝑇. The simulation results are shown in Fig. (4). The plot in Fig. 4(A) is 
showing the variation of the relative position coordinates of the Follower satellite, starting initially 
from [750,1000,−1000]𝑇. It clearly seemed to ha ve converged to the desired final state position [0,400,100]𝑇, 
within 8 seconds from the start of its observed motion under this controlled trajectory. The Fig. 4(B) plot, is the 
variation of x, y and z relative velocities of the Follower that have reache d convergence within 8 seconds. The plot in 
Fig. 4(C) is the control thrusts/mass provided by the thrusters in 3 directions. The thrusts correctly converged to 0 
within 7 seconds to reach the equilibrium.  
 
        The third simulation is carried out with the initial state as 𝑿(0) = [0,600,−100,100,0,−10]𝑇 and the desired 
final state is set to 𝑿𝒅𝒆𝒔= [100,𝑠𝑡𝑒𝑝,100,0,0,0]𝑇. Step input is given is y direction as 500 for first 10 seconds and 
100 for next 10 se conds. The simulation results are shown in Fig. (5). The plot in Fig. 5(A) is showing the variation 
of the relative position coordinates of the Follower satellite, starting initially from  [0,600,−100]𝑇. Step input was 
applied which seems to perfectly conv erge with the step values. The Fig. 5(B) plot, is the variation of x, y and z 
15 
 relative velocities of the Follower. The initial velocity states were chosen [100,0,−10]𝑇. It varies as expected with 
the step response given and reached convergence. The plot i n Fig. 5(C) is the control thrusts/mass provided by the 
thrusters in 3 directions. The thrusts correctly converged to reach the equilibrium.  
Therefore, in each of the simulations, as our LQR control is designed, all the results are stable and convergent, 
maintaining a specific position in formation flight.  
 
 
 
Fig.3:  (A) Position states with time; (B) Velocity states with time; (C) Control thrusts per unit mass with time.  
 
 
 
 
 
Fig.4:  (A) Position states with time; (B) Velocity states with time; (C) Control thrusts per unit mass with time.  
16 
      
 
 
Fig.5:  (A) Position states with time; (B) Velocity states with time; (C) Control thrusts per unit mass with time.  
 
[Fig (A), (B) and (C) are arranged in top to bottom fashion for each subplot ] 
IX.Conclusion  
In our paper, we presented the Linear Quadratic Regulator control of the linearized 2nd order translational dynamics 
of the relative motion between Leader and Follower satellite. The Leader is constrained to move in a circular orbit 
around Earth and the Foll ower is desired to keep a fixed location with respect to the former spacecraft. The LQR 
design is demonstrated with the explanation of every detail which is being implemented, and our model is performing 
very satisfactorily under non perturbed circumstance s and its global stability is also explained with the novel 
implementation of stability of this LQR system under Krotov conditions. The necessary and sufficiency conditions 
were presented for the optimality of this problem and the solution methodology has been stated in an iterative way 
using Equivalent extension of the optimal problem and in a non iterative way using convex imposition on the same. 
The transient and steady state responses are also up to the mark. In the discussions, simulation results are p resented 
with varying initial, final states and 𝑸 and 𝑹 matrices. Thus, it is concluded that this LQR design can be successfully 
implemented.  
        The future research includes the translation motion control in elliptic or Keplerian orbits. Further along with 
translational motion, the attitude dynamics can also be designed to optimally control using LQR, which gives the full 
6DOF control of the relative satellite motion.  
 
References  
[1] Yang, Y., “Spacecraft attitude determination and control: Quater nion based method”, Annual Reviews in Control                      
Journal, published online 18 Oct. 2012.  
      doi: 10.1016/j.arcontrol.2012.09.003  
 
[2] Hamel, J F., Lafontaine, J., “Linearized Dynamics of Formation Flying Spacecraft on a J2 Perturbed El liptical 
Orbit”, Journal of Guidance, Control, And Dynamics, Vol. 30, No. 6, November –December 2007.  
      doi: 10.2514/1.29438  
 
17 
 [3] Yoon, H., Agarwal, B. N., “Novel Expressions of Equations of Relative Motion and Control in Keplerian Orbits”, 
Journal of G uidance, Control, And Dynamics, Vol. 32, No. 2, March –April 2009.  
       doi: 10.2514/1.38210  
 
[4] Joshi, G., Padhi, R., “Robust Satellite Formation Flying Through Online Trajectory Optimization using LQR and 
Neural Networks”, Third International Conferenc e on Advances in Control and Optimization of Dynamical Systems, 
March 13 15, 2014.  
        doi: 10.3182/20140313 3IN3024.00173  
 
[5] Masari, M., Zamaro , M., “Application of SDRE technique to orbital and attitude control of spacecraft formation 
flying”, Acta Astronautica Journal, published online 13 Feb. 2013.  
      doi: 10.1016/j.actaastro.2013.02.001  
 
[6] Hamel, J F., Lafontaine, J., “ Neighboring  Optimu m Feedback Control Law for Earth Orbiting Formation Flying 
Spacecraft”, Journal of Guidance, Control, And Dynamics, Vol. 32, No. 1, January –February 2009.  
      doi: 10.2514/1.32778  
 
[7] Guarnaccia, L., Bevilacqua, R., Pastorelli, S. P., “Suboptimal LQR based spacecraft full motion control: Theory 
and experimentation”, Acta Astronautica Journal, published online 2 Feb. 2016.  
      doi: 10.1016/j.actaastro.2016.01.016  
 
[8] Kumar, K. D., Fundamentals of Dynamics and Control of Space Systems, Ontario, 2012, Chap. 8.  
 
[9] Ogata, K., Modern Control Engineering , 5th ed., Pearson Education, New Jersey, 2010, Chaps. 9, 10.  
 
[10] V. Krotov, Global Methods in Optimal Control Theory , Marcel Dekker, New York, 1995, Chaps. 1, 2.  
 
[11] D. Naidu, Optimal Control Systems , CRC Press, Boca Raton, Florida, 2002.  
 
[12] Nise, N. S., Control Systems Engineering , 7th ed., Wiley, Pomona, 2014, Chap. 12.  
 
[13] Kumar, A., Jain, T., “Linear Quadratic Optimal Control Design: A Novel Approach Based on Krotov Conditions” , 
Hindawi Mathematical Problems in Engineering, Volume 2019.  
       doi: 10.1155/2019/9490512  
 
[14] Kumar, A., Jain, T., “ Computation of Linear Quadratic Regulator using Krotov Sufficient  Conditions ”, 2019 
Fifth Indian Control Conference (ICC)  IIT Delhi, India, January 9 11, 2019 . 
       doi: 10.1109 /INDIANCC.2019.8715621  
 
[15] MATLAB & SIMULINK, Programming and numeric computing platform, Ver. 9.10.0.1602886 (R2021a), 
Natick, MA.  
 
 
 
 
 
View publication statsJournal of Physics: Conference Series
PAPER • OPEN ACCESS
Speed PID controller simulation of a reaction
wheel for CubeSat orientation applications
To cite this article: I Medina et al 2021 J. Phys.: Conf. Ser.  1723 012013 
 
View the article online  for updates and enhancements. You may also like 
Waterfilled heat pipes for CubeSat 
thermal control 
H J van Gerner, H Brouwer, Z de Groot et 
al.
Review of inspace plasma diagnostics for 
studying the Earth’s ionosphere 
Luis Fernando VelásquezGarcía, Javier 
IzquierdoReyes and Hyeonseok Kim 
CubeSat Spatial Expedition: An Overview 
From Design To Experimental Verification 
G Morettini, G Zucca, C Braccesi et al. 
 
This content was downloaded from IP address 79.139.215.77 on 10/12/2023 at 21:10Content from this work may be used under the terms of the Creative Commons Attribution 3.0 licence. Any further distribution
of this work must maintain attribution to the author(s) and the title of the work, journal citation and DOI.
Published under licence by IOP Publishing LtdX International Congress of Physics Engineering (X CIIF) 2020
Journal of Physics: Conference Series 1723 (2021) 012013IOP Publishing
doi:10.1088/17426596/1723/1/012013
1Speed PID controller simulation of a reaction wheel
for CubeSat orientation applications
I Medina1, L Santiago2, J J Hern andezG omez1;a, R Castillo2and C
CouderCasta~ neda1
1Instituto Polit ecnico Nacional, Centro de Desarrollo Aeroespacial
Belisario Dominguez 22, Centro, Ciudad de M exico, 06610, M exico.
2Instituto Polit ecnico Nacional, Escuela Superior de Ingenier a Mec anica y El ectrica Unidad
Zacatenco, Secci on de Estudios de Posgrado e Investigaci on.
Av. Luis Enrique Erro S/N, Unidad Profesional Adolfo L opez Mateos, Zacatenco,
Delegaci on Gustavo A. Madero, 07738, Ciudad de M exico, M exico.
Email:ajjhernandezgo@ipn.mx
Abstract. CubeSat technology is a lowcost alternative for space research in universities
worldwide, promoting research areas in teledetection, Earth and space observation,
telecommunications, meteorology, etc. In this sense, Attitude and Determination Control
Subsystem (ADCS) plays a key role in order to achieve a fast and precise orientation of the
satellite, aiding the system by acquiring the specic and critical angles they require to accomplish
the space mission. Therefore, choosing adequate actuators is key for the correct manipulation
of the CubeSat, and it must consider size, weight and electrical power usage limitations of
the CubeSat Standard. ADCS actuators must generate a quick response to generate an active
momentum that modies the satellite attitude. This work proposes a speed PID controller for
a reaction wheel using lowcost materials for its implementation in 1U CubeSats.
1. Introduction
CubeSat technology is in constant growing due to their relatively easy development and low
costs, compared to larger satellites, making them ideal for research purposes in universities
globally. CubeSats' basic unit (1U) have standard dimensions of 10 cubic centimetres, and
are able to increase in size and units, making a modular solution for several applications [1].
They are intended for operations in Low Earth Orbit (LEO), from 300 to 650 km of altitude,
completing one Earth's orbit in about 90 minutes (orbital speed 8 km/s), providing Line of
Sight (LoS) from the ground station point of view of 5 to 10 minutes, optimally [2, 3, 4].
Nowadays, the growing necessities of satellite communications as higher data rates motivate
innovative data transmission methods, proving that current RadioFrequency methods (RF)
are decient for the upcoming market requirements in terms of system size, cost, energetic
consumption and RF licenses, providing only data rates of approximately 3 Mbps [4, 5, 6].
Considering the evident limitations of RF, there are numerous proposals for satellite laser
communications (lasercom), the wireless counterpart of optic bre communications, oering:
higher data rates, higher bandwidth, small weight and size components, low power transceivers,
etc [7, 8]. Lasercom technology in Cube Sat's has already being implemented. The NASA
Optical Communications Sensor Demonstration (OCSD) has achieved a LEO { OGS (OpticalX International Congress of Physics Engineering (X CIIF) 2020
Journal of Physics: Conference Series 1723 (2021) 012013IOP Publishing
doi:10.1088/17426596/1723/1/012013
2Ground Station) link, with higher data rates and lower power consumption [9, 10, 11, 12, 13].
However, the main drawback of lasercom is the design, programming and selection of actuators
for ADCS, responsible for aircraft attitude corrections. Widely used actuators for CubeSats
are reaction wheels (RWs), since are able to attain a ne and continuous pointing. This work
proposes the simulation of a speed PID controller for a lowcost RW to be implemented as a
slave controller in a cascade control loop system. This will allow the ADCS to have a fast control
response of the actuators, acquiring the desired angular modication, aiding to guarantee higher
precision, thus providing better pointing for optical or RF communication systems working with
narrow beams.
2. Attitude Determination Control Subsystem (ADCS)
There are two classications for orientation control systems: active and passive ADCSs. Passive
ADCSs take advantage of the environment and the satellite dynamics to obtain the wanted
orientation, without the necessity of any power. On the other side, active ADCSs require an
energy source to accomplish its function, and use actuators' controllers [14, 15, 16]. Active
ADCSs consist on a closed loop control constituted of three dierent stages [14, 16],
(i) Measurement and determination of current orientation,
(ii) Current orientation and desired orientation comparison, error calculation,
(iii) Actuator control to reduce the orientation error.
The mission's goals indicate the conditions to select adequate sensors and actuators. The
ADCS design greatly inuence the performance of other satellite subsystems. Therefore, some
indispensable functionalities must be oered [15, 16], like
To protect the power system performance and
To adjust or maintain the desired orientation.
3. ADCSlike feedback control system
The stability and orientation determination of the satellite is calculated via appropriate readings,
obtained from dierent sensors, determining the current orientation of the satellite's three axes.
Figure 1. CubeSat orientation feedback control system [16, 17].
Figure 1 shows the ADCS feedback control system, for the satellite to keep a desired
orientation, which can be established through an algorithm processed by the onboard computer
or by telemetry from the ground station. The desired orientation is compared to the current
orientation measured in the satellite, resulting in a deviation error, so the control algorithm
to generate a signal for the actuators, as shown in Table 1. Actuators generate a momentum,X International Congress of Physics Engineering (X CIIF) 2020
Journal of Physics: Conference Series 1723 (2021) 012013IOP Publishing
doi:10.1088/17426596/1723/1/012013
3actively changing satellite's orientation. The control system must be exact and precise in the
pointing, acquisition and tracking stage [16].
Table 1. CubeSat actuators advantages and disadvantages [15, 16, 17].
Actuator Advantages DisadvantagesPowerMomentumconsumption
PropulsorsAltitude insensitiveFuel dependent
Active ExternalCan adapt to any operative
orbit in any referential axisOno operationHigh momentum
Solar sailFuel independent Needed for panel controlPassive ExternalUseful for high orbits Low momentum
Reaction Continuous and ne pointing Nonlinear at zero velocityActive Internalwheels Variable magnitude Internal friction issues
Momentum Fitted for three Mechanical complexity
Active Internal control axis stabilisation Fidelity issues
gyroscope Very high momentum High cost
4. ADCS considerations
This work proposes a speed PID controller for a RW for its implementation in 1U CubeSat
prototypes endowed with hybrid communications system (lasercom and RF).
A cascade control loop system is proposed as controller conguration. The controller is
responsible of improving the response time of the RW to acquire the angular modications
required by the mission, and it is driven by the aircraft's ADCS. Thus, it is important to
consider the transitory and stable regimes of the controlled variable.
P, PI and PID controllers have the next features:
In the Proportional (P) controller, the control action is directly proportional to the gain,
V(t) =kpe(t): (1)
The P controller (Equation (1)) lightly reduces the elevation time, compared to PI and PID
controllers, presenting an overshoot.
The ProportionalIntegral (PI) controller is proportional to gain and to its time integration,
V(t) =kpe(t) +kp
TiZ
e(t)dt : (2)
The PI controller (Equation (2)) reduces the damping time of the system and elevation
time, thus improving time response. However, the maximum overshoot is increased and
there could be several ripples and oscillations before stabilisation.
The ProportionalIntegralDerivative (PID) controller is proportional to gain, time
integration and time derivative (Equation (3)). It improves the maximum overshoot, the
elevation time and the signal damping, which are drastically reduced, reducing oscillation
time and improving the proportional band ratio.
V(t) =kpe(t) +kp
TiZ
e(t)dt+kpTdde(t)
dt(3)
In this sense, the best choice for the proposal of a slave controller for a RW is the PID
controller. Thus, the elevation and peak times that could aect the system are reduced.X International Congress of Physics Engineering (X CIIF) 2020
Journal of Physics: Conference Series 1723 (2021) 012013IOP Publishing
doi:10.1088/17426596/1723/1/012013
45. Speed control PID of the Reaction Wheels
In order to obtain angular modications for a standard 1U CubeSat, the relevant variables are
its moments of inertia (Figure 5(a)), the angular acceleration, the moment of inertia of the RW
and RW's mass. RW's geometry is that of a disc, drilled in the centre to be fastened to the
brushless motor's shaft (Figure 5(b)). Table 5 shows the equations used for the calculation of
the mentioned variables, assuming the specications of a 1U CubeSat [1].
Figure 2. (a) 1U CubeSat moment of inertia. (b) Moment of inertia
at the motor wheel.
Table 2. Considerations to obtain the angular modication for a 1U CubeSat, considering a
brushless motor of 7353 rpm 770 rad/s and a RW made of anodised aluminium.
Parameter Moment of inertia Angular acceleration of
reaction wheelMoment of inertia of
reaction wheelReaction wheel mass
Equation ICubeSat =1
6ml2 RW=RW
ntIRW=T
RWmRW=2IRW
rRW
wherem: Satellite's mass n: wheel activation % T: Nominal torque rRW= 30 mm radius
l: Arista length t: operation time 10s
The development of a lowcost RW must consider the mentioned parameters as well as the
brushless motor shown in Figure 5(a). RW has a mass of 72 grams a diameter of 60 mm. Thus, a
speed controller is proposed as a slave controller, in order to accelerate the response of the RW,
reducing response times and guaranteeing a fast ship stabilisation. The modelling and motor
transference function are represented by Equation (4), derived from the mathematical model of
the equivalent electric circuit of a brushless motor, shown in Figure 5(b).
G(s) =29:79
2:310 5s2+ 0:01359 s+ 1(4)
6. Results
The RW's design was performed in SolidWorks R, and the speed controller behaviour for the
lowcost RW was simulated in Matlab R, in order to analyse the transient response so to adapt
it to the mathematical model of the motor. The latter contemplates a load of a 30 mm radius
disc and 72 grams of weight. The system's response in openloop is shown in Figure 6(a). The
ZielgerNicholls method was used to tune the obtained data. Actually, the behaviour of P, PI
and PID controllers was simulated (Figure 6(b)).X International Congress of Physics Engineering (X CIIF) 2020
Journal of Physics: Conference Series 1723 (2021) 012013IOP Publishing
doi:10.1088/17426596/1723/1/012013
5
Figure 3. (a) Crosssection of brushless motor coupled to the
reaction wheel. (b) Brushless motor equivalent circuit [18].
Figure 4. (a) System response to a unitary step function. (b) Speed
controllers' comparison.
7. Discussion
The PID controller proposal was compared to a brushless motor speed controller, showing similar
results between them for short times (Figure 7(a)). However, tuning reduces the peak shown in
Figure 7(b). The PID controller designed for a lowcost RW guarantees a fast response which if
considered along with the master orientation controller, improves CubeSat's stability, providing
a fast acquisition and tracking response for an uplink/downlink narrow beam application.
Figure 5. (a) PID controller response time. (b) PID controller response time after
tuning.X International Congress of Physics Engineering (X CIIF) 2020
Journal of Physics: Conference Series 1723 (2021) 012013IOP Publishing
doi:10.1088/17426596/1723/1/012013
68. Conclusions
Narrow beam technologies as lasercom add essential benets to wireless transmissions, such as
higher data rates. However, their implementation involves several issues, as it is imperative to
achieve a precise and fast pointing in order to establish optical links in very short sighting periods.
Bearing these ideas in mind, in this work we proposed the use of lowcost reaction wheels for 1U
CubeSat transcieving through a narrow beam channel. Three speed controllers were tested. The
PID speed controller for the reaction wheel as a slave controller reduces drastically the stationary
response time, and it eliminates the peaks and oscillations in the actuators' response, providing
a fast response to the master controller. This work, still in progress, sets the precedent to the
development of ACSs specially designed for the very stressing and demanding task of precise
pointing for lasercom in nanosatellites as those built under the CubeSat standard [1].
Acknowledgments
This work was partially supported by projects 20200378, 20201040, 20202014, 20201606,
20200259, as well as EDI grant, by Secretar a de Investigaci on y Posgrado, Instituto Polit ecnico
Nacional.
References
[1] Mehrparvar A, Pignatelli D, Carnahan J, Munakat R, Lan W, Toorian A, Hutputanasin A and Lee S 2014
Cubesat design specication rev. 13 Tech. Rep. 2 California Polytechnic State University
[2] Bouwmeester J and Guo J 2010 Acta Astronautica 67854{862
[3] Toorian A, Diaz K and Lee S 2008 The cubesat approach to space access 2008 IEEE Aerospace Conference
(IEEE) pp 1{14
[4] Medina I, Hern andezG omez J, TorresSan Miguel C, CouderCastaneda C, Orozcodel Castillo M and
GragedaArellano J 2019 Journal of Physics: Conference Series 1221 012063
[5] Santiago L 2019 Desarrollo de un prototipo para localizaci on basado en un algoritmo de visi on articial
para Cubesats, Bachelor's thesis, Instituto Polit ecnico Nacional, Escuela superior de Ingenier a Mec anica
y El ectrica
[6] Palo S E 2015 High rate communications systems for cubesats 2015 IEEE MTTS International Microwave
Symposium (IEEE) pp 1{4
[7] Devarajan D, Pillai S S and Sreelatha P 2014 Optimal lasercom satellite transmitter based on performance
prediction and design adaptation 2014 Fourth International Conference on Advances in Computing and
Communications (IEEE) pp 33{37
[8] Arnon S and Kopeika N 1997 Proceedings of the IEEE 851646{1661
[9] Janson S W, Welle R P, Rose T S, Rowen D W, Hinkley D A, Hardy B S, La Lumondiere S D, Maul G A and
Werner N I 2015 The NASA optical communication and sensors demonstration program: preight update
(NASA)
[10] Lambert S G and Casey W L 1995 Laser Communication in Space (Boston, MA: Artech House)
[11] Robinson B S, Boroson D M, Burianek D A and Murphy D V 2011 The lunar laser communications
demonstration 2011 International Conference on Space Optical Systems and Applications (ICSOS) (IEEE)
pp 54{57
[12] Epple B 2005 Development and Implementation of a Pointing, Acquisition and Tracking System for Optical
FreeSpace Communication Systems on High Altitude Platforms Ph.D. thesis Institut Fur Informatik
M uchen diplomarbeit
[13] Shaik K 1988 The Telecommunications and Data Acquisition Report 180{200
[14] Ley W, Wittmann K and Hallmann W 2009 Handbook of space technology vol 22 (John Wiley & Sons)
[15] Mart nezVald es D 2018 Dise~ no y construcci on de un arreglo de ruedas de reacci on para el sistema de control
de orientaci on de nanosat elites CubeSat 3U, Bachelor's thesis, Universidad Nacional Aut onoma de M exico,
Facultad De Ingenier a
[16] Brown C D 2002 Virginia Inc. 1{43
[17] D Bolg ar N B and Nicolae A 2018 Fault Tolerant Attitude Control of a PicoSatellite Equipped with Reaction
Wheels and Magnetorquers Master's thesis Aalborg University Aalborg, Denmark
[18] Mondal S, Mitra A and Chattopadhyay M 2015 Mathematical modeling and simulation of brushless dc
motor with ideal back emf for a precision speed control 2015 IEEE International Conference on Electrical,
Computer and Communication Technologies (ICECCT) (IEEE) pp 1{5MathNet.Ru
All Russian mathematical portal
A. V. Savitskiy, V. E. Pavlovsky, Model of quadrotor and algo rithm of vehicle control
based on neural network, Keldysh Institute preprints , 2017, 077
DOI: 10.20948/prepr201777
Use of the allRussian mathematical portal MathNet.Ru imp lies that you have read and agreed to these terms of use
http://www.mathnet.ru/eng/agreement
Download details:
IP: 79.139.215.77
December 17, 2023, 00:54:32ИПМ им.М.В.Келдыша РАН   •  Электронная библиотека
Препринты ИПМ   •  Препринт № 77 за 2017 г.
ISSN 20712898 (Print)
ISSN 20712901 (Online)
Савицкий А.В.,  Павловский В.Е.
Модель квадрокоптера и
нейросетевой алгоритм
управления
Рекомендуемая форма библиографической ссылки:   Савицкий А.В., Павловский В.Е.
Модель квадрокоптера и нейросетевой алгоритм управления // Препринты ИПМ
им. М.В.Келдыша. 2017. №  77. 20  с. doi:10.20948/prepr201777  
URL: http://library.keldysh.ru/preprint.asp?id=201777О р д е н а  Л е н и н а  
ИНСТИТУТ ПРИКЛАДНОЙ МАТЕМАТИКИ  
имени М.В. Келдыша  
Р о с с и й с к о й  а к а д е м и и  н а у к  
 
 
 
 
 
 
 
 
А.В.Савицкий, В.Е.Павловский  
 
 
МОДЕЛЬ КВАДРОКОПТЕРА  
И НЕЙРОСЕТЕВОЙ АЛГОРИТМ УПРАВЛЕНИЯ  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Москва  2017 УДК  623.746 519 
 
Савицкий А.В. , Павло вский В.Е  
Модель квадрокоптера и нейросетевой алгоритм управления  
 
В работе представлена теоретико механическая модель беспилотного летательного 
аппарата – квадрокоптера. Изучены такие базовые траектории, как взлет парение 
посадка, полет по прямой. Рассмот рен нейросетевой алгоритм построения 
управляющих воздействий для базовых траекторий. На основе результатов численного 
моделирования построена обучающая выборка, построена сходящаяся нейронная сеть. 
Показано, что построенный алгоритм управления удовлетворит ельно работает для 
случая базовых траекторий. Также представлены результаты работы нейросетевого 
алгоритма при наличии погрешности позиционного датчика.  
 
Ключевые слова: квадрокоптер, нейронная сеть, алгоритм управления, 
нейросетевой регулятор.  
 
 
Alexander  V. Savitskiy, Vladimir E. Pavlovsky  
Model of quadrotor and neural network algorithm of vehicle control  
 
This paper presents a theoretical mechanical model of an unmanned aerial vehicle  
quadrocopter. It studies such basic trajectories as take off, land ing, hovering, flying in a 
straight line. This work also considers convergent neural network algorithm of control. Based 
on the results of numerical simulation a training set and  а neural network were constructed. It 
is shown that the constructed control algorithm works satisfactorily in the case of basic 
trajectories. Besides this work presents results for the case when the position sensor has an 
error.  
 
Key words : quadrocopter, neural network control algorithm, neural network controller.  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 3 
Введение  
В течение последних лет тема беспилотных летательных аппаратов (БПЛА) 
получает все большее распространение. Особый интерес вызывают 
мультикоптерные роботы – устройства, приводимые в движение n роторами (как 
правило, их количество – от 1 до 8). Случай одного ротора – это вертолет, 
четырех – квадрокоптер (коптер) – основной объект изучения данной работы [1].  
Использование стандартных датчиков позиционирования (акселерометр,  
гироскоп) требует специальных исследований в связи с тем, что накапливаемая 
ошибка может значительно исказить выходную информацию. Поэтому большая 
часть всех публикаций посвящена соответствующим алгоритмам построения 
управлений и сравнению их эффективност и, в том числе с использованием 
указанных датчиков. Среди этих работ можно выделить несколько групп:  
1) метод построения управления, основанный на теории Ляпунова, 
позволяющие в определенной постановке достичь асимптотической 
устойчивости летательного апп арата [2];  
2) алгоритм управления, в основе которого лежит пропорционально 
интегрально дифференциальный (ПИД) регулятор; его основное 
преимущество заключается в экспоненциальной сходимости, упрощенной 
реализации, так как она не требует специфических параме тров модели [3];  
3) энергетические методы, применимые для пассивных систем с 
недостатком управляющих воздействий [4];  
4) методы, основанные на визуальном управлении от видеокамеры 
(видеокамер), часто используются на взлете посадке;  
5) методы, основанные на  управлении с помощью нейросетевого 
регулятора, используемого в задачах стабилизации, при поиске 
оптимальных параметров регулятора [5].  
В отдельный класс задач можно выделить исследование проблем 
предотвращения столкновений для нескольких роботизированных систем в 
группе [10].  
Особое место занимают методы, основанные на нейронных сетях. Задачи, в 
которых применяются нейросетевые контроллеры, можно разделить на два 
класса: построение управления для определенных режимов полета и отдельных 
траекторий и задачи  стабилизации по всем или по части переменных [11].  
Интересные результаты получены командой американских ученых из 
Университета Миссури [12], разработавших алгоритм управления группой 
квадрокоптеров. Данный алгоритм содержит два двуслойных нейросетевых 
контроллера. Первый используется для синтеза управляющих воздействий 
ведущего коптера, второй используется для стабилизации группового полета, он 
работает на основе данных с беспроводных бортовых датчиков. Последний 
контроллер в качестве входных параметров по лучает состояния системы, а на 4 
выходе выдает оптимальное управление для движения с минимальным 
отклонением от траектории ведущего коптера. Описанные в работе контроллеры 
позволяют учитывать аэродинамические эффекты и внешние возмущения. 
Также в этой работе  представлен метод оптимизации каналов связи между 
квадрокоптерами, использующий теорию графов.  
Есть работы по применению нейросетевого метода в изучении динамики 
вертолета. Например, в работе из Политехнического университета Мадрида [13] 
представлен гибри дный контроллер, состоящий из двух нейронных сетей: 
Джордана и Элмана (т.е. рекуррентных сетей с обратными связями). В работе 
показано, что оптимальное управление коптером находится при отдельном 
рассмотрении различных этапов полета, в работе не строится о бщее 
оптимальное управление для всего полета.  
Использование нейросетевого контроллера для управления высотой полета 
представлено в тезисах конференции [14]. В них приведено описание 
совместной работы пропорционально интегрально дифференциального и 
нейросет евого регуляторов. Одной из основных особенностей полученного 
алгоритма является быстрая адаптация к внешним воздействиям.  
Целью настоящей работы является моделирование динамики квадрокоптера, 
изучение базовых траекторий, построение нейроалгоритмов управле ния для 
базовых траекторий и изучение влияния погрешностей системы на действие 
нейросетевого контроллера для задач взлета посадки парения. Одно из 
назначений этого контроллера – преодоление проблемы дефицита управлений, 
т.к. квадрокоптер – это система с их  недостатком: система имеет (в полете) 6 
степеней свободы и только 4 управления. Другая цель заключается в 
возможности реализации быстрых вычислений, т.к. нейросетевой метод 
относится к параллельным методам, работающим за малое число тактов 
вычислений.  
Выбор нейросетевого метода связан, в первую очередь, с тем, что при 
реальном полете мультироторного робота появляется большое количество 
эффектов и воздействий, которые иначе трудно математически смоделировать и 
парировать. Например, при быстром полете воздуш ный поток может вызывать 
осевые вибрации вращающегося винта, называемые в литературе "blade 
flapping". Это связано с тем, что относительная скорость воздуха для 
"набегающей" лопасти винта сильно отличается от скорости воздуха для 
противоположной – "уходяще й" – лопасти. Это приводит к тому, что подъемная 
сила каждой лопасти в течение одного оборота может меняться, вызывая тем 
самым колебания оси винта и соответственно воздействуя на летящий аппарат. 
Но в данной работе рассмотрены только умеренные маневры, по этому этот 
эффект не будет учтен.  
Также существует актуальная задача корректировки полета при появлении 
внешних возмущений, например ветра. С этой задачей связано 2 типа проблем. 
Первая – ветер сложно измерить, а получить информацию о его воздействии 
можно  с навигационных бортовых датчиков, которые имеют определенную 
погрешность и шум. Вторая проблема связана с задержкой по времени между 5 
обнаружением отклонения и корректировкой полета. Поэтому также имеется 
задача оптимизации вычислительной схемы для повыше ния ее быстродействия.  
 
1. Описание модели  
 
Настоящая работа дополняет исследования, выполненные в [16], в которых 
также использовалась полная модель квадрокоптера, но она была дана без 
вывода. Изложение в настоящей работе начнем с полного вывода уравнений 
модели квадрокоптера. Этот раздел можно рассматривать и как дополнение к 
[16].  
 
В качестве модели квадрокоптера рассмотрим плоское тело, состоящее из 
корпуса и 4 пропеллеров (рис.1). Корпусом будем считать 2 одинаковых стержня 
длины 2l, пересекающиеся в точк е A под прямым углом. Масса каждого стержня 
равна m0 /2. 
 
Рис. 1.  Концептуальная модель квадрокоптера  
Предполагается, что пропеллерами являются диски, закрепленные на 
концах стержней в точках С1, С2, С3, С4. Диски имеют радиус r, массу mi. Центр 
масс робо та  M = m0 + 4mi находится в точке A.  
Пусть {Oxyz}  – правая инерциальная система координат, причем Oz 
направленна вертикально вверх. Положение центра масс тела определяется 
вектором ξ=(x, y, z) . 
Пусть {Ae 1e2e3} – правая система координат, жестко связанная  с роботом. 
Выберем ось Oe1 по направлению "руки" летательного аппарата, 
соответствующейэ точке С1, ось Oe2 – перпендикулярно Oe1 в плоскости робота.  
 
1.1. Основные предположения  
1) При вычислении кинетического момента и других динамических 
характеристик п ропеллера будем предполагать, что его тензор инерции 
относительно точки крепления имеет такой же вид, как у однородного диска, 
который назовем диском несущего винта.  6 
2) Будем рассматривать только умеренные маневры. Соответственно, мы 
пренебрегаем упругость ю лопастей несущего винта, и диск несущего винта 
считается бесконечно жестким и бесконечно тонким. Диск все время вращается 
в плоскости, перпендикулярной оси Oe3. 
3) Подъемная сила каждого диска создает силу тяги ui, приложенную в точке 
Ci и все время напр авленную вдоль оси Oe3. 
4) Управление ориентацией задается с помощью трех независимых 
вращающих моментов {Г 1, Г 2, Г 3} вокруг каждой из трех осей системы 
координат {Ae 1e2e3}. Эти вращающие моменты приложены непосредственно к 
корпусу и не порождают никаких с ил поступательного движения, связанных со 
вторичными аэродинамическими эффектами или упругостью лопастей несущих 
винтов.  
5) Полагая, что линейная скорость квадрокоптера и его вращения 
существенно меньше скорости вращения винтов, будем считать, что воздух 
оказывает сопротивление только на лопасти несущих винтов, создавая тем 
самым отрицательные вращательные моменты.  
6) Векторы угловых скоростей винтов, расположенных в точках Сi для 
нечетного i, сонаправлены вектору е3, остальные – противонаправлены.  
 
1.2. В ычисление лагранжиана  
Ориентация корпуса робота задается с помощью трех углов Крылова ν =(φ, 
ψ, θ) . Соответствующую матрицу перехода  в неподвижной системе координат 
обозначим R. Кроме того, чтобы учесть динамику несущих винтов, введем углы 
поворота лопаст ей 
1
 , 
2
 , 
3
,  и 
4
 . От них будут зависеть управляющие 
моменты.  
Таким образом, обобщенные координаты для робота имеют вид: q = (x, y, z, 
φ, ψ, θ) . 
Обозначи м IA момент инерции корпуса относительно точки A, выраженный в 
подвижной системе координат; Ω А – угловая скорость корпуса в той же системе 
координат.  
Кинетическая энергия поступательного движения робота задается по 
формуле:  
                                             
,2transMT 
 .                   (1) 
Кинетическая энергия вращения корпуса:  
                                            
1,2rotA A A AT    ,                   (2) 
где IA = diag
1 2 3(I , I , I )AAA , причем в силу симме трии 
12IIAA . 
В силу Предположения 2 угловая скорость лопастей в подвижной системе 
координат выражается по формуле:  
                                           
1
3 1
ii
C A i e   
 .          
(3) 7 
Предположим, что несущие винты в проц ессе собственного вращения 
образуют диск с центром масс в точке Ci и диагональным тензором инерции IС в 
подвижной системе координат: IС = diag
1 2 3(I , I , I )CCC , причем в силу симметрии 
12IIAA
. 
Таким образом, суммарная кинетичес кая энергия вращения квадрокоптера 
выглядит следующим образом:  
      

   
 4
1
2222
3 1 2 3 4
1 2 3 4 311, I ,22
11,422
;ii rotA A A A C C C
i
c
A A C A
ACT
e
          
           
     
                         (4) 
Единственный потенциал, который будет учтен, – потенциал силы тяжести:  
V = mgz. 
Угловая скорость в подвижной системе координат имеет  следующий вид:  
       
sin
cos cos sin
cos cos sinA  
    
    
  
 
 .                          (5) 
Положим по определению:  
    
sin 0 1
: cos sin cos 0
cos cos sin 0W
  
  
  .                 (6) 
Тогда  
    
1sin
: cos cos sin
cos cos sinW   
      
       
    
   
 .                         (7) 
Заметим, что det W ν =  cosψ , то есть кинематическое преобразование будет 
невырожденным для всех ориентаций, за исключением тех, у которых ψ = π/2 + 
+ πk, k  – целое.  
Полная функция Лагранжа имеет вид:  
    
,trans rot L q q T T V  
 .                          (8) 
1.3. Обобщенные силы  
В соот ветствии с Предположением 3 существуют 4 силы поступательного 
движения и все они направлены вдоль оси e3. Следовательно, направление силы 
поступательного движения, приложенной к корпусу, определяется его 8 
ориентацией. В инерциальной системе координат направ ление силы тяги 
задается вектором: 
3e GR . 
Поэтому суммарную силу тяги, рассматриваемую в качестве управления, 
можно выразить в инерциальной системе отсчета следующим образом:  
    
   
  
 1 2 3 4
1 2 3 4 3 1 2 3 4
1 2 3 4cos sin cos sin sin
e sin sin cos cos sin
cos cosu u u u
F u u u u R u u u u
u u u u    
    
   
         
   .              
(9) 
Три вращате льных момента из Предположения 4, являющиеся 
управлениями, имеют следующие выражения в подвижной системе координат:  
                                             Г1 = (u2 – u4)le1, 
                                             Г2 = (u3 – u1)le2,                          (10) 
                                             Г3 = (M1 + M2  M3 + M4)e3=М 0 e3, 
где Mi – момент сопротивления iго винта.  
В итоге, обобщенные силы, зависящие от переменных ν, имеют вид  
             


   3 1 0
1
01
2 3 1 0
32 4 3 1 0sin cos
cos cos
: cos sin
sin cosu u l M
W u u l M
u u l tg l u u M


 
   
                                      (11) 
 
1.4. Модель подъемной силы и момента несущего винта  
В основу составления модели подъемной силы и момента несущего винта 
была положена статья [1], в которой изучен вертолет, установленный на 
экспериментальной платформе. Рассматривая малый элемент лопасти, имеем 
следующие выражения для аэродинамической силы и момента:  
     
2
4i
iihcaV ru 
 ,                         (12) 
     
42
8di
ihcar cM
 ,                         (13) 
ρ – плотность воздуха, h – количество винтов, c – ширина лоп асти, a – угловой 
коэффициент кривой подъема, r – радиус диска винта, Vi – индуцированная 
скорость парения, cd – коэффициент сопротивления.  
 9 
Введем дополнительные обозначения:  
                                   
2
14ihcaV rk , 
4
28dhcc rk ,                (14) 
тогда:  
                                   
1
1 1i
iiuk 
  и
2
2 1i
iiMk 
 .                (15) 
1.5. Уравнения Лагранжа  
Для начала введем обозначения:
114acA I I , 
33 D4acII . 
 
Уравнения Лагранжа:  
                                              
d L LQdt q q
 ,                 (16) 
где Q – обобщенные силы,  

 2 2 2 2 2 2 2 2,
1sin 2 sin cos cos sin 2 cos sin cos2trans rot L q q T T U
A              
      
             
 
  2 2 2 2 2 2 2 2 2
2 1 2 3 411sin cos cos 2 cos sin cos22cD                    
                       (17) 
  3 1 2 3 4 cos cos sinc            
 
Исходя из построенной модели, получаем уравнения Лагранжа:  
. . . .
1 1 2 3 4
. . . .
1 1 2 3 4
. . . .
1 1 2 3 4
2 2 2 2 2( )( ),
( )( ),
()
( ) (,
)Mx k cos sin cos sin sin
My k sin sin cos cos sin
Mz Mg k cos cos
Asin Acos sin Dcos cos cos sin A D A sin        
        
     
          
    
    
    
     

2 2 2
.. .. .. ..2
3 1 2 3 4
. . . . . .
3 1 2 3 4 1 3 1
2122 ( ) 2 ( ) ( )
( 2 2 ) ( )
( )( ) ( )
cos(c
csin cos A D sin cos A D sin cos sin D A
cos Asin Dcos I cos cos
sinI sin cos cos sin k lcos
kcos        
         
           
     
       
       

. . . .
2 3 4
2 2 2
.. .. .. ..22
3 1 2 3 4
. . . . .
3 1 2 3 4 1 32 2 2),
( ) ( ) (2 2 )
( ) 2 ( ) ( )
( )( ) (c
ccos sin cos A D Acos Dsin cos Acos Dcos
sin cos cos D A sin D A I sin
I cos sin cos k l  
          
          
            
     
        
      
. . . . .
1 2 1 2 3 4
2 2 22 2 2 2
2. . . . . .2
3 1 2 3 4 1 2 4
..
1 3 1 2 1) ( ),
( 2 2 ) ( )
( ) ( )( ) ( )
[ ( ) (csin k
A sin A cos Dcos Acos cos sin cos D A
sin cos A D I cos sin cos k l
tg lk sin cos k    
          
             
         
      
          
   
. . .
22
22.
34 )].   



























   
 10 
Полученную систему шести дифференциальных уравнений второго порядка 
можно представить в виде K
q
= N, где K – симметричная матрица с 
определителем A2Dcos2ψ , N  – правая часть уравнений. Стоит отметить, что 
определитель матрицы K не равен нулю, так как мы рассматриваем случай ψ 
 
π/2 + πk, k  – целое. Следовательно, можем вычислить обратную матрицу K1. 
Далее это б удет использовано для приведения полученной системы 
дифференциальных уравнений к виду Коши и численного интегрирования.  
 
2. Моделирование и алгоритмы управления  
Ввиду громоздкости полученных уравнений динамики представляется 
сложным найти аналитическое реш ение в общем виде. В связи с этим часть 
исследований опирается на результаты численного моделирования.  
Численное интегрирование полученной системы уравнений осуществлялось 
с помощью программы MATLAB  R2013 a методом Рунге Кутты. Был рассмотрен 
квадрокоптер со следующими параметрами:  
M = 1 кг,  
mi = 0,1 кг, 
l = 0,4 м,  
p = 4, 
r = 0,05 м,  
c = 0,01 м,  

= 1,3 кг/м3, 
Vi = 2 м/с,  
сd = 50.  
 
2.1. Взлёт посадка  
В качестве одной из базовых траекторий рассмотрим вертикальный взлёт, 
парен ие и посадку, в этом случае угловые скорости всех четырех винтов 
совпадают и равны ω. Выберем управление таким образом, чтобы z(t) и ω(t) 
были гладкими непрерывными функциями. Для их реализации разделим 
управление на 3 этапа:  
1) при 0 ≤ t < 5 ω(t) меняется п о квадратичному закону, происходит 
набор высоты;  
2) при 5 ≤ t < 10  ω =
1/4gm k  = 37,73 рад/с  парение на высоте h = 50 м;  
3) при 10 ≤ t < 15  ω(t) меняется по аналогичному квадратичному 
закону, происходит посадка.  
Отметим, что на интервале 0 ≤ t < 5 координата z(t) являлась функцией 
четвертой степени от t (рис. 2).  
Соответствующие графики приведены ниже на рис. 2.  11 
 
 
Рис. 2 . График зависимости высоты и абсолютной скорости  
от времени при взлете –парении –посадке  
 
2.2. Полет по горизонтальной прямо й 
Без ограничения общности рассмотрим движение вдоль прямой x=0, z=0. 
Также предположим, что 
0 . Тогда из уравнений движения следует, что 
0 . 
В результате, получаем, что одним из вариантов осуществления полет а по 
прямой является движение квадрокоптера в плоскости Ozy при некотором 
фиксированном угле крена θ0. В данном случае управления следует выбирать 
следующим образом ui=Mg/(4k1cosθ0). При этом получаем равноускоренный 
полет по прямой с ускорением –gtgθ0. 
Также стоит отметить, что управление можно подобрать таким образом, 
чтобы квадрокоптер осуществлял движение по прямой с остановкой в заданной 
точке. Для этого необходимо решить обратную задачу динамики, которая 
сводится к решению одного дифференциального ура внения первого порядка.  
 
 
 
3. Нейросетевой метод управления  
В данном разделе исследуем нейросетевой метод синтеза управления. Он, в 
частности, позволяет преодолеть проблему дефицита управлений.  
Суть нейросетевого подхода к управлению летательными аппаратам и 
заключается в создании многоуровневого алгоритма (рис. 3), способного 
автономно адаптироваться к непрогнозируемым внешним возмущениям и 
погрешностям измерительных устройств. В самом верхнем контуре происходит 
формирование целей и ключевых параметров поле та. Например, необходимо 
переместиться из точки A в точку B или следовать за подвижной целью, облетая 
возникающие на пути препятствия.  
 12 
 
Рис. 3 . Контуры алгоритма управления  
 
В следующем контуре происходит интерпретация заданных параметров в 
функциональны е ограничения. Также на нем осуществляется планирование 
общей траектории полета. Оно состоит из разделения маршрута на отрезки 
таким образом, что на каждом из них траектория полета в требуемой степени 
близка к некоторому шаблонному значению. Причем это шаб лонное значение 
задано и описано наперед и реализуется с высокой скоростью. Данный контур 
можно назвать выделением типовых решений или кластеризацией задачи.  
      Внутренний контур состоит из нескольких отдельных блоков. Во первых, это 
ряд нейросетевых ре гуляторов, отвечающих за движение по базовым 
траекториям (шаблонам). Во вторых, необходим блок, который будет отвечать 
за коррекцию алгоритма путем обновления обучающей выборки натурными 
испытаниями. Также можно добавить блок, отвечающий за создание новых 
шаблонов на основании многократных повторений подобных маневров.  
      В данной работе описаны отдельный нейросетевой контроллер и принципы 
его работы на некоторых базовых траекториях. Подтверждение его 
удовлетворительной работы в этом случае позволит нача ть разработку 
многоуровневого контроллера, адаптирующегося к непредсказуемым внешним 
факторам  и способного  к самостоятельной  корректировке.  
      Ниже приведена схема синтеза управления с использованием нейросетевого 
контроллера, состоящая из трех основных  функций: блока, моделирующего 
датчики, нейронной сети и интегратора.  13 
 
Рис. 4.  Вычислительная схема модели  
3.1. Система датчиков  
Наиболее распространенными датчиками являются высотомер, система 
определения долготы и широты (датчик GPS, система маяк радар ), 
акселерометры и гироскопы. Для случая вертикального взлета система датчиков 
состоит из одного гибридного высотомера (предполагается, что для высоты от 0 
до 1 м задействован ультразвуковой дальномерный датчик, а для высот более 1 
метра подключается баром етрический). Он передает сигнал с текущей 
координатой z в блок нейронной сети с интервалом 0,01 секунды.  
 
3.2. Блок Нейронной сети (НС)  
Задачей этого блока является вычисление управляющих воздействий с 
помощью нейронной сети в зависимости от текущих параме тров системы и 
требуемой точности. Он позволяет находить функции управления в задачах с 
плохо моделируемыми или непредсказуемыми эффектами. Так, например, для 
корректировки управления при появлении бокового ветра не обязательно знать 
его силу, а достаточно  знать показания бортовых датчиков. Являясь хорошим 
аппроксиматором, нейронная сеть позволяет осуществлять быстрые вычисления. 
Единственным ее недостатком является необходимость в вычислении 
коэффициентов весовой матрицы, т.е. обучении.  
В основе данного бл ока лежит трехслойная нейронная сеть прямого 
распространения (трехслойный перцептрон). В результате экспериментов была 
выбрана сеть с сигмоидальными функциями в скрытом слое, состоящем из 10 
нейронов (рис. 5). Вычисление весовой матрицы и смещений осуществ ляется 
путем супервизорного обучения [15].  
Правило супервизорного обучения предполагает набор примеров 
(обучающая выборка) правильной работы сети:  14 
 
  (a , b ), k 1 ,..., ,kk N  
 
где ak – вход в нейронную сеть и bk – соответствующий ему правильный выход 
(цель ). Когда входы предъявляются сети, её выходы сравниваются с целями. 
Правило обучения используется для уточнения весов и смещений нейронов сети, 
чтобы приблизить выход сети к соответствующим целям, которые указаны в 
задающем блоке.  
 
 
Рис. 5.  Схема нейронно й сети для взлёта на высоту h за время T 
(рисунок дан в нотации MATLAB ) 
Обучающая выборка формируется следующим образом. Для начала 
составляется семейство функций, которыми будет приближаться целевое 
решение. Далее с помощью численного моделирования решает ся обратная 
задача динамики по вычислению соответствующего семейства функций 
управления. Полученное семейство формирует набор выходов нейронной сети 
bk. В качестве входов используются параметры целевой траектории (высота и 
время подъема парения посадки, уг ол поворота и др.), а также информация, 
поступающая с блока датчиков (текущая координата центра масс, скорость и 
др.). 
Например, для случая вертикального взлета за время t1 на высоту h 
семейством целевых функций выбрано множество многочленов четвертой 
степени следующего вида:  
4 3 2
4 3 2
1 1 13 8 6,nh h hz t t tt t t  
 
в котором коэффициенты найдены из условий, что 
11 (0) 0, (t ) , (0) 0, (t ) 0,n n n nz z h z z   
n – количество функций в семействе. 
Причем каждому такому многочлену соответствует функция управления. Таким 
образом, для случая вертик ального взлета с датчиком высоты (рассмотренного 
далее при моделировании) обучающей выборкой является множество строк 
вида:  
1(t , , (t ), (t )),n j n jh z u
 
где j – соответствует количеству точек на целевой функции, взятых для 
обучающей выборки, 
(t )njz
  – текущая высота и 
(t )nju  – управляющее 
воздействие (сила вертикальной тяги). Первые три являются входными 
параметрами сети, а последнее – выходом.  15 
Задачей этого блока является вычисление управляющих воздействий с 
помощью ней ронной сети в зависимости от текущих параметров системы и 
требуемой точности.  
 
3.3. Блок интегратора  
Данный блок интегрирует систему уравнений Лагранжа с учетом входящих 
параметров ( T, h, z), в том числе управляющих воздействий. На выходе 
получается новое состояние системы, которое на следующем шаге цикла 
моделирования опять подается в нейронную сеть и т.д.  
 
3.4. Вертикальный взлет  
Случай вертикального взлета является одномерной задачей с переменной z. 
Система датчиков состоит из одного гибридного высотом ера (предполагается, 
что для высоты от 0 м до 1 м задействован ультразвуковой дальномерный 
датчик, а для высот более 1 метра подключается барометрический). Он передает 
сигнал в блок нейронной сети с интервалом 0,03 секунды.  
В качестве параметров желаемой т раектории выберем желаемую высоту 
подъема ( h) и время подъема ( t1). Для начала рассмотрим работу предложенного 
алгоритма для взлета на высоту 3 м и 5 м за 3 с без учета погрешности 
высотомера (рис. 6).  
 
Рис. 6.  Взлет на высоту 3 и 5  м с идеальными датчика ми высоты  
 
Графики, соответствующие фактической работе регулятора, более краткие 
по времени в связи с тем, что при достижении целевой высоты алгоритм 
моделирования останавливается.  
 
 
 16 
3.5. Погрешность системы для случая вертикального взлета  
В данной сист еме были учтены погрешность измерения датчика высоты и 
наличие шума. Шум и погрешность определялись как некоторые случайные 
числа, находившиеся в определенном диапазоне. На рис. 7 и 8 показана работа 
регулятора в зависимости от величины максимальной погреш ности на шаге. Для 
случая с погрешностью 4 см среднеквадратичное отклонение от целевой 
траектории для взлета на 3 м составило 0,13, на 5 м – 0,29. Для случая с 
погрешностью 10 см среднеквадратичное отклонение от целевой траектории для 
взлета на 3 м состави ло 0,5, на 5 м – 0,09.  
 
Рис. 7.  Взлет за 3 с на высоту 3 м и 5 м с погрешностью высотомера 4 см  
 
Рис. 8.  Взлет за 3 с на высоту 3 м и 5 м с погрешностью высотомера 10 см  
 
На основании серии экспериментов для взлета на заданную высоту за 
заданное время бы ло получено, что при погрешности датчика высоты до 4 см 
происходит существенное отклонение траектории от желаемой (не более 5% от 
общей длины пути). Проведенное моделирование показало достаточно 
эффективную работоспособность этой схемы для меньших погрешно стей. 17 
Предложенный в данной работе нейросетевой регулятор удовлетворительно 
работает для точности высотомера порядка 4 см.  
 
3.6. Управление углом крена  
Аналогично можно построить нейросетевой контроллер для управления 
углами. Например, для управления углом  крена обучающей выборкой является 
множество строк вида:  
(T, θ 1, θ, u1, u2, u3, u4), 
где Т – длительность поворота, θ1 – угол отклонения, θ – текущий угол крена и ui 
– управляющие воздействия. В качестве целевого управления выбраносемейство 
функций вида:  
θ(t)= θ 1sin2(πt/2T+π/2), где T и θ1 – параметры обучающей выборки.  
Рассмотрим результаты работы построенного нейросетевого контроллера для 
θ1=π/12, t1=5 с . На рис. 9 показаны график целевой функции и результат работы 
нейросетевого алгоритма для поворота угла крена с π/12 до нуля.  
 
 
Рис. 9.  Поворот на угол π/12 
 
График, соответствующий работе регулятора, достаточно хорошо 
приближает целевую функцию: среднеквадратичное отклонение составляет 
0,015. Это позволяет говорить об удовлетворительной работе построе нного 
алгоритма.  
 
 
5. Заключение  
 
Построена модель квадрокоптера с четырьмя управлениями и шестью 
степенями свободы, учитывающая аэродинамические эффекты через 
воздействие воздуха на вращение лопастей винтов. С помощью численного 
моделирования рассматривал ись взлет парение посадка и полет по прямой. 
Рассмотрено нейроуправление коптером, рассмотрены случаи работы 
регулятора для управления углом поворота, для взлета на заданную высоту с 
учетом погрешности датчика высоты и без нее.  18 
В результате проведенного эк сперимента по моделированию показана 
возможность реализации нейроконтроллера управления квадрокоптером на 
типовых траекториях. Проведен анализ работы алгоритма для серии различных 
значений погрешности датчиков и случайного шума. Показано, что для 
рассмотре нного конкретного варианта квадрокоптера (характерный размер 
порядка 1 м) нейрорегулятор взлета посадки удовлетворительно работает при 
погрешности датчиков высоты порядка 4 см.  
 
Настоящая работа выполнена при частичной финансовой поддержке гранта 
РФФИ 15 0707483 А.  
 
 
 
 
 
 
 
 Библиографический список  
 
1. Avila Vilchis J.C., Brogliato B., Dzulc A., Lozano R. Nonlinear modelling and 
control of helicopters,. Automatica 39, 2003.  
2. Dzul P. A. and Lozano R. Real time stabilization and tracking of a four rotor min i 
rotorcraft. IEEE Transaction on Control System Technology, 12(4):510 – 516, July 
2004.  
3. Bresciani T. Modelling, Identification and Control of a Quadrotor Helicopter, 
Department of Automatic Control, Lund University, 2008.  
4. Фантони И., Лозано Р. Нелин ейное управление механическими системами с 
дефицитом управляющих воздействий.   Москва Ижевск: ООО 
"Компьютерная динамика", 2012.  
5. Евгенов А.А. Нейросетевой регулятор системы управления квадрокоптером. 
ФГБОУ ВПО «Южно Российский государственный политехн ический 
университет (НПИ) имени М.И. Платова».  
6. Madani T., Benallegue A. Adaptive Control via Backstepping Technique and 
Neural Networks of a Quadrotor Helicopter, Proceedings of the 17th World 
Congress. The International Federation of Automatic Control,  Seoul, Korea, July 
611, 2008.  
7. Hoffmann G.M., Huang H., Waslander S.L., and Tomlin C.J. Quadrotor helicopter 
flight dynamics and control: Theory and experiment, Proceedings of the AIAA 
Guidance, Navigation and Control Conference and Exhibit, Aug. 2007,  120. 
8. Pounds P., Mahony R., Corke P. Modelling and Control of a Quad Rotor Robot, 
Canberra, Australian National University, 2008, 1 10. 
9. Hana Boudjedir, Fouad Yacef, Dual neural network for adaptive sliding mode 
control of quadrotor helicopter stabil ization // International Journal of Information 
Sciences and Techniques (IJIST) Vol.2, No.4, July 2012.  19 
10. Joao P., Mendes B. Assisted Teleoperation of Quadcopters Using Obstacle 
Avoidance. Lisbon. 2012.  
11. Nicol C., Macnab C.J.B., Ramirez Serrano A. Rob ust neural network control of a 
quadrotor helicopter // Mechatronics. Volume 21. Issue 6. September 2011. P.927 
938. 
12. Dierks T., Jagannathan S. Neural Network Control and Wireless Sensor Network 
based Localization of Quadrotor UAV Formations // Aerial V ehicles. 2009. P. 
601620. 
13. Munoz R.S.M., Rossi C., Cruz A.B. Modelling and Identification of Flight 
Dynamics in Mini Helicopters Using Neural Networks // Aerial Vehicles. 2009. P. 
287312. 
14. Lavi B. An Adaptive Neuro PID for Controlling the Altitude of quadcopter Robot 
// International Conference on Methods and Models in Automation and Robotics. 
Poland. Volume: 18th. 2014. P.662 665. 
15. Голубев Ю.Ф. Нейронные сети в мехатронике // Фундамент альная и  
прикл адная  матем атика. 2005,  т.11,   № 8, C. 81 103. 
16. Павловский В.Е., Савицкий А.В. Исследование обратной задачи для 
вычисления управляющих воздействий для квадрокоптера. // Препринты 
ИПМ им. М.В.Келдыша . 2017.  № 17 . 20 с.  
 doi:10.20948/ prepr 2017 17  
http://keldysh .ru/papers /2017/ prep2017_17. pdf 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
  
 20 
 
 
 
Оглавление  
              
 Введение  ................................ ................................ ................................ ......................  3 
1. Описание модели  ................................ ................................ ................................ ..... 5 
1.1. Основные предположения  ................................ ................................ ...... 5 
1.2. Вычисление лагранжиана  ................................ ................................ ....... 6 
1.3. Обобщенные силы  ................................ ................................ ...................  7 
1.4. Модель подъемной силы и момента несущего винта  ..........................  8 
1.5. Уравнения Лагранжа  ................................ ................................ ...............  8 
2. Моделировани е и алгоритмы управления  ................................ ..........................  10 
 2.1. Взлёт посадка  ................................ ................................ ........................  10 
 2.2. Полет по горизонтальной прямой  ................................ .......................  11 
3. Нейросетевой метод управления  ................................ ................................ .........  11 
 3.2. Система датчиков  ................................ ................................ ..................  13 
 3.3. Блок Нейронной сети (НС)  ................................ ................................ .. 13 
 3.3. Блок интегратора  ................................ ................................ ...................  15 
 3.4. Вертикальный взлет  ................................ ................................ ..............  15 
 3.5. Погрешнос ть системы для случая вертикального взлета  .................  16 
 3.6. Управление углом крена  ................................ ................................ ...... 17 
   Заключение  ................................ ................................ ................................ .............  17 
   Библиографический список  ................................ ................................ ..................  18 Modeling Spacecraft Attitude with Quaternions
Joseph Breeden
July 26, 2021
1 Geometry with Quaternions
1.1 Quaternion Properties
It is assumed that the reader is already familiar with the distinction between a physical matrix and a
resolved matrix as in [1]. In brief, a physical matrix , such as a physical rotation matrix→
R, is an operator
that modifies a physical vector⇀v. A resolved matrix, such as a rotation matrix Rororientation matrix O
is a 2D array of numbers. In particular, orientation matrices are a tool for transforming the coordinates of
amath vector ¯v, where a math vector is a 1D column array of numbers. The rest of this text is consistent
with the notation of [1].
Aphysical quaternion , denoted eqis a mathematical object consisting of a scalar q0and physical vector
⇀q:
eq=q0+⇀q (1)
Many texts use bold font qfor quaternions, but that is avoided here to facilitate handwritten calculations.
It is common to also present quaternions as columns
eq=q0
⇀q
. (2)
In this text, the scalar element appears first in the column, but this varies from author to author.
A physical quaternion can be resolved in a frame to produce a 4element column array by resolving the
vector portion in the chosen frame
eq|A="q0
⇀q
A#
=
q0
q1
q2
q3
. (3)
Every quaternion eqalso has a conjugate quaternion eq∗defined as
eq∗=q0−⇀q . (4)
At this point, it is worth noting that quaternions are often described as a “hypercomplex number”, eq=
q0+q1i+q2j+q3k, where i,j,kare each complex numbers. While this is accurate, we find this characterization
overly limiting as we may wish to resolve physical quaternions in several frames, similar to physical rotation
matrices. To accomplish the same behavior as provided by the hypercomplex number formulation, we
introduce the quaternion product operator ⊗, which behaves as follows
a0⊗b0=a0b0, (5)
a0⊗⇀
b=a0⇀
b , (6)
⇀a⊗⇀
b=⇀a×⇀
b−⇀a·⇀
b . (7)
1It follows that the ⊗operator applied to a quaternion satisfies
ea⊗eb=
a0+⇀a
⊗
b0+⇀
b
=a0b0+a0⇀
b+b0⇀a+⇀a×⇀
b−⇀a·⇀
b (8)
ea⊗⇀
b=
a0+⇀a
⊗⇀
b=a0⇀
b+⇀a×⇀
b−⇀a·⇀
b (9)
ea⊗b0=
a0+⇀a
⊗b0=a0b0+b0⇀a (10)
The⊗operator is bilinear, associative, and distributive, but NOT commutative. We can equivalently define
the⊗operator for two resolved quaternions
(eq⊗er)|A=eq|A⊗er|A=
q0
q1
q2
q3
⊗
r0
r1
r2
r3
=
q0r0−q1r1−q2r2−q3r3
q0r1+q1r0+q2r3−q3r2
q0r2−q1r3+q2r0+q3r1
q0r3+q1r2−q2r1+q3r0
. (11)
The quaternion norm is then defined as
∥eq∥2=eq⊗eq∗=eq∗⊗eq . (12)
The above equation is one of the few cases where commutativity of ⊗does hold. Our application for
quaternions in this text is as a representation of frame rotations, which we will show implies that every
quaternion will have norm ∥eq∥= 1. In other applications, one can normalize a quaternion by multiplying
by1
∥eq∥. Finally, the quaternion inverse is
eq−1=eq∗
∥eq∥. (13)
The conjugate and the inverse satisfy
(eq⊗er)∗=er∗⊗eq∗, (14)
(eq⊗er)−1=er−1⊗eq−1. (15)
1.2 Frame Rotations
Any two frames F A=ˆiAˆjAˆkA
and F B=ˆiBˆjBˆkB
can be related by a unique physical rotation
matrix→
RB/A, such that F B=→
RB/AFA. Moreover, any rotation can be expressed (nonuniquely) by an axis
of rotation ˆ nand an angle θ. Recall the physical rotation matrix
→
Rˆn(θ) = cos θ→
I+ (1−cosθ)ˆnˆnT+ sin θˆn×. (16)
An alternative way of storing information about an axisangle rotation is as a quaternion. Define the axis
angle physical quaternion as
eqˆn(θ) = cosθ
2
+ sinθ
2
ˆn . (17)
It immediately follows that ∥eqˆn(θ)∥= 1 for any θand ˆn. Since the axisangle representation of a rotation is
not unique, it follows that the quaternion representing a frame rotation is not unique either, unlike rotation
matrices. Specifically, eqand−eqboth represent the same rotation. For this reason, many applications
restrict to quaternions with positive scalar elements, which represent shortway rotations, though none of
the following math depends on this choice. The identity quaternion is eqI= 1, which represents no rotation.
Leteq=eqˆn(θ) be an axisangle physical quaternion and⇀ran arbitrary physical vector, and consider the
following expression
eq⊗⇀r⊗eq∗=
−⇀q·⇀r+q0⇀r+⇀q×⇀r
⊗
q0−⇀q
(18)
2=−q0⇀q·⇀r+q0⇀r·⇀q+ (⇀q×⇀r)·⇀q+ (⇀q·⇀r)⇀q+q2
0⇀r+q0(⇀q×⇀r)−q0(⇀r×⇀q)−(⇀q×⇀r)×⇀q
(19)
= (⇀q⇀qT)⇀r+q2
0⇀r+ 2q0(⇀q×⇀r) +⇀q×(⇀q×⇀r) (20)
=
(⇀q⇀qT) + (1 −⇀qT⇀q)→
I+ 2q0⇀q×+⇀q×2
⇀r (21)
=
⇀q⇀qT+ (1−⇀qT⇀q)→
I+ 2 cosθ
2
⇀q×+ (⇀q⇀qT−⇀qT⇀q→
I)
⇀r (22)
=
2⇀q⇀qT+ (1−2⇀qT⇀q)→
I+ 2 cosθ
2
⇀q×
⇀r (23)
=
2ˆnˆnTsin2θ
2
+
1−2 sin2θ
2→
I+ 2 cosθ
2
sinθ
2
ˆn×
⇀r (24)
=
(1−cosθ)ˆnˆnT+ cos θ→
I+ sin θˆn×
⇀r (25)
=→
Rˆn(θ)⇀r (26)
That is, a physical quaternion and its conjugate rotate a physical vector identically to a physical rotation
matrix. Let→
RB/Abe the rotation from frame F Ato F B, and let ˆ nandθbe such that→
RB/A=→
Rˆn(θ). We
then use the notation eqB/Ato represent the same rotation eqB/A=eqˆn(θ). Suppose there are three frames
FA,FB,FC. Then it holds that
eqC/A=eqC/B⊗eqB/A, (27)
which can be proven via the equivalence between eqB/Aand→
RB/A. Recall that eqB/Aand−eqB/Arepresent
the same rotation, and thus both are equivalent to→
RB/A.
It follows from the axisangle representation that→
RB/A
B=→
RB/A
A=RB/A. It similarly follows that
eqB/A
B=eqB/A
A, and thus we define
qB/A=eqB/A
B=eqB/A
A. (28)
To convert a resolved quaternion to a resolved rotation matrix, one can use the function
R(q) =
1−2q2
2−2q2
32q1q2−2q0q32q0q2+ 2q1q3
2q0q3+ 2q1q21−2q2
1−2q2
32q2q3−2q0q1
2q1q3−2q0q22q0q1+ 2q2q31−2q2
1−2q2
2
, (29)
where R(qB/A)≡ R B/A. Note that one may come across equivalent forms of the above matrix in other
literature which use the fact that q2
0+q2
1+q2
2+q2
3= 1.
Now consider resolving a quaternion rotation in a frame F Aas follows.

eqB/A⊗⇀r⊗eq∗
B/A
A=eqB/A
A⊗⇀r
A⊗eq∗
B/A
A=RB/A⇀r
A(30)
Next, note that if eqB/A=eqˆn(θ), then eq∗
B/A=eqˆn(−θ), soeqB/A=eq∗
A/B. Thus,
q∗
B/A⊗⇀r
A⊗qB/A=eq∗
B/A
A⊗⇀r
A⊗eqB/A
A=eqA/B
A⊗⇀r
A⊗eq∗
A/B
A=RA/B⇀r
A=OB/A⇀r
A.(31)
Thus, quaternion conjugates provide a means to change the coordinates of a resolved vector from one frame
to another frame equivalently to orientation matrices.
Recall that
RC/A=→
RC/A
C=→
RC/B
C→
RB/A
C=RC/B
OC/B→
RB/A
BOC/BT
=RB/AOC/BT=RB/ARC/B(32)
3whereas
OC/A=RC/AT= 
RB/ARC/BT=RC/BTRB/AT=OC/BOB/A (33)
It similarly holds that
qC/A=eqC/A
C=eqC/B
C⊗eqB/A
C=qC/B⊗
q∗
C/B⊗eqB/A
B⊗qC/B
=qB/A⊗qC/B (34)
and
q∗
C/A=
qB/A⊗qC/B∗
=q∗
C/B⊗q∗
B/A (35)
That is, both orientation matrices and resolved quaternion conjugates follow the “slashandsplit” rule, while
resolved rotation matrices and resolved quaternions do not follow this rule.
Note that all of the above rotation formulas assumed that eqwas an axisangle rotation and therefore
∥eq∥= 1. If instead ∥eq∥ ̸= 1, then eq∗should be replaced with eq−1. In practice, if qis the result of
numerical integration, then over time ∥q∥could diverge from 1, in which case using q−1in place of q∗may
be appropriate. However, it is often a better choice to enforce that ∥q∥= 1 within the integration method.
2 Kinematics with Quaternions
It is difficult to directly differentiate the scalar and vector components of a quaternion, so we will instead
use the quaternion rotation formula as a starting point. Let eq=eqB/Afor two frames F Aand F B, where we
omit the subscript for compactness. Let⇀rbe a vector fixed in frame F A. Define another vector
⇀s=→
R(eq)⇀r=eq⊗⇀r⊗eq∗. (36)
It follows that
⇀r=eq∗⊗⇀s⊗eq . (37)
The derive of⇀sis as follows [2].
A•
⇀s=A•
eq⊗⇀r⊗eq∗+eq⊗A•
⇀r⊗eq∗+eq⊗⇀r⊗A•
eq∗(38)
B•
⇀s+⇀ωB/A×⇀s=A•
eq⊗
eq∗⊗⇀s⊗eq
⊗eq∗+eq⊗
eq∗⊗⇀s⊗eq
⊗A•
eq∗(39)
⇀ωB/A×⇀s=A•
eq⊗eq∗⊗⇀s+⇀s⊗eq⊗A•
eq∗(40)
= 
˙q0+A•
⇀q!
⊗
q0−⇀q
⊗⇀s+⇀s⊗
q0+⇀q
⊗ 
˙q0−A•
⇀q!
(41)
=  
˙q0q0+A•
⇀q·⇀q!
|{z }
=1
2A•
(eq⊗eq∗)=0−˙q0⇀q+q0A•
⇀q−A•
⇀q×⇀q!
⊗⇀s
+⇀s⊗  
˙q0q0+A•
⇀q·⇀q!
|{z }
=1
2A•
(eq⊗eq∗)=0+ ˙q0⇀q−q0A•
⇀q+⇀q×A•
⇀q!
(42)
= 
−˙q0⇀q+q0A•
⇀q−A•
⇀q×⇀q!
⊗⇀s+⇀s⊗ 
˙q0⇀q−q0A•
⇀q+⇀q×A•
⇀q!
(43)
= (−˙q0⇀q+q0A•
⇀q−A•
⇀q×⇀q)×⇀s+⇀s×( ˙q0⇀q−q0A•
⇀q+⇀q×A•
⇀q) (44)
= 2(−˙q0⇀q+q0A•
⇀q−A•
⇀q×⇀q)×⇀s (45)
4= 2(A•
eq⊗eq∗)×⇀s (46)
Since this holds for all⇀rand all eq, we conclude
⇀ωB/A= 2A•
eq⊗eq∗(47)
1
2⇀ωB/A⊗eq=A•
eq (48)
We can also take the derivative as observed in frame F Bas follows.
B•
eq=A•
eq−⇀ωB/A×⇀q (49)
=1
2ωB/A⊗eq−⇀ωB/A×⇀q (50)
=−1
2⇀q·⇀ω+1
2q0⇀ω+1
2⇀ω×⇀q−ω×⇀q (51)
=−1
2⇀q·⇀ω+1
2q0⇀ω−1
2⇀ω×⇀q (52)
=1
2eq⊗⇀ωB/A (53)
The orientation qB/Aof a body fixed frame F Bwith respect to some other frame F Acomponent is
frequently a state variable in a dynamical system, so we require an expression for its derivative. Recall that
A•
eqB/A
A=˙ 
eqB/A
A
=˙qB/A=˙ 
eqB/A
B
=B•
eqB/A
B. (54)
Thus, we have two equivalent formulas for ˙qB/A. Most often, the angular velocity⇀ωB/Ais measured in the
body fixed frame F B, so it is more convenient to derive ˙qB/AfromB•
eqB/A, though both of the above formulas
appear in other literature.
Let ¯ωB/A(t) =⇀ωB/A
B=
ω1(t)
ω2(t)
ω3(t)
. Then the quaternion kinematic equation becomes
˙qB/A=1
2
0−ω1−ω2−ω3
ω1 0 ω3−ω2
ω2−ω3 0 ω1
ω3ω2−ω1 0

| {z }
=W(t)qB/A. (55)
Note that W(t) is skewsymmetric, which is one of the rare cases when timevarying linear equations can be
exactly integrated [3]:
qB/A(t1) = exp1
2Zt1
t0W(t)
qB/A(t0). (56)
The above equation is useful because it maintains ∥qB/A(t1)∥=∥qB/A(t0)∥. That said, for nonsymmetric
bodies, Euler’s equations of rotational motion (a variant of which is presented in the following section) do not
yield closed form expressions for ¯ ωB/A(t), so we usually still need to employ numerical integration methods.
3 Spacecraft Attitude Dynamics
We now consider the dynamics for the spacecraft system. Suppose the spacecraft consists of a single rigid
body (easily generalized to multiple rigid bodies) containing rreaction wheels, and subject to external torque
⇀
Lz(thrusters, solar radiation pressure, air drag, etc.). Let JB/zbe the moment of inertia of the spacecraft
5without reaction wheels with respect to some point z(either a point with zeroinertialacceleration or the
center of mass of the combined body+wheels system). Suppose each wheel has axis ˆ aithrough center of
mass ci, and suppose the moment of inertia of the wheels satisfies
→
JWi/ci=→
J⊥
Wi/ci+J∥
Wi/ciˆaiˆaT
i (57)
where J∥
Wi/ciis a scalar, and→
J⊥
Wi/ciis a matrix satisfying→
J⊥
Wi/ciˆai=⇀
0 [4]. Then define
→
JWi/z=→
J⊥
Wi/ci−mi⇀r×2
z/ci| {z }
=→
J⊥
Wi/z+J∥
Wi/ciˆaiˆaT
i (58)
LetCdenote the complete system composed of bodies BandWi, i= 1,···, r. Let F Bbe a frame fixed
toBand F Asome other frame. Let F Wibe wheelfixed frames where⇀ωWi/B= Ωiˆaifor some scalar rate Ω i.
The total angular momentum of the system with respect to F Ais then
⇀
HC/z/A =→
JB/z⇀ωB/A+rX
i=1→
JWi/z⇀ωWi/A (59)
=→
JB/z⇀ωB/A+rX
i=1→
J⊥
Wi/z+J∥
Wi/ciˆaiˆaT
i⇀ωWi/B+⇀ωB/A
(60)
= 
→
JB/z+rX
i=1→
J⊥
Wi/z!
| {z }
=→
JP/z⇀ωB/A+rX
i=1J∥
Wi/ciˆaiˆaT
i
ΩWi/Bˆai+⇀ωB/A
(61)
Assuming zis either a ZIA point or the center of mass of C(which is assumed to be fixed in frame F B) and
FAis an inertial frame, it follows that
⇀
Lz=A•
⇀
HC/z/A=B•
⇀
HC/z/A+⇀ωB/A×⇀
HC/z/A (62)
We then compute the derivative in frame F Bas
B•
⇀
HC/z/A=→
JP/zB•
⇀ωB/A+rX
i=1J∥
Wi/ciˆaiˆaT
i 
˙ΩWi/Bˆai+B•
⇀ωB/A!
(63)
= 
→
JP/z+rX
i=1J∥
Wi/ciˆaiˆaT
i!
| {z }
=→
JC/zB•
⇀ωB/A+rX
i=1J∥
Wi/ciˆai˙ΩWi/B (64)
Note that while a gyro measures angular velocity of the body with respect to an inertial frame such as F A, a
tachometer such as we usually have on the reaction wheels gives measurements with respect to the mounting
frame, in this case the spacecraft bus frame F B. Thus, it makes sense to use Ω Wi/Bas a state instead of
adding the rotation⇀ωB/Aof the spacecraft as well. In summary, we have
⇀
Lz=→
JC/zB•
⇀ωB/A+⇀ωB/A×⇀
HC/z/A+rX
i=1J∥
Wi/ciˆai˙ΩWi/B (65)
Now, we treat the wheels as their own individual systems. Each reaction wheel is mounted in a housing
which permits frictionless rotation about the mounting axis ˆ ai, and rigidly rotates the wheels with the
spacecraft bus about the other two axes. That is, if all the wheels start at rest and we were to manually spin
6the spacecraft about one of the wheel axes using some other actuator, then the wheel on that axis would
stay at rest because there is no friction. Torque on the axis of rotation ˆ aicomes purely from the housing
electronics and is given by⇀
L∥
Wi=uiˆai. Torque in other directions may come from the spacecraft structure
and is given by⇀
L⊥
Wiwhere⇀
L⊥
Wi·ˆai= 0. The momentum of each wheel about its axis is
⇀
H∥
Wi/ci/A=J∥
Wi/ciˆaiˆaT
i
ΩWi/Bˆai+⇀ωB/A
(66)
The change in momentum is then
⇀
LWi=⇀
L∥
Wi+⇀
L⊥
Wi=A•
⇀
H∥
Wi/ci/A=B•
⇀
H∥
Wi/ci/A+⇀ωB/A×⇀
H∥
Wi/ci/A (67)
⇀
L∥
Wi=B•
⇀
H∥
Wi/ci/A (68)
⇀
L⊥
Wi=⇀ωB/A×⇀
H∥
Wi/ci/A (69)
We are able to separate the above torques because⇀
H∥
Wi/z/Ais always along ˆ ai. Thus,⇀ωB/A×⇀
H∥
Wi/z/A
is always orthogonal to ˆ ai. The torque⇀
L⊥
Wiis not under our control and is therefore not needed for the
dynamics derivation, though it may be needed elsewhere to determine the required stiffness of the wheel
mountings. Equating the axial torques then yields
uiˆai=⇀
L∥
Wi=B•
⇀
H∥
Wi/ci/A=J∥
Wi/ciˆaiˆaT
i 
˙ΩWi/Bˆai+B•
⇀ωB/A!
(70)
ui=J∥
Wi/ci 
˙ΩWi/B+ ˆai·B•
⇀ωB/A!
(71)
In summary (see [5]), all combined we have
→
JC/zB•
⇀ωB/A+rX
i=1J∥
Wi/ciˆai˙ΩWi/B=⇀
Lz−⇀ωB/A×⇀
HC/z/A (72)
J∥
Wi/ciˆai·B•
⇀ωB/A+J∥
Wi/ci˙ΩWi/B=ui (73)

→
JC/zh
J∥
W1/c1ˆa1··· J∥
Wr/crˆari

J∥
W1/c1ˆaT
1
...
J∥
Wr/crˆaT
r

J∥
W1/c1
...
J∥
Wr/cr


| {z }
=→
Y="⇀
Lz−⇀ωB/A×⇀
HC/z/A
u#
(74)
The final step is to resolve the above in the F Bframe. For compactness, the big matrix on the left hand side
is abbreviated as→
Y. Let→
Z=→
Y−1
. We will also occasionally break up→
Zas
→
Z="→
Z11→
Z12
→
Z21→
Z22#
. (75)
When resolved,→
Z11is a 3×3 matrix, and→
Z22is anr×rmatrix. Generally, the moment of inertia of the wheels
J∥
Wi/ciis much smaller than the smallest eigenvalue of the moment of inertia of the rest of the spacecraft→
JC/z.
7Thus,→
Yis approximately blockdiagonal. It follows that→
Z11≈→
J−1
C/z,→
Z21T
=→
Z12≈→
J−1
C/zˆa1··· ˆar
,
and→
Z22≈

J∥
W1/c1−1
...
J∥
Wr/cr−1
. Thus, it is common to see applications where→
Yis never
introduced as a single matrix and instead these approximations are used. The term⇀ωB/A×⇀
HC/z/Ais also
often omitted if the maximum expected angular velocity is small.
4 Using Boresight Constraints
The principal constraint used in the author’s other works is the function
h= ˆrs/o·ˆrp/o (76)
where ois some instrument center point (because of the scale of the problem, we can often assume ois
anywhere on the spacecraft, often the center of mass), sis some point to avoid pointing the instrument
towards (e.g. the Sun) and is potentially timevarying, and pis some point along the instrument boresight
vector fixed in the body frame. Assume we know ˆ rs/o
Aand ˆrp/o
Bwhere F Bis an instrumentfixed frame
and F Ais some other frame. his a scalar, but we need to resolve the above vectors in the same frame (any
frame) to compute it. One obvious choice is the inertial frame
h= ˆrs/oT
Aˆrp/o
A= ˆrs/oT
AOA/Bˆrp/o
B= ˆrs/oT
ARB/Aˆrp/o
B= ˆrs/oT
AR(eqB/A) ˆrp/o
B(77)
Alternatively, we could use the body frame
h= ˆrs/oT
Aˆrp/o
A= 
OB/Aˆrs/o
ATˆrp/o
B= ˆrs/oT
AOT
B/Aˆrp/o
B= ˆrs/oT
ARB/Aˆrp/o
B= ˆrs/oT
AR(eqB/A) ˆrp/o
B(78)
As expected, resolving in either frame yields the same result.
Because the above constraint considers only a single vector in the body frame rather than a set of three
orthogonal vectors (i.e. a complete frame), much of the math for computing the constraint constants was
done purely for a vector ˆ r= ˆrp/o. Since ˆ ris fixed in the body frame, the dynamics of this vector are
A•
ˆr=B•
ˆr+⇀ωB/A×ˆr=⇀ωB/A×ˆr (79)
A••
ˆr=B•
⇀ωB/A×ˆr+⇀ωB/A×⇀ωB/A×ˆr
(80)
Instead of calculating over all eq, we run the individual constraint calculations over all ˆ r, thereby removing
the free variable describing the rotation about ˆ r. The computations for⇀ωB/AandB•
⇀ωB/Aare still the same
as in the previous section. As with this entire document, one must be careful which frames all the above
vectors are resolved in. At present, the current working version of the code resolves everything in the F B
frame.
5 Example Control Law
Suppose there is a body fixed vector ˆ rp/owhich we want to align with the inertially fixed (or timevarying
and independent of eqB/A) vector ˆ rt/o. A popular control law for spacecraft attitude is a PD control law,
which we can develop using an “error” quaternion.
In this method, we propose a command frame F C, which is the frame that results from the shortest
path rotation such that ˆ rp/oaligns with ˆ rt/ofor some point t. The shortest path is given by an axisangle
formulation. The axis is easily determined as
⇀nt= ˆrp/o×ˆrt/o (81)
8and the angle is
θt= acos 
ˆrp/o·ˆrt/o
. (82)
Then the quaternion from F Bto F C, or the error quaternion is then
eqC/B= cosθt
2
+ ˆntsinθt
2
. (83)
Alternatively, if a 3axis attitude is specified, such as a quaternion eqC/A, then one can derive the error
quaternion as
eqC/B=eqC/A⊗eq∗
B/A. (84)
A PD control law may then be
⇀
L=kp⇀qC/B+kd⇀ωC/B=kp⇀qC/B+kd(⇀ωC/A−⇀ωB/A). (85)
As this is a linear control law, it is common to saturate θto a small number to retain approximate linearity.
To implement this control law, we then need to resolve the above vectors in the body frame, which results in
⇀
L
B=kpsinθt
2
ˆnt|B+kd
OB/A⇀ωC/A
A−⇀ωB/A
B
. (86)
Thus, we want to compute ˆ ntin frame F B, which means transforming the target vector ˆ rt/ocoordinates into
frame F B. Throughout this controller, it is important to keep track of which frames all the relevant variables
are resolved in.
Finally, suppose we define the command frame via the shortestpath rotation, and now we want to know
what the command frame quaternion is for other purposes. This is one area where the frame definition can
get very important and potentially confusing, as illustrated below. We already have qB/A=eqB/A
Band we
likely already computed ewC/B
Bfor use in the above controller. Then
eqC/A
C= 
eqC/B⊗eqB/A
C(87)
=eqC/B
C⊗eqB/A
C(88)
=eqC/B
C⊗
eq∗
B/C
B⊗eqB/A
B⊗eqB/C
B
(89)
=eqB/A
B⊗eqB/C
B(90)
That is, the “slashandsplit” rule does not apply, as previously discussed. In my experience, I have frequently
come across code where the above formula is implemented (usually without code comments), so it is good
to get an intuition for when this occurs. On the other hand, intuition without understanding why the
quaternions appear in this order can easily lead to disaster.
References
[1] D. S. Bernstein, A. Goel, and A. Ansari, “Geometry, kinematics, statics, and dynamics,” December 2019,
unpublished.
[2] B. Graf, “Quaternions and dynamics,” 2008. [Online]. Available: https://arxiv.org/pdf/0811.2889.pdf
[3] M. Boyle, “The integration of angular velocity,” Advances in Applied Clifford Algebras , vol. 27, no. 3, p.
2345–2374, May 2017.
[4] F. L. Markley and J. L. Crassidis, Fundamentals of Spacecraft Attitude Determination and Control .
Springer, 2014.
[5] M. Karpenko, S. Bhatt, N. Bedrossian, and I. M. Ross, “Flight implementation of shortesttime maneu
vers for imaging satellites,” Journal of Guidance, Control, and Dynamics , vol. 37, no. 4, pp. 1069–1079,
2014.
9See discussions, st ats, and author pr ofiles f or this public ation at : https://www .researchgate.ne t/public ation/224407819
Optimal satellite attitude control: a geometric approach
Conf erence Paper  · April 2009
DOI: 10.1109/ AERO.2009.4839540  · Sour ce: IEEE Xplor e
CITATIONS
9READS
240
3 author s, including:
Nadjim Horri
Univ ersity of L eicester
47 PUBLICA TIONS    353 CITATIONS    
SEE PROFILE
P.L. P almer
Univ ersity of Surr ey
187 PUBLICA TIONS    2,387  CITATIONS    
SEE PROFILE
All c ontent f ollo wing this p age was uplo aded b y P.L. P almer  on 28 July 2015.
The user has r equest ed enhanc ement of the do wnlo aded file. 1 Optimal Satellite Attitude Control: 
a Geometric Approach 
 
Nadjim M. HORRI 1, Philip L. PALMER 1 , Mark R. ROBERTS 2 
1Surrey Space Centre  
2Department of Mathematics 
University of Surrey, Guildford, GU2 7XH, United Ki ngdom 
n.horri @ surrey.ac.uk  ,Tel: +44 1483 682224 
p.palmer@ surrey.ac.uk  ,Tel: +44 1483 686024 
m.roberts@ surrey.ac.uk  , Tel: +44 1483 682621 
 
 
 
Abstract— Optimal nonlinear control remains one of the 
most challenging subjects in control theory despite  a long 
research history. 12 In this paper, we present a geometric 
optimal control approach, which circumvents the ted ious 
task of numerically solving online the Hamilton Jac obi 
Bellman (HJB) partial differential equation, which 
represents the dynamic programming formulation of t he 
nonlinear global optimal control problem. Our appro ach 
makes implementation of nonlinear optimal attitude control 
practically feasible with low computational demand onboard 
a satellite. Optimal stabilizing state feedbacks ar e obtained 
from the construction of a Control Lyapunov functio n. 
Based on a phase space analysis, two natural dual o ptimal 
control objectives are considered to illustrate the  application 
of this approach to satellite attitude control:  Mi nimizing the 
norm of the control torque subject to a constraint on the 
convergence rate of a Lyapunov function, then maxim izing 
the convergence rate of a Lyapunov function subject  to a 
constraint on the control torque. Both approaches p rovide 
ease of implementation and achieve robust optimal t rade
offs between attitude control rapidity and torque 
expenditure, without computational issues. 
TABLE OF CONTENTS  
1.  INTRODUCTION ................................................... .............1  
2.  NOTATIONS ................................................... ...................2  
3.  DYNAMIC MODEL ................................................... .........2  
4.  MINIMUM NORM ATTITUDE CONTROL ...........................2  
5.  MAXIMUM RATE ATTITUDE CONTROL ...........................5  
6.  NUMERICAL SIMULATIONS AND ANALYSIS ....................6  
7.  CONCLUSION ................................................... ..............10  
REFERENCES ................................................... ..................10  
BIOGRAPHY ................................................... ....................11  
 
                                                           
1 9781424426225/09/$25.00 ©2009 IEEE.  
2 IEEEAC paper #1075, Version 7, January, 2009  1.  INTRODUCTION  
Two different viewpoints, both involving partial di fferential 
equations, have so far dominated nonlinear optimal control 
theory: the EulerLagrange approach from calculus o f 
variations and the global HamiltonJacobiBellman ( HJB) 
approach based on dynamic programming.  
It has proven particularly difficult to numerically  solve these 
PDE’s when dealing with nonlinear systems. Obtainin g 
feedback control laws adds to the inherent difficul ty. There 
are currently no systematic numerical methods, whic h can be 
applied to solve these PDE’s for nonlinear systems online. 
The problem is considered numerically intractable a nd not 
suitable for operational spacecraft attitude contro l. Inverse 
optimal control theory circumvents the tedious task  of 
numerically solving a HamiltonJacobiBellman equat ion. 
The starting point of the approach is to construct a 
stabilizing feedback controller based on a Control Lyapunov 
Function. The underlying theory shows that the Lyap unov 
function solves the HamiltonJacobiBellman equatio n. The 
resulting controller is optimal with respect to a ‘ meaningful’ 
costfunction. 
Lyapunov based inverse optimal control techniques a re 
being increasingly considered for a large range of control 
system applications (see references [1], [4], [5]).   
We show here the application of new theory allowing  for 
optimal attitude control of a satellite with intern al torques, 
with a geometric Lyapunov approach based on phase s pace 
design. We exploit the fact that the convergence ra te of 
Lyapunov functions is a natural player in optimizat ion 
problems. 
Based on a phase space analysis, two dual optimal c ontrol 
objectives are considered to illustrate the applica tion of this 
geometric inverse optimal approach to satellite att itude 
control:   
 Minimizing the norm of the control torque subject 
to a constraint on the convergence rate of a  2 Lyapunov function. 
 Maximizing the convergence rate of a Lyapunov 
function subject to a constraint on the control 
torque.  
The mathematical theory of the minimum norm control  
strategy has first been presented in [2], where a p roof of 
inverse optimality was provided. This minimum norm theory 
has been used in the field of robotics with promisi ng results. 
However, the approach has surprisingly only been 
considered in a single paper for satellite attitude  control, but 
the attitude parameterization chosen to simplify co ntrol 
design was subject to singularities (see reference [1]). The 
Lyapunov function was quadratic with a bilinear cou pling 
term and the approach presented here allows for non linear 
coupling.  
2.  NOTATIONS  
I =[ ]TIII321,, : Inertia tensor of the body of the satellite 
about its centre of mass. 
[][ ]T Tqqqq qq q4 3 2 1 4 ,,, , = = : Attitude quaternion of 
the satellite. 
[ ]T
3 2 1,,ωωω ω= : Vector of the angular velocity in body 
fixed reference frame. 
[ ]Thhhh3 2 1,,= : Angular momentum generated by the 
reaction wheels in the body frame. 
L: Total angular momentum in the body frame. 
3.  DYNAMIC MODEL  
If no external disturbance torque is assumed, we ha ve: 
                                0=×+ L Lω&                                  (1) 
The equation of the total angular momentum is: 
                                   h IL + =ω                                       (2) 
By substituting L from equation (2), into the equation (1), we 
obtain the general Euler’s rotational equation usin g three 
orthogonal reaction wheels: 
 
            ( )
( )
( )12 21 3 212 1 3331 13 2 131 3 2223 32 1 32 3 2 11
h h N II Ih h N I I Ih h N I I I
ω ω ωω ωω ω ωω ωω ω ωω ω
+ − + − =+ − + − =+ − + − =
&&&
           (3) 
 
where we define: i i h N&−= , i=1,3. 
 
Based on the quaternion parameterization of attitud e 
kinematics, the kinematic model of a satellite is g iven by: 
                               



−=+ −=×
q qq q q
T
44
2121
21
ωω ω
&&
                     (4) 
Despite the fact that mathematical stability proofs  are often 
harder to make based on this parameterization, the absence 
of singularities and the fact that quaternions are readily 
available in the onboard attitude control software of most 
satellites makes this parameterization more attract ive than 
the attitude parameterization of reference [1]. 
For the sake of convenience we can represent our sy stem as 
an affine control system of the form: 
                               uxgxfx )()(+ =&                             (5)  
Where: 
[]T,ωqx=  
[ ]T
3 2 1,, NNNu=  
[]
130 , )(
×= =u q xf ω&& ,  
=
××
3334
10g  
4.  MINIMUM NORM ATTITUDE CONTROL  
For a given control Lyapunov function V, there exists by 
definition a control input u satisfying: 
                        ( ) 0)()( )( < +∂∂xuxgxfxV                        (6) 
However, u is known not to be unique in general. Inverse 
optimal construction is a way of determining a spec ific but 
optimal stabilizing control input. 
A particularly interesting nonlinear control constr uction 
based on the existence of a Control Lyapunov functi on is the 
minimumnorm control law proposed by Freeman and 
Kokotovic (see reference [2]). 
 
It is constructed from the solution to a static poi ntwise (for 
each point x) optimization problem:  
        
0)() ( )(   subject to u Minimise 
T
≤ ≤ +∂∂= x g(x)u f(x) xVxV σ &        (7) 
Where the function )(xσ− can be viewed as describing a 
nonlinear stability margin ([1], [2]).  
This minimumnorm problem characterizes the existin g link 
between stability margins and optimality. 
A minimumnorm control problem is the pointwise 
optimization problem of minimizing the control effo rt 
subject to a constraint on the convergence rate of V.   3 This nonlinear program can be solved analytically. We can 
write it more compactly as a least norm problem:  
 
                      b ua st u ≤, . Minimise                       (8) 
With: 
)()( )(
xVLax xVL b
gf
=− −= σ 
)(T
xfxVVLf∂∂≡ and )(T
xgxVVLg∂∂≡  respectively 
represent the Lie derivatives of V in the directions of the 
vector fields f and g. 
 
The solution of this least norm problem is given by : 
   

≥<=
0 if 00 if ..
TT
bbaaab
u                               (9) 
The solution is a projection onto the space spanned  by the 
vector aT if the constraint is not solved by turning the 
controller off. Otherwise, when the constraint 0≥b is 
satisfied, then the minimum norm solution satisfyin g the 
constraint of equation (7) is simply u =0. 
 
The minimumnorm control law is therefore given by:  
 
( )
( )( )

−≤−>+−=
σσσ
)(  if                                  0)( if 
)( )()( )) ( )( (
TT
opt 
xVLxVL
xVLxVLxVLx xVL
u
ff
g gg f 
                                                                    (10)   
Furthermore, Freeman and Kokotovic have proven in 
reference [2] using differential game theory that e very min
norm controller is robust and inverse optimal with respect to 
a meaningful cost function of the form: 
                   { }∫∞+ =
0),()( ),( dt uxrxl uxJ                       (11) 
 
Where: 
/square4 l(x) is a continuous positive definite function of x 
(with l(0)=0). It is lower bounded by a continuous 
positive definite increasing function of x. 
/square4 )( ),( u uxrxγ=  is positive definite for some 
continuous increasing convex function γx of u. 
 
The cost functional is however unspecified when sta ting this 
inverse optimal problem (see ref [2]). However, the  fact that 
an optimization tradeoff is being achieved is evid ent from 
the nonlinear program stated in equation (7), which  is solved 
analytically. Indeed, a norm of the torque is minim ized 
subject to a rapidity constraint, which represents the other 
side of the tradeoff.  We consider the problem of the attitude control of a satellite 
with a minimum norm approach.  
A natural choice of the negativity margin function σ  is 
given by the time derivative of a Lyapunov function  
(representing a certain convergence rate), under th e effect of 
a benchmark controller k(x): 
                 )( )()( xVk LVL V xg f xk − −= −=& σ               (12) 
As a benchmark controller, we consider without loss  of 
generality a standard PD law that drives q and  ω to zero: 
                           ωd p PD )( kqk uxk − −= =                    (13) 
By substituting σ from equation (12) into the minimum 
norm attitude control law of equation (10), we have : 
      [ ]()
( )( )( )
( )
≤ −> −=
0  if                        00 if 
PD PD TT
PD 
opt 
uVLuVL
VLVLVL uVL
u
gg
g gg g
      (14) 
Where the term between brackets is a scalar quantit y and the 
projection is in the direction of LgVT. 
We adopt the quaternion representation of attitude 
kinematics in order to avoid any singularities due to attitude 
parameterization. For our first simulation study, w e shall 
consider the following candidate Lyapunov function with 
bilinear coupling: 
     ( )( ) ω γωω γ I IT T T 2
421) 1 ( q qq q k k Vd p + + + − + =    (15) 
This candidate is similar to the one proposed in [8 ] but we 
consider it here as a Lyapunov function of the benc hmark 
controller. Note that the switching function LgVT is a linear 
function of ω and q with this first choice of V. The 
parameter γ of the bilinear coupling term will allow for the 
tuning of the minimum norm controller. 
With the Lyapunov function of equation (15), the co ntrol 
torque given in equation (14) is switched off betwe en two 
straight lines in phase space domain: LgV=0 and uPD =0. The 
first switching curve is a straight line because q VLg γω+= . 
New generalized Lyapunov function 
Given that the Lyapunov function V of the benchmark 
controller explicitly affects the control law with the 
minimum norm approach (see equation 14), we seek a 
generalization of it’s expression into a class of f unctions 
with nonlinear (not bilinear) coupling, thence not restricting 
the switching curve LgV =0 to be a straight line. 
A motivation for considering a nonlinear coupling i s that, 
with a linear switching function LgV (for rest to rest 
manoeuvres with a PD feedback as a benchmark), the time 
during which the control is switched off between tw o 
switching lines remains the same (because of a cons tant  4 angular velocity). It is desirable to seek stable n onlinear 
switching functions allowing for the control torque  to be 
switched off for variable time durations depending on the 
amplitude of the maneuver. We shall also demonstrat e that 
nonlinear coupling can enhance control accuracy.  
We propose the generalized candidate Lyapunov funct ion:   
   ( )( ) ω γωω γ I I )(211 2T T
4 qF q k k Vd p + + − + =        (16) 
F(q) is a 3 dimensional vector: [ ]3 , 1i ), ( )(i i = = qF qF . Note 
that the corresponding switching function is given by 
0)(= += qF VLg γω . 
Let min σdenote the minimum eigenvalue of the matrix I. 
Let max σ denote the maximum eigenvalue of the matrix I. 
 
Positivity of V— The following inequalities hold for any 
choice of the symmetric positive definite matrix I: 
                          ωσωωωmin T T≥I                                (17) 
                       max σ ω ω q b FT−≥I                             (18) 
Where  denotes a standard Euclidian norm.  
We note that the condition qb qF <)(  was assumed, 
which is satisfied with F continuous on the finite interval 
where q is defined. We now investigate the positivity 
condition of the Lyapunov function V.  
The inequality 2
32
22
1 4 1 q q q q q + + = ≥ − holds at all 
times (It is not an equality because q4 can be positive or 
negative). The positivity of V stems from the inequality: 
                         [ ][ ]Tω ω q q V K ≥                          (19) 
                    




−− +
=
min max max 
d
22
σγσ γσ γ
bb k kp
K                       (20) 
The parameter γ can be chosen small enough to make the 
matrix K positive definite. 
Negativity of  V&— The time derivative of V is given by: 
    ( ) ω γω γωωω γ & && & I I IT
d p F qF qk k V + ′+ + + =T T T     (21) 
Where 
qqFF∂∂=′)(and we denote F(q) as  F. 
By expanding the derivative terms of equation (21),  we 
have: ( ) ( )
( ) Nh F q q FNh qk k Vd p
++ ×− +

− ′+++ ×− + + =
×) (21
21) (
T
4T T
ω ω γω ω ω γω ω ωω γ
I II &
         
                                                                                         (22) 
We consider a Proportional plus Derivative control torque: 
( )
( )
( ) ) (21
21) (
42
dTT
h F q q FqFk khFkq k qk k V
TT
pT
dT
p d p
+ ×− +

− ′+− −+ ×− +− − + =
×ω ω γω ω ω γγ ωω ω ωω γ ω ω γ
I II&
               
                                                                                         (23) 
The fourth term is zero because it represents a sca lar product 
of two orthogonal vectors. Equation (23) reduces to : 
( )
( ) ) (21
21
42
dT
h F q q FqFk kF qk V
TT
pT
d
+ ×− +

− ′ +− −− =
×ω ω γω ω ω γγ ωω γ
I I&
 
                                                                    (24) 
The function F(q), defined on the finite intervals where 
quaternions are defined, has to be continuous ( Fi(qi) 
continuous, i=1,3), to satisfy the condition 
qd qF qc ≤ ≤ )( . In other words, F(q) is a Lipschitz 
function. This condition is required to impose a bo und to the 
first and last term of equation (24).  
A positive constant then exists such that qa qFq ≤ − )( . 
Similarly, F′must be continuous with qi ∈[1,1], i=1,3 to 
satisfy a positive bound on it’s norm β≤′F . 
The expression of the time derivative of V finally satisfies: 
    
( ) ) (21
21
4T 2
d
h F q q FqakqFk k V
Td p
+ ×− +

− ′++ − −≤
×ω ω γω ω ω γω γ γ ω
I I&
   (25) 
The signs of F(q) and q must agree to make the second term 
smaller than a negative definite function (a quadra tic term 
with negative sign). 
The Lyapunov stability conditions are that qTF(q)≥0  and 
F(q) continuous, which implies that F(0)=0. 
The Lipschitz property of a continuous function F 
( qc F> ) can serve as a bound for the second term.   
We can now conclude that the time derivative of V satisfies 
the following inequality:  5                          [ ][ ]Tω ω q q V M −≤&                       (26) 
A reasonable additional assumption (finiteness) is required 
to establish the stability proof: ω α
0sup 
≥=
t. 
The inequality (27) is now satisfied with: 




− −

+ −−

+ −
=
max dd
max d
max p
2 4212 421
γβσ γαγσ βγαγσ βγ
k akakck
M  
                                                                                         (28) 
Therefore, by choosing γ to make the matrix M positive 
definite, the function V given by equation (16) is a 
Lyapunov function for the system of equations (3) a nd (4). 
Sufficient stability condition— To summarize the stability 
analysis, sufficient stability conditions are: 
• F(q) has to be a class C1 function.  
• The function F is contained in the first and third 
quadrant: 0)(≥qFqT.  
These two conditions also imply that F(0)=0. 
The last mathematical proof of stability shows that  the 
switching curve can be chosen more freely in a mini mum 
norm approach than previously attempted (The switch ing 
function LgV in reference [1] can only be a straight line). 
The switching curve where the torque is first switc hed off is 
given by 0)( )( = += qF xVLg γω . The function F can be 
any nonlinear function satisfying the above stabili ty 
conditions. Generalizing the choice of LgV to nonlinear 
functions is also suitable because LgV is the direction where 
the torque is projected in the regions of the phase  space 
lying outside of the switching curves LgV(x)=0 and uPD  =0 
where the torque is respectively switched off and b ack on. 
 
Among the advantages associated with the flexibilit y of the 
choice of F, it should be noted that between two straight 
lines as in reference [1] ( F(q)= q), the torque is turned off for 
the same time duration, for any rest to rest maneuv er after 
fixing the value of γ. In practice, larger maneuvers can 
require the control torque to be switched off for l onger time 
durations and that can only be achieved if the func tion F(x) 
is nonlinear and satisfies the stability conditions .  
Generalised (Modified) minimumnorm approach 
A practically convenient implementation of minimum norm 
control that demonstrates tradeoff improvement ove r a 
benchmark controller has recently been proposed in 
references [4] and [5] for the control of a pendulu m. The 
control objective is to impose the torque expenditu re of a 
benchmark controller by minimizing the functional:                            { })(  Argmin 
Kv(x) uopt xku u − =
∈                   (27) 
where k(x) is a benchmark stabilising controller for a giv en 
Lyapunov function V.  
For our satellite attitude control simulation of th is controller, 
we consider the Lyapunov function given in equation  (15).  
A rapidity constraint is added to this minimization  problem. 
The control input belongs to the rapidity constrain ed set: 
           { }U ), ( : Kv(x) ∈ −< + = ux uVLVLug f σ            (28) 
The generalised minimum norm control law satisfying  the 
above conditions is given by: 
           ()
( )( )

≤> + −=
0  if                      )(0 if )()(
TT
opt 
ψψψ
xkxk
VLVLVLx
u
g gg             (29) 
)( )( x xkVLVLg f σ ψ + + =  
We choose the negativity margin function as: 
                            ( )ωω η σT T)( + = qq x                           (30) 
Where η is a positive constant parameter. 
The Lie derivatives of the Lyapunov function in the  
directions of the vector fields  f and g are given by: 
[ ]3 3 2 2 1 1 , , )( q q q xVLg γ ωγ ωγω + + + =  
130T T
)(
×=

∂∂+∂∂=
ufVqqVxVL ωω& &  
5. M AXIMUM RATE ATTITUDE CONTROL  
We consider the following maximumrate control prob lem: 
                    )( Maximise xV&−max st. uu≤               (31) 
Where: 
  uxgxxVxfxxVxV )()()()()(T T
∂∂+∂∂=&           (32) 
The optimisation objective is to maximize the conve rgence 
rate of a Lyapunov function of the system, subject to a 
maximum absolute value of the norm of the torque.  
 
To illustrate the maximum rate control concept, a c onvenient 
system to consider is the double integrator. The do uble 
integrator is generally considered as an appropriat e 
mathematical model for single axis spacecraft rest to rest 
maneuvers, when the gyroscopic torque is small. 
The equation of a double integrator is:  6  
                                 

==⇔=u xx xu
22 1
&&& &θ                         (33) 
Where [ ][]θθ&, ,2 1 = = xxx , []TTxg xf ] 1 , 0 [ )(,0 , )( = =θ&  
Since the torque u is scalar for this single input system, the 
norm being considered is simply the absolute value of the 
torque. We shall see that the double integrator is a 
particularly convenient example to compare the maxi mum 
rate control law with a minimumtime controller. 
Provided that V&can be made negative with a sufficiently 
high gain, the maximum rate (or minimum time slidin g 
mode) control law is given by: 
                   
iT
max i )( .



∂∂−= xgxVsign u ui                   (34) 
 
For the double integrator, the maximumrate control  
problem is solved with the Lyapunov function: 
              ( )2
21γθ θ+ =& V                             (35) 
The maximum rate control law is:  
                              ( )γθ θ+ −= & sign u u .max                       (36)  
The time derivative of V, with the control law given by 
equation (36) is given by: 
    ( ) ( )θ γ θθ γ γθ θ γθ θ && & & & + + + +−= ) ( )(max sign u xV      (37) 
V&is therefore negative under the condition that: 
                                  
max max θγ&≥ u                                (38) 
where θ& solves: 
                      ( ) ) 0 (2) 0 (
2max 2 2
θθθ θ− −= − u&&                     (39) 
Minimizing time—We now investigate the possibility of 
achieving near minimumtime manoeuvres with a maxim um 
rate controller. 
The switchingtime of the bangbang minimumtime so lution 
is wellknown to be: 
                                        
2f
stt=                                      (40) 
A minimum time solution can in theory be achieved w hen 
the linear switching function intersects the extrem al 
trajectory ‘ u= umax ’ at 
2) 0 (fθ θθ−= . We show an example 
of this in the numerical simulations section. 
By integrating both sides of the double integrator,  the state 
trajectories are given by:                   ( )max 10 12
20 2
2) (2 2u xxx x± − = −                   (41) 
Removing chattering— The sign function will in prac tice 
cause a high frequency oscillation phenomenon, know n as 
chattering (see figure (5a)). Indeed, the switching  frequency 
cannot be infinite. As an alternative to that, we p ropose to 
replace the sign function by a smooth function with  a 
boundary layer of the form: 
                    
)22/2(.)(
σεζ
xe xxx
−+=                       (42)  
This smooth approximation of the sign function has the 
advantage of approximating the sign function more c losely 
when the tracking error is large and smoothly when tracking 
errors are smaller. Chattering can therefore be rem oved 
without needlessly degrading control rapidity.   
6.  NUMERICAL SIMULATIONS AND ANALYSIS  
The system parameters used for the simulations are:  
2
32
22
1 12 , 14 , 10 mkg Imkg Imkg I = = =  
which corresponds to a slightly asymmetric microsa tellite.  
The initial conditions are: 
ωi(0)=0, i=1, 2, 3.  
1768 . 0 ) 0 ( , 1768 . 0 ) 0 ( , 3062 . 0 ) 0 (3 2 1 = = = q q q  
9186 . 0 ) 0 (4= q  
This corresponds to initial attitude errors of 30 d egrees on 
all three axes for a 123 Euler rotation sequence.  
The benchmark controller gains are: kp= 0.02, kd= 0.5. 
 
Minimum norm controller with F(q)=q 
Simulations of the minimum norm controller are firs t carried 
out with the function F(q) = q, corresponding to a Lyapunov 
function with bilinear coupling (given in equation (15)). The 
phase portrait of the system described by equations  (3) and 
(4), with the control law (10) is presented in figu re (1).We 
observe that the control torque is turned off betwe en two 
straight lines in the phase space domain, determine d by the 
Lyapunov function and the benchmark controller.  
By decreasing the values of the parameter γ, the system 
proceeds more directly toward the origin in phase s pace, the 
torque expenditure is  reduced, while rapidity is s lightly 
degraded but the overall tradeoff is improved (see  figures 
(1), (2a), (2b)). 
Compared to the PD benchmark, a significant amount of  7 energy is saved, without significantly deterioratin g rapidity. 
For instance, with γ=0.02, the average torque expenditure is 
divided by 2 while the 2% settling time increases b y less 
than 50 seconds for a 300 seconds manoeuvre. We sha ll 
however demonstrate more rigorously that a better t radeoff 
is achieved by minimumnorm techniques. 
In reference [1], both rapidity and torque were imp roved, 
only because the gains kp and kd were inappropriately 
selected as the system was excessively underdamped . We 
have chosen the gains of the PD controller to achie ve a 6% 
single overshoot (slightly underdamped) to underta ke a 
fairer and more realistic comparison. Minimum norm 
controllers would achieve an even higher tradeoff 
improvement if the PD gains happened to be excessiv ely 
underdamped or overdamped. 
Minimum norm controller with a nonlinear function F (q)  
As an example, we consider the Tangent hyperbolic 
function: 
                         () 1 0 , tanh )( << = λ λq qF                       (43) 
For λ=5, we observe on figures (4a) and (4B) that this 
choice of F (Lyapunov function with nonlinear coupling) 
achieves higher accuracy at steady state than the f unction 
F(q) = q. Note that for comparison purposes, we imposed a 
similar torque expenditure ( )2 3
010 . 4 )()( Nm dt tutuFtT −=∫by 
setting 025 . 0=γ for F(q)=q  and 0075 . 0=γ  for F  nonlinear.  
 
Tradeoff improvement by generalized minimum norm 
control 
Even though the cost functional is unspecified with  our 
inverse optimal minimum norm approach, we can show 
more rigorously that the energyrapidity tradeoff of a 
benchmark controller (PD in our study) can be outpe rformed 
by minimum norm laws. One way of achieving this is to 
compare rapidity after reducing the gains of the PD  
benchmark until the torque expenditure is similar t o the one 
achieved with a minimum norm controller for a given  value 
of the parameter γ, for the same manoeuvre. We prefer 
however to compare rapidity, not only for a similar  torque 
and a similar manoeuvre but also for identical gain s.  
This is done by the generalised minimum norm approa ch. 
The control law is given in equation (29). k(x) is chosen to 
be a PD law. We consider the same PD gains as in pr evious 
simulations and we set γ =0.02, η=0.01. 
We observe on figures (3a), (3b) and (3c) that atti tude 
manoeuvres can be achieved more rapidly for a simil ar 
torque expenditure with a generalised minimum norm 
approach. The 1% settling time passes from 228s to 124s on 
the X axis, from 242s to 214s on the Y axis, and fr om 204s 
to 164s on the Z axis. Even the overall average tor que is 
slightly reduced from 6.10 4Nm with the PD benchmark to 5.83 10 4Nm with the generalized minimum norm law.  
Maximum rate controller 
Minimum time case— We take as an example the initial 
condition: 0 , 1) 0 (f= =θ θ , with umax = 0.5. For the double 
integrator, a minimum time response is obtained whe n the 
state variables at the switching point are given by :  
( ) 5 . 02f 1 01
s1 =−=x xtx  
()
5 . 02max 10 1 s2
−=− −= ux x txs 
The maximum rate controller performs as a minimum t ime 
controller (see figure 5b) with the following choic e of the 
parameter γ (slope of the switching curve): 
414 . 1 2)()(γ
s1s2= =−=txtx  
The robustness advantage of the maximum rate approa ch to 
time minimization is that the control is in a close d loop.  
Tradeoffs obtained by varying γ—When different values of 
the parameter γ are chosen, rapidity is tradedoff against 
torque expenditure in a similar way to what was obs erved 
with a minimum norm law (see figure (5a)).   
Chattering removal— The boundary layer proposed in 
equation (42) removes chattering as noticed in figu res (6a) 
(6b), with γ=1.2, ε=0.02, σ=0.5. 
Figure 1: Phase portraits of the minimum norm contr oller   
with different values of γ  
 8  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
  
 
 
Figure 3: aComparative attitude control response, b Comparative control torque of the wheels 
Red: Generalised (modified) minimum norm controller , blue: PD benchmark controller 
 
Figure 2: a Attitude control response of the minim um norm controller, b Norm of the control 
torque of the wheels 
 9  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 Figure 4:  
a Comparative attitude error with F(q) linear (red) and F(q) nonlinear(blue)  
b Comparative attitude error with F(q) linear and F(q) nonlinear at steady state 
(after t=200 seconds)   
Figure 3c: Comparative attitude control response o f the PD and min 
norm controller closer to the origin (from t=100 se c) 
 10   
 
 
 
 
 
 
 
 
 
7.  CONCLUSION  
Optimal tradeoffs between attitude control rapidit y and 
torque expenditure, have been achieved with a Lyapu nov 
approach. A new generalized Lyapunov function has b een 
proposed for consideration with minimum norm contro llers, 
with the advantage of control design flexibility. W e have 
shown that generalized minimum norm laws decisively  
enhance the overall attitude control performance of  standard 
benchmark controllers such as PD laws. Maximizing t he 
convergence rate of Lyapunov function has also been  shown 
to be a simple but viable practical solution for cl osed loop 
rest to rest near minimum time maneuvers. 
These optimization approaches have the practical 
advantages of guaranteed global stability and of be ing free 
from computational issues, which is highly desirabl e given 
the limited resources onboard satellites. 
 
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
REFERENCES  
[1] S. Bharadwaj, M. Qsipchuk, K. D. Mease, and F. C.  Park, 
“Geometry and inverse optimality in global attitude  
stabilization”, J. Guid., Control and Dyna. , vol. 21, no. 6, 
pp. 930–939, 1998. 
[2] F.A. Freeman, P.V. Kokotovic, “Inverse Optimali ty in 
Robust Stabilization”, SIAM journal on control and 
optimization, vol. 34, no4, pp. 13651391, 1996. 
[3] D.Fragopoulos, M.Innocenti, “Stability consider ations in 
quaternion attitude control using discontinuous Lya punov 
functions”, IEE Proceedings Control theory and 
applications, Vol. 151, No. 3, May 2004. 
[4] H.Yuqing, H.Jianda, “Generalized Point Wise Min   Norm 
Control Based on Control Lyapunov Functions”, 
Proceedings of the Chinese 26th Control Conference,  July 
2007. Figure 5: a Phase portrait of the maximum rate con trol with γ varying.  
    b Phase portrait of the maximum rate controlle r that achieves a minimum time response 
  
Figure 6: a Rotation angle with a maximum rate con troller and a smooth boundary layer 
b Control effort of the maximum rate controller wi th a smooth boundary layer 
  11  [5] H.Yuqing, H.Jianda, “Nonlinear model predictive  control 
enhanced by a generalized pointwise minnorm scheme ”, 
46th IEEE Conference on Decision and Control, New 
Orleans, LA, USA, Dec. 1214, 2007. 
[6] B.Wie, H.Weiss, “Quaternion feedback for spacec raft 
large angle maneuvers”, Journal of Guidance, Contro l and 
Dynamics , Vol 8, No3, 1985.  
[7] B.Wie, H.Weiss, “Quaternion feedback regulator for 
spacecraft eigenaxis rotations” AIAA Journal of Gui dance, 
Control and Dynamics, Vol 12, No3, 1989. 
[8] J.T.Wen, “The attitude control problem”, IEEE 
transactions on automatic control, Vol 36, No 10, 1 991.  
BIOGRAPHY  
 
N M Horri is a research fellow at the Surrey Space Centre, 
University of Surrey. His research topic is on opti mal 
satellite attitude control with a geometric approac h. He has 
been awarded a PhD from the University of surrey on    
“Attitude control of underactuated small satellite s”.   
P Palmer  is a Reader at the University of Surrey and an 
academic member of the Surrey Space Centre, where h e 
leads the astrodynamics research group. His researc h 
interests include formation flying, attitude and or bit 
estimation and control, optical navigation and spac ecraft 
autonomy.  
M Roberts  is a Professor of Mathematics at the University 
of Surrey. His research interests include applied 
mathematics, dynamical systems and astrodynamics.  
 
View publication statsMathNet.Ru
All Russian mathematical portal
Ya. V. Mashtakov, S. S. Tkachev, Reference angular motion sy nthesis for reaction wheels
desaturation, Keldysh Institute preprints , 2017, 078
DOI: 10.20948/prepr201778
Use of the allRussian mathematical portal MathNet.Ru imp lies that you have read and agreed to these terms of use
http://www.mathnet.ru/eng/agreement
Download details:
IP: 79.139.215.77
December 17, 2023, 00:55:09Keldysh Institute   •  Publication search
Keldysh Institute preprints   •  Preprint No. 78, 2017
ISSN 20712898 (Print)
ISSN 20712901 (Online)
Mashtakov Y.V. , Tkachev S.S.
Reference angular motion
synthesis for reaction wheels
desaturation
Recommended form of bibliographic references:   Mashtakov Y.V., Tkachev S.S. Reference
angular motion synthesis for reaction wheels desaturation // Keldysh Institute Preprints. 2017. No.  78.
28 p.   doi: 10.20948/prepr201778e  
URL: http://library.keldysh.ru/preprint.asp?id=201778&lg=eО р д е н а  Л е н и н а  
ИНСТИТУТ ПРИКЛАДНОЙ МАТЕМАТИКИ  
имени М.В.  Келдыша  
Р о с с и й с к о й  а к а д е м и и  н а у к  
Y.V. Mashtakov , S.S. Tkachev  
Referen ce angular motion synthesis 
for reaction wheels desaturation  
Moscow  — 2017Y.V. Mashtakov , S.S. Tkachev   
Построение опорного углового движения для обеспечения разгрузки 
маховиков  
 
В работе рассматривается задача бестопливной разгрузки маховичной 
системы управления в режиме солнечной ориентации. Показано, что всегда 
можно подобрать такую ориентацию спутника, чтобы происходила разгрузка 
маховиков как при использовании момента сил давления солнечного излучения, 
так и при использовании гравитационного момента . Получены точные 
выражения для нахождения ориентации КА, обеспечивающей оптимальную 
разгрузку маховиков, а также приведены более простые формулы для 
построения близкой к оптимальной ориентации  
Ключевые слова:  маховик, разгрузка,  момент сил солнечного давления, 
гравитационный момент, ляпуновское управление  
 
Yaroslav Mashtakov , Stepan  Tkachev  
Reference angular motion synthesis for reaction wheels desaturation  
 
The paper considers the problem of fuelless reaction wheels desaturation  for a 
satellite in sol ar acquisition mode. It is shown that there is always angular motion in 
the vicinity of required one when reaction wheels can be desaturated either with the aid 
of solar pressure torque or gravitational one. Optimal desaturation attitude is found in 
close form. Additionally, near optimal simplified expressions for desaturation attitude 
are also presented.  
Key words : reaction wheel, desaturation, solar radiation pressure, gravitational 
torque, Lyapunov based attitude control  
 
This work was supported by RSF (project №14 1100621 ) 
 
 
 
  3 
Introduction  
Most  of all space  missions  involve  special  angular  motion . It could  be solar  
pointing  for spacecraft (SC)  battery  recharging , remote sensing missions or 
stabilization for data transmitting. Usually gyroscopic actuators such as Reaction 
Wheels (RW) and Control Moment Gyroscopes (CMG) are used to control SC attitude. 
They can offer good accuracy and decent control torque, which allow us to perfor m 
fast and precise maneuvers. Unfortunately, these systems have substantial drawback: 
under certain conditions they are unable to produce the necessary control torque along 
the specific direction, therefore SC lost controllability. For RW this condition is  named 
saturation, and for CMG it is the singularity problem. This paper considers the RW 
saturation problem only.  
The saturation of RW occurs when its angular rate reaches the limit, , thus RW 
will not be able to produce the necessary control torque. In order to desaturate RW one 
can use additional attitude control systems, such as magnetorquers or thrusters . 
Magnetic attitude control systems can be used only in the presence of external magnetic 
field, i.e. only at sufficiently low Earth orbits. Thrusters  require propellant, so their 
utilization might greatly affect the SC lifetime and/or maximum payload mass.  
Main reason of RW saturation is the external torques influence, e.g. gravitational 
and solar radiation pressure  (SRP)  torque. These torques are usually accounted only in 
control algorithm, so RW must compensate them, but during required attitude motion 
construction they are usually omitted. In this paper we suggest an algorithm of angular 
motion synthesis that will allow us to simultaneously provide SC solar pointing and 
RW desaturation using SRP and gravitational torque s.  
Notice, that the similar problem has been already investigated in some papers. 
For example, in  [1] the algorithm of angular motion synthesis for RW desaturation 
using gravitational torque is i nvestigated, but the suggested technique is essentially 
differs from the one we describe here. In papers [2,3]  another algorithm of RW 
desaturation using gravitational torque was suggested, but it requires unconstrained SC 
angular motion , while we consider solar pointed SC. There are also papers that suggest 
to use magnetic [4,5]  and reactive [6] attitude control systems for RW desaturation.  
The paper is organized as follows. In the first section, we present detailed 
problem stateme nt. In the second section we obtain simplified expressions for SRP 
torque. The third section is dedicated to reference angular motion construction. In the 
fourth section we describe well known Lyapunov based attitude control algorithm. 
Finally, in the fift h section we provide some numerical simulations.  
1. Problem Statement  
 Solar stabilization is one of the most common angular motion modes. It is used 
to recharge batteries  installed on the spacecraft. The only constraint to be satisfied 
during this motion is that normal to SC solar panels must be aligned with vector from 
the satellite to the Sun  (Sun direction) .  4 
As it was mention earlier, at Low Earth Orbits it is reasonable to use magnetic 
attitude control systems, such as magnetics coils, for desaturation. On the other hand, 
at high altitudes  Earth magnetic field is too weak to use it. As an example of such 
missions, we can mention geostationary satellites and the ones that move along highly 
elliptical orbits, which are used for study the interactions between Earth magnetic field 
and solar rad iation, e.g. missions Cluster II and Magnetospheric MultiScale [7,8] . At 
such orbits, we either have to use thrusters for  desaturation or develop new methods of 
angular motion construction. We will investigate the last approach.  
Consider the following mission : 
 SC moves along highly elliptical keplerian orbit, where we can distinguish 
two different modes of angular motion: ne ar the pericenter, where the 
gravitational torque prevails, and far from the pericenter, where 
gravitational torque is negligible and only SRP torque will affect the SC 
angular motion.  
 There are t wo identical solar panels installed on the SC. Their  parame ters, 
such as coefficients  of specularity  and reflectivity , area and normals are 
supposed to be known. Solar  panels  are rigidly  fixed .  
 We know SC tensor of inertia and center of mass location.  
 It is necessary  to provide  small  angle  between  normal  to solar  panel  and 
Sun direction for battery recharging.  
 Attitude control system consists of three noncomplanar reaction wheels.  
For this mission we have to obtain  the algorithm of angular motion synthesis that 
provide RW desaturation.  
2. Solar Radiation Pressure To rque  
Consider the following model of SRP [9]: 
 
0 2, 2 , 131,s s s s dcdS             F n n n r r r r n
   
where  
2
01367 W / m  is solar  constant , c is speed  of light, 
sr is Sun direction, i.e. 
unit vector from SC center of mass to the Sun,  
n
 is normal to the surface element  
dS, 
,
 are reflectivity and specula rity respectively . In accordance with this model, we 
can obtain the following expression for the solar radiation pressure torque:  
 
0,
2,2(1 ) ( ) (1 ) , 1,2,3i s i i
s s i i s icS
i    
    
r
r r n r nM n R
n  (1) 
where  
iR – is the radius vector from SC center of mass to the center of i th solar panel, 
S
 is the solar panel area (we consider identical solar panels, so their area, reflectivity 
and specularity are the same), 
in  is the normal to the i th solar panel surface. Normals 5 
to the solar panels are not necessarily coincide ( Fig. 1), so  angle between them can be 
arbitrary, but we will consider the case when this angle is rather small.  
 
Fig. 1. Satellite Schematics  
Total SRP torque is  
 
12 .sM M M   
Introduce the following notation : 
 

1 2 1 2
1 2 1 2,,
,11
22
11
22,  
 
R R R R R
nn ν n n nρ   
 
0 0 0232(1 ), (1 ), . a S S Sc c cbd            
Take into account that angle between  
12,nn  is small : 
 
2cos 1 1 , , sin         ν n   (2) 
where  
0 / 2  is the angle between  
n and 
1n (the same as the angle between  
n 
and 
2n) (see Fig . 2). Further , we will suppose  that the constraint  implied  on the SC 
attitude  is  
 
cos ,s maxrn   (3) 
where  
1max  is the maximum acceptable angle between the mean normal 
n  and Sun 
direction.  
6 
 
Fig. 2. Normals to solar panels surfaces  
Let us rewrite expressions for SRP torque using the introduced notation:  
 
   ( , ) , ( ) , 1,2, ,i s s s s bd ai       M R r n n r n ν rn ρ r ν ν ν   
where  “+” is used for the first solar panel  (
1i ), and “ –” for the second one  (
2i ). 
Notice that  
 
    22
1 2 1 2 1 2 2 1 2 1 011, , , ,44.        n n n n n n n n ν n n n   
Since 
,1srn , the angle between 
sr  and 
ν  will be small. Hence, 
,srν  is second 
order infinitesimal. Omitting all second order infinitesimals, we obtain the following 
expression for the SRP torque : 
 
  2 2. 2ss d a b   r ρν M R R n   (4) 
Notice that SRP torque consists of two terms. The first one corresponds to the absorbed 
solar radiation and depends on the SC attitude. The second one will appear only when 
the reflectivity is not equal to zero. Moreover, its direction does not depend on attitude 
and always will be the same in the frame bounded to the SC. We have to mention  that 
this result was obtained using tentative assumption  that angle between mean normal 
and Sun direction, as well as angle between normal to solar panels, is rather small.  
3. Angular Motion Synthesis  
Before  we start developing  angular  motion  construction  algorithm , consider  the 
following  assumpt ions. Firstly, reaction wheels principle of operation is based on 
angular momentum conservation law. Hence , when there is no external torque sor when 
fast maneuvers are perfomed  the total angular momentum of the satellite  and reaction 
wheels remains unchanged, even if SC changes its attitude. Secondly, when SC is Sun
pointed and its angular velocity along Sun vector equal s to zero, SC angular momentum 
(without angular momentum stored in RW) is almost equal to zero. Thus, i f we ensure 
that total angular momentum of the satellite (including RW) equals to zero, reaction 
wheels will be desaturated during Sunstabilized motion.  
7 
Consider the equations that describe the total angular momentum evolution:  
 
,d
dtKM   (5) 
where  
K is the total angular  momentum  of SC and RW, 
M is sum of all external  
torques , which  corresponds  to the SRP torque  while  SC moves  far from  pericenter  and 
to the gravitational  torque  near the pericenter . Notice that  
 
2, 2 , .dd
dt dtKK K K M   
Hence , in order to decrease the total angular momentum we have to ensure 
,0 MK  .  
As it was mentioned above, SRP  torque , as well as gravitational torque, depends 
on SC attitude. We  can expect  that we will not be always able to ensure 
,0 MK , 
but if for every moment   
 
, min, MK   (6) 
the total angular  momentum  at least will increase  slower . Problem  (6) and restriction  
(3) together allow us to find the necessary attitude.  
Obtained result can be generalized. For example, if solar stabilization is just 
temporary attitude motion mode and SC have some nominal one, where SC angular 
momentum without RW is 
0constK  (e.g. inertial stabilization or spin stabilizati on), 
we can ensure that 
0KK , hence at the start of nominal motion RW angular 
momentum will be equal to zero, i.e. reaction wheels will be desaturated.  
Let us prove that if 
0 ,0M K K  we will achieve the nominal angul ar 
momentum:  
 
  
02 2
00
0002, , 2
22,
, 2 , 2 , .d d dKdt dtdKdt dt   
       K K K K K
K M K M M KK
KKK   
Hence , if RW can storе enough  angular  momentum , we will be able to achieve  any 
nominal  angular  momentum , so at the start of nominal  angular  motion  RW will be 
completely  desaturated.  
3.1 Coordinate Systems  
Let us introduce  the following  right handed  Cartesian  coordinate  systems : 
1 2 3aO YY Y
 – Inertial  Frame  (IF): its origin  
aO is located  in the Earth center of mass, 
1aOY
 directed to the Vernal equinox of the J2000 epoch, 
3aOY  is orthogonal to the 
ecliptic ;  8 
1 2 3Ox x x
 – Body  Frame  (BF): its origin  
O is located in the satellite center of mass, 
axes are its principal axes of inertia.  We also suppose  that mean  normal  
n is aligned  
with 
3Ox ; 
1 2 3Oz z z
 – Solar  Frame  (SF): 
3Oz  is aligned  with Sun direction , 
1Oz  is aligned 
with 
srK (if 
srK0  then 
1Oz  is aligned with normal to ecliptic plane), thus 
 23 0TKKK
 in this coordin ate system . 
1 2 3Oy y y
 – Solar  Panel  Frame  (SPF): 
3Oy  is aligned  with 
n, 
1Oy  is aligned with 
np
 where 
2apR  (if 
np0  then SPF coincide with BF ), thus  
23 0Tppp  
in this coordinate system.  
1 2 3OZ Z Z
 – Orbital Solar  Frame : 
3OZ  is aligned  with the Sun direction , 
2OZ  is 
aligned  with 
s satrr , where  
satr is the radius vector  from  the Earth center to the SC 
center of mass  (if 
s satrr0  then 
2OZ  is aligned with normal to the ecliptic plane), 
thus 
1 3 10 , 0T
sat r r r  r  in this coordinate system.  
If we suppose  that a vector  is written  in some  specific  frame , we will use 
superscript: 
, , , ,Y x z y Za a a a a  for IF , BF, SF, SPF and OSF respectively . Translations  
between  these  frames  are described using rotation matrices  
ijD so 
 
,ij
ija D a   
where  
,ij can be  Y, x, z, y, Z. 
3.2 Desaturation Using Solar Radiation Pressure Torque  
Let us consider  the problem  of desaturation  at high altitudes, when SC moves 
far from the pericenter and SRP torque  prevails.  Rotation  matrix  from  SF to SPF 
zyD 
can be described  by Euler  angles  (sequence  313 with angles  
,,    respectively ): 


11
21
31cos cos  cos sin sin ,
 cos sin   cos cos sin ,
=sin sin ,D
D
D    
    


 
 




12 13
22 23
32 33cos sin + cos cos sin , sin sin ,
cos cos cos   sin sin , cos sin ,
cos sin , cos .DD
DD
DD      
      
  

  
as we can see, angle  between  
sr and 
n equals  to 
 , hence constraint  (3) can be 
rewritten:  
 
.max max       (7) 
Further  we will use only constraint  in the form  (7).  9 
Additionally  introduce notation   
 
  2 2 . bd   ρν q R n   
Then  expression  for SRP torque  is  
 
.ssr M p q   
Taking into account  that 
1max , we can linearize w.r.t. 
  expressions for  
zyD: 
 


sin
coscos sin
sin cos .
cos cos 1zy     
     
   



D   
Now let us return to the 
,sMK . The simplest  form  vectors  
K and 
sr have in SF , and 
vectors  
,pq  – in SPF . Hence , 
 
   , , , , .z z y z y
s zy s zy s      M K K p q D r D r p K q K   
After simplification  
 
   
       3 3 2 2 1 2
3 1 2 2 3 3, cos sin
sin cos sin cos .s q K K q q
K q q K p qp    
       
      MK   
Thus, we obtain the following minimization problem:  
 
  
       3 3 2 2 1 2
3 1 2 2 3 3,,cos sin
sin cos min sin cos ,q K K q q
K q q K qp
p
     
     


   (8) 
 
.max max     
In order  to solve  it we will use Lagrange  multipliers  method  and Karush –Kuhn –Tucker 
conditions  [10]. Lagrange  function  of this system  is  
 
  
       
3 3 2 2 1 2
3 1 2 2 3 3
1 2 3 3cos sin
sin cos sin cos
.max maxL q K K q q
K q q K p q
qp
K   
    
        
    

      
Where 
i  are Lagrange multipliers. Thus, the necessary conditions for the minimum 
are 10 
 
     
     
     

3 1 2 2 3 3 2 1
2 1 2 2 3 1 2
2 1 2 2 2 3 3
1
2sin cos sin cos 0,
cos sin cos sin 0,
cos sin cos sin 0,
00,
.0,max
max
iLK q q K p q
Lq p q K q q
LqpK
qq K K p     
      
      
  
  
     
    
   
  





   
Hence , we obtain  the system  of equations  that allow  us to find all extremum of the 
function  (8). In general  case, it is quite  complex  problem  to solve . Notice , that vector  
q
 consists  of two terms  and one of them  (
2 ( )bdρν  to be exact)  is the first order 
infinitesimal because 
| | 1ν . In order to provide more energy, reflectivity of solar 
panels have to be  small. Hence, since 
,bd  are proportional to the reflectivity, 
2 ( )bdρν
 is the second order infinitesimal and can be omitted. Of course, the 
solution that we obtain using this assumption will not be the exact solution of the 
problem (8), but it will be close to the one.   
Consider  vector  
q in SPF (without omitted term ). In this frame  
 
23 0 , 0 0 1 .T T yyRRRn   
Hence  
 
 2 2 ( ) 2 0 0 .T y y yb d R bd   q nR   
Thus , 
32 0 qq . Let  
 
2 1 2 3 1 2 3( ), , . f K q p g K q h K p      
Then  minimization  problem  (8) can be rewritten as  
 
  
,,min sin sin sin ,
.max maxf g h
      
     
     (9) 
and the system  of equations  for the extremum is  11 
 




21
1
2sin sin 0,
cos cos 0,
cos cos
0
00,
,
.max
maxLgh
Lfg
Lfh   
   
   
  
  

   



   (10) 
The exact  solution  of this system  of algebraic  equation  presented in the appendix. Here  
we only notice  that minima  of problem  (9) will be achieved at the border of permissible 
region, i.e. when 
max . When  none  of the 
,,f g h  is equal  to zero the total amount  
of extremum  is not greater  than twenty four. Moreover , this function has a symmetry : 
if we replace  
 by 
 and 
,  by 
,     value of the function will not change . 
It is due to the fact that linearized  matrix  
zyD with the accuracy  up to the second order 
infinitesimal does  not change after the replacement . Therefore , we can consider  only 
the case 
max , so total amount of extremum is not greater than  twelve.   
Notice that if  
 
 00,, 1 sig2n2max f           ,  (11) 
where  
 
002 2 2 2signsin , cos ,
hgf h
gg h
   (12) 
function  (9) equals  to 
 
22
max f g h   .  
This value  is not optimal , that can be easily  verified  by substitution  (11) and (12) in 
(10), but it shows  that (with accuracy  up to second  order  infinitesimal ) we can always  
construct  the SC attitude  that simultaneously provide solar pointing  and RW 
desaturation  using only SRP torque .  
Let us prove  that obtained simple approximate solution is close to the optimal 
one.  
 
   
2 2 2 2sin s min i0sn n i.max
max maxf g h f g
gh fh
h f g     
 


    
If 
0,f g h  then last expression is equal to 
2 . Let us prove  that 12 
 

222max
maxf g h
h f g

 . 
We can rewrite it:  
 
22
max122 2 .2f gh gh
     
Left part of this inequality  is obviously nonpositive. Since   
 
22
22gh gh , 
the right part is nonnegative. Hence, we have proved that the approx imate solution is 
worse than the optimal one by no more than 
2  times.  
3.3 Desaturation Using Gravitational Torque  
Let us consider  projection  of SRP torque  to the  Sun direction  
sr: 
 
        2 2 2 , 2 , 2 ,s s s s s b d b d a         M r R R n r R ρνn r ν r ρ . 
As it was mentioned  above , 
2 ( )bdρν  is second order infinitesimal . Since  the angle  
between  mean  normal  
n and Sun direction  
sr is small, 
  2 ( ),s bdR n r  is also 
second order infinitesimal. Hence , angular momentum along the Sun direction does not 
change  when we use SRP torque . Considering this, we will use gravitational torque 
only to desaturate angular momentum along Sun direction. Thus, we obtain the 
following minimization problem:  
 
5, ,3 min,
( , ) , coss s sat sat
sat
s maxr
 


r Jr r K r
rn  (13) 
where  
 is the Earth gravitational parameter , 
satr is the SC radius vector , 
J is its tensor 
of inertia . The only parameter we can vary is SC attitude, i.e.  rotation  matrix  
ZxD  from 
OSF to BF. As  before , we will describe  it using  Euler  angles  (sequence  313 with 
angles  
,,    accordingly ). Constraint of the minimization problem then can be 
simplified:   
 
max max  .  
After linearization  13 
 


 cos sin
sin cossin
cos
cos co 1 sZx   
   
   

D . 
In OSF Sun direction  and SC radius vector  are 
 
13 0 0 1 , 0T T ZZ
s sat rr rr . 
Function to be minimized is  
 
  55, ,3 3 , ,Z Z T x Z
s s sat sat s s sat Zx Zx sat
sat satrr   
r K r K r r D J J r r D rr , (14) 
where  
xJ is SC tensor of inertia in BF and  
 
00
0 0 .
00xA
B
C
J   
After simplification,  (14) became  
 
 
   2
1 5
133,2
1sin 2 2
cos 2 cos 2 .2s
sat
rABrr
r A B A B C  

      Kr   
Introduce notation  
 
 
 2
1 1 3 55
13 5, , , ,22
, 2 ,33
3
2 , .2
22ss
sat sat
s
satF r B A G A Brr
H A B Crrr
rr

    

 K r K r
Kr   
Then problem (13) can be rewritten as follows  
 
 
,,sin( ) sin( ) sin
.min,
max maxF GH
     
   
    
As we can see, the obtained  problem  is the same  as (9), thus we can find solution in 
the same way.  
Let us consider approximate solution (11) in more details . Considering notations, 
we can write exact expressions for 
0  from the previous section : 14 
 
  
 

 
 
 
 
 5
513
02222
13
3
22
13
02222
13
3
25
253signsign 2sin
322
sign
2
3,,
,
,
22
322
sign,
cos
,
,.2
2ss
sat
s
sat
s
sat
s
sat
sr A BGF r
r A B A B Cr
r B A
A B A B C
r A B Cr
Hr A B A B Cr
rAr B A
GHr
rH
G
BC
BCr
A B A





   

   


   

  





K r K r
Kr
Kr
Kr
Kr   
Euler  angles  
,  are defined by  
0: 
 
  
002 sign ,
2,sBA    Kr . 
Hence , SC attitude  relative  to OSF is defined  by signs  of 
3 ,sat s rrr ,
,sKr  and its 
tensor of inertia. Therefore, if these signs do not change during the motion, the SC 
attitude will be fixed in OSF.  
Let us obtain closed expressions for OSF angular velocity. Its  axes are 
 

1 3 2 3 1,,,,.sat s sat s
s
sat s sat s r r r re r ereererr   
Angular  velocity  can be found  using  Poisson  equations  for rotation  matrices  
 
0[ ] ,Z
YZ YZ D Dω
   
where  
YZD is rotation  matrix  from  IF to OSF, 
0Zω  OSF angular  velocity , and introduced 
notation for skew symmetric matrix of cross  product  
 
32
31
210
:0
0[]aa
aa
aa
a . 
Hence, the angular velocity is  
 
   31 0 1 2 3 2 , , ,TZω e e ee ee
 . 15 
Since  Sun direction  changes  slow ly, we will neglect  it, i.e. 
3 s 0 er
 . Time derivative 
of the first axis then  
 
   
 11 22
1, , , ,
,sat s sat s sat s sat s sat
sat s sat s sat s v r v r e v r v r e e e v
r r r r rer
 . 
Here we have taken into account that   
 
1 1 2 2 3 1 3 1 3 , , , , , , 0sat sat sat sat s    v e e v e e v e e v r e e e . 
Hence , OSF angular velocity is  
 
22
0,0 0 .T
Z sat
sat sev
rreω   
As we can see, if 
satr and 
sr are collinear, OSF angular velocity became infinite. This 
fact have  to be taken  into account  while  we construct  angular  motion  near the 
pericenter , i.e. if 
sat srr  is small , desaturation using gravity torque will not work 
because RW will not be able to provide required angular velocity. Since  Sun direction  
rotates  in IF, time period  when  we can not use gravitational  torque  will be rather  small , 
about several revolutions . Moreover , if pericenter  located  sufficiently  far from  the 
ecliptic  we will always  be able to desaturate  RW using  gravitational  torque  since 
sat srr
 will be large enough near the pericenter .  
4. Attitude Control  
In order  to control  SC attitude  we will use wellknown  Lyapunov based  control  
algorithm  [11–13] that provides  asymptotic  stability  of the require d (further  we will 
call it reference ) motion .  
SC equations of motion are : 
 
,
[ ] ,x x x x x x x
ctrl ext
x
Yx Yx   
J M Mω ω J ω
D Dω
   (15) 
where  
xJ is SC tensor  of inertia , 
xω is its angular  velocity , 
,x
ctrlx
extMM  are external and 
control torques respectively, 
YxD  is rotation matrix from IF to BF . Let reference  motion  
be defined  by rotation  matrix  
YRD  from IF to Reference Frame (RF, further all vectors 
in this coordinate system will be noted with superscript  
R) and by reference angular 
velocity  
R
refω , so 
 
[ ] .R
YR ref YR ωD D
   (16) 
Attitude  control  have  to ensure  that RF and BF are coincide . 
Consider Lyapunov function candidate  16 
 
13 tr , const 0, ,2x x x
rel rel a Rx a V k k     D ω J ω   (17) 
where  
T
Rx Yx YRD D D  is rotation  matrix  from  RF to BF, 
x x R
rel Rx ref ωD ωω  is relative  
angular  velocity , 
tr is trace of the matrix . Time derivative of  
V, using (15) and (16), 
is  
 
 1tr , ,2,x x x x x x x R x R
rel rel a Rx rel rel Rx ref Rx ref a V kk
    ω J ω D ω J ω ω J D J ωω DS
   
where  
 32 3 23 12 1 13 21 , d d d d d d   S  
ijd are components of  
RxD . If 
 
, const 0,x x x R R x
rel Rx ref Rx ref a rel k k k     Jω ω ω JD ω D ω JS
   
then 
0V
 . Control  torque  in this case is   
 
.x x x x x x x R R x
ctrl ext rel Rx ref Rx ref a rel kk     MM ω J ω J ω D ω JD ω S ω
  (18) 
Let us show that this control torque ensures asymptotic stability of the reference 
motion. We  will use Barbashin Krasovsky  theorem  [14], therefore  we have  to show  
that there  exist  positive definite  Lyapunov function  and its time derivative  is 
nonpositive  and equals to  zero only at the set that does not contain any trajectories of 
the system except the reference motion.  
First part of this theorem  obviously  satisfied  because  (17) is positive definite. Its 
time derivative is nonpositive, and the set 
  , 0 :rel Rx V M  Dω
  consist of all the 
points 
,e Rx rl Dω  such as 
x
relω0 . After substitution  (18) in equations of motion , we 
obtain  
 
,
[ ] .x x x
rel rel a
x
Rx rel Rxkk
  
JSω 0
DωDω
   
We look for the trajectories only at the set 
M . As we can see, such trajectories  are  
 
, .x
relω S0 0   
S0
 correspond s either  to reference  attitude  or the one that differs  from  the reference  
to the rotation along any axis at the angle 
 . Hence , there  are several  equilibrium , and 
3,x
Rx relEω D 0
 (reference motion)  is globally  (except other equilibrium ) 
asymptotically stable , while other equilibrium are unstable. Detailed  analysis  of 
attitude accuracy that provides this algorithm presented in [15]. 
As it was mentioned above, we divide SC motion into two modes : motion near 
the pericenter and far from it. Let  us take a closer  look at expressions  for 
YRD  and 
R
refω  
that correspond to each of these modes . 
When SC moves far from pericenter its angular momentum changes very slow 
because SRP torque is rather  small. Hence , attitude  that ensures  RW desaturation  will 17 
also change slowly. Therefore, when SC moves far from pericenter its angular velocity 
will be almost the same as the inertial stabilization, i.e. its reference attitude will be 
constant and angular velocity will be equal to zero:  
 
, ,R
YR yx zy Yz ref ω D D D D 0   
where
YzD  is rotation  matrix  from  IF to SF, 
zyD  corresponds  to rotation  matrix  
determined  by Euler  angles  that are the solution  of the minimization  problem  (9), 
yxD  
is constant rotation matrix from SPF to BF . 
YRD  changes  slow ly, so it will be necessary 
to redetermine it only once in several hours.  
During  motion near the pericenter  assumption  of small angular velocity does not 
work since rotation matrix from IF to OSF changes very fast. Since  we determine  the 
necessary  attitude  by solving  cubic  equations , the problem of reference angular 
velocity and acceleration determination is rather complex to be solved analytically, so 
we will determine them numerically using (16). Rotation  matrix  from  IF to RF in this 
case is 
 
,YR Zx YZD D D   
where  
YZD  is rotation  matrix  from  IF to OSF, 
ZxD  is rotation  matrix  determined  by 
Euler  angles  that were  found  from  minimization  problem  (13). 
5. Numerical Simulation  
In order to verify obtained results the following mission was simulated:  
 SC moves  along  highly  elliptical  orbit with inclination equals to 
60 , its 
pericenter is  9 000 km and apocenter is  150 000 km, one revolution is 
about  62.7 h. 
 Tensor of inertia is  
 2diag 150,120,20 g m 0kx  J . 
 Solar panels area is  
23м . 
 
  2 10 0.75 0.15 m, 0 0.85 0.15 mTT xx  RR . 
 
  120.075 0.075 0.996 , 0.075 0.075 0.996TT xx   nn . 
 Reflectivity  
0.1,  specularity  
0.5 . 
 Earth  rotates  along  Sun with constant  angular  velocity , changes  of Sun 
direction  due to SC motion  along  the orbit  is neglected , i.e. Sun direction  
rotates  with the constant  angular  velocity  in IF. 
 
10max . 
 Initial  attitude  
3 YxDE and angular velocity  
 0 0 0 rad / sT xω . 
 Maximum control torque is  
0.01 N m . 
 Initial angular momentum stored in RW is  
N s 111 mT   H . 
 Far from pericenter reference attitude redefine d every 40 000 s. 18 
For the reference  motion  construction  we used equations  (4) for SRP torque . Reference  
motion  mode  changes  when SC radius vector equals to 15  000 km. For the numerical  
simulation  more  precise  expression  (1) was used for SRP torque and gravitational 
torque considered to be always affecting SC attitude motion . In Fig.  38 results of the 
reference motion construction algorithm work are presented. Here  we used exact  
solution  of minimization  problems  (9) and (13). 
 
Fig. 3. Total angular momentum   
Fig. 4. RW angular momentum  
 
Fig. 5.Total angular momentum  
along Sun direction   
Fig. 6. Total  angular  momentum  
orthogonal  to Sun direction  
 
Fig. 7. SC angular velocity   
Fig. 8. Angle between mean normal  
and Sun direction  
19 
Peaks  in Fig. 4 appear  due to noticeable variation of the attitude in different  
modes  of reference  motion. In  addition , near the pericenter  SC angular  velocity  is not 
equal to zero, so RW have to store more angular momentum in order to spin the 
satellite.  After  the sixth  revolution  there are  peaks during  the motion far from 
pericenter. They appear  as well as peaks  in angular  velocity  because angular 
momentum orthogonal to  the Sun direction is almost desaturated and optimal attitude 
changes greatly. Large angle between mean normal and Sun direction appears at small 
periods of time because SC have to be reorientated after switching reference motion 
modes and does not affect SC e nergy balance.  
In Fig. 914 results  of another  simulation  are presented , where  we used not the 
exact  solutions  of minimization  problems  but their approximate  ones (11). 
 
 
Fig. 9. Total angular momentum   
Fig. 10. RW angular  momentum  
 
 
Fig. 11. Total angular momentum  
along Sun direction   
Fig. 12. Total  angular  momentum  
orthogonal  to Sun direction  
20 
 
Fig. 13. SC angular velocity   
Fig. 14. Angle between mean normal 
and Sun direction  
 
As we can see, angular  momentum  evolution , as well as other  system parameters, 
are almost the same as the ones obtained using the  exact solutions of minimization 
problems.  
Conclusion  
In the paper  we have  investigated  the problem  of fuelless  reaction  wheels  
desaturation. We  have  considered  the satellite  that moves  along  highly  elliptical  
keplerian orbit with additional constraint: normal to solar panels, which are rigidly 
fixed to the satellite, have to be directed near to the Sun direction. In  order  to solve  this 
problem  we have  suggested  an algorithm  of reference angular motion synthesis that 
allow us to use solar radiation pressure and gravitational torques fore desaturation.  
We have  obtained  simplified mo del of solar  radiation  torque  for the satellite  with 
two identical  solar  panels  in the case when  normals  to these  solar  panels  are almost  
coincide  and satellite  is Sunstabilized. Using  this model,  we have  obtained  expressions  
that allow  us to find the satellite  attitu de that ensures  reaction  wheels  desaturation.  
We have  shown  that for both simplified  model  of solar  radiation  pressure  torque  
and gravitational  torque  there  is always  an attitude  that provide  simultaneous  solar 
pointing and reaction wheels desaturation. The problem of this attitude  finding  can be 
reduced to the solution of the system of trigonometric equation, which, in turn, can be 
reduced to the solution of one cubic equation. In addition, we have shown that this 
problem have simple approximate solution , which is worse than the exact one no more 
than by 
2  times. 
Suggested algorithms  have  been  tested  on the model  problem. Results  of the 
simulation  have  shown  that there  is no noticeable difference in reaction wheels angular 
momentum evolution using both the exact solution and approximate one. Hence , 
considering  much  simpler  expressions  for approximate  solution, it is reasonable to use 
one.  
21 
Acknowledgments  
Authors  are grateful  to A.A. Petrukovich  for productive  participation  in the 
discussion  of problem  statement , as well as M. Yu. Ovchinnikov  for the attention  to the 
work  and useful comments.  
This work was supported by RSF (project №14 1100621 ) 
  22 
References  
1. Ignatov A.I., Sazonov V.V. Estimation of residual accelerations on board a 
spacecraft in the mode of a single axis solar orientation // Keldysh Inst. Prepr. 
2009. № 65. P. 1–35. 
2. Bogachev A.V. et al. Unloading angular momentum for inertial actuators of a  
spacecraft in the pitch channel // J. Comput. Syst. Sci. Int. 2011. Vol. 50, № 3. 
P. 483 –490. 
3. Vorob’Eva E.A., Zubov N.E., Mikrin E.A. Desaturation method for 
accumulated actuator momentum of the spacecraft on high elliptic orbit without 
fuel consumptio n // Eng. J. Sci. Innov. 2013. № 10.  
4. Tregouet J.F. et al. Reaction wheels desaturation using magnetorquers and static 
input allocation // IEEE Trans. Control Syst. Technol. 2015. Vol. 23, № 2. P. 
525–539. 
5. Giulietti F., Quarta A.A., Tortora P. Optimal  control laws for momentum wheel 
desaturation using magnetorquers // J. Guid. Control. Dyn. 2006. Vol. 29, № 6. 
P. 1464.  
6. Chen X. et al. Optimal Combined Reaction Wheel Momentum Management for 
Earth Pointing Satellite // J. Guid. Control. Dyn. 1999. Vol.  22, № 4. P. 543 –
550. 
7. Cluster II [Electronic resource]. URL: 
http://m.esa.int/Our_Activities/Operations/Cluster_II_operations.  
8. Magnetospheric Multiscale [Electronic resource]. URL: 
https://mms.gsfc.nasa.gov/.  
9. Fliegel H.F., Gallini T.E., Swift E.R.  Global Positioning System Radiation 
Force Model for geodetic applications // J. Geophys. Res. 1992. Vol. 97, № B1. 
P. 559.  
10. Boyd S., Vandenberghe L. Convex optimization. Cambridge University Press, 
2004. 716  p. 
11. Tsiotras P. New Control Laws for the Attitude Stabilization of Rigid Bodies // 
13th IFAC Symposium on Automatic Control in Aerospace. 1994. P. 316 –321. 
12. Wie B., Barba P.M. Quaternion feedback for spacecraft large angle maneuvers. 
// J. Guid. Control. Dyn. 1985. Vol. 8, № 3. P. 360 –365. 
13. Wie B., Lu J. Feedback control logic for spacecraft eigenaxis rotations under 
slew rate and control constraints // J. Guid. Control. Dyn. 1995. Vol. 18, № 6. 
P. 1372 –1379.  
14. Barbashin E.A. Introduction to the theory of stability. Wolters Noordhoff, 
1970 . 
15. Mashtakov Y.V., Ovchinnikov M.Y., Tkachev S.S. Study of the disturbances 
effect on small satellite route tracking accuracy // Acta Astronaut. 2016. Vol. 
129. P. 22 –31. 
 
  23 
Table of Contents  
Introduction  ................................ ................................ ................................ ..... 3 
1. Problem Statement  ................................ ................................ ..................  3 
2. Solar Radiation Pressure Torque  ................................ ............................  4 
3. Angular Motion Synthesis  ................................ ................................ ...... 6 
3.1 Coordinate Systems  ................................ ................................ ...............  7 
3.2 Desaturation Using Solar Radiation Pressure Torque  ...........................  8 
3.3 Desaturation Using Gravitational Torque  ................................ ............  12 
4. Attitude Control  ................................ ................................ ....................  15 
5. Numerical Simulation  ................................ ................................ ...........  17 
Conc lusion  ................................ ................................ ................................ ..... 20 
Acknowledgments  ................................ ................................ .........................  21 
References  ................................ ................................ ................................ ..... 22 
Appendix  ................................ ................................ ................................ ....... 24 
Solutions in permissible region  ................................ ................................ . 25 
Solutions at the border of permissible r egion  ................................ ............  26 
 
 
  24 
Appendix  
Consider the following minimization problem  
 
  
,,min sin sin sin ,
.max maxf g h
      
     
     (19) 
Its solution  depends  on the values  of 
,,f g h , thus it is reasonable  to start looking for 
the solution from some simple special cases. They  all are presented  in the Table  1.  
Table  1. Solutions for some special cases  
Parameters value   
opt  
opt  
opt  Function 
minimum 
value  
0, 0, 0f g h  
 any 
max  
 sign2h  
maxh  
 any 
max  
 sign2h  
maxh  
0, 0, 0f g h  
 
 sign2g  
max  any 
maxg  
 
 sign2g  
max  any 
maxg  
0, 0, 0f g h  
 
 sign2g  
max  
 sign2h  
 maxgh  
 
 sign2g  
max  
 sign2h  
 maxgh  
0, 0, 0f g h  
 any any 
 sign2opt f    
f   
0, 0, 0f g h  
 
 sign2opt f   
max  
 sign2h  
max fh   
 
 sign2opt f   
max  
 sign2h  
max fh  
0, 0, 0f g h  
 
 sign2g  
max  
 sign2opt f   
max fg  
 
 sign2g  
max  
 sign2opt f   
max fg  
 
There  are two more  cases to be considered. The first one is trivial and correspond to 
the case when all parameters are equal to zero. In  the second  case all parameters  are 
nonzero . 
Before  we start looking  for the exact  solution , notice  that if 25 
 
 sign2.f    
then  
   
22
0
002 2 2 2sign cos sin sin ,
signsin , cos .f f h
hg f h g
gf h
gh g     
   
    

  
Hence, if  
 
 00,, 1 sig2n2max f             (20) 
function is equal to  
 
22.max f g h     
This value  is not minimal , but shows that we always  find 
,,   to ensure  negative  
value  of the function.  
Solutions  in permissible  region  
Firstly , we will look for the solution in permissible region, i.e.  
max . Then   
 


12
sin sin 0,
cos cos 0,
cos cos0,
0.gh
fg
fh

   
   
 

   (21) 
Let 
0 . Thus,   
 

 sinco
sin 0.s 0,
gh
   
Solution of this system of equations is  
 
 0 0 0 02 2 2 2(k n) , cos .( 1), , sin2kgn
g h g hh             
   
where  
,kn
 . Notice  that in this case function  (19) only depends  on sum of 
 and 

, and its minimum achieved if  
 sign2f   and equals to  
f , which is more 
than the value obtained using (20). Hence, this solution is not the optimal one. 
Let 
0.  From  (21) we obtain  
 
sin( ) sin( ) 0,
cos( ) cos( ) 0.gh
gh

   26 
Square each of these equations and combine:  
 
222 cos 0. g ghh     
On the other hand, multiply the second equation by 
 sin , the first one by 
 cos  
and combine : 
 
 sin 0.   
Hence , there  will be a solution  only if 
. gh  In this case we can obtain that  
 
2 , if
2 , ifk g h
k g h    
This is sufficient  to show  that investigated  function  equals  to zero, hence  this solution  
is also not optimal. Therefore, there is no optimal solution in permissible area.  
Solutions at the border of permissible region  
Let us look for the solution at the border of permissible are, i.e.  
max . System 
of equation for extremum then is  
 


2
1
*
*0,
sin sin 0,
cos cos 0,
cos cos 0,gh
fg
fh
  
   
   
  

    (22) 
where  
*
max  or 
*
max . Thus,  
 
 2
2
2cos cos , sin cos . 1hh
gg        
Using this expression, rewrite the fourth equation from  (22): 
 
 2
2 2 *
2cos sin co 1 cos . shhfhgg    
  
   
After  the mathematics  we obtain  
 
*
32
* 2 * 2 *1cos cos 022.g f fg fg
f g h h    

   (23) 
We can solve  this equation  directly  using  Cardano method.  
Let us prove  that there  will always  be the real root of this equation  which  
absolute  value  is less than one. Introduce notation  27 
 
2*2
2 * 2 * 2, 1 , cos2.fg fg h
hfxh
hg  
       
Thus, we can rewrite this equation:  
 
32.2,1q x q x x x      
For clarification purposes, graph  of 
qx  for some  
 is presented in Fig.  15.  
 
Fig. 15. 
qx  for 
1  
Now , the only thing  to be proved  is that 
 contained in the range of 
qx  at the 
segment  
1,1 .  Consider  
0 . Then  
()qx  have two extremum  
 
310 0, .3 54qq     
0x
 is local  minima , and 
13x  is local maxima . It is obvious that range of  
qx  
is 
 
3
1 11 1 1 1 1min 0, 1 , max , 1 , 0 32 2 54 2 2Im
1 1 1 1min 0,,1 ,1
,1 , 1 , max 1 , 322122xqx     
                              
  
    
As we can see, this expression can be simplified  
 

1 111Im min 1 ,1 ,2,200
xqx   
   
 . 
Using  similar  technique  for the case 
0  we obtain   
28 
 

11,11Im 1 max 1 ,0 0,22xqx   
         
 .  
Take  into account  that  
 
2*2
221hh
fg
 . 
Thus , we just have to verify inequations  
 
2*2
2
2*2
21 1, 0,
1 1, 0,hh
fg
hh
fg  
  

   

      
that are obviously  satisfied . Thus , we have  shown  that cubic  equation  always  have  at 
least one real root that belongs  to 
[ 1,1] . We have  to notice  that for every  real root from  
this segment  there  are four solutions  (at the interval  
[0,2 ) ) of the system  (22).  
 MathNet.Ru
All Russian mathematical portal
Yu. F. Golubev, V. V. Koryanov, Sixlegged robot overcoming a not wide water obstacle
by a raft, Keldysh Institute preprints , 2017, 015
DOI: 10.20948/prepr201715
Use of the allRussian mathematical portal MathNet.Ru imp lies that you have read and agreed to these terms of use
http://www.mathnet.ru/eng/agreement
Download details:
IP: 79.139.215.77
December 17, 2023, 00:51:09ИПМ им.М.В.Келдыша РАН   •  Электронная библиотека
Препринты ИПМ   •  Препринт № 15 за 2017 г.
ISSN 20712898 (Print)
ISSN 20712901 (Online)
Голубев Ю.Ф. , Корянов В.В.
Преодоление шестиногим
роботом неширокой водной
преграды на плоту
Рекомендуемая форма библиографической ссылки:   Голубев Ю.Ф., Корянов В.В.
Преодоление шестиногим роботом неширокой водной преграды на плоту // Препринты ИПМ
им. М.В.Келдыша. 2017. №  15. 16  с. doi:10.20948/prepr201715  
URL: http://library.keldysh.ru/preprint.asp?id=201715О р д е н а Л е н и н а
ИНСТИТУТ ПРИКЛАДНОЙ МАТЕМАТИКИ
имени М.В.Келдыша
Р о с с и й с к о й а к а д е м и и н а у к
Ю.Ф. Голубев, В.В. Корянов
Преодоление шестиногим роботом
неширокой водной преграды на плоту
Москва −2017УДК 531.38
Голубев Ю.Ф., Корянов В.В. Преодоление шестиногим роботом
неширокой водной преграды на плоту
Дано сокращенное описание математической модели воздейст вия воды на
прямоугольный плот при нестационарном движении. Построен о движение ро
бота, позволяющее осуществить его переправу на другой бере г водной прегра
ды в простейшем случае, когда робот сообщает плоту начальны й толчок от
берега. Предложенный алгоритм отработан средствами компь ютерного моде
лирования. Представлены результаты расчетов, свидетельс твующие о рабо
тоспособности алгоритма при наличии информации о движении , достаточной
для целей управления.
Ключевые слова: плот, архимедова сила, сопротивление воды, вязкое
трение, шестиногий робот, переправа, водная преграда.
Yury Filippovich Golubev, Victor Vladimirovich Koryanov. Sixlegged
robot overcoming a not wide water obstacle by a raft
The short description is given of the mathematical model of t he inﬂuence of
water for a rectangular raft during its unsteady motion. Mot ion of the robot is
formed with the aim of crossing from one side onto the other si de of the water
obstacle in the simplest case, when the robot initially push es the raft from the
shore. The proposed algorithm was worked out by means of comp uter simulation.
The results of calculations showing the performance of the a lgorithm in the
presence of a suﬃcient locomotion information are presente d.
Key words: raft, buoyancy force, water resistance, viscous forces, si xlegged
robot, crossing, water obstacle.
Работа выполнена при финансовой поддержке Российского фон да фунда
ментальных исследований (РФФИ: 160100131).
Содержание
Введение . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 3
1. Уравнения движения плота на воде . . . . . . . . . . . . . . . . 4
2. Механическая система . . . . . . . . . . . . . . . . . . . . . . . . 7
3. Переправа инсектоморфного робота на плоту . . . . . . . . . . . 8
4. Компьютерное моделирование . . . . . . . . . . . . . . . . . . . 12
Список литературы . . . . . . . . . . . . . . . . . . . . . . . . . . . . 153
Введение
Автономный мобильный робот для передвижения по заранее неп одготов
ленной пересеченной местности может активно использовать местные пред
меты как средство для выполнения поставленных перед ним зад ач [1–3]. Для
компьютерного исследования соответствующих алгоритмов у правления необ
ходимо иметь математические модели силового взаимодейств ия робота с эле
ментами среды, а также и элементов среды между собой, если эт и элементы
могут совершать самостоятельное движение. Например, в раб отах [4,5] при
моделировании движения робота на свободно катающихся шара х использо
вались модель сухого трения при взаимодействии стоп ног роб ота с шарами
и модель трения качения шаров по плоскости.
Если наземный автономный мобильный робот не имеет плавучес ти и не
приспособлен к функционированию в водной среде, то подходя щим способом
преодоления водной преграды, через которую он не может пере шагнуть, бу
дет применение какогонибудь плавучего предмета подходящ его размера и
обладающего определенной устойчивостью на водной поверхн ости. Одним из
таких естественных предметов может служить прямоугольный плот, имею
щий достаточную горизонтальную поверхность. В данной рабо те использует
ся математическая модель сил сопротивления воды движению п лота, пред
ставленная в [6], которая основывается на гипотезе о “струй ном” характере
воздействия воды на отдельные элементы плота. Другими слов ами, поверх
ность плота разбивается на небольшие элементы и предполага ется, что на
каждый такой элемент набегает струя воды со скоростью, обра тной скорости
этого элемента, забирает от него соответствующую часть кол ичества движе
ния, а также воздействует на него силой вязкого трения. Эта г ипотеза не
противоречит повсеместно эксплуатируемой модели сопроти вления воды для
поступательного движения, но позволяет учесть также произ вольное неста
ционарное движение плота относительно его центра масс.
Предлагаемый препринт развивает результаты работ [1,3,7] для возмож
ности преодоления усложненной полосы препятствий. Влияни е сил сопротив
ления воды [8] на динамику системы в процессе управления хор ошо прояв
ляется на примере следующей локомоционной задачи. Первона чально робот
идет по горизонтальной поверхности. На его пути расположен а не очень ши
рокая, но достаточно протяженная водная преграда с перпенд икулярными
к направлению движения берегами. На воде у ближайшего к робо ту берега
свободно лежит плот. Робот должен подойти к плоту, перейти н а него. Затем,
с достаточной силой оттолкнувшись от берега, переплыть на п лоту к друго
му берегу, одновременно переместившись к соответствующем у краю плота,4
и перейти на другой берег. При выполнении этих маневров возн икают коле
бания плота относительно воды. Если к тому же робот оказывае тся в силу
разных причин не на осевой линии плота, то при движении робот а по пло
ту и особенно при отталкивании от берега возникает закрутка плота вокруг
вертикальной оси, что осложняет задачу управления. В стать е представлен
конструктивно построенный алгоритм решения сформулирова нной задачи.
Этот алгоритм был отработан на программном комплексе "Унив ерсальный
механизм" [9] с учетом полной динамики системы в целом. Пред ставленные
результаты компьютерного моделирования свидетельствуют о принципиаль
ной реализуемости предложенного алгоритма решения постав ленной задачи.
1. Уравнения движения плота на воде
Как и в работе [8], предполагается, что однородный плот в фор ме пря
моугольного параллелепипеда находится на поверхности вод ы под действием
нагрузки F, силового момента Mотносительно центра масс Cpплота и ар
химедовой силы. Размеры плота: 2a−длина,2b−ширина, 2d−толщина.
Будем считать, что декартов репер Cpe′
1e′
2e′
3соответствует главным цен
тральным осям инерции плота, а его главные моменты инерции р авныA,
B,Cсоответственно. Пусть Oe1e2e3−неподвижный декартов репер, при
чем вектор e3направлен вертикально вверх и угол между ним и вектором e′
3
оставляет всю нижнюю часть плота под водой. Примем, что
ei=3/summationdisplay
j=1aije′
j, i= 1,2,3,
где коэффициенты ( aij) образуют ортогональную матрицу. Динамические
уравнения плота имеют вид [10]
Mp¨rc=γ(ζ+d)4abe3+F+R,
A˙p+(C−B)qr=−a32s1+Mx+Nx,
B˙q+(A−C)pr=a31s2+My+Ny,
C˙r+(B−A)pq=−γ4a31a32ab
3a33(a2−b2)+Mz+Nz,
˙a31=a33q−a32r,
˙a32=a31r−a33p,
˙a33=a32p−a31q,(1.1)
гдеMp−масса плота, rc=ξe1+ηe2+ζe3−смещение центра масс плота
в репере Oe1e2e3,p,q,r−проекции вектора угловой скорости плота на оси5
репераCpe′
1e′
2e′
3, величины
s1=γab

2
3

2+a2
32
a233
b2+a2
31
a233a2
+1
2(ζ2−d2)

,
s2=γab

2
3

2+a2
31
a2
33
a2+a2
32
a2
33b2
+1
2(ζ2−d2)

(1.2)
выражают действие момента архимедовых сил на плот, R−сила сопротив
ления воды, N=Nxe′
1+Nye′
2+Nze′
3−момент сил сопротивления воды
относительно центра масс плота. В общем случае, чтобы замкн уть систему
(1.1), к ней следует добавить еще шесть кинематических урав нений вида
˙a11=a13q−a12r,˙a21=a23q−a22r,
˙a12=a11r−a13p,˙a22=a21r−a23p,
˙a13=a12p−a11q,˙a23=a22p−a21q(1.3)
или использовать соотношения [6]
a11=
1−a2
31
1+a33
, a12=−a31a32
1+a33, a 13=−a31,
a21=−a31a32
1+a33, a 22=
1−a2
32
1+a33
, a23=−a32,
a31, a 32, a 33,(1.4)
которые в рассматриваемом диапазоне угловых отклонений пл ота (плот не
переворачивается: a33>0) не имеют вырождений.
Для расчета сил и моментов сопротивления воды движению плот а пред
полагается [6], что удельная сила сопротивления воды Rsp, действующая на
каждый элемент погруженной в воду части плота, выражается ф ормулой
Rsp=−ævτ−æ1ν|vν|vν=−æv−ν(æ1|vν|−æ)vν, (1.5)
гдеv−скорость характерной точки этого элемента относительно во ды,ν
−единичный вектор внешней нормали к поверхности плота, vτ−составля
ющая скорости, касательная к элементу плота, vν=ν·v−составляющая
скорости, перпендикулярная к элементу, æ≥0иæ1≥0−соответству
ющие коэффициенты пропорциональности, причем по имеющимс я экспери
ментальным данным для воды æ1≫æ. Коэффициенты æиæ1считаются
одинаковыми для всех элементов плота.
Формула (1.5) дает приближенное, но качественно верное пре дставление
о силах сопротивления воды при движении элементарной плоск ой площад
ки плота. Из нее, в частности, следует, что для значений 0<|vν|<æ/æ1
множитель при νв ней будет пренебрежимо мал.6
Поскольку в норме верхняя часть плота находится над водой, б удем счи
тать, что силы сопротивления воды приложены только к днищу п лота и к
его боковым поверхностям.
Для элементов днища плота получим
Rsp=−æv+e′
3(æ1|vz|−æ)vz, (1.6)
т.к. для них ν=−e′
3иvz=e′
3·v. При этом характерная точка элементов
днища плота имеет радиусвектор ρd= (x,y,−d).
Для боковых поверхностей плота, идущих вдоль вектора e′
1, получим
ν=

e′
2приvy≥0,
−e′
2приvy<0.(1.7)
Тогда элементарная сила сопротивления воды выражается фор мулой
Rsp=−æ1e′
2|vy|vy, (1.8)
а радиусвекторы ρaсоответствующих точек боковой поверхности имеют ко
ординаты
ρa=

(x,b,z)приvy≥0,
(x,−b,z)приvy<0.(1.9)
В формуле (1.8) принято, что при воздействии сил сопротивле ния воды на
боковую поверхность плота членом ævτформулы (1.5) можно пренебречь
ввиду малости погруженных в воду частей боковых поверхност ей.
Аналогично для боковых поверхностей плота, идущих вдоль ве ктораe′
2,
получим
ν=

e′
1приvx≥0,
−e′
1приvx<0,(1.10)
а элементарная сила сопротивления воды выражается формуло й
Rsp=−æ1e′
1|vx|vx. (1.11)
Радиусвекторы ρbсоответствующих точек боковой поверхности имеют вид
ρb=

(a,y,z)приvy≥0,
(−a,y,z)приvy<0.(1.12)
Конечные формулы для расчета суммарных силы Rи момента N, дей
ствующих на плот со стороны воды, получаются путем интегрир ования эле
ментарных сил и их моментов по поверхности плота, погруженн ой в воду.
Эти формулы содержатся в работе [6], и по причине их громоздк ости здесь
не приводятся.7
В работе [8] по первому приближению исследована устойчивос ть стацио
нарных движений, возникающих изза действия простейших ак тивных сил.
При условии, что под действием указанных сил плот остается н а плаву, уста
новлены следующие свойства движения.
1. Положение равновесия, возникающее под действием постоя нной верти
кальной силы, асимптотически устойчиво.
2. Если компоненты силы постоянны в осях, связанных с плотом , то воз
никающее при этом стационарное движение неустойчиво. Друг ими словами,
для плота с мотором обязательно требуется активное управле ние движением.
3. Если компоненты силы постоянны в неподвижных осях (плот н а букси
ре), то движение будет устойчивым, когда точка приложения с илы смещена
от центра плота в сторону действия силы (трос от буксира прив язан к носовой
части плота). В противоположном случае движение будет неус тойчивым.
2. Механическая система
Конструкция робота совпадает с принятой в [7]. Твердый корп ус робота
имеет форму прямоугольного параллелепипеда массы m0,ar−его боковая
сторона (длина), br−передний или задний край (ширина), cr−высота парал
лелепипеда. По бокам корпуса симметрично прикреплены шест ь одинаковых
инсектоморфных ног. Точки прикрепления ног с каждой сторон ы корпуса
расположены на одинаковом расстоянии друг от друга. Отдель ная нога со
стоит из двух твердых звеньев: бедра длины l1, массыm1и голени длины l2,
массыm2. Допускается касание роботом поверхности опоры и окружающ их
предметов только стопами, ноги робота не должны иметь взаим ных пересе
чений во все время движения.
Предполагается, что роботу известны: собственное положен ие относитель
но препятствий, несущая способность участков поверхности , выбираемых для
опоры, шарнирные углы, скорости перемещения как самого роб ота, так и
объектов, выбираемых для опоры. Программные значения шарн ирных углов
генерируются алгоритмом управления с учетом информации о р еализовав
шейся конфигурации робота при его движении. Реализация про граммных
значений шарнирных углов осуществляется так же, как в [5].
Траектории переносов ног формируются в виде плоских шаговы х цик
лов [11], адаптируемых в зависимости от поверхностей препя тствий, скорости
движения робота, предписанных следовых точек. Движения но г, соответству
ющие шаговым циклам, сглаживаются, чтобы сохранить непрер ывность как
самого движения, так и его скорости [7].
Наличия силового момента в опорных точках не предполагаетс я. Реакции8
в них должны удовлетворять условию малой деформации опорно й поверхно
сти и должны принадлежать конусам кулоновского трения с зад анным коэф
фициентом [7]. Если требуемая реакция выходит за пределы ко нуса трения,
то возникает проскальзывание. Коэффициент трения предпол агается равным
единице. Программное движение создается в виде последоват ельности собы
тий, в начале каждого из которых в неподвижном репере Oe1e2e3определя
ются траектории перемещений стоп и точек их крепления к корп усу.
Плот представляет собой прямоугольный параллелепипед, сп особный сво
бодно перемещаться на поверхности воды. Предполагается, ч то плот одно
роден и никак не зафиксирован относительно берега при перех оде на него
робота с берега и обратном переходе робота на берег. Взаимод ействие пло
та с берегом предполагается вязкоупругим с существенным п реобладанием
вязкой компоненты.
3. Переправа инсектоморфного робота на плоту
Решаемая задача формулируется следующим образом. Робот пр ямолиней
но идет по горизонтальной плоскости. На его пути имеется вод ная преграда
со спокойной водой, ограниченная двумя берегами, находящи мися в одном
уровне и перпендикулярными к направлению движения робота. Около бли
жайшего к роботу берега на воде покоится плот, касаясь берег а своей узкой
стороной. Робот должен подойти к берегу, перебраться на пло т и, оттолкнув
шись от берега с достаточной силой, доплыть на плоту до проти воположного
берега водной преграды. Затем он должен перебраться на друг ой берег и
продолжить движение. Переправа происходит в соответствии со следующи
ми этапами.
Этап 3.1. Робот приближается к берегу маршевой походкой трешки. По
дойдя к берегу, он переходит на походку галоп.
Этап 3.2. В режиме походки галоп робот переходит в конфигурацию, при
которой передние и средние ноги находятся на плоту с положен ием корпуса,
обеспечивающим достаточный запас статической устойчивос ти для переноса
задних ног, которые пока остаются на берегу (рис.3.1,a).
Этап 3.3. Стоя на плоту на передних и средних ногах, робот отталкивает ся
от берега, придавая плоту вместе с роботом начальную скорос тьv0, доста
точную для достижения другого берега (рис.3.1,b). Задние н оги после толчка
переносятся на плот. Скорость v0в зависимости от расстояния Sмежду бе
регами можно оценить по приближенной формуле
v0=vǫexp
æ2(S−σ)
m+M
,9
a
 b
Рис. 3.1: а) Позиция перед отталкиванием от берега, b) оттал кивание от бе
рега задними ногами
гдеvǫ−максимально допустимая малая скорость причаливания плота к дру
гому берегу, σ−длина плота в направлении на другой берег, M−масса
плота,m−масса робота, æ2−коэффициент квадратичного по скорости со
противления воды с учетом формы плота при поступательном дв ижении [6].
Этап 3.4. После толчка плот плывет к противоположному берегу, а робот
идет по плоту к краю, которым плот должен причалить после пер еправы
(рис.3.2,a).
a
 b
Рис. 3.2: а) Переправа на другой берег, b) причаливание
Движение плота на воде является возмущенным в связи с ошибка ми ис
полнения при маневрах и изза появления дополнительной наг рузки в виде
робота и его перемещений на плоту. Взаимодействие плота с ро ботом при
моделировании осуществляется лишь силами, возникающими п ри контакте
стоп ног робота с поверхностью плота. В частности, в процесс е движения
плот может поворачиваться вокруг вертикальной оси изза то го, что центр
плота не принадлежал основанию суммарной силы при толчке от берега. По
ка плот плывет, робот идет в системе координат, связанной с п лотом, чтобы
не потерять опору изза вращения плота.10
Этап 3.5. В зависимости от ширины водной преграды плот может при
близиться к берегу, имея некоторый угол поворота вокруг вер тикальной оси
(рис.3.2,b). Величину угла поворота можно оценить по прибл иженной фор
муле
ϕ=J
æ3ln

1+æ3(M+m)
Jæ2h
exp
æ2(S−σ)
m+M
−1


, (3.1)
гдеJ−эффективный момент инерции плота вместе с роботом вокруг ве рти
кальной оси, æ3−коэффициент сопротивления воды с учетом формы плота
при вращении вокруг вертикальной оси [6], h−расстояние от центра плота
до линии действия суммарного импульса сил при отталкивании от берега.
При малой величине отношения æ3/Jформула (3.1) упрощается:
ϕ=(M+m)
æ2h
exp
æ2(S−σ)
m+M
−1
.
Робот должен сориентировать свою конфигурацию так, чтобы е го передняя
часть была напротив той стороны плота, которая составляет н аименьший
угол с берегом при причаливании. В частности, если угол пово рота плота
оказывается меньше, чем π/4, то плот причалит к берегу так, что узкая сто
рона, противоположная той, которой он касался берега в нача ле движения,
составит наименьший угол с другим берегом. Тогда роботу не п ридется ма
неврировать на плоту при причаливании. Единственное, что м ожет потребо
ваться−это подойти поближе боком к угловой точке плота, которая кос нется
берега.
Этап 3.6. Для того чтобы обеспечить надежный переход с плота на берег,
необходимо добиться того, чтобы вся сторона плота, напроти в которой сто
ит робот, касалась берега или, по крайней мере, отстояла от н его ненамного.
С этой целью робот приседает, чтобы максимально обеспечить возможность
дотягивания до берега, переносит на берег передние ноги и, п рижимая их
стопы к берегу, подтягивает плот, поворачивая его так, чтоб ы приблизить
к берегу всю соответствующую сторону плота (рис.3.3,a). Ле вая стопа (от
носительно корпуса по ходу движения) подтягивается к корпу су, оставаясь
неподвижной на берегу, а правая нога, как и все остальные ног и, зафиксиро
вана относительно корпуса. При этом стопы передних ног изз а значитель
ного горизонтального усилия могут проскальзывать относит ельно берега, а
угловая точка плота, первоначально бывшая в соприкосновен ии с берегом,
может отойти от берега (рис.3.4). Если этот отход оказался з начительным,
то подтягивание к берегу следует продолжить. На рис.3.4 тон кими линиями
показаны абсолютные траектории стоп передних ног.11
a
 b
Рис. 3.3: а) Подтягивание плота к берегу, b) переход на друго й берег
Рис. 3.4: Проскальзывание передних ног при подтягивании пл ота к берегу
Видно, что, когда стопы стоят на плоту, имеется их некоторое колеба
ние изза возмущенного движения плота. Когда стопы стоят на берегу, то
след левой стопы является монотонным, а след правой стопы не монотонен,
что отражает движение плота относительно берега при подтяг ивании пло
та. Чтобы уменьшить проскальзывание, прижатие передних ст оп к берегу
усиливается в зависимости от смещения соответствующей сто пы от исходной
точки ее опоры. Если смещение стопы при проскальзывании ока залось недо
пустимо большим (теряется контакт с берегом), то стопа внов ь переносится
в исходную точку опоры, и подтягивание продолжается. Возмо жен вариант,
когда плот подтягивается к берегу обеими ногами. Такой вари ант предпочти
тельнее, когда требуется уменьшить нагрузку на ноги. При пр оскальзывании
может возникнуть значительный горизонтальный перекос кор пуса робота от
носительно поверхности плота.
Этап 3.7. Как только соответствующая сторона плота приблизится к бе12
регу на достаточно малое расстояние, робот незамедлительн о, несмотря на
возможный перекос корпуса относительно плота, поднимает к орпус до мар
шевой высоты и осуществляет переход на другой берег, т.к. пл от находится в
постоянном движении и изза этого могут нарушиться условия дотягивания
ног до возможных точек опоры на берегу (рис.3.3,b).
4. Компьютерное моделирование
Компьютерное моделирование осуществлялось аналогично то му, как это
было сделано в [1, 5]. Управление роботом и модель движения п лота на во
де реализованы в виде DLLбиблиотек, подключенных к програ ммному ком
плексу “Универсальный механизм” [9]. Тем самым создается в иртуальная сре
да обитания робота. Неподвижная опорная поверхность в ней п редставлена
горизонтальной плоскостью с расположенной на ней водной пр еградой. От
дельные объекты, такие плот и робот, взаимодействуют с опор ной поверхно
стью и друг с другом согласно модели трения, основанной на вя зкоупругом
взаимодействии тел в точках контакта. Применяется также мо дель сопротив
ления воды движению плота из работы [6]. Управление движени ем реализует
ся посредством компьютерного моделирования работы электр омеханических
приводов шарнирных углов. Выполнение требуемого движения робота осу
ществляется, как и в реальности, лишь путем подачи значения управляющего
электрического напряжения на модели электромеханических приводов. Со
отношение размеров корпуса, звеньев ног, размеров плота и ш ирины водной
преграды имеет вид
ar:br:cr:l1:l2:a:b:d:S= 1 : 0.5 : 0.1 : 0.5 : 0.33 : 1.5 : 1 : 0.1 : 5.2.
Представление о движении робота и других элементов виртуал ьной сре
ды возникает в результате численного интегрирования диффе ренциальных
уравнений полной трехмерной динамики робота вместе с входя щими в систе
му окружающими предметами. Поскольку в точках контакта объ ектов пред
полагается силовое взаимодействие, соответствующая меха ническая система
имеет 30 степеней свободы. Уравнения динамики синтезируют ся автоматиче
ски [9]. Результаты компьютерного моделирования отобража ются на экране
монитора в виде движения геометрических образов исследуем ых материаль
ных объектов.
На рис. 4.1 представлены графики изменения по времени гориз онтальных
координат ξ,ηсередины плота, причем ось ηориентирована против направле
ния движения робота до переправы, координат центра корпуса ηb, координат13
III III IV V VI
ξ
η
ηb
ηrξr
ηlξl
ϕbϕ
543210123
84.78t, с
ξ
η
ηbηrξrηlξlϕbϕ
Рис. 4.1: Переправа на плоту, зависимость основных парамет ров от времени
ξr,ηrпередней правой ноги, координат ξl,ηlпередней левой ноги, угла ϕbвра
щения корпуса относительно вертикали, отсчитываемого от о сиξи углаϕ
вращения плота вокруг вертикали, отсчитываемого от оси η. Все координаты
приведены в метрах, а углы −в радианах.
Прямые, параллельные оси ординат и обозначенные римскими ц ифрами,
выделяют этапы и стадии движения робота.
Линия I соответствует окончанию этапа 6.1 и началу этапа 6.2 . Линия II
соответствует окончанию этапа 6.2 и началу этапа 6.3, на кот ором робот от
талкивается вместе с плотом от берега. Линия III (начало эта па 6.4) отмечает
окончание толчка и начало переправы. Между линиями III и IV з аметно вра
щение плота вместе с роботом. Между линиями IV и V выполняетс я этап 6.5,
т.е. робот подходит к тому краю плота, который ближе всего к б ерегу. От
линии V до линии VI выполняется этап 6.6, на котором плот подт ягивается
к берегу. Наконец, после линии VI робот заканчивает перепра ву на другой
берег.
На рис. 4.2 приведен фрагмент компьютерной 3D анимации полу ченного
решения в реальном масштабе времени. По нему можно наглядно и детально
представить себе, как происходит переправа шестиногого ав тономного робота
с одного на другой берег неширокой, но протяженной водной пр еграды.14
Рис. 4.2: Анимация движения. В случае сложностей с проигрыв анием ролик
можно скачать отдельно по адресу
http://keldysh.ru/attachment/2017korianov/hexa2017 .mp4(5.47 Мб)
Заключение
Представлена и реализована в программном комплексе "Униве рсальный
механизм" [9] математическая модель нестационарной прост ранственной ди
намики плота под действием активных сил, архимедовой силы и сил сопро
тивления воды движению [6,8]. В разных точках плота его скор ость относи
тельно воды может быть различной не только по величине, но и п о направле
нию. При этом сила сопротивления воды имеет слагаемое, проп орциональное
квадрату величины скорости и направленное противоположно вектору скоро
сти. Вычисление правых частей этой модели осложнено изза н аличия углов
и ребер на поверхности плота.
Представлено решение новой задачи о преодолении инсектомо рфным ро
ботом водной преграды с применением плота. Синтезировано у стойчивое дви
жение системы при переходе робота с берега на плот, перемеще нии робота на
плоту к другому берегу, причаливании плота с роботом на борт у к берегу,
переходе робота на другой берег. Выполнение этих маневров з атруднено по
движностью плота на воде, возможностью проскальзывания но г при опоре
на берег при причаливании плота, опасностью взаимного пере сечения ног.
Предложенные алгоритмы формирования движения робота при п реодоле
нии водной преграды были отработаны средствами компьютерн ого моделиро
вания в программной среде, реализующей расчет взаимодейст вия трехмерной
полной динамической модели механической системы, состоящ ей из робота,
плота и водной поверхности с учетом сил сопротивления воды, сил кулонов15
ского трения, моделей электромеханических приводов в шарн ирах робота.
Показано, что рассчитываемое по ходу маневрирования прогр аммное дви
жение, обеспечивающее требуемое движение системы в целом, реализуемо
при коэффициенте трения, не превышающем 1. В данной работе э то значе
ние коэффициента трения считается предельным для трения по коя стопы об
опорную поверхность.
Стабилизация движения робота в окрестности программного д вижения по
строена по принципу кусочноформируемой с дискретностью ш ага интегри
рования обратной связи. Обратная связь рассчитывается по р ассогласовани
ям реальных и программных шарнирных углов с требованием мин имальных
значений угловых скоростей. Возникающие в шарнирных углах переходные
процессы не разрушают требуемое программное движение корп уса робота на
всех этапах движения системы.
Список литературы
1.Голубев Ю.Ф., Корянов В.В. Управление инсектоморфным роботом при
движении по вертикальному углу и по горизонтальному брусу / / Изв.
РАН. ТиСУ. 2006. № 1. С. 149157; Golubev Yu.F., Koryanov V.V. A
Control for an Insectomorphic Robot in Motion along a Vertic al Corner and a
Horizontal Beam. Pleiades Publishing, Ltd., Journal of Com puter and System
Sciences International. 2006. Vol. 45, No. 1. Pp. 144152.
2.Golubev Yu.F., Koryanov V.V. Motion design for an insectomorphic robot
on unstable obstacles // Proc. 11th Intern. Conf. CLAWAR2 008. Coimbra,
Portugal: World Scientiﬁc Publishing Co. Pte. Ltd., 2008. P . 654661.
3.Голубев Ю.Ф., Корянов В.В. Управление инсектоморфным роботом при
залезании на вершину вертикального угла и при движении по пр истав
ной лестнице // Изв. РАН. ТиСУ. 2008. № 1. С. 148157; Golubev Yu.F.,
Koryanov V.V. A Control for an Insectomorphic Robot in Climbing to the
Top of a Vertical Corner and in Moving on a Step Ladder. Pleiad es Publishing,
Ltd., Journal of Computer and System Sciences Internationa l. 2008. Vol. 47,
No. 1. Pp. 139148.
4.Голубев Ю.Ф., Корянов В.В. Движение инсектоморфного робота с ис
пользованием незакрепленных шаров//Препринты ИПМ им. М.В . Кел
дыша. 2015. № 50. 24с.
URL: http://library.keldysh.ru/preprint.asp?id=2015 5016
5.Голубев Ю. Ф., Корянов В. В. Маневрирование инсектоморфного робота
на свободно катающихся шарах. Изв. РАН. ТиСУ. 2016. №1. С. 13 4146.
Golubev Yu. F., Koryanov V. V. Insectomorphic Robot Maneuve ring on Freely
Rolling Balls. Pleiades Publishing, Ltd., Journal of Compu ter and Systems
Sciences International. 2016. Vol. 55, No. 1. Pp. 125137.
6.Голубев Ю.Ф. Нестационарная модель сил воздействия воды на плоский
прямоугольный плот//Препринты ИПМ им. М.В. Келдыша. 2016. № 53.
40с. doi:10.20948/prepr201653
URL: http://library.keldysh.ru/preprint.asp?id=2016 53
7.Голубев Ю.Ф., Корянов В.В. Построение движений инсектоморфного ро
бота, преодолевающего комбинацию препятствий с помощью си л куло
новского трения // Изв. РАН. ТиСУ. 2005. № 3. С. 143155; Golubev Yu.F.,
Koryanov V.V. Construction of Motions of an Insectomorphic Robot that
Overcomes a Combination of Obstacles with the Help of Coulom b Friction
Forces. Pleiades Publishing, Ltd., Journal of Computer and System Sciences
International. 2005. Vol. 44, No. 3. Pp. 460472.
8.Голубев Ю.Ф. Нестационарная модель возмущенной динамики прямо
угольного плота на спокойной воде//Препринты ИПМ им. М.В. К елды
ша. 2016. № 54. 18с. doi:10.20948/prepr201654
URL: http://library.keldysh.ru/preprint.asp?id=2016 54
9. Универсальный механизм. Моделирование динамики механи ческих си
стем. URL: http://www.umlab.ru (дата обращения: 10.03.2017).
10.Голубев Ю.Ф. Основы теоретической механики: учебник. 2е изд., пере
раб. и доп. М.: Издво МГУ, 2000. 719 с.
11.Охоцимский Д.Е., Голубев Ю.Ф. Механика и управление движением ав
томатического шагающего аппарата. М.: Наука. Глав. ред. фи з.мат. лит.,
1984. 312 с.See discussions, st ats, and author pr ofiles f or this public ation at : https://www .researchgate.ne t/public ation/257552255
Spacecraft attitude determination and control: Quaternion based method
Article    in  Annual R eviews in Contr ol · Dec ember 2012
DOI: 10.1016/ j.arcontr ol.2012.09.003
CITATIONS
113READS
3,476
1 author:
Yaguang Y ang
NASA
110 PUBLICA TIONS    1,129  CITATIONS    
SEE PROFILE
All c ontent f ollo wing this p age was uplo aded b y Yaguang Y ang  on 19 F ebruar y 2021.
The user has r equest ed enhanc ement of the do wnlo aded file.This article appeared in a journal published by Elsevier. The attached
copy is furnished to the author for internal noncommercial research
and education use, including for instruction at the authors institution
and sharing with colleagues.
Other uses, including reproduction and distribution, or selling or
licensing copies, or posting to personal, institutional or third party
websites are prohibited.
In most cases authors are permitted to post their version of the
article (e.g. in Word or Tex form) to their personal website or
institutional repository. Authors requiring further information
regarding Elsevier’s archiving and manuscript policies are
encouraged to visit:
http://www.elsevier.com/copyright
Author's personal copy
Spacecraft attitude determination and control: Quaternion based method
Y. Yang⇑
The Ofﬁce of Research, US Nuclear Regulatory Commission, 21 Church Street, Rockville, MD 20850, United States
article info
Article history:
Received 25 December 2011Accepted 27 December 2011Available online 18 October 2012
Keywords:
Reduced quaternion modelSpacecraftAttitude determination
Controlabstract
In this review, we discuss in detail the quaternion based methods for spacecraft attitude determination
and control. We summarize some recent developments on this research area. We start with some brief
but complete discussions on the theory of quaternion which will be sufﬁcient for the discussion in theremaining part of the review. We review the progress of quaternion based attitude determination which
has been well recognized and achieved great success by using Newton’s method. We also present a dif
ferent and more elegant treatment on an analytic solution to Wahba’s problem. For quaternion basedcontrol system design, we focus on some recently developed reduced quaternion models which use onlyvector component of the quaternion in the state space models. We discuss some new design method that
has the following features: (a) it has an analytic solution of LQR, and (b) the designed system reduces dis
turbance effect, global stabilizes the nonlinear spacecraft system, and is robust to the modeling uncertainty. The presentation of the review is selfcomplete. It includes all the background information that
is needed to understand the development involving the system modeling, the attitude determination,
and the attitude control system design methods.
Published by Elsevier Ltd.
1. Introduction
Spacecraft attitude determination and control is an important
part for a spacecraft to achieve its designed mission. As for today,
many spacecrafts have been successfully launched, and most of
them have performed well as they were designed. Many researchpapers have been published to address the attitude determination
and control design problems. Several text books are available for
students to learn the technology and for engineers to use as refer
ences. The most popular spacecraft models for attitude determina
tion algorithms and control design methods are the Euler angle
models and the quaternion models. The Euler angle models have
been proved very efﬁcient because the linearized Eular angle mod
els are controllable, and all standard linear control system design
methods are directly applicable. The drawbacks related to the Euler
angle methods are: (a) the designs based on linearized models may
not globally stabilize the original nonlinear spacecraft, i.e., the de
sign may not work when the attitude of the spacecraft is far away
from the point where the linearization is performed; (b) the mod
els depend on the rotational sequences; and (c) for any rotational
sequence, there is a singular point where the model is not applica
ble. On the other hand, for quaternion models, people have found
controllers that can globally stabilize nonlinear spacecraft systems,
the models do not depend on rotational sequences, and there is no
singular point. The main problem with the quaternion model basedcontrol system design is that the linearized quaternion model is
not controllable, therefore most published design methods heavily
rely on Lyapunov functions for the nonlinear system, and there is
not a systematic way to get the Lyapunov functions. Moreover,
the Lyapunov function based designs focus on the closedloop sys
tem stability but pay little attention to the closedloop system performance. Recently, in a series of papers, we proposed some
reduced quaternion models which lead to some controllable linear
ized spacecraft models. Therefore, all standard linear system the
ory can be directly applied to the analysis and design of the
spacecraft control systems. We show that the designed control sys
tem is not only optimal for the linearized system, but also globally
stabilize the original nonlinear system. Clearly, the reduced quater
nion models do not depend on rotational sequences. Due to the
special structure of the linearized spacecraft model, some most
important design methods, such as LQR design and robust pole
assignment design are very simple, enjoy the analytical solution,
have direct connection to the performance indexes such as settling
time, rising time, and percentage of overshoot. All these features
are attractive for high quality control system designs.
Our main purpose in this review is to discuss the details of these
recently developed, purely quaternion based approaches for the
spacecraft attitude determination and control. We start by discuss
ing all the necessary materials needed for the quaternion based
approaches to the spacecraft attitude determination and control.
We spend some effort to describe the rotational sequences and
the quaternion which provide readers some necessary background
that will be used in the following sections. We then introduce the
13675788/$  see front matter Published by Elsevier Ltd.
http://dx.doi.org/10.1016/j.arcontrol.2012.09.003⇑Tel.: +1 301 251 7480; fax: +1 301 330 8449.
Email address: yaguang.yang@verizon.netAnnual Reviews in Control 36 (2012) 198–219
Contents lists available at SciVerse ScienceDirect
Annual Reviews in Control
journal homepage: www.elsevi er.com/locate/arcontrol
Author's personal copy
controllable spacecraft models for some mostly desired attitudes
for spacecrafts, the inertial pointing attitude and the nadir pointing
attitude. To construct a feedback control system, we need to ex
tract quaternion information from vector measurements; we
therefore discuss the quaternion based attitude determination
method. With all these preparations, we will discuss the control
system design methods based on quaternion models and quater
nion attitude information. We will discuss some most important
design methods, such as LQR design and robust pole assignment
design for the quaternion based models, using the quaternion atti
tude and the angular rate information as the feedback. We will
close the discussion by giving our views on the future directions.
2. Rotatinal sequences and quaternion
Based on the missions of a spacecraft, the attitude of the space
craft represented by the body frame should be aligned with some
desired frame. Spacecraft attitude determination is to provide
the information of the distance between the spacecraft body
frame and the desired frame. This distance can be represented
by a single rotation if quaternion is used or a series of rotations
if Euler angles are used. In the latter case, the sequence of the
rotations is very important. Every rotation is around certain rota
tional axis for some angle. To determine the desired frame which
depends on the spacecraft position and the current time, GPS sig
nals may be used to determine the spacecraft current position and
the time. The mostly used time in aerospace engineering is the
universal time (UT) ( Vallado, 2004 ). The time and position can
be used to obtain the ephemeris astronomical direction informa
tion, such as some star directions, the Sun direction, the Earth
direction, the Earth magnet ﬁeld direction, observed from thespacecraft position at the current time and represented in the de
sired frame. The body frame information can be obtained by the
measurements about these directions from the spacecraft on
board instruments. When the body frame is perfectly aligned with
the desired frame, the calculated ephemeris star directions, the
Sun direction, the Earth direction, and the Earth magnet ﬁeld
direction at the given time should be identical or very close to
the measurements from spacecraft instruments. When the body
frame is signiﬁcantly different from the desired frame, the mea
sured astronomical directions are signiﬁcantly different from the
ephemeris astronomical directions at the given time. These differ
ences can be characterized by a rotation or a series rotations, each
rotates some angle around certain rotational axis, thereby esti
mating the distance between the spacecraft body frame and the
desired frame. Therefore, mathematical deﬁnition on rotation
and rotational sequences is one of the most important concepts
in spacecraft attitude determination and control. There are many
ways to characterize the rotation and rotational sequences. We
believe that the quaternion representation is one of the best
characterizations, and we will focus our attention on this
representation. Our presentation in this section follows the style
ofKuipers (1998) .
2.1. Some notations and identities
Throughout this review, we will use some common notations.
For a column vector x=[x
1,x2,...,xn]T, we sometimes write it as
x=(x1,x2,...,xn) to save space. For any two vectors xand y,w e
will denote by x/C1y=xTythe dot product of xand y,b y x/C2ythe
cross product of xand y,b ykxkthe 2norm of the vector of x.
Leta,b, and cbe any three dimensional vectors, we will repeatedly
use the following identities.
ða/C2bÞ/C2c¼ða/C1cÞb/C0ðb/C1cÞa; ð1Þand
a/C2ðb/C2cÞ¼ða/C1cÞb/C0ða/C1bÞc; ð2Þ
and
ða/C2bÞ/C1a¼ða/C2bÞ/C1b¼0: ð3Þ
We denote
i¼ð1;0;0Þ;j¼ð0;1;0Þ;k¼ð0;0;1Þð 4Þ
for the standard basis for R3. LetX(x) be a skewsymmetric matrix
function of x=[x1,x2,x3]Tdeﬁned by
XðxÞ¼0/C0x3x2
x3 0/C0x1
/C0x2x1 02
643
75: ð5Þ
The cross product of x/C2ycan then be represented by a matrix mul
tiplication X(x)y, i.e., x/C2y=X(x)y. We will use /C22p;/C22q, and /C22rto denote
quaternions which will be deﬁned later on.
2.2. Some frequently used frames
Many frames are used in spacecraft related application. This
section discusses some most important frames. For more detailed
discussion, readers are referred to Vallado (2004) .
2.2.1. Bodyﬁxed frame
Probably the ﬁrst frame comes to our mind is how to represent
the axes of ﬂight object, which is often called the bodyﬁxed frame.The origin of the bodyﬁxed frame is the center of mass of an orbital
spacecraft. The ﬁxed X
b(or roll) axis, Yb(or pitch) axis, and Zb(or
yaw) axis deﬁne the orientation of the attitude. Let vbe the vector
of spacecraft velocity, rbe the vector from the spacecraft to the Earth
center. By convention, Xbis selected along with the velocity direc
tion, Ybis in the direction of r/C2v, which is perpendicular to the orbit
plane, and Zbfollows the righthand rule. However, other choices are
possible as long as Xb,Yb, and Zbare perpendicular to each other.
2.2.2. Earth centered inertial frame
The Earth centered inertial (ECI) frame is important because of
two reasons. First, the Newton’s laws of motion and gravity applied
to the spacecraft are deﬁned in inertial frame. Second, many types
of satellites are inertial pointing spacecrafts. This frame is deﬁned
relative to the rotation axis of the Earth and the plane of the Earth’s
orbit (the ecliptic plane) about the Sun. The Earth’s equator is per
pendicular to the rotation axis of the Earth. As the Earth moving
along the ecliptic, the equator plane and the ecliptic have two cross
points. Two of these cross points are special as the tilt of the Earth’s
rotational axis is inclined neither away nor towards the Sun (the
center of the Sun being in the same plane as the Earth’s equator).
The ECI frame is deﬁned at one of these equinoxes, the vernal equi
nox (or March equinox). Because of many less signiﬁcant (but may
not be negligible) factors, such as the precession of the equinoxes,
vernal equinox used by aerospace engineers is deﬁned by 2000
coordinates and the true of date (TOD).1TheXIof inertial frame is
the direction from the Earth center to the vernal equinox. The ZIaxis
is the Earth rotational axis. The YIfollows the righthand rule.
2.2.3. Local vertical local horizontal frame
The local vertical local horizontal frame is one of the most de
sired frames for many satellites because its Zlvlhdirection is always
pointing to the center of the Earth (nadir pointing), which is a de
sired feature of many satellites. The origin of the local vertical local
horizontal frame is the center of mass of an orbital spacecraft. The
1For the rigorous and precise deﬁnition, please read ( Vallado, 2004 ).Y. Yang / Annual Reviews in Control 36 (2012) 198–219 199Author's personal copy
Xlvlhdirection is along the spacecraft velocity direction and perpen
dicular to Zlvlh, and Ylvlhis perpendicular to the orbit plan and fol
lows the righthand rule.
2.2.4. South east zenith (SEZ) frame
The south east zenith frame is useful for ground stations to
track a spacecraft. The location of the tracking instrument is the
origin. XSEZis the direction pointing to the south, YSEZis the direc
tion pointing to the east, and ZSEZis the direction pointing to the
zenith. In this system, the azimuth is the angle measured form
north, clockwise to the location beneath the object of interest.
The elevation is measured from local horizon, positive up to the ob
ject of interest.
2.2.5. Earthcentered Earthﬁxed frame
Like the Earth centered inertial (ECI) frame, the Earthcentered
Earthﬁxed (ECEF) frame is the Earthbased frame. The ECI frame is
independent from the motion and the rotation of the Earth. However, it may not be convenient in some case as observatories on the
ground rotate with the Earth. The center of ECEF frame is the cen
ter of the Earth. Using the convention adopted at the International
Meridian Conference in Washington, DC, 1884, the primary merid
ian for the Earth is the meridian that the Royal Observatory at
Greenwich lies on. The X
ECEFis the direction from the center of
the Earth pointing to the cross point of the primary meridian and
equator. The ZECEF is the direction from the center of the Earth
pointing to the north pole. The YECEFis the direction that follows
the righthand rule. The ECEF frame is sometimes called Interna
tional Terrestrial Reference Frame (ITRF). Because of the plate tec
tonic motion, the frame may need some adjustment every year for
certain applications.
2.3. Rotation sequences and mathematical representations
2.3.1. A ﬁxed point in a rotational frame
As we discussed at the beginning of this section, we determine
the spacecraft attitude by locating the astronomical objects in the
sky from the spacecraft instruments which gives the directions in
the body frame; from the ephemeris information, we know these
directions represented in the desired frame. Therefore, we have
the information on some ﬁxed (astronomical object) point in a
rotational frame when the spacecraft body frame is different from
the desired frame. This is equivalent to represent a ﬁxed point in a
rotational frame.
Let (X,Y,Z) be the axes of a frame (see Fig. 1 where Zaxis points
out of the paper), and ( x,y,z) be the axes of another frame whichrotates an angle of habout Zaxis. Let Pbe a ﬁxed point in ( X,Y)
plane. Assume that the distance of Pfrom the origin is r, then we
can express Pin the ﬁrst frame coordinate as ( x1,y1,z1)
x1¼rcosðaÞ;y1¼rsinðaÞ;z1¼0; ð6Þ
and in the second frame coordinate as ( x2,y2,z2)
x2¼rcosða/C0hÞ;y2¼rsinða/C0hÞ;z2¼0:
Thus, in view of (6), we have
x2¼x1cosðhÞþy1sinðhÞ;
y2¼y1cosðhÞ/C0x1sinðhÞ;
z2¼0:
We can write this transformation in a matrix form
x2
y2
z22
643
75¼cosðhÞsinðhÞ0
/C0sinðhÞcosðhÞ0
00 12
643
75x1
y1
z12
643
75: ð7Þ
Similarly, for a ﬁxed point, if the frame rotates about Yaxis for an
angle h, then the transformation can be expressed as
x2
y2
z22
643
75¼cosðhÞ0/C0sinðhÞ
01 0
sinðhÞ0 cos ðhÞ2
643
75x1
y1
z12
643
75: ð8Þ
For a ﬁxed point, if the frame rotates about Xaxis for an angle h,
then the transformation can be expressed as
x2
y2
z22
643
75¼10 0
0 cos ðhÞsinðhÞ
0/C0sinðhÞcosðhÞ2
643
75x1
y1
z12
643
75: ð9Þ
Rotational matrices of (7)–(9) are all unitary matrices. By deﬁ
nition, the length of each column of a unitary matrix is one, each
column is orthogonal to other columns. Unitary matrices have
many useful properties. Let C1and C2be two unitary matrices
andvbe a vector. Some most important properties of the unitary
matrix are (see Golub & Van Loan, 1989 ):
/C15kC1vk=kC2vk=kvk, i.e., unitary matrix does not change the vec
tor length.
/C15C2C1is a unitary matrix. For rotational matrices, it means that
the consecutive rotations can be expressed by the product of
the rotational matrices, where C1is the ﬁrst rotation and C2is
the second rotation.
/C15C/C01
1¼CT
1, i.e., the inverse of a rotational matrix is simply a trans
pose of the rotational matrix.
2.3.2. A rotational point in a ﬁxed frame
When analyzing relationship of frames, we sometimes need to
represent a rotational point in a ﬁxed frame. Let P1be a point ob
tained by rotating Pan angle of haround Zaxis (see Fig. 2 where Z
axis points out of the paper). Then P1can be expressed as
x2¼rcosðaþhÞ;y2¼rsinðaþhÞ;z2¼0:
Thus, in view of (6), we have
x2¼x1cosðhÞ/C0y1sinðhÞ;
y2¼y1cosðhÞþx1sinðhÞ;
z2¼0:
We can write this transformation in a matrix form
x2
y2
z22
643
75¼cosðhÞ/C0 sinðhÞ0
sinðhÞcosðhÞ0
00 12
643
75x1
y1
z12
643
75: ð10Þ
Fig. 1. A ﬁxed point in a rotational frame.200 Y. Yang / Annual Reviews in Control 36 (2012) 198–219Author's personal copy
Similarly, for a ﬁxed point, if Protates about Yaxis for an angle h,
then the transformation can be expressed
x2
y2
z22
643
75¼cosðhÞ0 sin ðhÞ
01 0
/C0sinðhÞ0 cos ðhÞ2
643
75x1
y1
z12
643
75: ð11Þ
For a ﬁxed point, if Protates about Xaxis for an angle h, then the
transformation can be expressed
x2
y2
z22
643
75¼10 0
0 cos ðhÞ/C0 sinðhÞ
0 sin ðhÞcosðhÞ2
643
75x1
y1
z12
643
75: ð12Þ
2.3.3. Rotations in three dimensional space
The rotations discussed above are simple rotations in two
dimensional space. They are special cases in that the rotational axis
is one of the coordinates which is perpendicular to the plane
spanned by vectors before and after the rotation. Spacecraft atti
tude determination and control involve general rotations in three
dimensional space. Considering the rotation described in Fig. 3
where we rotate the axis Xto the axis x. A popular method to rep
resent this rotation is to use a series of rotations about coordinatedescribed in the previous subsections, i.e., ﬁrst we rotate the frame
anaangle around /C0Yaxis, then we rotate the intermediate x0ab
angle around the new Zaxis ( z0axis). The aandbangles are the
socalled Euler angles. Therefore, the rotational matrix is given by
C¼cosðbÞ/C0 sinðbÞ0
sinðbÞcosðbÞ0
00 12
643
75cosðaÞ0/C0sinðaÞ
01 0
sinðaÞ0 cos ðaÞ2
643
75
¼cosðbÞcosðaÞ/C0 sinðbÞ/C0 cosðbÞsinðaÞ
sinðbÞcosðaÞcosðbÞ/C0 sinðbÞsinðaÞ
sinðaÞ 0 cos ðaÞ2
643
75 ð13aÞ
¼C11C12C13
C21C22C23
C31C32C332
643
75 ð13bÞ
which provides a different explanation of the rotation from Xaxis to
xaxis, i.e., the series of rotations can also be represented by a gen
eral rotational matrix (13b) . Let
cosðhÞ¼1
2ðC11þC22þC33/C01Þ; ð14Þ
^e¼1
2 sinðhÞC23/C0C32
C31/C0C13
C12/C0C212
643
75¼e1
e2
e32
643
75; ð15Þ
E¼1
2 sinðhÞðCT/C0CÞ¼0/C0e3e2
e3 0/C0e1
/C0e2e1 02
643
75;
h–/C6kp;k¼0;1;2;...ð16Þ
the general rotational matrix (13b) can be expressed as
C¼cosðhÞIþð1/C0cosðhÞÞ^e^eT/C0sinðhÞE: ð17Þ
It can be veriﬁed that Cis a rotational matrix, ^eis the rotational axis,
andhis the rotational angle ( Hughes, 1986 ).Cis called the direction
cosine matrix.
Actually, there may be inﬁnitely many combinations of rota
tional axes and rotational angles that can rotate Xtox. Moreover,
Fig. 4 and the following analysis show that in general case, the
Fig. 2. A rotational point in a ﬁxed frame.
Fig. 3. Rotation in three dimensional space.
 Fig. 4. Plane of all possible rotations axes.Y. Yang / Annual Reviews in Control 36 (2012) 198–219 201Author's personal copy
rotational axis of the direction cosine matrix may not be one of the
coordinates. Let Pbe the middle point between Xandxandwbe
the angle between Oxand OP. Let OQbe the unit vector that is per
pendicular to the plane spanned by Xandxvectors. Obviously, the
rotation can be achieved by rotating 2 waround OQ. Alternatively,
another rotation with rotational axis OPand rotational angle p
can also rotates Xtox. In fact, we can use any vector on the plane
spanned by OPand OQas the rotational axis and ﬁnd an appropri
ate rotational angle which will rotate Xtox. The ﬁrst rotation we
described is sometimes called the minimumangle rotation, and
the second rotation we described is called the maximumangle
rotation.
2.3.4. Rotation from one frame to another frame
In spacecraft attitude determination, we are oftentimes re
quired to ﬁnd a rotation that brings one frame to another one. This
means that we need to ﬁnd a rotational axis and appropriate rota
tional angle that rotates one given frame to another given frame.
LetSbe the middle point of Yandy,ORbe the unit length vector
that is perpendicular to the plane spanned by Yandy. The rotation
that brings the frame ( X,Y,Z)t o( x,y,z) is described in Fig. 5 , where
the plane OPQ spanned by OPand OQdeﬁnes all the rotational axes
that can rotate Xtox; the plane OSR spanned by ORand OSdeﬁnes
all the rotational axes that can rotate Ytoy. Therefore, the inter
section of these two planes deﬁnes the unique rotational axis that
can rotate XtoxandYtoysimultaneously. We will provide a rig
orous derivation in the next section.
2.3.5. Rate of change of the direction cosine matrix
In spacecraft dynamics modeling and controls, we need to know
not only the attitude of the spacecraft, which is represented by the
rotation from one frame to another frame, but also the rate of this
rotation. The time dependence of the direction cosine matrix A at
time tcan be expressed by A(t). The time dependence of the direc
tion cosine matrix A at time t+Dtcan be expressed by
AðtþDtÞ¼CAðtÞ;
where Cis a rotation around ^ewith rotational angle h=XDt, and X
is the rate of the rotation around the rotational axis. From (17),
C¼cosðXDtÞIþð1/C0cosðXDtÞÞ^e^eT/C0sinðXDtÞE:
AsDt?0,C!I/C0EXDt¼I/C0XðxÞDt
¼I/C00/C0x3x2
x3 0/C0x1
/C0x2x1 02
643
75Dt;ð18Þ
where
EX¼0/C0x3x2
x3 0/C0x1
/C0x2x1 02
643
75¼XðxÞ:
This gives
AðtþDtÞ¼ð I/C0XðxÞDtÞAðtÞ;
or
AðtþDtÞ/C0AðtÞ¼/C0 XðxÞAðtÞDt;
therefore, we get
dA
dt¼/C0XðxÞAðtÞ: ð19Þ
2.3.6. Rate of change of vectors in rotational frame
In spacecraft dynamics modeling and controls, vectors and their
rates of changes are oftentimes represented in different frames. For
the modeling and control purpose, we need to convert the vectors
and their rates of changes represented in different frames into a
single frame. Here, we derive the relationship between the time
derivatives of an arbitrary vector resolved along a coordinate axes
of one system and the derivatives in a different system. Let a0be
the vector represented in a reference system and abe the same
vector represented in body frame. Then there is a rotational matrix
Cexpressed in (17) such that
a¼Ca0:
The product rule for differentiation gives
da
dt/C18/C19/C12/C12/C12/C12
b¼dC
dta0þCda0
dt/C18/C19/C12/C12/C12/C12
r;
where the derivativeda
dt/C0/C1/C12/C12
bis represented in the body frame, and the
derivativeda0
dt/C16/C17/C12/C12/C12
ris represented in the reference frame. Since Cis the
rotation from reference frame to body frame, Cda0
dt/C16/C17/C12/C12/C12
r¼da0
dt/C16/C17/C12/C12/C12
b. From
(19),
da
dt/C18/C19/C12/C12/C12/C12
b¼/C0XðxÞCa0þCda0
dt/C12/C12/C12/C12
r¼/C0XðxÞaþda0
dt/C18/C19/C12/C12/C12/C12
b
¼/C0x/C2aþda0
dt/C18/C19/C12/C12/C12/C12
b; ð20Þ
where xis the rate of the rotation between the reference frame and
the body frame.
2.4. Quaternion and its properties
Unlike the Euler angles which represent a rotation by a series of
rotations rotating around X,o rYorZaxes, quaternion represents a
rotation by a rotational angle around a rotational axis, which is not
necessarily around X,o rY,o rZaxes. Quaternion was ﬁrst intro
duced by the Irish mathematician William Rowan Hamilton in
1843 and applied to mechanics in threedimensional space. A strik
ing feature of quaternion is that the product of two quaternion is
noncommutative, meaning that the product of two quaternions de
pends on which factor is to the left of the multiplication sign and
which factor is to the right. Let the standard basis i,j, and kfor
theR3satisfy the following condition
 Fig. 5. Rotation from one frame to another.202 Y. Yang / Annual Reviews in Control 36 (2012) 198–219Author's personal copy
i2¼j2¼k2¼ijk¼/C01: ð21Þ
Let a 4tuple of real numbers
/C22q¼ðq0;q1;q2;q3Þ; ð22Þ
we deﬁne a quaternion as the sum of a scalar and a vector
/C22q¼q0þiq1þjq2þkq3¼q0þq; ð23Þ
where
q¼iq1þjq2þkq3
is called the vector part of the quaternion, and q0is called the scalar
part of the quaternion. People use (22) and (23) interchangeably if
no confusion is introduced. Though in aerospace engineering, we al
ways use a special normalized quaternion q0¼cosa
2/C0/C1
, and
q¼^esina
2/C0/C1
, where ^eis rotational axis, and ais the rotational angle,
we will derive some useful properties for the general form of
quaternion.
2.4.1. Equality and addition
Let
/C22p¼p0þip1þjp2þkp3
and
/C22q¼q0þiq1þjq2þkq3
be two quaternions, then the two quaternions are equal if and only
if
p0¼q0;p1¼q1;p2¼q2;p3¼q3:
For the special normalized quaternion used in the aerospace engi
neering, if two quaternions are equal, they have the same rotationalangle and the same rotational axis. The sum of the two quaternions
is deﬁned as
/C22pþ/C22q¼ðp0þq0Þþiðp1þq1Þþjðp2þq2Þþkðp3þq3Þ:
The zero quaternion has scalar part 0 and vector part (0, 0, 0). The
negative or an additive inverse of /C22qis/C0/C22q.
2.4.2. Multiplication and the identity
From (21), we have
ij¼k¼/C0ji;jk¼i¼/C0kj;ki¼j¼¼ /C0 ik: ð24Þ
Let /C22pand /C22qbe deﬁned as before, use (21) and (24) , we deﬁne the
multiplication of two quaternions /C22pand /C22qby
/C22p/C10/C22q¼p0q0/C0p/C1qþp0qþq0pþp/C2q; ð25Þ
with the scalar part p0q0/C0p/C1qand vector part p0q+q0p+p/C2q.
The quaternion multiplicative identity has scalar part 1 and vector
part (0,0,0).
The quaternion multiplication can be used to represent two
consecutive rotations. Let /C22pand /C22qbe the two consecutive rotations
(/C22prepresent the ﬁrst rotation and /C22qrepresent the second rotation).
The composed rotation is given by /C22r¼/C22p/C10/C22q. The derivation can be
found in Wie (1998, pp. 319–320) .
2.4.3. Complex conjugate, norm, and inverse
The complex conjugate of quaternion /C22qis denoted by
/C22q/C3¼q0/C0q¼q0/C0iq1/C0jq2/C0kq3: ð26Þ
It is easy to see
/C22qþ/C22q/C3¼ðq0þqÞþð q0/C0qÞ¼2q0: ð27Þ
Given two quaternions /C22pand /C22q, we have
ð/C22p/C10/C22qÞ/C3¼/C22q/C3/C10/C22p/C3: ð28ÞThe norm of a quaternion is deﬁned as k/C22qk¼ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ/C22q/C3/C10/C22qp
. It is also easy
to verify that the norm satisﬁes
k/C22qk¼ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
q2
0þq2
1þq2
2þq2
3q
: ð29Þ
We deﬁne the inverse of a quaternion by
/C22q/C01/C10/C22q¼/C22q/C10/C22q/C01¼1:
Pre and postmultiplying by /C22q/C3gives
/C22q/C01/C10/C22q/C10/C22q/C3¼/C22q/C3/C10/C22q/C10/C22q/C01¼/C22q/C3:
Since /C22q/C3/C10/C22q¼/C22q/C10/C22q/C3¼k /C22qk2, we have
/C22q/C01¼/C22q/C3
k/C22qk2: ð30Þ
For normalized quaternion which satisﬁes k/C22qk¼ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
q2
0þq2
1þq2
2þq2
3q
¼1,
/C22q/C01¼/C22q/C3: ð31Þ
Finally, the norm of the product of two quaternions /C22pand /C22qis the
product of the individual norms because
k/C22p/C10/C22qk2¼ð /C22p/C10/C22qÞ/C10ð /C22p/C10/C22qÞ/C3¼/C22p/C10/C22q/C10/C22q/C3/C10/C22p/C3
¼/C22p/C10kqk2/C10/C22p/C3¼/C22p/C10/C22p/C3kqk2¼kpk2kqk2: ð32Þ
2.4.4. Rotation by quaternion operator
Now we are ready to show how to rotate a vector using quater
nion operator. For this purpose, we will consider only the normal
ized quaternion /C22q¼q0þq¼cosa
2/C0/C1
þ^esina
2/C0/C1
, where ^eis the unit
length rotational axis and ais the rotational angle. Clearly, quater
nion does have the information about the rotational angle and the
rotational axis. Similar to rotational matrices, we need the product
of quaternions to be able to represent consecutive rotations. Let
/C22p¼cosa
2/C0/C1
þ^esina
2/C0/C1
and /C22q¼cosb
2/C0/C1
þ^esinb
2/C0/C1
, from (25), we have
/C22r¼/C22p/C10/C22q¼cosa
2/C16/C17
þ^esina
2/C16/C17 /C16/C17
/C10cosb
2/C18/C19
þ^esinb
2/C18/C19 /C18/C19
¼cosa
2/C16/C17
cosb
2/C18/C19
/C0^esina
2/C16/C17
/C1^esinb
2/C18/C19
þcosa
2/C16/C17
^esinb
2/C18/C19
þ^esina
2/C16/C17
cosb
2/C18/C19
þ^esina
2/C16/C17
/C2^esinb
2/C18/C19
¼cosa
2/C16/C17
cosb
2/C18/C19
/C0sina
2/C16/C17
sinb
2/C18/C19
þ^esina
2/C16/C17
cosb
2/C18/C19
þcosa
2/C16/C17
sinb
2/C18/C19 /C18/C19
¼cosaþb
2/C18/C19
þ^esinaþb
2/C18/C19
¼cosðcÞþ ^esinðcÞð 33Þ
This means that the product of two quaternions indeed represents
two consecutive rotations. Parallel to the vector rotation using rota
tional matrix, we expect that a quaternion rotation operator in
volves multiplication of a quaternion and a vector. Therefore, the
multiplication of a quaternion and a vector should be deﬁned. To
this end, we consider a vector vas a pure quaternion in which
the scalar part is zero and the vector part is v, i.e., /C22v¼0þv. For
the sake of notational simplicity, we use /C22vand vinterchangeably
for both vector and pure quaternion. From (25), the multiplication
of a vector and a quaternion is deﬁned as
/C22q/C10v¼ðq0þqÞ/C10ð0þvÞ¼/C0 q/C1vþq0vþq/C2v: ð34Þ
We also expect that the quaternion operator will rotate a vector into
another vector, or a pure quaternion. Simple evaluation shows that
neither w¼/C22q/C10vnorw¼v/C10/C22qis necessarily a pure vector. How
ever, using (34) and (1) , we haveY. Yang / Annual Reviews in Control 36 (2012) 198–219 203Author's personal copy
w¼/C22q/C10v/C10/C22q/C3¼ðq0þqÞ/C10ð0þvÞ/C10ð q0/C0qÞ
¼ð /C0 q/C1vþq0vþq/C2vÞ/C10ð q0/C0qÞ
¼/C0q0ðq/C1vÞþq0ðv/C1qÞþð q/C2vÞ/C1qþðq/C1vÞqþq2
0v
þq0ðq/C2vÞ/C0q0ðv/C2qÞ/C0ð q/C2vÞ/C2q
¼ðq/C1vÞqþq2
0vþ2q0ðq/C2vÞ/C0ð q/C1qÞvþðv/C1qÞq
¼2q2
0/C01/C0/C1vþ2ðq/C1vÞqþ2q0ðq/C2vÞ
¼cos2a
2/C16/C17
/C0sin2a
2/C16/C17 /C16/C17
vþ2ðq/C1vÞqþ2q0ðq/C2vÞ; ð35Þ
which is a vector. In fact, the quaternion operator can be expressed
by direction cosine matrix that may be more convenient in some
cases. From (35), since
2q2
0/C01/C0/C1v¼2q2
0/C01/C0/C1
00
02 q2
0/C01/C0/C1
0
00 2 q2
0/C01/C0/C12
643
75v1
v2
v32
643
75;
2ðv/C1qÞq¼2q2
12q1q22q1q3
2q1q22q2
22q2q3
2q1q32q2q32q2
32
6643
775v1
v2
v32
643
75;
2q0ðq/C2vÞ¼0 /C02q0q32q0q2
2q0q3 0 /C02q0q1
/C02q0q22q0q1 02
643
75v1
v2
v32
643
75;
we have
w1
w2
w32
643
75¼2q2
0/C01þ2q2
12q1q2/C02q0q32q1q3þ2q0q2
2q1q2þ2q0q32q2
2þ2q2
0/C012 q2q3/C02q0q1
2q1q3/C02q0q22q2q3þ2q0q12q2
3þ2q2
0/C012
6643
775v1
v2
v32
643
75:
ð36Þ
This means that we can use either (35) or(36) for quaternion
rotation. We will use them in different applications in the rest of
the review. It is worthwhile to note, in view of (35), that (36)
deﬁnes a general rotational matrix as
C¼q2
0/C0qTq/C0/C1
Iþ2qqTþ2q0XðqÞ: ð37Þ
We now show that /C22q/C10v/C10/C22q/C3is indeed the quaternion operator that
rotates vanaangle around ^e. First, it is easy to verify that /C22q/C10v/C10/C22q/C3
is linear operator, i.e., for two vectors a,b, and a scalar k, the follow
ing relation holds.
/C22q/C10ðkaþbÞ/C10 /C22q/C3¼k/C22q/C10a/C10/C22q/C3þ/C22q/C10b/C10/C22q/C3: ð38Þ
Then, we decompose vector vinto two components, v=vq+vn,
where vqis parallel to qand vnis perpendicular to q. We show
(a) under quaternion operator /C22q/C10v/C10/C22q/C3, the ﬁrst component vq
is invariant, and (b) the second component vnrotates an angle
ofa. Since vq=kq, where k61 is a constant, from (38) (34)
and (25) , using the fact that /C22qis a normalized quaternion, we
have
/C22q/C10vq/C10/C22q/C3¼/C22q/C10ðkqÞ/C10 /C22q/C3¼k/C22q/C10ðqÞ/C10 /C22q/C3
¼kð/C0q/C1qþq0qÞ/C10ð q0/C0qÞ¼kq:
This proves (a). Using the facts that
q/C1vn¼0;
cosðaÞ¼cos2a
2/C16/C17
/C0sin2a
2/C16/C17
;
sinðaÞ¼2 cosa
2/C16/C17
sina
2/C16/C17
;
q0¼cosa
2/C16/C17
;kqk¼sina
2/C16/C17
;
q/C2vn¼kqkkvnksinp
2/C16/C17
v?¼kqkkvnkv?;
where v\is a unit length vector perpendicular to both qandvn, and
from (35), we have
/C22q/C10ðvnÞ/C10 /C22q/C3¼cos2a
2/C16/C17
/C0sin2a
2/C16/C17 /C16/C17
vnþ2ðq/C1vnÞqþ2q0ðq/C2vnÞ
¼cosðaÞvnþ2q0ðq/C2vnÞ
¼cosðaÞvnþ2 cosa
2/C16/C17
ðq/C2vnÞ
¼cosðaÞvnþ2 cosa
2/C16/C17
sina
2/C16/C17
kvnkv?
¼cosðaÞvnþsinðaÞkvnkv?: ð39Þ
Since vnandkvnkv\have the same length, and they both perpendic
ular to vq,(39) indicates that /C22q/C10ðvnÞ/C10 /C22q/C3rotates vnan angle of a
around axis q. This proves (b).
A fact parallel to the rotational matrix is that /C22q/C10ðvÞ/C10 /C22q/C3does
not change the length of v, which is a direct result of (32) and
the fact that /C22qis a normalized quaternion.
k/C22q/C10v/C10/C22q/C3k¼k /C22qkkvkk/C22qk/C3¼kvk: ð40Þ
Similar to the rotational matrix, the inverse of the operator
w¼/C22q/C10ðvÞ/C10 /C22q/C3onvis simple and it is given by
/C22q/C3/C10ðwÞ/C10 /C22q¼/C22q/C3/C10ð /C22q/C10ðvÞ/C10 /C22q/C3Þ/C10 /C22q
¼ð /C22q/C3/C10/C22qÞ/C10v/C10ð /C22q/C3/C10/C22qÞ¼v
which rotates wan angle of aaround /C0qand brings wback to v.I ti s
easy to verify that
v¼/C22q/C3/C10w/C10/C22q¼ð2q2
0/C01Þwþ2ðq/C1wÞq/C02q0ðq/C2wÞ: ð41Þ
This gives
v1
v2
v32
643
75¼2q2
0/C01þ2q2
12q1q2þ2q0q32q1q3/C02q0q2
2q1q2/C02q0q32q2
0/C01þ2q2
22q2q3þ2q0q1
2q1q3þ2q0q22q2q3/C02q0q12q2
0/C01þ2q2
32
643
75w1
w2
w32
643
75:
ð42Þ
It is worthwhile to note, in view of (41), that (42) deﬁnes a general
rotational matrix as
A¼q2
0/C0qTq/C0/C1
Iþ2qqT/C02q0XðqÞ: ð43Þ
(43) is another form of the rotational matrix (17).
2.4.5. Matrix form of quaternion production
We also ﬁnd that in some applications, a matrix form of
quaternion production is more convenient than the form of
(25). Let /C22r¼ðr0;r1;r2;r3Þbe the composed quaternion of two
consecutive quaternions of /C22pand /C22q, i.e., /C22r¼/C22p/C10/C22q. Expanding
(25) gives
r0¼p0q0/C0p1q1/C0p2q2/C0p3q3 ð44aÞ
r1¼p0q1þp1q0þp2q3/C0p3q2 ð44bÞ
r2¼p0q2/C0p1q3þp2q0þp3q1 ð44cÞ
r3¼p0q3þp1q2/C0p2q1þp3q0: ð44dÞ
(44) can be written in matrix form
r0
r1
r2
r32
66643
7775¼p
0/C0p1/C0p2/C0p3
p1p0/C0p3p2
p2p3 p0/C0p1
p3/C0p2p1 p02
66643
7775q
0
q1
q2
q32
66643
7775ð45aÞ
¼q
0/C0q1/C0q2/C0q3
q1q0 q3/C0q2
q2/C0q3q0 q1
q3q2/C0q1q02
66643
7775p0
p1
p2
p32
66643
7775ð45bÞ204 Y. Yang / Annual Reviews in Control 36 (2012) 198–219Author's personal copy
2.4.6. Derivative of the quaternion
Let /C22qðtÞbe the quaternion to a reference frame at time
t;/C22qðtþDtÞbe the quaternion to the reference frame at t+Dt, and
/C22pðtÞ¼cosDa
2/C0/C1
þ^eðtÞsinDa
2/C0/C1
be the quaternion that brings /C22qðtÞto
/C22qðtþDtÞ, i.e., /C22pðtÞis an incremental quaternion with rotational axis
^eðtÞand rotational angle Da. For Dt!0;cosDa
2/C0/C1
!1 and
sinDa
2/C0/C1
!Da
2, therefore, /C22pðtÞ/C251þ^eðtÞDa
2. This gives
/C22qðtþDtÞ¼ /C22qðtÞ/C10 1þ^eðtÞDa
2/C18/C19
;
or
/C22qðtþDtÞ/C0 /C22qðtÞ¼ /C22qðtÞ/C10 0þ^eðtÞDa
2/C18/C19
:
Divide Dtat both sides and let Dt?0, we obtain
d/C22q
dt¼/C22qðtÞ/C10 0þ1
2^eðtÞXðtÞ/C18/C19
¼/C22qðtÞ/C10 0þ1
2xðtÞ/C18/C19
;
where XðtÞ¼limDt!0Da
Dtis a scalar, and xðtÞ¼ ^eðtÞXðtÞis a vector,
and 0 þ1
2xðtÞ/C0/C1
¼1
2ð0;x1;x2;x3Þis a quaternion. Using matrix
expression (45) for the quaternion product, we obtain
_q0
_q1
_q2
_q32
66643
7775¼1
20/C0x1/C0x2/C0x3
x1 0 x3/C0x2
x2/C0x3 0 x1
x3x2/C0x1 02
66643
7775q
0
q1
q2
q32
66643
7775
¼1
2q0/C0q1/C0q2/C0q3
q1q0/C0q3q2
q2q3 q0/C0q1
q3/C0q2q1 q02
66643
77750
x1
x2
x32
66643
7775: ð46aÞ
3. Spacecraft dynamics and modeling
The quaternion based models have several advantages over the
Euler angle based models. For example, the quaternion based mod
el is uniquely deﬁned because it does not depend on rotational se
quence, while a Euler angle based model can be different for
different rotational sequences. Therefore, Euler angle based models
may be errorprone if different groups of people are working on the
same project but use different rotational sequences. In engineering
design practice, an agreement has to be reached among different
design groups working on the same project. Another attractive fea
ture of quaternion based model is that a full quaternion model
does not have any singular point in any rotational sequence. There
fore, quaternion modelbased control design methods have been
discussed in a number of papers. In Wen and KreutzDelgado
(1991) , Lyapunov function was used to design modelindependent
control law, model dependant control law, and adaptive control
law. In Boskovic, Li, and Mehra (2001) and Wallsgrove and Akella
(2005) , Lyapunov Functions were used to design control systems
under the restriction of control input saturation. Though Lyapunov
function is a powerful tool in global stability analysis, obtaining a
control law and the associated Lyapunov function for the nonlinear
systems is postulated by intuition, as noted in Paielli and Bach
(1993) . Moreover, most of these designs focus on the global stabil
ity and do not pay much attention on the performance of the con
trol system. In Paielli and Bach (1993) and Wie (1998) , quaternion
based linear error dynamics are adapted to get desired perfor
mance for the attitude control system using classical frequency do
main methods. However, state space time domain design methods,
such as optimal control and pole assignment, are more attractive
than the classical frequency domain design methods. In Zhou and
Colgren (2005) , a linearized state space quaternion model is derived. Unfortunately, the analysis shows that the linearized state
space representation of the full quaternion model using all four
components of quaternion is uncontrollable. Therefore, pole
assignment can only be achieved in some controllable subspace
in the linearized state space quaternion model using all four com
ponents of quaternion. In addition, the stability of the linearized
closed loop system is unknown because an uncontrollable eigen
value is at the origin of the complex plane. Another restriction in
the existing quaternion modeling and controller design methods
is that most researches focus on inertial pointing spacecraft with
out using reaction wheel while many low Earth orbit spacecraft is
nadir pointing and use momentum wheel.
In this section, we ﬁrst describe a controllable quaternion mod
el for inertial pointing spacecraft, the simplest one in many appli
cations. To obtain a controllable quaternion model, only vectorcomponent of the quaternion is used in the model. The cost of
using only three components of the quaternion in the model is
that, similar to the Euler angle representation, the reduced model
has a singular point at
a=±p, where ais the rotation angle around
the rotation axis. However, this singular point is the farthest point
to the point where the linearization is carried out. Therefore, the
model and designed controller will work well in practice.
We also present a controllable quaternion model for nadir
pointing spacecraft with momentum wheel(s). This is a different
model from the inertial pointing spacecraft without a momentum
wheel discussed in many literatures. This model includes three
important features of many low orbit nadir pointing spacecrafts:
(a) an additional term for the momentum wheels is incorporated
to the nonlinear dynamic equations, (b) the local vertical local hor
izontal frame is used as the reference frame and the rotation be
tween local vertical local horizontal frame and inertial frame is
considered in the model similar to the treatment in Sidi (1997)
for the Euler angle based models, and (c) gravity gradient torque,
a dominant and predictable disturbance for low orbit spacecrafts,
is included to improve the model accuracy.
We will show that by using only vector component of the qua
ternion, these linearized spacecraft models are fully controllable.
Therefore, it is easier to use these reduced models than the full
quaternion models in controller design because all modern state
space control system design methods can be applied directly. The
stability of the designed closedloop spacecraft system is guaran
teed because the linearized control system is fully controllable.
3.1. The general spacecraft system equations3.1.1. The dynamics equation
LetJbe the inertia matrix of a spacecraft deﬁned by
J¼J11J12J13
J21J22J23
J31J32J332
643
75; ð47Þ
xI=[xI1,xI2,xI3]Tbe the angular velocity vector of the spacecraft
body with respect to the inertial frame, represented in the space
craft body frame, hIbe the angular momentum vector of the space
craft about its center of mass represented in the inertial frame,
h=JxIbe the same vector of hIbut represented in the body frame,
Mbe the external moment acting on the body about its center of
mass. Then, from Serway and Jewett (2004) , we have
M¼dhI
dt/C18/C19/C12/C12/C12/C12
b:
In view of (20), we have
M¼dhI
dt/C18/C19/C12/C12/C12/C12
b¼dh
dt/C18/C19
þxI/C2h:Y. Yang / Annual Reviews in Control 36 (2012) 198–219 205Author's personal copy
This gives
dh
dt/C18/C19
¼J_xI¼/C0xI/C2JxIþM:
The external moment Mare normally composed of (a) distur
bance torques Tddue to gravitational, aerodynamic, solar radia
tion, and other environmental torques in body frame, and is
expressed by
Td¼½Td1;Td2;Td3/C138T; ð48Þ
and (b) the control torque uexpressed by
u¼½u1;u2;u3/C138T: ð49Þ
Therefore,
J_xI¼/C0xI/C2ðJxIÞþTdþu¼/C0XðxIÞðJxIÞþTdþu; ð50Þ
3.1.2. The kinematics equation
Denote the rotational axis of a body frame relative to a refer
ence frame by a unit length vector ^e, the rotational angle around
the rotational axis by a, the scalar component of the quaternion
byq0¼cosa
2/C0/C1
, the vector component of the quaternion by
q¼½q1;q2;q3/C138T¼^esina
2/C0/C1
, then, the quaternion that represents
the rotation of the body frame relative to the reference frame is gi
ven by
/C22q¼½q0;qT/C138T¼cosa
2/C16/C17
;^eTsina
2/C16/C17 hi T
: ð51Þ
From (46a) , the nonlinear spacecraft kinematics equations of mo
tion can be represented by the quaternion (see also Wie, 1998;
Wertz, 1978; Sidi, 1997 ) as follows
_q¼/C01
2x/C2qþ1
2q0x;
_q0¼/C01
2xTq:(
ð52Þ
In view of (46a) , we have
_q0
_q1
_q2
_q32
66643
7775¼
1
20/C0x1/C0x2/C0x3
x1 0 x3/C0x2
x2/C0x3 0 x1
x3x2/C0x1 02
66643
7775q
0
q1
q2
q32
66643
7775
¼
1
2q0/C0q1/C0q2/C0q3
q1q0/C0q3q2
q2q3 q0/C0q1
q3/C0q2q1 q02
66643
77750
x1
x2
x32
66643
7775: ð53Þ
Using the fact that q0¼ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
1/C0q2
1/C0q2
2/C0q2
3q
, we have,
_q1
_q2
_q32
643
75¼1
2q0/C0q3q2
q3 q0/C0q1
/C0q2q1 q02
643
75x1
x2
x32
643
75
¼1
2Qðq1;q2;q3Þx¼gðq1;q2;q3;xÞ: ð54Þ
It is easy to verify
detq0/C0q3q2
q3 q0/C0q1
/C0q2q1 q00
B@1
CA¼detðQðq1;q2;q3ÞÞ ¼1ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
1/C0q2
1/C0q2
2/C0q2
3q ;
ð55Þ
hence Q(q1,q2,q3) is always a full rank matrix except for a=±p. This
means that unless a=±p, the kinematics equation of motion using
reduced quaternion representation can be simpliﬁed from (53) and
(54).The main advantages of using (54) instead of (53) is as follows:
(a) the system dimension is reduced from 7 to 6, yielding a simpler
model, (b) the linearized system is controllable, (c) the stability
analysis can be directly conducted based on the linearized system
(there is no uncontrollable unstable pole, see Zhou & Colgren,
2005 ), and (d) all closed loop eigenvalues can be assigned to any
position by appropriate feedback control law because the linear
ized system is controllable. The results presented in this section
are based on Yang (2010) and Yang (2012) .
3.2. The inertial pointing spacecraft model
3.2.1. The nonlinear inertial pointing spacecraft model
The inertial pointing spacecraft is desired in many applications.
The inertial pointing spacecraft model is one of the simplest space
craft models. In this section, we assume that the spacecraft does
not have a momentum wheel, therefore, the control torques are
either thrusters or magnet torque bars. We will not discuss the
actuators in this review. To simplify the model further, we assume
that the disturbance torque is negligible. In this case, (50) is re
duced to
J_xI¼/C0xI/C2ðJxIÞþu¼/C0XðxIÞðJxIÞþu: ð56Þ
Let /C22qbe the quaternion that represents the rotation of the body
frame relative to the inertial frame, the reduced kinematics
equation becomes
_q1
_q2
_q32
643
75¼1
2q0/C0q3q2
q3 q0/C0q1
/C0q2q1 q02
643
75xI1
xI2
xI32
643
75¼gðq1;q2;q3;xIÞ: ð57Þ
3.2.2. The linearized inertial pointing spacecraft models
We can derive the linearized spacecraft system from (56) and
(57) by using the ﬁrst order Taylor expansion around the stationary
point q1=q2=q3= 0 and xI= 0 as follows:
_xI/C25J/C01u;
@g
@xI/C12/C12/C12/C12
xI/C250
q1¼q2¼q3/C250/C251
2I3;
@g
@q/C12/C12/C12/C12xI/C250
q1¼q2¼q3/C250/C251
203:
Therefore,
_xI
_q/C20/C21
¼0303
1
2I303"#
xI
q/C20/C21
þJ/C01
03"#
u¼AxþBu; ð58Þ
where
A¼0303
1
2I303"#
;x¼xI
q/C20/C21
;B¼J/C01
03"#
ð59Þ
It is easy to verify that this linearized spacecraft system equation is
controllable.
3.3. Nadir pointing momentum biased spacecraft model
3.3.1. The nonlinear nadir pointing spacecraft model
Momentum biased spacecraft is of particularly interesting in
practice, and is discussed extensively in Sidi (1997, Chapter 8) .
For momentum biased spacecraft, a momentum wheel is in
stalled in Ybaxis which is perpendicular to the orbit plane. Nor
mally, the momentum wheel spins in a constant speed, but it206 Y. Yang / Annual Reviews in Control 36 (2012) 198–219Author's personal copy
may also be used to generate control torque by changing the
speed. Let
H¼½h1;h2;h3/C138T¼½0;h2;0/C138Tð60Þ
be the angular momentum of the momentum wheel in the body
frame. The spacecraft model (50) is therefore becomes
J_xI¼/C0xI/C2ðJxIþHÞþTdþu¼/C0XðxIÞðJxIþHÞþTdþu;
ð61Þ
For a nadir pointing spacecraft, the attitude of the spacecraft is
represented by the rotation of the spacecraft body frame relative
to the local vertical and local horizontal (LVLH) frame. Therefore,
we will represent the quaternion and spacecraft body rate in
terms of the rotations of the spacecraft body frame relative to
the LVLH frame. Let x=[x1,x2,x3]Tbe the body rate with re
spect to the LVLH frame represented in the body frame,
xlvlh= [0,x0,0]Tbe the orbit (and LVLH frame) rate with respect
to the inertial frame, represented in the LVLH frame. Let vbe
the speed of the spacecraft, rbe the distance from the spacecraft
to the center of the Earth, pbe the orbit period, then for circular
orbit spacecraft, we have
x0¼v
r¼2p
p: ð62Þ
LetAb
lrepresent the transformation matrix from the LVLH frame to
the spacecraft body frame. Then, xIcan be expressed by
xI¼xþAb
lxlvlh¼xþxb
lvlh ð63Þ
where xb
lvlhis the rate of the LVLH frame with respect to the inertial
frame, represented in the body frame. From (19),_Ab
l¼/C0x/C2Ab
l,
therefore, _xIis given by
_xI¼ _xþ_Ab
lxlvlhþAb
l_xlvlh¼ _x/C0x/C2Ab
lxlvlh
¼ _x/C0x/C2xb
lvlh ð64Þ
where we assumed that _xlvlhis small and can be neglected.2Using
Eqs. (63) and (64) , we can rewrite Eq. (50) as
J_x¼Jx/C2xb
lvlh/C0/C1
/C0x/C2ðJxÞ/C0x/C2Jxb
lvlh/C0/C1
/C0xb
lvlh/C2ðJxÞ
/C0xb
lvlh/C2Jxb
lvlh/C0/C1
/C0x/C2H/C0xb
lvlh/C2HþTdþu
¼fx;xb
lvlh;H/C0/C1
þTdþu: ð65Þ
Let /C22q¼½q0;q1;q2;q3/C138T¼½q0;qT/C138T¼cosa
2/C0/C1
;^eTsina
2/C0/C1 /C2/C3Tbe the quater
nion representing the rotation of the body frame relative to the
LVLH frame, where ^eis the unit length rotational axis and ais the
rotation angle about ^e. Therefore, the reduced kinematics equation
becomes
_q1
_q2
_q32
643
75¼1
2q0/C0q3q2
q3 q0/C0q1
/C0q2q1 q02
643
75x1
x2
x32
643
75¼gðq1;q2;q3;xÞ: ð66Þ
From (42),
Ab
l¼2q2
0/C01þ2q2
12q1q2þ2q0q32q1q3/C02q0q2
2q1q2/C02q0q32q2
0/C01þ2q2
22q2q3þ2q0q1
2q1q3þ2q0q22q2q3/C02q0q12q2
0/C01þ2q2
32
643
75:
3.3.2. The linearized nadir pointing spacecraft model
It is difﬁcult to design a controller with speciﬁed performance
using the nonlinear spacecraft system model described by (65)and (66) . The common practice is to design the controller using a
linearized system and then check if the designed controller works
for the original nonlinear system using simulation and/or test. For
a nadir pointing spacecraft system, we need the closed loop
spacecraft system to have the following features: (a) the space
craft body rate with respect to the LVLH frame is as small as pos
sible, ideally, x= 0; and (b) the spacecraft body frame is aligned
with the LVLH frame, i.e., the error is as small as possible, ideally,
q1=q2=q3= 0. Since the rotation axis length is always 1, this im
plies that the rotation angle a= 0. Therefore the linearized model
is the ﬁrst order model of Taylor expansion of the nonlinear sys
tem (65) and (66) about x= 0 and q1=q2=q3= 0. By using qua
ternion representation of Ab
l, assuming Jis almost diagonal
(which is almost always true in real spacecraft designs), and
neglecting high order terms of q1,q2, and q3, we have the follow
ing relations.
xb
lvlh¼Ab
lxlvlh¼2q1q2þ2q0q3
2q2
0/C01þ2q2
2
2q2q3/C02q0q12
643
75x0/C12/C12/C12/C12/C12/C12/C12x/C250
q1¼q2¼q3/C250/C252q3
1
/C02q12
643
75x0:
ð67Þ
Using (5), we have
xb
lvlh/C2Jxb
lvlh/C0/C1/C12/C12x/C250
q1¼q2¼q3/C250
¼02 q1x0 x0
/C02q1x0 0 /C02q3x0
/C0x0 2q3x0 02
643
752J11q3x0
J22x0
/C02J33q1x02
643
75/C12/C12/C12/C12/C12/C12/C12
x/C250
q1¼q2¼q3/C250
/C25x2
02ðJ22/C0J33Þq1
0
2ðJ22/C0J11Þq32
643
75;
ð68Þ
xb
lvlh/C2H/C12/C12x/C250
q1¼q2¼q3/C250¼02 q1x0 x0
/C02q1x0 0 /C02q3x0
/C0x0 2q3x0 02
643
750
h2
02
643
75/C12/C12/C12/C12/C12/C12/C12
x/C250
q1¼q2¼q3/C250
/C25x02h2q1
0
2h2q32
643
75:
ð69Þ
Using (67)–(69) , we have
@f
@x/C12/C12/C12/C12
x/C250
q1¼q2¼q3/C250/C25/C0JXxb
lvlh/C0/C1
þXJxb
lvlh/C0/C1
/C0Xxb
lvlh/C0/C1
J
þXðHÞ; ð70Þ
@f
@q/C12/C12/C12/C12 x/C250
q1¼q2¼q3/C250¼@/C0xb
lvlh/C2Jxb
lvlh/C0/C1
/C0xb
lvlh/C2H/C0/C1
@q/C12/C12/C12/C12 x/C250
q1¼q2¼q3/C250
/C252x2
0ðJ33/C0J22Þ/C02h2x000
000
00 2 x2
0ðJ11/C0J22Þ/C02h2x02
643
75;
ð71Þ
@g
@x/C12/C12/C12/C12
x/C250
q1¼q2¼q3/C250/C251
2I3; ð72Þ
2This assumption is true for most satellites as long as the orbit eccentricity is
small, i.e., the orbit is close to a circle.Y. Yang / Annual Reviews in Control 36 (2012) 198–219 207Author's personal copy
@g
@q/C12/C12/C12/C12
x/C250
q1¼q2¼q3/C250/C251
203; ð73Þ
where I3is a 3 /C23 dimensional identity matrix, 0 3is a 3 /C23 dimen
sional zero matrix. (70) can be simpliﬁed further as follows.
JXxb
lvlh/C0/C1
¼/C0J13x00J11x0
/C0J23x00J21x0
/C0J33x00J31x02
6643
775¼00 J
11x0
00 0
/C0J33x00 J02
6643
775:ð74Þ
XJxb
lvlh/C0/C1
¼0 /C0J32x0J22x0
J32x0 0 /C0J12x0
/C0J22x0J12x0 02
6643
775¼00 J
22x0
00 0
/C0J22x0002
6643
775:
ð75Þ
Xxb
lvlh/C0/C1
J¼J31x0 J32x0 J33x0
000
/C0J11x0/C0J12x0/C0J13x02
6643
775¼00 J
33x0
00 0
/C0J11x0002
6643
775:
ð76Þ
XðHÞ¼00 h2
00 0
/C0h2002
643
75: ð77Þ
Therefore
@f
@x/C12/C12/C12/C12x/C250
q1¼q2¼q3/C250¼00 /C0ðJ11/C0J22þJ33Þx0þh2
00 0
ðJ11/C0J22þJ33Þx0/C0h2002
66643
7775:
ð78Þ
For many nadir pointing satellites, we need to model distur
bance torque in the linearized model. For low Earth orbit space
craft, aerodynamic torque and gravity gradient torque are the
dominant disturbance torques. It is difﬁcult to model the aero
dynamic torque because it is related to solar activity, geomagnetic
index, spacecraft geometry, spacecraft attitude, spacecraft altitude,
and many other factors, but it is known that the gravity gradient
torque can be modeled by (see Sidi, 1997 )
Tgg¼3x2
0ðJ33/C0J22Þ/
3x2
0ðJ33/C0J11Þh
02
66643
7775: ð79Þ
where /and hare the Euler angles for the roll and the pitch.
For small Euler angles (see Wertz, 1978 ),/=2q1and h=2q2,
this gives
Tgg¼6x2
0ðJ33/C0J22Þq1
6x2
0ðJ33/C0J11Þq2
02
66643
7775: ð80Þ
From (65),
J_x/C25@f
@xxþ@f
@qqþTdþu: ð81Þ
Assuming Td=Tgg, and combining Eqs. (81), (71)–(73), (78) , and
(80), we have the quaternion based linearized spacecraft system
described by100 0 0 0
010 0 0 0001 0 0 0000 J
11J12J13
000 J21J22J23
000 J31J32J332
6666666643
777777775_q
1
_q2
_q3
_x1
_x2
_x32
6666666643
777777775
¼000 :50 0
0000 :50
00000 :5
f
41 0000 f46
0f52 0000
00 f63f64002
6666666643
777777775q
1
q2
q3
x1
x2
x32
6666666643
777777775þ0
00
u
x
uy
uz2
6666666643
777777775ð82Þ
where f41¼8ðJ33/C0J22Þx2
0/C02h2x0;f46¼ð /C0 J11þJ22/C0J33Þx0þh2;f64
¼/C0f46;f52¼6ðJ33/C0J11Þx2
0, and f63¼2ðJ11/C0J22Þx2
0/C02h2x0.I ti s
straightforward to check that the linearized spacecraft model is
fully controllable. Therefore, all modern control design methods in
linear system theory can be applied directly, and the designed linear
system is guaranteed to be stable.
4. Attitude determination
Attitude determination is very important for two reasons. First,
control engineers need to know if the spacecraft attitude is in the
right attitude. Scond, if the spacecraft attitude is not in the perfect
position, the attitude information will be compared automatically
with the desired attitude, and the error information is then used
to calculate how much action is needed for each actuator to bring
the spacecraft to the desired attitude.
From the Section 2.3.4 , we have seen that to determine the
frame rotation, we need to know the coordinates of two vector
pairs before and after the rotation. Given this coordinate informa
tion, we can determine the rotational axis and the rotational angle,
which determine the quaternion describing the attitude deviation
of the body frame from the desired frame. This intuition has been
used by many researchers to develop their attitude determination
methods, such as Black (1964), Wahba (1965), Shuster and Oh
(1981), BarItzhack and Oshman (1985), Shuster (1993), Reynolds
(1998), and Markley (2002) . In this section, we will ﬁrst introduce
Wahba’s problem ( Wahba, 1965 ), then Davenport’s formula
(Davenport, 1965 ), then a wellknown method QUEST ( Shuster &
Oh, 1981 ), an analytic solution for a special case of Wahba’s
problem developed in Reynolds (1998) and Markley (2002) , and
ﬁnally our analytic solution to the general Wahba’s problem.
4.1. Wahba’s problem
Suppose that we have observed two astronomical objects such
as stars, or the Sun, or the Earth, or measured some ambient vector
ﬁeld such as the Earth’s magnetic ﬁeld; and we represent the mea
surement as two unit vectors b1and b2in the spacecraft body
frame. We use unit vectors because the length of the vectors hasno information relevant to the attitude determination and unit
length makes expression simpler. To determine the spacecraft atti
tude, it is also necessary to know the same two unit vectors r
1and
r2represented in some reference frame. The reference frame is
usually taken to be an inertial frame or local vertical local horizon
tal frame. The attitude to be determined is then the rotational ma
trix or the quaternion that rotates these vectors from the reference
frame to the spacecraft body frame. Therefore one can ﬁnd an atti
tude matrix such that
Ar1¼b1; ð83aÞ
Ar2¼b2: ð83bÞ208 Y. Yang / Annual Reviews in Control 36 (2012) 198–219Author's personal copy
(83) implies
b1/C1b2¼ðAr1Þ/C1ðAr2Þ¼rT
1ATAr2¼r1/C1r2: ð84Þ
In general, given two sets of mknown reference vectors { r1,...,rm}
and mobservation vectors { b1,...,bm},mP2, ﬁnd the proper rota
tional matrix Awhich brings the ﬁrst set into the best least squares
coincidence with the second, i.e.,
min
A1
2Xm
i¼1kbi/C0Arik2: ð85Þ
This problem was ﬁrst deﬁned by Wahba and is called Wahba’s
problem ( Wahba, 1965 ) which is the base of the most attitude
determination methods.
4.2. Davenport’s formula
All popular methods, such as QUEST ( Shuster & Oh, 1981 ), ESOQ
(Mortari, 1997 ), and FOMA ( Markley, 1993 ), use Davenport’s q
method ( Davenport, 1965 )(Kmatrix derivation is accessible in
Keat (1977) ). Rewrite (85) and use the facts that biandriare unit
vectors and Ais orthogonal matrix, we have
1
2Xm
i¼1kbi/C0Arik2¼m/C0Xm
i¼1bT
iAri¼m/C0TrðWTAVÞ; ð86Þ
where W=[b1,...,bm],V=[r1,...,rm], and Tr(/C1) represents the
trace of the matrix in the argument. Using (43), we have
TrðWTAVÞ¼TrðWTq2
0/C0qTq/C0/C1
Iþ2qqT/C02q0XðqÞ/C0/C1
VÞ
¼q2
0/C0qTq/C0/C1
TrðWTVÞþ2TrðqqTVWTÞ
/C02q0TrðWTXðqÞVÞ: ð87Þ
Let B=WVT,r=Tr(B),S=B+BT, and ZT=[B23/C0B32,B31/C0B13,
B12/C0B21]. The second term of (87) can be rewritten as
2TrðqqTVWTÞ¼qTSq: ð88Þ
Since X(Z)=BT/C0B,X(q)T=/C0X(q), and Tr(X(q)X(Z)) =/C02qTZ, the
third term of (87) can be rewritten as
2q0TrðXðqÞVWTÞ¼q0TrðXðqÞBTþBXðqÞTÞ¼q0TrðXðqÞBTþXðqÞTBÞ
¼q0TrðXðqÞðBT/C0BÞÞ ¼ q0TrðXðqÞXðZÞÞ
¼/C0 2q0qTZ: ð89Þ
Substituting (88) and (89) into (87) produces
TrðWTAVÞ¼ q2
0/C0qTq/C0/C1rþqTSqþ2q0qTZ
¼½q0qT/C138r ZT
ZS/C0rI"#
q0
q/C20/C21
:¼/C22qTK/C22q: ð90Þ
Therefore,
min
A1
2Xm
i¼1kbi/C0Arik2¼m/C0max
ATrðWTAVÞ¼m/C0max
/C22q¼1/C22qTK/C22q:ð91Þ
By introducing the Lagrange multiplier kfor the unit length con
straint of k/C22qk¼1, we reduce Wahba’s problem to Davenport’s
problem
max
k;/C22q/C22qTK/C22q/C0k/C22qT/C22q: ð92Þ
Taking the derivative of (92) gives the optimal solution which
satisﬁes
K/C22q¼k/C22q: ð93Þ
The optimization problem is reduced to ﬁnding the largest eigen
value of Kand its corresponding eigenvector which is Davenport’s
formula.4.3. Quaternion estimation using QUEST, FOMA, and ESOQ
In the early of 1980s, the computation of the largest eigenvalue
and its corresponding eigenvector of the Kmatrix in an onboard
computer was a burden. Shuster and Oh (1981) developed QUEST
algorithm to approximately solve (93). By using the Cayley
Hamilton theorem (cf. Rugh, 1993 ),Shuster and Oh (1981) derived
the ﬁrst analytic formula of the characteristic polynomial of the
Kmatrix which is a polynomial of degree of 4, given as
fðkÞ¼k4/C0ðaþbÞk2/C0ckþðabþcr/C0dÞ¼0; ð94Þ
where r= 0.5 Tr(S)=Tr(B),j=Tr(adj(S)),D= det( S),a=r2/C0j,
b=r2+ZTZ,c=D+ZTSZ,d=ZTS2Z.
For many applications, the largest eigenvalue may be approxi
mated by k/C25m.Shuster and Oh (1981) suggested using Newton
Raphson iteration to ﬁnd the kusing the initial guess k0=m.T o
calculate the eigenvector using k, Shuster used the Rodriguez
parameters deﬁned as follows
p¼q
q0¼qtana
2/C16/C17
:
Since K/C22q¼k/C22q, from the Kmatrix, it is easy to see that
½ðkþrÞI/C0S/C138p¼Z:
pcan be obtained by solving linear system equations. Once pis
available, the quaternion is given by
/C22q¼1ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
1þpTppp
1/C20/C21
:
To avoid the possible singularity in Rodriguez parameter, Shuster
and Oh developed a method of sequential rotations which avoids
the singularity. This method is widely recognized and is refereed
to as the QUEST method.
In 1993, Markley (1993) derived an equivalent characteristic
polynomial for the Kmatrix and also used Newton’s method for
his expression of the polynomial to ﬁnd the largest eigenvalue k
iteratively. Markley’s method is now refereed to as the FOMA
algorithm. By using a different derivation, Mortari (1997) found
another equivalent characteristic polynomial for the Kmatrix. He
proposed an algorithm based on Newton’s method for this
expression of the polynomial and refereed to it as the ESOQ
algorithm.
4.4. Attitude determination using two vector measurements
Though QUEST is very efﬁcient, if the attitude determination is
based on only two vector measurements, there is a simpler method
which is an analytic solution ( Markley, 2002 ).
4.4.1. The minimumangle rotation quaternion
First, it is worthwhile to notice that for the quaternion which
maps the reference vector r1to the body frame vector b1, the min
imal rotational angle ais determined by cos( a)=b1/C1r1; using the
minimumangle rotation quaternion, the rotational axis must be
perpendicular to r1and b1and satisfy the righthand rule, which
means that the unit length rotational axis is given by ^e¼b1/C2r1
sinðaÞ.
Using the following identities of the trigonometry ( Polyanin &
Manzhirov, 2007 )
1/C0cosðaÞ
2¼sin2a
2/C16/C17
;
cota
2/C16/C17
¼1þcosðaÞ
sinðaÞ;
we can verify that the minimumangle rotation quaternion is given
byY. Yang / Annual Reviews in Control 36 (2012) 198–219 209Author's personal copy
1ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
2ð1þb1/C1r1p
Þð1þb1/C1r1;b1/C2r1Þ
¼ð1þcosðaÞ;b1/C2r1Þﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
1
2ð1þcosðaÞÞs
¼ð1þcosðaÞ;b1/C2r1Þﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
1/C0cosðaÞ
2ð1/C0cos2ðaÞÞs
¼ð1þcosðaÞ;b1/C2r1Þsina
2/C0/C1
sinðaÞ
¼1þcosðaÞ
sinðaÞ;b1/C2r1
sinðaÞ/C18/C19
sina
2/C16/C17
¼cota
2/C16/C17
;^e/C16/C17
sina
2/C16/C17
¼cosa
2/C16/C17
;^esina
2/C16/C17 /C16/C17
¼/C22qmin: ð95Þ
4.4.2. The general rotation quaternion
Denote /C22qð^e;aÞas the quaternion that has rotational axis ^eand
rotational angle a. The most general rotation that maps r1tob1
is given by
/C22q1¼/C22qðr1;/rÞ/C10 /C22qmin/C10/C22qðb1;/bÞ; ð96Þ
where /band /rare arbitrary angles of rotation about b1and r1,
respectively. Using (1)–(3), (25) , and the facts that
sinðaþbÞ¼sinðaÞcosðbÞþcosðaÞsinðbÞ; ð97Þ
and
cosðaþbÞ¼cosðaÞcosðbÞ/C0sinðaÞsinðbÞ; ð98Þ
we can reduce (96) as follows.
ð1þb1/C1r1;b1/C2r1Þ/C10 cos/b
2/C18/C19
;b1sin/b
2/C18/C19 /C18/C19
¼ð 1þb1/C1r1Þcos/b
2/C18/C19
/C0ðb1/C2r1Þ/C1b1sin/b
2/C18/C19
;/C18
ð1þb1/C1r1Þb1sin/b
2/C18/C19
þðb1/C2r1Þcos/b
2/C18/C19
þðb1/C2r1Þ/C2b1sin/b
2/C18/C19 /C19
¼ð 1þb1/C1r1Þcos/b
2/C18/C19
;ð1þb1/C1r1Þb1sin/b
2/C18/C19 /C18
þðb1/C2r1Þcos/b
2/C18/C19
þðr1/C0ðb1/C1r1Þb1Þsin/b
2/C18/C19 /C19
¼ð 1þb1/C1r1Þcos/b
2/C18/C19
;ðb1þr1Þsin/b
2/C18/C19 /C18
þðb1/C2r1Þcos/b
2/C18/C19 /C19
: ð99Þ
Thus,
cos/r
2/C18/C19
;r1sin/r
2/C18/C19 /C18/C19
/C10ð1þb1/C1r1;b1/C2r1Þ/C10 cos/b
2/C18/C19
;b1sin/b
2/C18/C19 /C18/C19
¼cos/r
2/C18/C19
;r1sin/r
2/C18/C19 /C18/C19
/C10ð 1þb1/C1r1Þcos/b
2/C18/C19
;/C18
ðb1þr1Þsin/b
2/C18/C19
þðb1/C2r1Þcos/b
2/C18/C19 /C19
: ð100ÞLetq0and qbe the scalar part and vector part of the quaternion
deﬁned by (100) . using (3) and (98) , we have
q0¼ð1þb1/C1r1Þcos/r
2/C18/C19
cos/b
2/C18/C19
/C0r1/C1ðb1þr1Þsin/r
2/C18/C19
sin/b
2/C18/C19
/C0r1/C1ðb1/C2r1Þsin/r
2/C18/C19
cos/b
2/C18/C19
¼ð1þb1/C1r1Þcos/r
2/C18/C19
cos/b
2/C18/C19
/C0ð1þb1/C1r1Þsin/r
2/C18/C19
sin/b
2/C18/C19
¼ð1þb1/C1r1Þcos/r
2/C18/C19
cos/b
2/C18/C19
/C0sin/r
2/C18/C19
sin/b
2/C18/C19 /C18/C19
¼ð1þb1/C1r1Þcos/rþ/b
2/C18/C19
: ð101Þ
From (100) , using (2), (97), and (98) , we have
q¼ð1þb1/C1r1Þr1cos/b
2/C18/C19
sin/r
2/C18/C19
þðb1þr1Þsin/b
2/C18/C19
cos/r
2/C18/C19
þðb1/C2r1Þcos/b
2/C18/C19
cos/r
2/C18/C19
þr1/C2ðb1þr1Þsin/r
2/C18/C19
sin/b
2/C18/C19
þr1/C2ðb1/C2r1Þsin/r
2/C18/C19
cos/b
2/C18/C19
¼r1cos/b
2/C18/C19
sin/r
2/C18/C19
þðb1/C1r1Þr1cos/b
2/C18/C19
sin/r
2/C18/C19
þðb1þr1Þsin/b
2/C18/C19
cos/r
2/C18/C19
þðb1/C2r1Þcos/r
2/C18/C19
cos/b
2/C18/C19
/C0ðb1/C2r1Þsin/r
2/C18/C19
sin/b
2/C18/C19
þb1sin/r
2/C18/C19
cos/b
2/C18/C19
/C0ðb1/C1r1Þr1cos/b
2/C18/C19
sin/r
2/C18/C19
¼ðb1þr1Þsin/b
2/C18/C19
cos/r
2/C18/C19
þðb1þr1Þsin/r
2/C18/C19
cos/b
2/C18/C19
þðb1/C2r1Þcos/r
2/C18/C19
cos/b
2/C18/C19
/C0sin/r
2/C18/C19
sin/b
2/C18/C19 /C18/C19
¼ðb1þr1Þsin/rþ/b
2/C18/C19
þðb1/C2r1Þcos/rþ/b
2/C18/C19
¼ðb1þr1Þsin/
2/C18/C19
þðb1/C2r1Þcos/
2/C18/C19
; ð102Þ
where /=/r+/b. Combining (96),(95),(100) ,(101) , and (102)
yields
/C22q1¼1ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
2ð1þb1/C1r1Þp ð1þb1/C1r1Þcos/
2/C18/C19
;ðb1/C2r1Þcos/
2/C18/C19 /C18
þðb1þr1Þsin/
2/C18/C19 /C19
: ð103Þ
Similarly, the most general rotation that maps r2tob2is given by
/C22q2¼1ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
2ð1þb2/C1r2Þp ð1þb2/C1r2Þcosw
2/C18/C19
;ðb2/C2r2Þcosw
2/C18/C19 /C18
þðb2þr2Þsinw
2/C18/C19 /C19
ð104Þ
for some angle w.210 Y. Yang / Annual Reviews in Control 36 (2012) 198–219Author's personal copy
4.4.3. Attitude determination using two vector measurements
As every quaternion in the family of /C22q1ð/Þmaps r1tob1and
every quaternion in the family of /C22q2ðwÞmaps r2tob2, we need to
ﬁnd a quaternion /C22qwhich is in both families so that it maps r1to
b1andr2tob2simultaneously. This means that both the scalar part
and the vector part of /C22q1and /C22q2are equal for some /andw. For the
scalar part, we need
ð1þr1/C1b1Þﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
2ð1þr1/C1b1Þp cos/
2/C18/C19
¼ð1þr2/C1b2Þﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
2ð1þr2/C1b2Þp cosw
2/C18/C19
() cosw
2/C18/C19
¼ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
1þr1/C1b1
1þr2/C1b2s
cos/
2/C18/C19
ð105aÞ
() sinw
2/C18/C19
¼ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
1þr2/C1b2/C0ð1þr1/C1b1Þcos2/
2/C0/C1
1þr2/C1b2s
: ð105bÞ
For vector part, we need
ðb1/C2r1Þﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
ð1þb1/C1r1Þp cos/
2/C18/C19
þðb1þr1Þﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
ð1þb1/C1r1Þp sin/
2/C18/C19
¼ðb2/C2r2Þﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
ð1þb2/C1r2Þp cosw
2/C18/C19
þðb2þr2Þﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
ð1þb2/C1r2Þp sinw
2/C18/C19
ð106Þ
Substituting (105a) and (105b) into (106) yields
ðb1/C2r1Þcos/
2/C18/C19
þðb1þr1Þsin/
2/C18/C19
¼1þb1/C1r1
1þb2/C1r2cos/
2/C18/C19
ðb2/C2r2Þþðb2þr2Þﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
ð1þb1/C1r1Þp
ð1þb2/C1r2Þ
/C2ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
1þb2/C1r2/C0ð1þb1/C1r1Þcos2/
2/C18/C19s
:
Apply dot product of b2/C0r2on both side, the righthand side
vanishes because ( b2+r2)/C1(b2/C0r2) = 0 and ( b2/C2r2)/C1(b2/C0r2)=0 .
Therefore,
ðb1/C2r1Þ/C1ðb2/C0r2Þcos/
2/C18/C19
þðb1þr1Þ/C1ðb2/C0r2Þsin/
2/C18/C19
¼0;
or
sin/
2/C0/C1
cos/
2/C0/C1¼/C0ðb1/C2r1Þ/C1ðb2/C0r2Þ
ðb1þr1Þ/C1ðb2/C0r2Þ: ð107Þ
For any two vectors aandb,i fais proportional to b, we denote this
relation as a/b. Clearly, if a/b, and b/c, then a/c. From (103)
and (107) , we have
/C22q/1þb1/C1r1;b1/C2r1þsin/
2/C0/C1
cos/
2/C0/C1ðb1þr1Þ !
/ð 1þb1/C1r1Þ;b1/C2r1/C0ðb1/C2r1Þ/C1ðb2/C0r2Þ
ðb1þr1Þ/C1ðb2/C0r2Þðb1þr1Þ/C18/C19
/ðb1þr1Þ/C1ðb2/C0r2Þ; ð
ðb1/C2r1Þððb1þr1Þ/C1ðb2/C0r2ÞÞ /C0 ðð b1/C2r1Þ/C1ðb2/C0r2ÞÞðb1þr1Þ
ð1þb1/C1r1Þ/C19
ð108Þ
In view of (84), the scalar part of (108) implies
ðb1þr1Þ/C1ðb2/C0r2Þ¼b2/C1r1/C0b1/C1r2: ð109Þ
For the numerator of the vector part of (108) , using (2), (1) , and the
fact that b1andr1are unit vectors, we haveðb1/C2r1Þððb1þr1Þ/C1ðb2/C0r2Þ Þ/C0ð ð b1/C2r1Þ/C1ðb2/C0r2ÞÞðb1
þr1Þ
¼ðb2/C0r2Þ/C2ð ð b1/C2r1Þ/C2ðb1þr1ÞÞ
¼ðb2/C0r2Þ/C2ðr1/C0ðr1/C1b1Þb1þðb1/C1r1Þr1/C0b1Þ
¼ðb2/C0r2Þ/C2ðr1/C0b1þðr1/C0b1Þðr1/C1b1ÞÞ
¼ð ðb2/C0r2Þ/C2ðr1/C0b1ÞÞð1þr1/C1b1Þ
¼ð ðb1/C0r1Þ/C2ðb2/C0r2ÞÞð1þr1/C1b1Þð 110Þ
Combining (108)–(110) yields
/C22q/ðb2/C1r1/C0b1/C1r2;ðb1/C0r1Þ/C2ðb2/C0r2ÞÞ:
Normalizing the righthand side gives
/C22q¼ðb2/C1r1/C0b1/C1r2;ðb1/C0r1Þ/C2ðb2/C0r2ÞÞﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
ðb2/C1r1/C0b1/C1r2Þ2þk ðb1/C0r1Þ/C2ðb2/C0r2Þk2q ð111Þ
Therefore, given known ephemeris r1andr2, observations b1andb2,
the attitude quaternion is uniquely deﬁned. The attitude quaternion
is extremely simple though the derivation is tedious.
4.5. Anatytic formula for quaternion estimation
Although all ﬂight experiences were successful for QUEST
method, using a speciﬁc example, Markley and Mortari (2000)
demonstrated that QUEST may not converge. In fact, it is well
known that Newton’s method is inadequate for general use since
it may fail to converge to a solution. Even if it does converge, its
behavior may be erratic in regions where the function is not
convex ( Nocedal & Wright, 1999 ). On the other hand, (94) is a
polynomial of degree 4 which admits analytic solutions. In this sec
tion, we provide the analytic solution based on the characteristic
polynomial of the Kmatrix presented in Mortari (1997) which is
given as follows.
pðxÞ¼x4þax3þbx2þcxþd¼0; ð112Þ
where a¼0;b¼/C02ðtr½B/C138þtr½adjðSÞ/C138 /C0zTz;S¼BþBT;adjðSÞthe
adjugate matrix of S;c¼/C0tr½adjðKÞ/C138, and d¼detðKÞare all known
parameters. Several different methods were proposed in the last
several hundred years ( HerbisonEvans, 1994 ) to solve (112) .
Recently, Shmakov (2011) found a universal method to ﬁnd the
roots of the general quartic polynomial. A special case of this meth
od is simpler than all previous methods and it can be directlyadopted to solve (112) . We summarize the steps as follows.
First, (112) can be factorized as the product of two quadratic
polynomials as
ðx2þg1xþh1Þðx2þg2þh2Þ
¼x4þðg1þg2Þx3þðg1g2þh1þh2Þx2
þðg1h2þg2h1Þxþh1h2¼0: ð113Þ
Moreover, g1,g2,h1, and h2are solutions of two quadratic equations
deﬁned by
g2/C0agþ2
3b/C0y¼0 ð114aÞ
h2/C0yþb
3/C18/C19
hþd¼0 ð114bÞ
where yis the real root(s) of the following cubic polynomial
y3þpyþq¼y3þac/C0b2
3/C04d !
y
þabc
3/C0a2d/C02
27b3/C0c2þ8
3bd/C18/C19
¼0: ð115ÞY. Yang / Annual Reviews in Control 36 (2012) 198–219 211Author's personal copy
The roots of the cubic equation can be obtained by the famous Card
ano’s formula ( Polyanin & Manzhirov, 2007 )
y1¼ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
/C0q
2þﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
q
2/C16/C17 2
þp
3/C16/C17 3r
3s
þﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
/C0q
2/C0ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
q
2/C16/C17 2
þp
3/C16/C17 3r
3s
ð116aÞ
y2¼x1ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
/C0q
2þﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
q
2/C16/C17 2
þp
3/C16/C17 3r
3s
þx2ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ/C0
q
2/C0ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
q
2/C16/C17 2
þp
3/C16/C17 3r
3s
ð116bÞ
y3¼x2ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
/C0q
2þﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
q
2/C16/C17 2
þp
3/C16/C17 3r
3s
þx1ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ/C0
q
2/C0ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
q
2/C16/C17 2
þp
3/C16/C17 3r
3s
ð116cÞ
where x1¼/C01þiﬃﬃ
3p
2andx2¼/C01/C0iﬃﬃ
3p
2. Given a real y, from (114b) ,w e
have
g1;2¼/C6ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
y/C02
3br
; ð117aÞ
h1;2¼yþb
3/C6ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
ðyþb=3Þ2/C04dq
2ð117bÞ
and ﬁnally, the roots of the quartic (112) are given by
x1;2¼/C0g1/C6ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
g2
1/C04h1q
2; ð118aÞ
x3;4¼/C0g2/C6ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
g2
2/C04h2q
2: ð118bÞ
The rest problem is how to get ephemeris and observation vec
tors. These vector pairs can be any astronomical vectors, such as
the Sun vector pairs, the Earth vector pairs, the Earth’s magnet vec
tor pairs, any star vector pair. There are a lot of literature that dis
cusses this. For example, for the sun direction measurement, one
can read ( Liebe & Mobasser, 2001 ). For the ephemeris sun direc
tion, the formula is given in Vallado (2004) . For geomagnetic vector
measurement, a magnetometer can be used ( Wikipedia, 2011 ). For
the ephemeris geomagnetic vector, the formula is given in Wertz
(1978) . For star tracker and algorithms, one can read ( JerNan
Juang, Hye Young Kim, & Junkins, 2003 ). The details of these topics
are out of the scope of this review.
4.6. Rotation rate determination using vector measurements
The rotation rate of the spacecraft may be needed in the
feedback controller design. Many spacecrafts have equipped with
onboard three axis rategyros to measure the angular rate ( Fortes
cue, Stark, & Swinerd, 2003 ). But some spacecrafts do not install
the rategyros for the economical reason. In this case, angular rate
can be estimated using vector measurements, for example, the
method published in Singla, L Crassida, and Junkins (2003) . In this
section, we present a very simple method.
Let
E¼/C0q1q0 q3/C0q2
/C0q2/C0q3q0 q1
/C0q3q2/C0q1q02
643
75: ð119Þ
Premultiplying 2 Eon both sides of (46a) gives,
x1
x2
x32
643
75¼2/C0q1q0 q3/C0q2
/C0q2/C0q3q0 q1
/C0q3q2/C0q1q02
643
75dq0
dt
dq1
dt
dq2
dt
dq3
dt2
6666643
777775¼2E
d/C22q
dt: ð120Þ
In theory, after we get the quaternion, then take the difference be
tween the current /C22qðtiÞand the previous /C22qðti/C01Þand divided by the
Dt=ti/C0ti/C01to approximated/C22q
dt, we can get the angular rate. How
ever, in practical application, due to the measurement noise, thisangular rate determination based on the differentiation may not
be accurate because of high frequency noise. A low pass Butter
worth digital ﬁlter ( Oppenheim, Schafer, & Buck, 1999 ), whose in
put is the xobtained from (120) and the output is a better
estimation of the angular rate, will signiﬁcantly suppress the noise
and thereby improving the angular rate determination.
5. Attitude control
Control design methods based on quaternion spacecraft model
have been investigated for decades. As we mentioned in Section 3,
most quaternion based design methods use Lyapunov functions
and focus on the global stability; they pay little attention to the
control system performance which is important in practical systemdesign. Only a few researchers considered the performance of the
quaternion based control systems. Using classical frequency do
main method, Paielli and Bach (1993) adopted quaternion based
linear error dynamics to get desired performance for the attitude
control system; Wie, Weiss, and Arapostathis (1989) showed that
there exists some state feedback that globally stabilizes the nonlin
ear spacecraft system and the feedback matrix assigns the closed
loop poles for the dynamics described by the rotational angle about
the rotational axis. These methods are in classical domain and they
are not easy to extend to modern designs. Zhou and Colgren (2005)
obtained a linearized state space model with all components of the
quaternion in the state variables. However, this linearized state
space model is not fully controllable. This explains why many pow
erful design methods in linear control system theory such as pole
assignment, LQR control, and H
1control cannot be directly applied
to the spacecraft control system design if full quaternion based
linearized model is used.
On the other hand, although the Euler angle representation has
a singular point and the representation is dependent on the rota
tional sequential, the linearized Euler angle based spacecraft model
has been proved to be fully controllable. Therefore, all linear sys
tem design methods can be directly applied to spacecraft control
system design for the Euler angle model and these methods are de
scribed in many standard text books, for example, Wie (1998),
Wertz (1978), and Sidi (1997) . More importantly, there are many
successful applications of using these powerful control design
methods, for example, Stoltz, Sivapiragasam, and Anthony (1998)
and Won (1999) .
In Section 3, we showed that the reduced quaternion model
that uses only vector components of the quaternion is fully con
trollable. Moreover, the linearized reduced quaternion models
have some simple and special structure. In this section, we will
consider the design methods based on the reduced quaternionmodels obtained in Section 3. For nadir pointing spacecraft, one
can directly use standard linear control system design methods,
such as LQR design ( Athans & Falb, 1966 ), robust pole assignment
design ( Kautsky, Nichols, & Van Dooren, 1985; Tits & Yang, 1996;
Yang, 1996 ), and H
1design ( Doyle, Glover, Khargonekar, & Fran
cis, 1989 ), for the linearized system. The designed controller can
then be checked by simulation with the original nonlinear space
craft system. For inertial pointing spacecraft, since the linearized
system has a very simple structure, using this linearized reduced
quaternion model, one can derive an analytical formula for LQR
optimal control that is explicitly related to the cost matrices Q
and R. Moreover, it can be shown that under some mild restric
tion, the LQR feedback controller globally stabilizes the original
nonlinear spacecraft. In addition, the LQR controller has a diago
nal structure in the state feedback matrices Dand K, this structure
is actually a robust pole assignment design. The main results pre
sented here are from Athans and Falb (1966), Yang (2012), and
Yang (2012) .212 Y. Yang / Annual Reviews in Control 36 (2012) 198–219Author's personal copy
5.1. LQR design for general linear system
We ﬁrst consider the general linear system described as follows.
_x¼AxþBu;
y¼Cx:ð121Þ
The LQR design is to ﬁnd a state feedback matrix
u¼/C0 ½ D;K/C138x¼/C0Gx
to minimize the following cost function
L¼1
2Z1
0xTQxþuTRu/C0/C1
dt: ð122Þ
where Qand Rare positive deﬁnite matrices, xTQxrepresents the
cost of the performance, uTRurepresents the cost of the fuel con
sumption. The LQR control problem was ﬁrst considered by HALL
(1943) and WIENER (1949) , but Kalman (1960) provided a much
better solution and popularized the design. If Kalman ﬁlter ( Kalman,
1960 ) is used as part of the feedback loop, then the control design
method is the LQG control. Surprisingly, Kalman ﬁlter and LQR con
trol law can be designed separately because of the separation theo
rem obtained by Wonham (1968) .
The optimal control of LQR design is uniquely given by (see
Athans & Falb, 1966 )
uðtÞ¼/C0 R/C01BTFxðtÞ¼/C0 Gx; ð123Þ
where Fis a constant positive deﬁnite matrix which is the solution
of the Lyapunov matrix algebraic equation
/C0FA/C0ATFþFBR/C01BTF/C0Q¼0: ð124Þ
This control law can be directly used for the nadir pointing space
craft without any modiﬁcation. For inertial pointing sapcecarft,
due to the simple structure of the linearized reduced quaternion
model, analytic solution to LQR design can be obtained.
5.2. The LQR design for inertial pointing spacecraft
In this subsection, we consider LQR design for inertial pointing
spacecrafts for which Aand Bare deﬁned in (59). We assume fur
ther that the constant inertia matrix of the spacecraft Jdeﬁned in
(47) is diagonal. This assumption is reasonable because in practical
spacecraft design, Jis always designed close to a diagonal matrix.
In the rest of the discussion of this subsection, we assume further
that Q, and Rare diagonal matrices because Qand Rare oftentimes
selected to be diagonal in engineering design practice. With these
assumptions, the problem can greatly be simpliﬁed.
5.2.1. The analytic solution
It is well known that the LQR feedback (123) guarantees the sta
bility of the linearized closed loop system and minimize the cost
function of (122) that is a combined cost of cumulative control sys
tem error and cumulative fuel consumption.
First we derive the analytical solution for the spacecraft model
(58). Let
F¼F11F12
F21F22/C20/C21
;Q¼Q11 0
0 Q22/C20/C21
; ð125Þ
where the elements of Fand Qin(125) are all 3 by 3 matrices.
Substituting Aand Bdeﬁned in (59),Fand Qdeﬁned in (125) into
(124) , after simple manipulations, we get
F11J/C01R/C01J/C01F11F11J/C01R/C01J/C01F12
F/C01
12JTR/C01J/C01F11FT
12J/C01R/C01J/C01F12"#
¼1
2FT
12þF12/C16/C17
þQ111
2F22
12F22 Q222
43
5:
ð126ÞSince J,Qand Rare positive deﬁnite, noticing that FT
21¼F12, com
paring the (2,2) block on both sides of (126) yields,
F12¼JR1
2Q12
22: ð127Þ
Since J,Q11= diag( q1i),Q22= diag( q2i), and R= diag( ri) are diagonal,
we conclude that F12is diagonal. Substituting (127) into the (1,1)
block of (126) gives,
F11¼JR1
2Q11þ1
2JR1
2Q12
22þQ1
2
22R12J/C16/C17/C18/C19 1
2
: ð128Þ
Therefore, F11is diagonal. Substituting (127) and (128) into the
(2,1) block of (126) gives
F22¼2Q1
2
22Q11þJR1
2Q12
22/C16/C17 12
; ð129Þ
which is also diagonal. Eqs. (127)–(129) give a complete solution of
Lyapunov matrix Eq. (124) . Therefore, (123) can be rewritten as
uðtÞ¼/C0 R/C01BTFxðtÞ¼/C0 ½ R/C01J/C01F11;R/C01J/C01F12/C138x¼/C0 ½ D;K/C138x:ð130Þ
Clearly, matrices Dand Kare diagonal.
5.2.2. The global stability of the design
Next, we show that under some additional conditions, the LQR
optimal control given by (130) globally stabilizes the nonlinear
system described by (56) and (52) . Let P¼Q/C01
2
22R12J, and the Lyapu
nov function be
V¼1
2xT
IPxIþq2
1þq2
2þq2
3þð1/C0q0Þ2: ð131Þ
Then, in view of (123) , the derivative of the Lyapunov function
along the trajectory described by the nonlinear system Eqs. (56)
and (52) is given by
dV
dt¼xT
IP/C0J/C01xI/C2JxI/C0J/C01R/C01½J/C010/C138F11F12
FT
12F22/C20/C21xI
q/C20/C21 /C18/C19
þxT
Iq
¼/C0xT
IPJ/C01xI/C2JxI/C0xT
IPJ/C01R/C01J/C01F11xI/C0xT
IPJ/C01R/C01J/C01F12qþxT
Iq
¼/C0xT
IPJ/C01xI/C2JxI/C0xT
IQ/C01
2
22Q11þ1
2JR1
2Q1
2
22þQ1
2
22R1
2J/C16/C17/C18/C19 1
2xI
¼/C0xT
IQ/C01
2
22R12xI/C2JxI/C0xT
IQ/C01
2
22Q11þ1
2JR1
2Q12
22þQ1
2
22R12J/C16/C17/C18/C19 1
2xI
ð132Þ
Since P,Q,R, and Jare all diagonal positive deﬁnite matrices, the
second term of the last expression is negative deﬁnite. If
Q/C01
22R¼cIi.e.,
R¼cQ22 ð133Þ
orQ/C01
22R¼cJ, i.e.,
R¼cQ22J; ð134Þ
where cis a constant, then the ﬁrst term is vanishing, thereforedV
dtis
negative semideﬁnite, and the nonlinear system described by (56)
and (52) is globally stable with the optimal controller given by
(130) . To show that the closed loop nonlinear system is asymptoti
cally stable, we deﬁne S¼fxj_VðxÞ¼0g. Since Dand Kare full rank
matrices, clearly S={x:x=(xI,q) = (0, q)}. From (56), since
u=/C0DxI/C0Kq–0i fq–0, no solution can always stay in Sexcept
S={x=(xI,q) = (0,0)}. Using Corollary 3.2 in Khalil (1992) , the ori
gin is globally asymptotically stable. By deﬁnition Khalil (1992, p.
111) , the region of attraction of the nonlinear system is the whole
space spanned by x.
In system design practice, if the performance and the local sta
bility are the only design considerations, Qand Rcan be chosen
without any restriction; if the global stability is also required forY. Yang / Annual Reviews in Control 36 (2012) 198–219 213Author's personal copy
the nonlinear spacecraft system, some restriction, though it is mild,
should be placed on Qand R, i.e., either R=cQ22orR=cQ22J, where
cis any positive constant.
5.2.3. The closedloop poles
To establish the relationship between the closed loop poles and
the design matrices Q, and R, we can simplify (130) further as
follows.
D¼R/C01
2Q11þ1
2JR1
2Q12
22þQ1
2
22R12J/C16/C17/C18/C19 1
2
¼diagðdiÞ
¼diagﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
q1i
riþJiiﬃﬃﬃﬃﬃﬃq2i
rirs0
@1
A ð135Þ
with
di¼ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
q1i
riþJiiﬃﬃﬃﬃﬃﬃq2i
rirs
;
and
K¼R/C01
2Q12
22¼diagðkiÞ¼diagﬃﬃﬃﬃﬃﬃq2i
rir/C18/C19
ð136Þ
with
ki¼ﬃﬃﬃﬃﬃﬃq2i
rir
:
Therefore, (130) becomes
uðxÞ¼/C0 ½ D;K/C138x
¼/C0ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
q11
r1þJ11ﬃﬃﬃﬃﬃ
q21
r1qr
00ﬃﬃﬃﬃﬃ
q21
r1q
00
0ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
q12
r2þJ22ﬃﬃﬃﬃﬃ
q22
r2qr
00ﬃﬃﬃﬃﬃ
q22
r2q
0
00ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
q13
r3þJ33ﬃﬃﬃﬃﬃ
q23
r3qr
00ﬃﬃﬃﬃﬃ
q23
r3q2
66666666643
7777777775xI1
xI2
xI3
q1
q2
q32
66666666666643
7777777777775:
ð137Þ
From (58), it is straightforward to write the closed loop system as
follows
dxI
dt
dq
dt2
43
5¼/C0J/C01R/C01
2Q11þþ1
2JR1
2Q12
22þQ1
2
22R12J/C16/C17/C16/C17 1
2/C0J/C01R/C01
2Q12
22
1
2I3 032
643
75xI
q"#
¼/C0d1
J1100 /C0k1
J1100
0/C0d2
J2200 /C0k2
J220
00 /C0d3
J3300 /C0k3
J33
0:5 00000
00 :5 0000
00 0 :5 0002
666666666666666643
77777777777777775
xI1
xI2
xI3
q1
q2
q32
6666666666666643
777777777777775
¼
Ax: ð138Þ
Fori= 1, 2, and 3, let si¼di
Jii;ti¼ki
Jii, and
Ci¼di
Jiiþﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
di
Jii/C16/C172
/C02ki
Jiir
2ki
Jii¼siþﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
s2
i/C02tiq
2ti: ð139ÞThen,
A¼/C0s100 /C0t100
0/C0s200 /C0t20
00 /C0s300 /C0t3
0:50 0 0 0 0
00 :50 0 0 0
00 0 :50 0 02
6666666643
777777775ð140Þ
Let the linear matrix transformation Tij(C) be a matrix with the fol
lowing properties: (a) the ( i,j) element of Tij(C)i sC, (b) the diago
nal elements are ones, (c) all the remaining elements are zeros. It
is well known that the inverse of Tij(C)i s T/C01
ijðCÞ¼Tijð/C0CÞ. Pre
multiplying T41(C1)t o Ais equivalent to multiply the ﬁrst row of
AbyC1and add this result to the 4th row of the matrix. This gives
T41ðC1ÞA¼/C0s1 00 /C0t1 00
0 /C0s200 /C0t20
00 /C0s3 00 /C0t3
/C0s2
1þs1ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
s2
1/C02t1p
2t1þ0:50 0 /C0s1þﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
s2
1/C02t1p
200
00 :50 0 0 0
00 0 :50 0 02
66666666643
7777777775:
ð141Þ
Postmultiplying T41(/C0C1) to this matrix is equivalent to multiply
the 4th column by /C0C1and add this result to the ﬁrst column of
the matrix. This gives, noticing that /C0s1þt1s1þﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
s2
1/C02t1pðÞ
2t1¼/C0s1þﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
s2
1/C02t1p
2
ands1þﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
s2
1/C02t1p
2s1þﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
s2
1/C02t1p
2t1¼s2
1þs1ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
s2
1/C02t1p
2t1/C00:5,
T41ðC1ÞAT41ð/C0C1Þ¼/C0s1þﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
s2
1/C02t1p
200 /C0t1 00
0 /C0s200 /C0t20
00 /C0s3 00 /C0t3
00 0/C0s1/C0ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
s2
1/C02t1p
200
00 :50 0 0 0
00 0 :50 0 02
666666666643
77777777775:
ð142Þ
Repeating similar manipulation, we have
T63ðC3ÞT52ðC2ÞT14ðC1ÞAT41ð/C0C1ÞT52ð/C0C2ÞT63ð/C0C3Þ
¼/C0s1þﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
s2
1/C02t1p
200 /C0t1 00
0/C0siþﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
s2
2/C02t2p
200 /C0t2 0
00/C0s3þﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
s2
3/C02t3p
200 /C0t3
000/C0s1/C0ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
s2
1/C02t1p
200
0000/C0s2/C0ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
s2
2/C02t2p
20
00000/C0s3/C0ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
s2
3/C02t3p
22
6666666666666643
777777777777775:
ð143Þ
Therefore, the closed loop eigenvalues of linear system (138) are
given by, for i= 1, 2, and 3,
ki;kiþ3¼/C0ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
1
Jiiﬃﬃﬃﬃﬃ
q2i
riq
þq1i
J2
iirir
/C6ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
q1i
J2
iiri/C01
Jiiﬃﬃﬃﬃﬃ
q2i
riqr
2: ð144Þ
Eq.(144) provides a lot of useful information for the LQR design.
First, as ri?0, the corresponding pair of eigenvalues go to minus
inﬁnity of the complex plane; as ri?1, the corresponding pair of
eigenvalues go to origin of the complex plane. Second, As long as
q1i>ﬃﬃﬃﬃﬃﬃﬃﬃﬃq2iripJii, the corresponding pair of eigenvalues are real and214 Y. Yang / Annual Reviews in Control 36 (2012) 198–219Author's personal copy
unequal; sincedi
Jii>ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
di
Jii/C16/C172
/C02ki
Jiir
, these two eigenvalues are always
negative. Third, if q1i¼ﬃﬃﬃﬃﬃﬃﬃﬃﬃq2iripJii, there are two equal real negative
eigenvalues. Fourth, if q1i<ﬃﬃﬃﬃﬃﬃﬃﬃﬃq2iripJii, there is a pair of complex
eigenvalues with negative real part. Therefore increasing q1iand
decreasing q2iwill increase the dumping ratio; otherwise, it will de
crease the dumping ratio. Finally, increasing q2iand decreasing ri
will increase the natural frequency; otherwise, it will decrease the
natural frequency. This information can be useful in spacecraft sys
tem design.
Using the LQR design, we implicitly assign the closed loop poles
as deﬁned by (138) and we can balance the requirements on accu
mulative control error and power consumption (both are impor
tant in practical design).
5.2.4. A simulation result
We use an example in Zhou and Colgren (2005) to illustrate the
design procedure. The spacecraft inertia matrix is give by
J¼1200 100 /C0200
100 2200 300
/C0200 300 31002
643
75 ð145Þ
It is clear that the diagonal elements of the matrix are signiﬁ
cantly larger than offdiagonal elements. Assume that the
spacecraft inertia matrix can be approximate by a diagonal matrix
whose diagonal elements are equal to these of J, let Q=
diag(5,5,5,5,5,5) and R= diag(8,8,8), the closed loop poles are
then given as in Table 1 , and the feedback matrix Dand Kare as
follows
D¼31:0663 0 0
04 1 :7118 0
00 4 9 :51152
643
75; ð146ÞK¼0:7905 0 0
00 :7905 0
00 0 :79052
643
75: ð147Þ
We apply the designed feedback controller to the nonlinear space
craft system described by (50) and (52) with the full Monte Carlo
perturbation model described as follows: (a) in inertia matrix J,
the offdiagonal elements are randomly selected between [0,310],
(b) the initial Euler angle errors of the nonlinear spacecraft system
are randomly selected between [0, p] and these initial Euler angles
are converted into quaternion, and (c) the initial angular rates are
randomly selected between [0,0.1] deg/second, and we conduct
300 Monte Carlo simulation runs; the simulated runs are all asymp
totically stable. This result is shown in Fig. 6 .
5.3. Robust pole assignment for inertial pointing spacecraft
5.3.1. Robustness of the closedloop poles
In the previous subsection, we have derived a simple analytic
LQR control design method. The closed loop eigenvalues are
explicitly related to the spacecraft inertia matrix, the selected Q
and Rmatrices. In this subsection, we will show that the LQR
design is equivalent to the pole assignment design. Furthermore,
we will show that the pole assignment design is a robust pole
assignment design. Therefore, the LQR design is equivalent to a
robust pole assignment design which is insensitive to the model
ing error.
First, from (143) and (139) , it is easy to see that
ki;kiþ3¼/C0di
Jii/C6ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
di
Jii/C16/C172
/C02ki
Jiir
2: ð148Þ
Let the desired spacecraft closedloop eigenvalues be given by
ki;kiþ3¼/C0fixin/C6jxinﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
1/C0f2
iq
¼/C0fixin/C6jxid: ð149Þ
Comparing (148) and (149) yields the analytic feedback
controller
ki¼2x2
inJii; ð150Þ
di¼2fixinJii: ð151Þ
Therefore, for any LQR design which minimizes (122) , there is an
implicit set of desired spacecraft closedloop eigenvalues deﬁned
by(144) or(148) or(149) , the diagonal feedback matrices Dand
Kwith diagonal elements given by (150) and (151) assign the
prescribed closedloop eigenvalues. It is shown in the previous
subsection that the closedloop nonlinear system is globally
asymptotically stable if some additional condition holds.
It is well known that for any controllable linear system and for
any prescribed closedloop pole locations, one can always ﬁnd a
state feedback controller such that the closedloop system has
the prescribed pole locations. For multiinput systems, the solution
that achieves the closedloop pole positions is not unique. As an
example, let ( A,B) be a linear system with
A¼00
01/C20/C21
;B¼10
01/C20/C21
:
The openloop system has two eigenvalues (0,1) and the system is
not stable. Assuming that the desired closeloop eigenvalues are
(/C01,/C01), one may select two different feedback matrices
G1¼/C010
0/C02/C20/C21
;G2¼14 /C31010
/C010/C010/C04"#
:
such thatTable 1
Required closedloop poles.
/C00.01273212110421 ± 0.01272387326295i;
/C00.00798572833825 ± 0.00798369205833i;
/C00.00947996395486 ± 0.00947655794419i.
0 200 400 600 800 1000−1−0.8−0.6−0.4−0.200.20.40.60.81
time in secondquaternion outputdesigned controller applied to the perturbed nonlinear spacecraft system
quaternion−1
quaternion−2
quaternion−3
Fig. 6. Monte Carlo simulation for the nonlinear spacecraft model with
perturbation.Y. Yang / Annual Reviews in Control 36 (2012) 198–219 215Author's personal copy
AþBG1¼/C010
0/C01/C20/C21
;
AþBG2¼14 /C31010
/C010/C010/C03"#
:
It is easy to verify that det( kI/C0(A+BG1)) = det( kI/C0(A+BG2)) =
(k+1 )2. Both feedbacks achieve the desired closedloop poles. The
ﬁrst system is robust because any small perturbation will not desta
bilize the system. However, the second system is not robust as a
small perturbation of 10/C010in the left low corner of the matrix
A+BG2will change the closedloop eigenvalues to (1, /C03). We show
that the LQR deﬁned pole assignment is a robust pole assignment.
5.3.2. The robust pole assignment
The robust pole assignment design makes full use of the extra
degrees of freedom in a multiinput system to ﬁnd the most robust
controller from indeﬁnitely many solutions of the pole assignment
feedback matrices. Since the spacecraft attitude control system is a
typical multiinput system that has three control torque inputs
(roll, pitch, and yaw), getting a robust pole assignment design that
is insensitive to the modeling error is very attractive and desirable.
We will show that the controller with diagonal Dand Kproposed in
the previous subsection is a robust pole assignment design.
There are many different robust indices that can be used in ro
bust pole assignment ( Wilkinson, 1965; Kautsky et al., 1985 ). We
will adopt the robust measurement proposed in Yang (1989) as
the design criterion because the algorithms based on this robust
measurement lead to some efﬁcient and effective design ( Sima,
Tits, & Yang, 2006 ). Let Xbe the matrix whose columns are the
unit length closedloop eigenvectors. The robustness of the
closedloop eigenvalues (poles) can be measured by the absolute
value of the determinant of X. Geometrically, this determinant
measures how close the matrix Xis to an orthogonal matrix.
The greater the absolute value of the determinant, the more ro
bust the closedloop eigenvalues will be (see detailed discussions
inYang (1989) and Yang (1996) ). By maximizing the absolute va
lue of the determinant under some constraints, we are guaranteed
that the closedloop poles obtained by the robust pole assignment
design are insensitive to the modeling errors ( Yang, 2012 ). For a
controllable linear system ( A,B), where Bis full column rank,
and any given set of desired closedloop eigenvalues ki, the corre
sponding closedloop eigenvectors ximust be in the subspace (see
Yang, 1996 )
Si¼fx:ðA/C0kIÞx2RcðBÞg; ð152Þ
where
RcðBÞ¼f By :y2Cmg;
mis the rank of B, and Cmis a mdimensional complex space. The
proof is given in Kautsky et al. (1985) . First, using QRdecomposition
onB, we have
B¼½U0U1/C138V
0/C20/C21
:
LetKbe the diagonal matrix whose diagonal elements are the
desired eigenvalues, and Xbe the matrix whose columns are com
posed of the eigenvectors corresponding to the desired eigenvalues.
Then,
BG¼U0VG¼XKX/C01/C0A:
Premultiplication of UT
0and UT
1gives
VG¼UT
0ðXKX/C01/C0AÞð 153aÞ
0¼UT
1ðXKX/C01/C0AÞð 153bÞThe ﬁrst relation gives the closedloop feedback matrix as
G¼V/C01UT
0ðA/C0XKX/C01Þ: ð154Þ
The second relation shows that ximust be in the subspace Si,o r
UT
1ðA/C0kiIÞxi¼0:
Therefore, ximust be in the null space of ( AT/C0kiI)U1. Using QR
decomposition again on ( AT/C0kiI)U1gives
ðAT/C0kiIÞU1¼½W1iW2i/C138R
0/C20/C21
:
W2iforms the basis of Si. We now apply the similar procedure to the
linearized spacecraft system (58). Since Bcan be written as
B¼I0
0I/C20/C21J/C01
0"#
;
therefore and
U0¼I
0/C20/C21
;U1¼0
I/C20/C21
;V¼J/C01: ð155Þ
Since A is deﬁned as in (59), we can write a similar decomposition
of (AT/C0kiI)U1as
ðAT/C0kiIÞU1¼/C0kiI1
2I
0/C0kiI"#
0
I/C20/C21
¼1
2I
/C0kiI"#
¼0:5I/C0kiI
/C0kiI/C00:5I/C20/C21I
0/C20/C21
;
ð156Þ
therefore,
W1i¼0:5I
/C0kiI/C20/C21
;
which is orthogonal to the subspace
W2i¼/C0kiI
/C00:5I/C20/C21
;
where W2iforms the base of Si. Though [ W1iW2i] may not be a uni
tary matrix, it is clear that W2iforms the basis of Si(and we can al
ways normalize W2ito make it orthonormal). For the sake of
simplicity, we prove that the design given by (137) is a robust pole
assignment only for the case that all eigenvalues are real. For robust
pole assignmnet design, since xi2S i¼W2i, the closedloop eigen
vector matrix must have the form,
X¼k1p11 k2p21 k3p31 k4p41 k5p51 k6p61
k1p12 k2p22 k3p32 k4p42 k5p52 k6p62
k1p13 k2p23 k3p33 k4p43 k5p53 k6p63
0:5p110:5p210:5p310:5p410:5p510:5p61
0:5p120:5p220:5p320:5p420:5p520:5p62
0:5p130:5p230:5p330:5p430:5p530:5p632
66666666666643
7777777777775;
where pij,i=1 ,2 ,3 ,4 ,5 ,6 , j= 1, 2, 3 are the real parameters that will
be used to optimize the objective function. Therefore, the robust
pole assignment design for linearized spacecraft system (11)
becomes3
3InYang (1996) ,jdetðXÞjis used as the measurement of the robustness. If the
maximum of jdetðXÞjis achieved at /C0det(X⁄), let X0be the matrix obtained by
changing the sign of some column of X⁄,jdetðXÞjis also achieved at X0. Therefore, we
can simply use det( X) here as the objective function in our problem.216 Y. Yang / Annual Reviews in Control 36 (2012) 198–219Author's personal copy
max det ðXÞ
s:t:X3
j¼1jkij2þ0:52/C16/C17
p2
ij¼1;
i¼1;2;3;4;5;6:ð157Þ
It is wellknown that an optimal solution for a general optimization
problem has to satisfy the KKT condition (see Nocedal & Wright,
1999 ). For (157) , let
L¼detðXÞ/C0l1X3
j¼1jk1j2þ0:52/C16/C17
p2
1j/C01 !
/C0l2X3
j¼1jk2j2þ0:52/C16/C17
p2
2j/C01 !
/C0l3X3
j¼1jk3j2þ0:52/C16/C17
p2
3j/C01 !
/C0l4X3
j¼1jk4j2þ0:52/C16/C17
p2
4j/C01 !
/C0l5X3
j¼1jk5j2þ0:52/C16/C17
p2
5j/C01 !
/C0l6X3
j¼1jk6j2þ0:52/C16/C17
p2
6j/C01 !
;
the KKT condition is as follows.
@L
@pij¼0;i¼1;2;3;4;5;6;j¼1;2;3; ð158aÞ
/C0@L
@l1¼X3
j¼1ðjk1j2þ0:52Þp2
1j/C01¼0; ð158bÞ
/C0@L
@l2¼X3
j¼1ðjk2j2þ0:52Þp2
2j/C01¼0; ð158cÞ
/C0@L
@l3¼X3
j¼1ðjk3j2þ0:52Þp2
3j/C01¼0: ð158dÞ
/C0@L
@l4¼X3
j¼1ðjk4j2þ0:52Þp2
4j/C01¼0; ð158eÞ
/C0@L
@l5¼X3
j¼1ðjk5j2þ0:52Þp2
5j/C01¼0; ð158fÞ
/C0@L
@l6¼X3
j¼1ðjk6j2þ0:52Þp2
6j/C01¼0: ð158gÞ
It is tedious but straightforward to verify that the following solution
satisﬁes the KKT condition (see Yang, 2012 ).
pi;i¼ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
1
jkij2þ0:52q
; i¼j;i¼1;2;3;j¼1;2;3
piþ3;j¼ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
1
jkiþ3j2þ0:52q
;i¼j;i¼1;2;3;j¼1;2;3
pi;j¼0; i–j;i–jþ3;i¼1;2;3;4;5;6;j¼1;2;3:8
>>>>>><
>>>>>>:
ð159Þ
Clearly, this set of pi,jmeets (158b)–(158g) . To show that the set of
pi,isatisﬁes (158a) , we use the observation that@detðXÞ
@pij¼0 for all pij
deﬁned in (159) except p11,p22,p33,p41,p52,p63, therefore,@L
@pij¼0
for all pijR{p11,p22,p33,p41,p52,p63}. As an example, let us consider
@L
@p12, since@detðXÞ
@p12¼k00 k4p41 00
0 k3p33 00 k6p63
00 0 :5p41 00
0:5p22 00 0 :5p52 0
00 :5p33 00 0 :5p63/C12/C12/C12/C12/C12/C12/C12/C12/C12/C12/C12/C12/C12/C12/C12/C12/C12/C12/C12/C12/C12/C12/C12/C12
þ0:500 k
4p41 00
k2p22 00 k5p52 0
0 k3p33 00 k6p63
00 0 :5p41 00
00 :5p33 00 0 :5p63/C12/C12/C12/C12/C12/C12/C12/C12/C12/C12/C12/C12/C12/C12/C12/C12/C12/C12/C12/C12/C12/C12/C12/C12¼0;
because the ﬁrst row and the third row are proportional in the ﬁrst
determinant and the ﬁrst row and the fourth row are proportional
in the second determinant. Therefore, we have
@L
@p12¼@detðXÞ
@p12/C02l1p12ðjk1j2þ0:52Þjp12¼0¼0: ð160Þ
Similarly, we can use the same way to check all pijR{p11,p22,p33,
p41,p52,p63}. For each of these 6 pij2fp11;p22;p33;p41;p52;
p63g;@detðXÞ
@pij–0, one can select one of the multipliers l1,l2,l3,l4,
l5,l6to make@L
@pij¼0. Therefore, the set of pijsatisfying (159) is a
candidate of the optimal solution of (157) . This proves that the
closedloop eigenvector matrix have the form as
X¼k1p1;1 00 k4p4;1 00
0 k2p2;2 00 k5p5;2 0
00 k3p3;3 00 k6p6;3
0:5p1;1 00 0 :5p4;1 00
00 :5p2;2 00 0 :5p5;2 0
00 0 :5p3;3 00 0 :5p6;32
6666666643
777777775
¼diagðk
ipi;iÞdiagðkiþ3piþ3;iÞ
diagð0:5pi;iÞdiagð0:5piþ3;iÞ"#
;i¼1;2;3: ð161Þ
It is easy to verify that
X/C01¼diag1
ðki/C0kiþ3Þpi;i/C16/C17
diag/C0kiþ3
0:5ðki/C0kiþ3Þpi;i/C16/C17
diag/C01
ðki/C0kiþ3Þpiþ3;i/C16/C17
diagki
0:5ðki/C0kiþ3Þpiþ3;i/C16/C172
643
75: ð162Þ
Substituting (155) ,(161) , and (162) into (154) gives the robust pole
assignment state feedback
G¼JI 0½/C13800
0:5I0/C20/C21
/C0diagðkipi;iÞdiagðkiþ3piþ3;iÞ
diagð0:5pi;iÞdiagð0:5piþ3;iÞ"#  
diagðkiÞ 0
0 diag ðkiþ3Þ/C20/C21
X/C01/C19
¼/C0 Jdiagðkipi;iÞdiagðkiþ3piþ3;iÞ/C2/C3 diagðkiÞ 0
0 diag ðkiþ3Þ/C20/C21
X/C01
¼/C0 Jdiagðk2
ipi;iÞdiagðk2
iþ3piþ3;iÞhi
/C2diag1
ðki/C0kiþ3Þpi;i/C16/C17
diag/C0kiþ3
0:5ðki/C0kiþ3Þpi;i/C16/C17
diag/C01
ðki/C0kiþ3Þpiþ3;i/C16/C17
diagki
0:5ðki/C0kiþ3Þpiþ3;i/C16/C172
643
75
¼/C0 Jdiagk2
i/C0k2
iþ3
ki/C0kiþ3/C16/C17
;diagk2
iþ3ki/C0k2
ikiþ3
0:5ðki/C0kiþ3Þ/C16/C17 hi
¼/C0 Jdiagðkiþkiþ3Þ;diagð/C02kikiþ3Þ ½/C138 ; ð163Þ
or
G¼diagð/C0Jiiðkiþkiþ3ÞÞ;diagð2Jiiðkikiþ3ÞÞ ½/C138 : ð164Þ
Substituting (144) into (164) yields (137) . Therefore, we conclude
that the LQR design method is actually a robust pole assignmentY. Yang / Annual Reviews in Control 36 (2012) 198–219 217Author's personal copy
design for the linearized system (58), and the feedback matrix
G=/C0[D,K] is composed of two diagonal matrices Dand K. With the
same restriction as discussed before, the robust pole assignment con
troller globally stabilizes the nonlinear spacecraft system. Finally, we
would like to point out that robust pole assignment design will also
reduce the impact of the disturbance torques on the system output.
The detailed discussion can be found in Yang (2012) .
6. Future research
We presented some recent development on quaternion based
spacecraft modeling, attitude determination and control. We
showed that the reduced quaternion models are attractive because
the linearized reduced quaternion models are controllable. The
controllability of the linearized models allows us to make full use
of the linear control system theory and design methods. The lim
ited results on attitude controller design have demonstrated some
attractive features in the designed control system, such as global
stability of the nonlinear spacecraft, analytic LQR solutions for
optimal performance, robustness to the modeling uncertainty,
and disturbance rejection to the external disturbance.
We expect that the reduced quaternion model can be extended
to other control system designs in aerospace engineering, such as
soft landing of a lunar module presented in Zhang and Duan
(2012) , spacecraft dock and rendezvous studied in Fejzic (2008) ,
missile attitude control discussed in Song, Kim, and Nam (2006) ,
orbitraising attitude control proposed in Sidi (1997) and Stoltz
et al. (1998) , and lauch vehicle attitude control reported in Stott
and Shtessel (2012) .
To effectively use the design method, the quaternion determi
nation algorithm is needed. QUEST method has been widely known
as a robust and efﬁcient algorithm ( Cheng & Shuster, 2007 ). But we
believe that the analytic solution sketched in this review may be a
more attractive method because it provides not only an accurate
solution in theory but also a predictable computational cost with
out using iteration. However, more detailed and extensive tests
will be needed.
We have not addressed the quaternion estimation algorithms
such as Kalman ﬁlter and extended Kalman ﬁlter. Currently, non
linear and extended Kalman ﬁlters are the choices for many on
board spacecraft attitude estimation because spacecraft system is
a nonlinear system ( Crassidis, Markley, & Cheng, 2007 ). However,
many nonlinear and extended Kalman ﬁlters are not proved to be
convergent and their computational cost is much higher than lin
ear Kalman ﬁlter. Since the linearized reduced quaternion models
are fully controllable, linear Kalman ﬁlter should be applied to
the linearized reduced quaternion models directly. Though we be
lieve that using linear Kalman ﬁlter with a linearized reduced qua
ternion model is a better choice, extensive simulation and ﬂight
test may be conducted in the future.
The design method presented in this review does not consider
the actuator saturation restrictions which always exist in the real
spacecraft systems and need to be considered. For discrete sys
tems, the LQR design with the actuator saturation restrictions is
equivalent to a convex quadratic programming problem ( Wright,
1993 ). This problem can be solved very efﬁciently using interior
point methods. This will be another future research direction given
the fact that some very efﬁcient interiorpoint method, such as arc
search method ( Yang, 2011 ), is recently obtained.
References
Vallado, David A. (2004). Fundamentals of astrodynamics and applications .E l
Segundo, CA: Microcosm Press.
Kuipers, JB (1998). Quaternions and rotation sequences: A primer with applications to
orbits, aerospace, and virtual reality . Princeton and Oxford: Princeton University
Press.Golub, G. H., & Van Loan, C. F. (1989). Matrix computations . Baltimore: The Johns
Hopkins University press.
Hughes, Peter C. (1986). Spacecraft attitude dynamics . New York, USA: Wiley.
Wie, B. (1998). Vehicle dynamics and control . AIAA Education Series, Reston, VA.
Wen, J., & KreutzDelgado, K. (1991). The attitude control problem. IEEE Transactions
on Automatic Control, 36 , 1148–1161.
Boskovic, J., Li, S., & Mehra, R. (2001). Robust adaptive variable structure control of
spacecraft under control input saturation. Journal of Guidance, Control and
Dynamics, 24 , 14–22.
Wallsgrove, R., & Akella, M. (2005). Globally stabilizing saturated control in the
presence of bounded unknown disturbances. Journal of Guidance, Control and
Dynamics, 28 , 957–963.
Paielli, R., & Bach, R. (1993). Control with realization of linear error dynamics.
Journal of Guidance, Control and Dynamics, 16 , 182–189.
Zhou, Z., & Colgren, R. (2005). Nonlinear spacecraft attitude tracking controller for
large nonconstant rate commands. International Journal of Control, 78 , 311–325.
Sidi, M. (1997). Spacecraft dynamics and control: A practical engineering approach .
Cambridge, UK: Cambridge University Press.
Serway, R. A., & Jewett, J. W. (2004). Physics for scientists and engineers . Belmont, CA:
Books/Cole Thomson Learing.
Wertz, J. (1978). Spacecraft attitude determination and control . Dordrecht, Holland:
Kluwer Academic Publishers.
Yang, Y. (2010). Quaternion based model for momentum biased nadir pointing
spacecraft. Aerospace Science and Technology, 14 , 199–202.
Yang, Y. (2012). Analytic LQR design for spacecraft control system based on
quaternion model. Journal of Aerospace Engineering, 25 , 448–453.
Black, H. D. (1964). A passive system for determining the attitude of a satellite. AIAA
Journal, 2 , 1350–1351.
Wahba, G. (1965). A least squares estimate of spacecraft attitude. SIAM Review, 7 ,
409.
Shuster, M. D., & Oh, S. D. (1981). Threeaxis attitude determination form vector
observations. Journal of Guidance and Control, 4 , 70–77.
BarItzhack, l. Y., & Oshman, Y. (1985). Attitude determination from vector
observations: Quaternion estimation. IEEE Transactions on Aerospace and
Electronic Systems, 21 , 128–136.
Shuster, M. D. (1993). A survey of attitude presentation. Journal of the Astronautical
Sciences, 27 , 439–517.
Reynolds, R. G. (1998). Quaternion parameterization and a simple algorithm for
global attitude estimation. Journal of Guidance, Control and Dynamics, 21 ,
669–671.
Markley, F. L. (2002). Fast quaternion attitude estimation from two vector
measurements. Journal of Guidance, Control and Dynamics, 25 , 411–414.
Mortari, D. (1997). ESOQ: A closedform solution to the Wahba problem. Journal of
Astronautical Sciences, 45 (2), 195–205.
Markley, F. L. (1993). Attitude determination using vector observations: A fast
optimal matrix algorithm. Journal of Astronautical Sciences, 41 (2), 261–280.
Davenport (1965). A vector approach to the algebra of rotations with applications .
Technical Report, NASA, X54665437.
Keat, J. (1977). Analysis of leastsquares attitude determination . Routine DOAOP,
Technical Report, Comp. Sc. Corp., CSC/TM77/6034.
Rugh, W. J. (1993). Linear system theory . Englewood Cliffs, New Jersey: PrenticeHall,
Inc., pp. 4–5.
Markley, F. L., & Mortari, D. (2000). Quaternion attitude estimation using vector
observations. Journal of Astronautical Sciences, 48 (2), 359–380.
Nocedal, J., & Wright, S. J. (1999). Numerical optimization . New York: Springer
Verlag.
HerbisonEvans, D. (1994). Solving quartics and cubics for graphics . TR94487,
University of Sydney, Sydney, Australia.
Shmakov, S. L. (2011). A universal method of solving quartic equations. International
Journal of Pure and Applied Mathematics, 71 (2), 251–259.
Polyanin, Andrei D., & Manzhirov, Alexander V. (2007). Handbook of mathematics for
engineers and scientists . Noca Raton, FL: Chapman & Hall/CRC.
Carl Christian Liebe, & Sohrab Mobasser. (2001). MEMS based sun sensor. In IEEE
proceedings of aerospace conference (pp. 1565–1572).
Wikipedia (2011). http://en.wikipedia.org/wiki/Magnetometer .
JerNan Juang, Hye Young Kim, & Junkins, John L. (2003). An efﬁcient and robust
singular value method for star pattern recognition and attitude determination .
Technical Report, NASA/TM2003212142, Langley Research Center, NASA,
Hampton, Virginia.
Fortescue, P., Stark, J., & Swinerd, G. (2003). Spacecraft systems engineering . West
Sussex, England: John Wiley & Sons.
Singla, P., L Crassida, J., & Junkins, J. L. (2003). Spacecraft angular rate estimation
algorithms for star trackerbased attitude determination. Advances in the
Astronautical Sciences, 114 , 1303–1316.
Oppenheim, A. V., Schafer, R. W., & Buck, J. R. (1999). Discretetime signal processing .
New York: Prentice Hall.
Wie, B., Weiss, H., & Arapostathis, A. (1989). Quaternion feedback regulator for
spacecraft eigenaxis rotations. Journal of Guidance, Control and Dynamics, 12 ,
375–380.
Stoltz, P. M., Sivapiragasam, S., & Anthony, T. (1998). Satellite orbitraising using
LQR control with ﬁxed thrusters. Advances in the Astronautical Sciences, 98 ,
109–120.
Won, ChangHee (1999). Comparative study of various control methods for attitude
control of a LEO satellite. Aerospace Science and Technology, 3 , 323–333.
Athans, M., & Falb, P. L. (1966). Optimal control: An introduction to the theory and its
applications . New York: McGrawHill, Inc.218 Y. Yang / Annual Reviews in Control 36 (2012) 198–219Author's personal copy
Kautsky, J., Nichols, N. K., & Van Dooren, P. (1985). Robust pole assignment in linear
state feedback. International Journal of Control, 41 , 1129–1155.
Tits, André L., & Yang, Y. (1996). Globally convergent algorithms for robust pole
assignment by state feedback. IEEE Transactions on Automatic Control, 41 ,
1432–1452.
Yang, Y. (1996). Robust system design: Pole assignment approach . College Park, MD:
University of Maryland at College Park.
Doyle, J., Glover, K., Khargonekar, P., & Francis, B. (1989). Statespace solutions to
standard H2and H1control problems. IEEE Transactions on Automatic Control,
34, 831–847.
Yang, Y. (2012). Quaternion based LQR spacecraft control design is a robust pole
assignment design. Journal of Aerospace Engineering .http://dx.doi.org/10.1061/
(ASCE)AS.19435525.0000232.
HALL, A. C. (1943). The analysis and synthesis of linear servomechanisms . Cambridge,
MA: The Technology Press.
WIENER, N. (1949). Extrapolation, interpolation, and smoothing of stationary time
series . Cambridge, MA: MIT Press.
Kalman, R. E. (1960). Contributions to the theory of optimal control. Boletin de la
Sociedad Matematica Mexicana, 5 , 102–119.
Kalman, R. E. (1960). A new approach to linear ﬁltering and prediction problem.
Transactions of the ASME – Journal of Basic Engineering, 82D , 35–45.
Wonham, W. M. (1968). On the separation theorem of stochastic control. SIAM
Journal on Control, 6 , 312–326.
Khalil, Hassan K. (1992). Nonlinear system . New York: Macmillan Publishing
Company.
Wilkinson, J. H. (1965). The algebraic eigenvalue problem . Oxford: Charendon Press.
Yang, Y. (1989). A new condition number of eigenvalue and its application in
control theory. Journal of Computational Mathematics, 7 , 15–21.
Sima, V., Tits, A. L., & Yang, Y. (2006). Computational experience with robust pole
assignment algorithms .I n2006 IEEE conference on computer aided control systems
design , Munich, Germany.
Zhang, F., Duan, G. R. (2012). Integrated translational and rotational control for the
terminal landing phase of a lunar modele. Aerospace Sciences and Technologies .
<http://dx.doi.org/10.1016/j.ast.2012.07.003 >.Fejzic, A. (2008). Development of control and autonomy algorithm for docking to
complex tumbling satellites . Master Thesis, MIT.
Song, C., Kim, S., & Nam, H. (2006). Robust control of the missile attitude based on
quaternion feedback. Control Engineering Practice, 14 , 811–818.
Stott, J. E., & Shtessel (2012). Launch vehicle attitude control using sliding mode
control and observation techniques. Journal of the Franklin Institute, 349 ,
397–412.
Cheng, J., & Shuster, M. D. (2007). The speed of attitude estimation. Advances in the
Astronautical Sciences, 127 (Part 1), 101–116.
Crassidis, J. L., Markley, L., & Cheng, J. (2007). Survey of nonlinear attitude
estimation methods. Journal of Guidance, Control and Dynamics, 30 , 12–28.
Wright, S. J. (1993). Interior point methods for optimal control of discrete time
systems. Journal of Optimization Theory and Applications, 77 , 161–187.
Yang, Y. (2011). A polynomial arcsearch interiorpoint algorithm for convex
quadratic programming. European Journal of Operational Research, 215 ,
25–38.
Yaguang Yang received the B.S. (1982) and M.S. (1985) degrees from the Depart
ment of Automatic Control Engineering at Huazhong University of Science and
Technology, China. From 1985 to 1990, he was a lecturer at Zhejiang University inChina. In 1996, he received the Ph.D degree from the Department of Electrical and
Computer Engineering at the University of Maryland, College Park. Since then, he
has worked in industry and the US government. He designed and implemented
control systems for astronomical telescope system at UKIRT, for ﬁber optical
equipment manufacture system at CIENA, for free space optical communication
system at ITT, for spacecraft and rocket systems at Orbital Sciences Corporation.
Currently he is a research project manager at the US Nuclear RegulatoryCommission. He managed Advanced Reactor Controls and Advanced Reactor
Instrumentation projects for the Next Generation Nuclear Power Plant (NGNP) with
hydrogen production. He has also conducted research and published journal papers
in linear programming, nonlinear programming, and optimization on Riemannian
Manifolds.Y. Yang / Annual Reviews in Control 36 (2012) 198–219 219
View publication statsMathNet.Ru
All Russian mathematical portal
A. I. Ignatov, V. V. Sazonov, Stabilization of the spacecraf t in the solar orientation mode
by electromagnetic attitude control system, Keldysh Institute preprints , 2017, 080
DOI: 10.20948/prepr201780
Use of the allRussian mathematical portal MathNet.Ru imp lies that you have read and agreed to these terms of use
http://www.mathnet.ru/eng/agreement
Download details:
IP: 79.139.215.77
December 17, 2023, 00:56:10ИПМ им.М.В.Келдыша РАН   •  Электронная библиотека
Препринты ИПМ   •  Препринт № 80 за 2017 г.
ISSN 20712898 (Print)
ISSN 20712901 (Online)
Игнатов А.И.,  Сазонов В.В.
Стабилизация режима
солнечной ориентации
искусственного спутника
Земли электромагнитной
системой управления
Рекомендуемая форма библиографической ссылки:   Игнатов А.И., Сазонов В.В.
Стабилизация режима солнечной ориентации искусственного спутника Земли электромагнитной
системой управления // Препринты ИПМ им.  М.В.Келдыша. 2017. №  80. 31  с.
doi:10.20948/prepr201780  
URL: http://library.keldysh.ru/preprint.asp?id=201780РОССИЙСКАЯ АКАДЕМИЯ НАУК  
Ордена Ленина  
ИНСТИТУТ ПРИКЛАДНОЙ МАТЕМАТИКИ  
им. М.В.  Келдыша  
 
 
 
 
 
 
 
А.И. Игнатов, В.В. Сазонов  
 
 
 
 
 
 
 
СТАБИЛИЗАЦИЯ РЕЖИМА СОЛНЕЧНОЙ ОРИЕНТАЦИИ  
ИСКУССТВЕННОГО СПУТН ИКА ЗЕМЛИ  
ЭЛЕКТРОМАГНИТНОЙ СИС ТЕМОЙ УПРАВЛЕНИЯ  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Москва – 2017Аннотация  
 
Исследован режим солнечной ориентации искусственного спутника Зе м
ли. Параметры спутника соответствуют параметрам спутников «Бион М» и 
«Фотон М 4». В этом режиме нормаль к плоскости солнечных батарей спутн и
ка неизменно направлена на Солнце, продольная ось лежит в плоскости орб и
ты, абсолютная угловая скорость спутника весьма мала. Режим стабилизируе т
ся с помощью электромагнитов, взаимодействующих с магнитным полем Земли 
и вращающегося маховика, создающего пост оянный гиростатический мом ент 
вдоль продольной оси спутника. Такой момент можно создать и с помощью с и
стемы двигателей маховиков, постоянство гиростатического момента означ ает, 
что эта система будет функционировать без насыщения. Управление вращ а
тельным движением спутника осуществл яется за счет изменения токов в элек
тромагнитах . Исследова ны два закона управления , уменьшающие угловую ск о
рость спутника и стабилизирующие солнечную ориентацию . Их реализация  не 
требует проведения сложных измерений, достаточно иметь показания  солне ч
ного д атчика,  трехосного магнитометра и аппаратуру для их обработки.  Эффе к
тивность законов управления проверена посредством  математического  моде
лирования  движения  спутника  относительно  центра  масс  под действием  гра
витационного  и аэродинамического  моментов,  а также момента,  создаваемого  
электромагн итами.  
 
A.I. Ignatov, V.V. Sazonov. Stabilization of the spacecraft in the solar 
orientation mode by electromagnetic attitude control system. We investigate solar  
orientation  mode of an Earth artificial satellite . Satell ite parameters  are close to 
parameters of the spacecraft Bion M and Foton M 4. In this mode , the normal  to the 
plane  of satellite solar  batteries  is permanently  directed on the Sun,  the satellite  
longitudinal  axis lies in the orbital plane, absolute angula r rate of the satellite  is 
practically equal  to zero.  The mode is stabilized by electromagnet s interact ing with 
the Earth magnetic field and the flywheel with constant gyrostatic  moment directed 
along the satellite longitudinal  axis. Such a moment can be c reated also by a system 
of reaction  wheel s. Constancy  of gyrostatic  moment means that such a system will 
be operated without saturation . The sat ellite  attitude control is implemented by 
change of  currents in  the electromagnet s. We investigate two control l aws that reduce 
the sat ellite angular rate and stabilize the solar orientation mode . Measurements of a 
triaxial magnetometer and solar sensor need only to form these laws.  Realization of 
the laws requires a few watts of electric power. We test the laws by the mathematical 
modeling the spacecraft  attitude motion taking into account the gravitational and the  
aerodynamic torques acted upon the spacecraft, as well as the  control torques 
produced by the electromagnetic  system.  As the results of modeling show , the 
investigated orientation mode  provides very small residual acce lerations  onboard  the 
satellite . 
  
 3 
1. Уравнения движения спутника.  Спутник считаем гиростатом, центр 
масс которого – точка 
O  – движется по геоцентрической орбите. Для записи 
уравнений движения  спутника относительно центра масс и  интерпретации р е
зультатов математического  моделирования  введем три правы е декартовы с и
стем ы координат.  
Связанная  со спутником система 
321xxOx  образована его главными це н
тральными осями инерции. Несколько упрощая модель, полагаем, что оси этой 
системы связаны с характерными элемента ми конструкции спу тника: ось 
1Ox  
параллельна его продольной оси, ось 
2Ox  перпендикулярна плоскости солне ч
ных батарей.  Гиростатический момент спутника напра влен по оси 
1Ox . Ниже , 
если не оговорено о собо, компоненты векторов и координаты т очек относятся к 
системе 
321xxOx . 
Начало гринвичской  системы 
321yyCy  находится в центре Земли, пло с
кость 
21yCy  совпадает с плоскостью экватора, ось 
1Cy  пересекает гринвичский 
меридиан, ось 
3Cy  направлена к Северному полюсу.  
В квазиинерциальной системе координат 
1 2 3CZ Z Z  ось 
2CZ  параллельна 
вектору кинетического момента орбитального движения спу тника, ось 
3CZ  ле
жит в плоскости экватора и направлена в восходящий узел оскулирующей о р
биты спутника. Абсолютная величина угловой скорости этой системы не пр е
вышает 7
сут . 
 Положение системы 
321xxOx  относительно гринвичской  системы з ададим 
нормированным кватернионом 
),,,(3 2 1 0 qqqq Q , 
1|| ||Q . Кватернионная фо р
мула перехода между этими системами координат имеет вид 
1
3 2 1 3 2 1 ),,,0( ),,,0( Qxxx Q yyy  
. Матрицу перехода от системы 
321xxOx  к 
гринвичской системе обозначим 
3
1,|| ||jiijb ; где 
ijb  – косинус угла м ежду осями 
iCy
 и 
jOx . Элементы этой матрицы выражаются через компоненты 
Q  по фо р
мулам: 
 
. ), (2 ), (2), (2 , ), (2), (2 ), (2 ,
2
22
12
32
0 33 10 23 32 20 13 3110 32 232
32
12
22
0 22 30 12 2120 31 13 30 21 122
32
22
12
0 11
q q q q b qq qq b qqqq bqqqq b q q q q b qqqq bqqqq b qq qq b q q q q b
      
 
 
Положение системы 
321xxOx  относительно системы 
1 2 3CZ Z Z  будем зад а
вать углами 
 , 
 и 
, которые введем с помощью следующего условия. Е сли 
точку 
C  перенести в точку 
O , то систему 
1 2 3CZ Z Z  можно перевести в си стему 
321xxOx
 тремя последовательными поворотами: 1) на угол 
2/  вокруг оси 
2CZ
; 2) на угол  
 вокруг оси 
3CZ , полученной после первого поворота; 3) на 
угол 
  вокруг оси 
1CZ , полученной после первых двух поворотов и совпада ю
щей с осью 
1Ox . Матрицу перехода от системы 
321xxOx  к квазиинерциальной  
 4 
системе обозначим 
3
1,|| ||jiija ; где 
ija  – косинус угла между осями 
iCZ  и 
jOx . 
Элемент ы этой матрицы выражаются через введенные углы п о формулам  
 
      
cos sin11a ,  
 cos sin sin sin cos12  a , 
      
sin21a ,   
cos cos22a , 
      
cos cos31a ,  
 cos sin cos sin sin32  a , 
 
    
 sin sin sin cos cos13  a , 
    
sin cos23a , 
    
 sin sin cos cos sin33  a . 
 
Уравнения  движения  спутника  состоят  из двух  подсистем.  Одна  подс и
стема  описывает  движение  центра  масс  спутника , другая  его движение отн о
сительно  центра  масс  – вращательное  движение.  Подсистема  уравне ний дви
жения  центра  масс  записывается  в гринвичской  системе  координат . В ней 
учитываются нецентральность  гравитационного  поля  Земли  и сопротивление  
атмосферы. Нецентральность  поля  учитывается  с точностью  до членов  поря д
ка (16,16) включительно  в разложении  гравитационного  потенциала  Земли  в 
ряд по шаровым  функциям.  Атмосфера  считается  вращающейся  вместе  с Зем
лей, ее  плотность  рассчитывается  согласно  модели ГОСТ Р  25645.166 2004.  
Параметры  атмосферы  и баллистический  коэффициент  спутника  считаются 
неизменными  на всем  интервале  интегрирования  уравнений  движения.  
Подсистема  уравнений  вращательного  движения  образована  уравнени я
ми Эйлера для компонент абсолютной угловой скорости спутника 
),,(3 2 1ω
 и кинематическими  уравнениями для кватерниона 
Q . В урав
нениях  Эйлера  учитываются  гравитационный  и восстанавливающий аэрод и
намический  моменты , а также управляющий момент, создаваемый электр о
магнитами . Для гравитационного  момента  существует  простое  аналитическое  
выражение  [1]. Аэродинамиче ский  момент  
aM   вычисля лся в предположении,  
что спутник  имеет  форму  прямого  кругового  цилиндра  с двумя  прикрепле н
ными  к нему одинаковыми  прямоугольными  пластинами  солнечными  батар е
ями.  Ось цилиндра совпадает с осью 
1Ox , радиус цилиндра – 
R, высота – 
cL. 
Пластины расположены  в плоскости  
31xOx  симметрично  относительно  оси 
1Ox
. Стороны  пластин  параллельны  осям  
1Ox  и 
3Ox , суммарная  площадь  пла
стин – 
bS. Координаты  геометрич еских  центров  масс цилиндра  и пластин  суть 
)0,0,(cz
 и 
)0,0,(bz . Полагая  столкновени я молекул  атмо сферы  со спутником  
абсолютно  неупру гими, аэродинамическ ий моме нт представим  в виде  [1] 
 
Pvv M   ||a a
. 
 
Здесь 
a  – плотность атмосферы в точке 
O , 
v – скорость точки 
O  относ и
тельно гринвичской си стемы координат,  
vPP  – первый момент  геометр и
ческой  фигуры,  которая представляет собой проекци ю внешней  оболочки  
 5 
спутника  на плоскость  
v , перпендикуля рную вектору  
v. Вектор 
P  лежит в  
плоскости  
v  и вычисляется  относительно  проекции  на 
v  точки  
O. Фор
мула  для 
aM  инвариантна  относительно  замены 
vPP p , где 
p – прои з
вольный  скаляр. По этой причине  функцию  
vP  можно  задавать,  не связывая  
себя условием 
vP . В частности,  компоненты  вектора  
vPv||  удобно  за
давать в системе координат 
321xxOx . Для рассматриваемого спутника  этот 
вектор можно взять в виде  
 
 22
1 2 3 2 | | | v | 2 v v | v |, 0, 02
c c c b bπz R z RL z S    v P v
, 
 
где 
iv  – компоненты вектора 
v . 
Механический момент, создаваемый электромагнитами, имеет вид  
 
BL Mc
.                                                  (1) 
 
Здесь 
),,(3 2 1 LLLL  – собственный магнитный момент электромагнитов, 
) , ,(3 2 1 BBBB
 – магнитная индукция МПЗ в точке 
O , 

3
1jjiyj i bB B
    
)3,2,1(i , 
yiB
 – компоненты вектора магнитной индукции МПЗ в точке 
O , рассчитыва е
мые согласно модел и IGRF . 
Уравнения  Эйлера и кинематические уравнения  для кватерниона имеют  
вид 
 
1 2 3 2 3 2 3 3 2 () x x l B l B       
,
2 1 3 1 3 3 1 1 3 3 31( ) ( v )11x x l B l B p h         
, 
 
3 1 2 1 2 1 2 2 1 2 2 (1 )( ) ( v ) x x l B l B p h              
, 
 
) ( 23 3 22 11 0 E q q q q  
, 
 
23 3 2 10 1 ) ( 2  q q qqE
,                                     (2) 
 
) ( 23 1 13 20 2 E q q q q  
, 
 
12 21 3 0 3 ) ( 2  q q qqE
, 
 
31
II
,    
13 2
III ,    
53
rE ,    
2
32
22
1 xx x r  , 
 
2
22
1 2 2 3
1 1 12| v | | v | v vc b b c c
aR z S z RL zpI I I   

.  
 6 
Здесь 
ix  – компоненты геоцентрического радиуса вектора 
r  точки 
O , 
iI – 
моменты инерции спутника отн осительно осей 
iOx , 
1/ILli i  
)3,2,1(i , 
hI1 – 
гиростатическ ий момент спутника ( направлен по оси 
1Ox ), 
E  и 
E  – гравит а
ционный параметр Земли и ее угловая скорость . 
Чтобы замкнуть подсистему уравн ений вращательного движения, к 
уравнениям ( 2) надо добавить соотношен ия, описывающие изменение вели
чин 
il. Явный вид этих соотношений  будет указан н иже. 
Приведем использованные в расчетах числовые значения параметров 
описанной модели. Параметры спутника : 
25.0 , 
1.0 , 
1001hI Н∙м∙с, 
26001I
кг∙м
2, 
3.1R м, 
5cL м, 
33bS м
2, 
1bz м, 
3.0cz м. Параметры 
модели атмосферы во всех расчетах были следу ющие: 
F =137.0, 
81F =117.09, 
333.2pK
. 
Начальные условия движения центра масс спутника задавались в моме нт 
10:13:07 декретного московского времени 05.05.2013. На этот м омент элементы 
орбиты составляли: высота в апогее 575.2 км, высота в перигее 546.8 км, накл о
нение 64.87°, аргумент широты перигея 
65.124 °, долгота восходящего узла 
(отсчитывае тся от точки весеннего равноденствия эпохи даты) 
73.16 °. 
Начальные условия уравнений (1) задавались в тот же момент времени, что и 
начальные условия принятой орбиты. Этот момент служил началом отсчета 
времени – точкой 
0t . 
2. Стабилизация  спутника гиростата. Уравнения (2) громоздки и н е
удобны для пояснения режима солнеч ной ориентации спутника. Этот режим и 
способ его стабилизации поясним с помощью более простых уравнений, уч и
тывающих только главные факторы. А именно, предп оложим, что спутник им е
ет ось материальной симметрии 
1Ox , т.е. 
0 , орбита центра масс спутн ика  
круговая и неизменна в абсолютном пространстве, на спутник действу ет тол ько 
гравитационный момент. Вращательное движен ие такого спутника описыв ается 
уравнениями  
 
10
,    
2
2 1 3 0 1 3 3(1 )( 3 ) h          
 , 
 
2
3 1 2 0 1 2 2 (1 )( 3 ) h          
, 
 
1 2 3tan ( cos sin )        
,                                    (3) 
231( cos sin )cos    
,    
23sin cos    
 , 
13sin cosi i ia u a u
   
)3,2,1(i . 
 
Здесь 
0  – среднее движение спутника (орбитальная частота) , 
u – аргумент 
широты спутника (угол между осью 
3CZ  радиусом вектором 
r ), 
0u . Вел и
чины 
ija  выражаются через углы 
 , 
 и 
 по фо рмулам п. 2.  
 7 
 В силу первого уравнения (3) 
const1 . Будем считать эту величину п а
раме тром. Заменим 
2  и 
3  переменны ми 
 
2 2 3 cos sin     
,   
3 2 3 sin cos       
 
и введем новый параметр 
1h H . В новых переменных уравнения (3) рас
падаются на не зависящую от 
  подсистему  
 
 cos) cos() sin() 1( 3 ) tan (2
0 3 2 2 u u H 
, 
 
 cos sin) ( cos) 1( 3 ) tan (2 2
0 2 2 3 u H  
,               (4) 
 
cos2
,    
3 , 
 
и уравнение 
  tan2 1 . Параметры 
H  и 
1  будем считать  независим ы
ми. 
При 
0 ||H  уравнения (6) допускают решения, в которых   
 
 
cos sin) ( cos) 1( 3 22
0
2 uH , 
cos) cos() sin() 1( 32
0
3 u uH
. 
 
Подставив эти соотношения в последние два уравнени я (4), получим  
 
 sin) ( cos) 1( 3 22
0uH
,    
 cos) cos() sin() 1( 32
0u uH . 
 
Последние уравнения интегрируются в квадратурах  [1]. В случае 
0 ||H  по
лучить представление об их решениях можно , усреднив правые части уравн е
ний по 
u . Усредненные уравнения им еют вид  
 
 sin2) 1( 32
0
H
,    
0 . 
 
Для дальнейшего представляют интерес стационарные решения этих уравн е
ний. В них  
0 , а 
  – произвольная постоянная. Можно доказать [4], что для 
любого 
0  и достаточно больших 
H , таких , что 
) 2/ sin(0H  не лежит в малой 
окрестности нуля, уравнения (2) имеют периодическое решени е с пери одом 
0/
, удовлетворя ющее условиям  
 
) (1
0 HO
,    
) (1HO ,    
) (1
2 HO ,    
) (1
3 HO . 
 
Для этого решения можно так выбрать 
) (2
1HO , что  при любом 
0  будет  
 8 
выполняться соотношение 
) (2
0 HO . В соответствующем периодич е
ском решении у равнений ( 2) ось 
2Ox  будет совершать малые колебания в 
окрестности направления, задаваемого углами 
0 , 
0 , 
0. В частности, мо ж
но направить эту ось на Солнце. Указанное выше  периодическое решение си
стемы (4) является орбитально устойчивым в первом приближении.  
Изза разного рода возмущающих факторов (
0 , эллиптичность орб и
ты, аэродинамический момент  и др.) система ( 3) не имеет решений описанного 
типа . Но она имеет решения, для которых приведенные выше оценки  выполн е
ны на некотором не очень продолжительном отрезке времени. Чтобы обесп е
чить достаточно точное выполнение этих оценок длительное время (стабилиз и
ровать режим солнечной ориентации) можно использова ть управляющий м о
мент ( 1), создаваемый электромагнитами . 
3. Управление вращательным движением.  Дипольный момент эле к
тромагнитов, обеспечивающий стабилизацию режима солнечной ор иентации 
спутника , будем искать в в иде [2] 
 
2||BuBL
,   
mu1I ,                                               (5) 
 
), ,(3 2 1 mmmm
 – управление, вид которого предстоит установить . Подставив 
выражение ( 5) в (1), получим формулу  
 
2()
||cuBM u B
B
.                                                (6) 
 
Если в последней формуле отбросить вычитаемое 
BBu B ) (||2 , то она пере й
дет в формулу  
cMu
,                                                        (7) 
 
которая обеспечила бы широкие возможности для построения законов упр авле
ния. Вычитаемое  
BBu B ) (||2  уменьшает эти возможности, но если осущест в
лять управление на промежутках времени длиной виток и более, то в ряде сл у
чаев влияние этого слагаемого можно нив елировать. Положительным фактором 
здесь является достаточно  большое наклонение орбиты спутника.  
 Режимом солнечной ориентации спутника будем называть такое движ е
ние, в котором с малыми ошибками выполнены следующие усл овия: ось 
2Ox  
направлена на Солнце, ось 
1Ox  лежит в плоско сти орбиты, угловая скорость 
спутника равна нулю.  Эти условия выражаются соотнош ениями  
 
01en
,   
se2 ,   
03 2 1  ,                             (8) 
где 
1e  и 
2e  – орты осей 
1Ox  и 
2Ox , 
),,(3 2 1 ssss  – орт направления «Земля – 
Солнце» , 
n – орт нормали к плоскости оскулирующей орб иты спутника .  
 9 
При упрощающем предположении (7) режим солнечной ориентац ии 
можно реализовать с помощью з акона управления [3] 
 
32
1 1 2 s m 
,   
2 2) 1(2m ,   
12
3
32 sm             (9) 
 
при достаточно большом значении коэффициента 
0 . Уравнения движения 
спутника в этом слу чае имеют решения , в которых приближенно выполнены 
все условия (8) кроме  первого [3]. Выполнение условия 
01en  обеспечивае т
ся достаточно большим гиростатическим м оментом, направленным вдоль оси 
1Ox
. Здесь имеет место с итуация, которая в упрощенном виде исследов ана в 
[4]. 
В случае упрощающего предположения  (7) более точн ый режим солне ч
ной ориентации можно реализовать с помощью з акона управления  
 
.) ( 2,) 2(1, 2
2 12
3
332
2 2 32
1 1


 
ssms m s m
                     (10) 
 
где 
1 2 3( , , )s s s   s  – орт лежащий в плоскости орбиты спутника  перпенд и
кулярно 
s . 
Законы ( 9) и (10) о казались достаточно эффективными и при использов а
нии формулы (6), т.е. с учетом ограничения, обусловленного реализацией п о
средством электромагн итов. 
В предлагаемой системе управления каждая компонента 
iL вектора 
L ре
ализуется собственн ым электромагнитом . Система имеет три одинаковых элек
тромагнита  [5]. Их дипольные моменты, реализующи е компоненты  
1L, 
2L и 
3L , 
параллельны осям 
1Ox , 
2Ox  и 
3Ox  соответственно . Возможные способы реал и
зации электромагнитов прив едены в [5, 6]. Реализация управления не требует 
проведения сложных измерений, достаточно иметь показания  солнечного да т
чика,  трехосного магнитоме тра и аппаратуру для их обработки.  
 4. Математическое моделирование режима солнечной ориентации . 
Цель моделирования – показат ь, что законы управления (6), (9) и (6), (10) обес
печивают гашение возмущенного движения спутника и стабилизацию  его в  ре
жиме солнечной ориентации. Начальная условия движения при моделировани и 
задавались следующ им образом : ось 
2Ox  (норм аль к плоскости солнечных б а
тарей ) направлена  по орту 
s , ось  
1Ox  лежит в плоскости орбиты спутника , 
начальные значения угловой скорости 
1 2 30 0 0 0.01° c     . Реше
ния уравнений (2) с такими начальными условиями в ычисля лись на о трезке 
3 0 6 86.4 10t   
с (6 суток). Все расчеты выполнялись при 
310 с
1, в тени 
Земли соотношения (9) и (10) не нарушались. Результаты интегрирования 
уравнений  (2) при использовании  закон а управления ( 6), (9) приведены на рис.  
 10 
1  4 в виде графиков черного цвета . На рис. 1  изображены графики зависим о
сти от вр емени углов 
 , 
 и 
, на рис. 2 – графики углов 
1  и 
2 отклонения 
оси 
2Ox  от орта 
s. Эти углы  вычисляются по формулам  
 
22 1 12 2
122
12arcsinb S b S
SS

,    
 22 3 12 1 22 2
2 32 1 222
12arcsinS b S b Sb S S
SS    , 
 
где 
1S , 
2S и 
3S – компоненты орта 
s  в системе  
321yyCy . Они отсчитыв аются в 
перпендикулярных плоскостях, пересекающихся по прямой «Земля –Солнце». 
Плоскость отсчета угла 
2  содержит ось  
3Cy . Направление отсчета этого угла 
– на север, направление отсчета угла 
1  – на восток. На рис. 2 изображен та к
же график у гла 
2 arccos es  между ос ью 
2Ox  и ортом 
s . На рис. 3, 4 пр и
ведены графики  компонент угловой скорости 
i  и магни тного момента  
iL 
)3,2,1(i
. 
 Результаты интегрирования уравнений ( 2) с управлением ( 6), (10) прив е
дены на рис. 5  8 (черные  графики) , которые  устроены аналогично рис. 1  4. 
Результаты моделирования показали, что управления ( 6), (9) и (6), (10) дост а
точно точно обеспечивают устойчивую солнечную ориентацию спутника  – 
см. графики угла 
  на рис. 2, 5 . Для компонент угловой скорости имеют место 
оценки 
01.0|)(|ti /с. 
 Для сравнения законов управления вида (6) и (7) н а рис. 1 – 3 и 5 – 8 в 
виде красных графиков приведены результаты интегрирования уравнений (2) с 
законами управления (7), (9) и (7), (1 0). Красные графики имею тот же смысл, 
что и изображенные в тех же координатных осях графики черные. Как видно из 
рисунков и следовало ожидать, управления вида (6) обеспечивают более то ч
ную ориентацию спутника, чем управления вида (7). Однако г рафики углов ых 
скоростей (рис. 3, 7) для обоих типов управлений  практически одинаковы ; по
чти совпадают и графики компонент магнитного момента (последние привед е
ны только для управлений  вида (6)). Графики углов 
  и 
 для обои х типов 
правлений близки, а графики углов 
 , 
1, 
2 и 
 заметно различаются. Анализ 
последних графиков показывает, что основное отличие и одновременно нару
шение режима ор иентации сосредоточено в углах  
 и 
2 . Это нарушение, во 
первых, невелико. Угол 
  всегда был меньше 20 , его среднее значение соста
вило около 15. Поскольку ток солнечных батарей пропорционал ен 
cos , 
максим альные краткосрочные потери эне ргосъема составили менее 6 %, а сре д
ние не более 3%. Во вторых, смещение от точной ориентации по углам 
  и 
2  
имеет доминирующую постоянную составляю щую (см. рис. 1, 2 и 5, 6), поэт о
му ее можно компенсировать, направив ось 
2Ox  не точно по орту 
s , а на не
скол ько градусов в ст орону.  
 5. Периодическая аппроксимация ориентированного движения . Ана
лиз рис . 1 – 8 показ ывает, что установившийся режим солнечной ориентации  
 11 
спутника похож на периодическое движение. Основываясь на этом свойс тве, 
построим аппроксимации режима солнечной ориентации спутника набором пе
риодических движений. На каждом орбитальном витке – между пос ледовател ь
ными прохождениями восходящего узла орбиты – построим  аппроксимиру ю
щее периодическое движение. При построении этого движения гринви чскую 
систему координат примем инерциальной , зафиксировав ее положение относ и
тельно второй геоэкваториальной систем ы координат на момент прох ождения 
начального  (на данном витке)  восходящего узла. Иными словами, зафиксируем 
соответствующее среднее звездное время. Орбиту спутника в «замороженной» 
гринвичской системе п римем кеплеровой эллиптической. Элементы этой орб и
ты в ычисляются по фазовому вектору реальной орбиты в начальном восход я
щем узле.  Таким образом, от витка к витку долгота восходящего узла орбиты в 
«замороженной» гринвичской системе координат меняется, меняется и пол о
жение орбиты относительно МПЗ и Солнца, но в нутри витка эт и долгота , по
ложение относительно МПЗ и Солнца остаются неизменными. Уравнения вр а
щательного движения спутника возьмем в виде (2), положив в них 
0E  и 
приняв в формулах для расчета координат и компонент скорости точки 
O  в 
«замороженной» гринвичской системе формулы кеплерова движения. Пол у
чившуюся систему уравнений обозначим (2'). Время входит в эту систему п е
риодически с орбитальным периодом, поэтому можно поставить задачу об 
отыскании ее периодических  решений. Интерес представляет т акое периодич е
ское  решение, которое можно будет использовать как аппроксимацию решения 
исходной си стемы (2) на данном витке.  
Построение периодического решения системы (2') сводится к решению 
для этой системы периодической кр аевой задачи  
 
) ( )(0 0 Tt tωω
,   
) ( )(0 0 TtQ tQ  .                             (11) 
 
Здесь 
0t  – момент прохождения начального восходящего узла орбиты на ви т
ке аппроксимации, 
T  – период используемой в системе (2') кеплеровой орб и
ты. Задача (2'), (11) решается методом пристрелки. Краевые условия (11) рас
сматриваются как уравнения  для определения неизвестных н ачальных условий  
)(0tω
, 
)(0tQ . Кватернион 
)(tQ  должен быть нормированным, в процессе реш е
ния задачи (2'), (11) это обстоятельство учитывае тся следующим образом.  
Вариацию решения  
)(tω , 
)(tQ  системы (2') на каждой итерации метода 
пристрелки представим в виде  
 
)(tω
,    
)( )(21)( t tQ tQ θ , 
 
где 
)(tθ  – вектор бесконечно малого поворота, задающего изменение ориент а
ции спутника в окрестности положения 
)(tQ . Вектор 
)(tθ  удовлетворяет ура в
нению 
)( )( t tωθωθ  , а вектор 
)(tω  – системе уравнений в вариациях для 
первых трех уравнений (2')  (в этой системе вариации вект оров 
r , 
v и 
B можно  
 12 
вычислять по формулам 
θrr , 
θvv  и 
θBB ). Подстановка вар ь
ируемого решения в краевые условия (11) приводит к соотнош ениям  
 
)] ( )([2)0( )0( ) ( ) (0 0 0 0 TtQ tQ QTt TtQ   θ θ  
, 
 
) ( )( )( ) (0 0 0 0 Tt t t Tt  ωωω ω
. 
 
Величины 
) (0Ttθ , 
) (0Ttω  входят в эти соотношения в виде линейных 
комбинаций величин  
)(0tθ , 
)(0tω  (что требует  интегрир ования  6 экземпляров 
систем уравнений в вариациях для 
ω  и 
θ на отрезке
] ,[00 Ttt ). Полученные 
соотношения рассматрива ются  как линейные уравнения относител ьно 
)(0tθ , 
)(0tω
. Эти уравнения выглядят переопределенными, но на самом деле ср еди 
них не более шест и линейно неза висимых. Решение этих уравнений находится 
с помощью процедуры сингулярного разложения их матрицы. Величины  
||)( )(||/)]( )([0 0 0 0 tQ tQ tQ tQ  
 и 
)( )(0 0 t tωω  принимаются в  качестве но
вых значений 
)(0tQ  и 
)(0tω . Итерации з аканчиваются , когда поправки  
|)(|0tθ , 
|)( |0tω
 станут меньше заданных пределов. Начальным приближением 
начальных условий периодического решения служат значения переменных с и
стемы (2) в точке 
0t . 
На рис. 9, 10 приведены результаты аппроксимации  рассмотренного р а
нее решения системы (2) с законом управления ( 6), (9) решениями краевой з а
дачи (2'), ( 11). Здесь изображены графики зависимости от времени углов 
 , 
, 

 и компонент угловой скорости 
i  
)3,2,1(i . Графики аппроксимиру емого 
решения – черные, графики аппроксимирующ их решени й – красны е. При п о
строении аппроксимации пропущен участок переходного процесса. Начальн ое 
приближение при решени и краевой задачи зада валось  следующ ими начальн ы
ми условиями в с оответствующ их точк ах 
0t: ось 
2Ox  направлена по орту 
)(0ts , 
ось 
1Ox  лежит в  плоскости кеплеровой орбиты , начальные значения угловой 
скорости – нулевые.  Красные графики в малых окрестностях моментов пр о
хождения восходящих узлов орбиты налегают друг на друга (кеплеров период 
несколько больше драконического), но при выбранном масшта бе графиков 
налегания практически не з аметны.  
На рис. 1 1, 12 приведены результаты аналогичной аппроксимации ре
шени я уравнений (2) с законом управления ( 6), (10). Рисунки устроены анал о
гично рис. 9, 11. Как видим, в обоих случаях аппроксимация оказалась дос та
точно точной.  Возможность такой аппроксимации обусловлена двумя обсто я
тельствами. Во первых, кеплерова аппроксимация орбиты в данной задаче бо
лее чем достаточна для построения вращательного движения спутника на орб и
тальном витке. Во вторых, МПЗ в «заморо женной » системе 
321yyCy  в течение  
витк а меняется сравнительно мало, поскольку оно близко к полю диполя, м о
мент которого лежит вблизи точки 
C  и составляет с осью 
3Cy  малый угол  
(~12). Поле  диполя , расположенного в точке 
C  и направленного по 
3Cy  (т.н. 
прямой диполь) в таком случае вообще бы не менялось.   
 13 
 Удобство построенной аппроксимации заключается в том, что, рассмо т
рев семейство решений краевой задачи (2') , (11) для различных значений долг о
ты восходящего узла орбиты в «замороженной» гринвичской системе коорд и
нат, вычислив мультипликаторы этого семейства, можно выбрать подходящие 
параметры законов управления и сами эти законы.  
На рис. 1 3, 14 приведены  началь ные условия решений краевой задачи 
(2), (6), ( 10), (11) в зависимости от до лготы восходящего узла орбиты . Здесь 
момент 
0t  и угол 
  между ортом 
s  и осью
2CZ  фиксированы: 
0t 10:13:07 
ДМВ 05.05.2013, 
 95.128 . Этот угол и э лементы кеплеровой орбиты (кроме 
долготы восходящего узла)  соответствуют принятой  орбите спутника  (см. п.1)  
на указанный  момент . Начальные условия представлены значениями углов 
, 

, 
 и компонент угл овой скорости 
i  в момент 
0t . 
 На рис. 1 5, 16  приведены аналогичные графики для решения той же кр а
евой задачи в  случае  
0t 02:48:30 ДМВ 25.06.2013  и 
75.1 . В указанный  
момент 
0t  угол 
  на принятой  орбите  достигал своего минимально значения.  
Рассмотренные варианты выбора значений угла  
 относятся к двум крайним 
случаям, когда Солнце лежит почти в плоскости орбиты и когда оно находи т
ся в зените над ней.  
 На рис . 17 представлен график степен и устойчивости решений кра евой 
задачи (2), (11) , использованных для аппрокс имации установившегося вращ а
тельного движения спутника при управлении (6), (9) (см. рис. 1 – 4 и 9,  10); 
участок переходного процесса здесь отсутствует. Степень устойчивости ра с
считывалась по фо рмуле  
1lnT
, 
где 
  – максимум модулей мультипликаторов системы уравнений в вариац и
ях, для решения задачи (2 ), (11). Степень устойчивости вычислена для кажд о
го витка орбиты спутника, поэтому график ее зависимости от времени пре д
ставляет собой кусочно постоя нную функцию – на витке степень устойчив о
сти принята постоянн ой, в восходящих узлах орбиты она меняется скачком.  
 На рис. 18 аналогичным образом представлен график степени устойч и
вости решений краевой задачи (2), (11) , использованных для аппроксим ации 
вращательного движ ения спутника при управлении (6), (10) (см. рис. 5 – 8 и 11,  
12). Как видно из рисунков, все аппроксимирующие периодические реш ения 
асимптотически устойчивы, причем при управлении (6), (10) значения 
  полу
чились почти  в два раза боль ше, чем при управлении (6), (9).  
 6. Заключение.  1. Показа но, что приемлемый режим солнечной ориент а
ции спутника  можно обеспечить без и зменения его гиростатического момента. 
Если гиростатический момент создается системой двигателей маховиков, п о
стоянство е е кинетического момента означает, что эта система сможет функц и
онир овать без насыщения по кинетическому моменту.  
 2. Предложен способ аппроксимации ориентированного движения спу т
ника посредством набора периодических решений. Такая аппроксимация упр о 
 14 
щает  параметрическое исследов ание этого движения.  
 
 Данная работа выполнена при поддержке РФФИ (проект 170100143 ). 
 
Литература  
 
1. Белецкий В.В. Движение искусственного спутника относительно центра 
масс. М.: Наука, 1965.  
2. Коваленко А.П. Магнитные системы управления  космическими летател ь
ными аппаратами. М.: Машиностроение, 1975.  
3. Игнатов А.И., Сазонов В.В. Реализация режимов вращательного движ е
ния ИСЗ с малым уровнем остаточных микроускорений электромехан и
ческими исполнительными органами // Препринты ИПМ им. М.В. Ке л
дыша. 2008. № 91. 32 с.  
4. Сазонов В.В., Троицкая А.В. Периодические движения спутника 
гиростата с большим гиростатическим моментом относительно центра 
масс // Прикладная математика и механика. 2015. Т. 79. № 5. С. 595 607. 
5. Абрашкин В.И., Пузин Ю.А., Сазонов В .В. Электромагнитная система 
управления вращательным движением спутника, обеспечивающая малый 
уровень микроускорений на его борту // Препринты ИПМ им. М.В. Ке л
дыша. 2010. № 22. 36 с.  
6. Игнатов А.И., Сазонов В.В. Стабилизация режима гравитационной ор и
ентации искусственного спутника Земли электромагнитной системой 
управления // Препринты ИПМ им. М.В. Келдыша. 2016. № 28. 32 с.   
 15 
 
Рис. 1. Графики у глов ориентации спутника относительно системы 
3 21ZZCZ : 
черные линии  – при управл ении (6), (9), крас ные линии – при управлении (7), (9) .  
 16 
 
Рис. 2. Графики у глов ориентации спутника  относительно направления на Солнце : 
черные линии  – при управл ении (6), (9), красные линии – при управлении (7), (9).   
 17 
 
Рис. 3. Графики компонент у глов ой скорост и спутника:  черные линии  – при управл ении (6), (9), 
красные линии – при управлении (7), (9) .  
 18 
 
Рис. 4. Графики компонент  магнитн ого момент а системы электромагнитов  при использовании управления ( 6), (9).  
 19 
 
Рис. 5. Графики у глов ориентации спутника относительно системы 
3 21ZZCZ : 
черные линии  – при управл ении (6), (10), красные линии – при управлении (7), (10) .  
 20 
 
Рис. 6. Графики у глов ориентации спутника  относительно направления на Солнце : 
черные линии  – при управл ении (6), (10), красные линии – при управлении  (7), (10).   
 21 
 
Рис. 7. Графики компонент у глов ой скорост и спутника:  черные линии  – при управл ении (6), (10), 
красные линии – при управлении (7), (10) .  
 22 
 
Рис. 8. Графики компонент  магнитн ого момент а системы электромагнитов  при использовании управления ( 6), (10).  
 23 
 
Рис. 9. Аппроксимация вращательного движения спутника при управлении (6), (9) набором периодических  
решений: черные линии – решение систем (2), красные линии – решения краевой задачи (2 ), (11).   
 24 
 
Рис. 1 0. Аппроксимация вращательного движения спутни ка при управлении (6), (9) набором периодических  
решений: черные линии – решение систем (2), красные линии – решения краевой задачи (2 ), (11).   
 25 
 
Рис. 1 1. Аппроксимация вращательного движения спутника при управлении (6), (10) набором периодических  
решений:  черные линии – решение систем (2), красные линии – решения краевой задачи (2 ), (11).   
 26 
 
Рис. 1 2. Аппроксимация вращательного движения спутника при управлении (6), (10) набором периодических  
решений: черные линии – решение систем (2), красные линии – решен ия краевой задачи (2 ), (11) .  
 27 
 
Рис. 1 3. Начальные  условия решений краевой задачи (2), (6), (10) , (11)  по углам 
 , 
 и 
 при 
128.95 .  
 28 
 
Рис. 14. Начальные  услови я решений краевой задачи (2), (6), (10) , (11)  по компонентам угловой скорости  
при 
128.95 .  
 29 
 
Рис. 1 5. Начальные  условия решений краевой задачи (2), (6), (10) , (11)  по углам 
 , 
 и 
 при 
1.75 .  
 30 
 
Рис. 16. Начальные  условия решений краевой задачи (2), (6), (10) , (11)  по компонентам угловой скорости  
при 
1.75 .  
 31 
 
Рис. 17. Степень устойчивости решений краевой задачи (2), (6), (9), (11) . 
 
 
Рис. 18. Степень устойчивости решений краевой задачи (2), (6), (10) , (11).  MathNet.Ru
All Russian mathematical portal
M. Yu. Ovchinnikov, D. S. Roldugin, S. S. Tkachev, Study of th e accuracy of active
magnetic damping algorithm, Keldysh Institute preprints , 2016, 133
DOI: 10.20948/prepr2016133
Use of the allRussian mathematical portal MathNet.Ru imp lies that you have read and agreed to these terms of use
http://www.mathnet.ru/eng/agreement
Download details:
IP: 79.139.215.77
December 17, 2023, 00:59:58Keldysh Institute   •  Publication search
Keldysh Institute preprints   •  Preprint No. 133, 2016
ISSN 20712898 (Print)
ISSN 20712901 (Online)
Ovchinnikov M.Yu. , Roldugin D.S. ,
Tkachev S.S.
Study of the accuracy of
active magnetic damping
algorithm
Recommended form of bibliographic references:   Ovchinnikov M.Yu., Roldugin D.S., Tkachev S.S.
Study of the accuracy of active magnetic damping algorithm // Keldysh Institute Preprints. 2016.
No. 133. 16 p.   doi: 10.20948/prepr2016133e  
URL: http://library.keldysh.ru/preprint.asp?id=2016133&lg=eОрдена Ленина  
ИНСТИТУТ ПРИКЛАДНОЙ МАТЕМАТИКИ  
имени М.В.  Келдыша  
Р о с с и й с к о й  а к а д е м и и  н а у к  
 
 
 
 
 
 
 
 
 
M.Yu. Ovchinnikov , D.S. Roldugin , S.S. Tkachev  
 
 
Study of the accuracy of active magnetic 
damping algorithm  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Москва — 2016М.Ю. Овчинников , Д.С. Ролдугин , С.С. Ткачев  
Исследование точности  алгоритма активного магнитного демпфирования  
Рассматривается спутник, оснащенны й магнитной системой ориентации, 
реализующей алгоритм демпфирования угловой скорости « Bdot ». Исследуется 
поведение спутника в конц е переходных процессов. Показано, что спутник 
медленно вращается вокруг оси максимального момента инерции, найдена 
величина скорости вращения. Исследуется точность ориентаци и спутника в 
дипольной модели геомагнитного поля . Проводится численное моделировани е. 
Ключевые слова: магнитная система ориентации, демпфирование, Bdot  
 
Mikhai l Ovchinnikov , Dmitry  Roldugin , Stepan Tkachev  
Study of the accuracy  of active magnetic damping  algorithm  
Attitude motion of a satellite equipped with an active magnetic attitude c ontrol 
system is considered.  Control system implements «Bdot » damping algorithm. 
Satellite behavior is analyzed in a steady state motion . Slow spinning around the 
principal axis of maximum inertia is proven, angular velocity is found. Attitude 
accuracy in  dipole geomagnetic field model is studied . Numerical analysis is carried 
out. 
Key words:  magnetic attitude control system , damping, Bdot  
 
The work was supported by RFBR grant s № 153120058  and 160100634 . 
 
 
Contents  
Introduction  ................................ ................................ ................................ ...................  3 
1. Equations of motion and geomagnetic field models  ................................ .................  3 
2. Satellite  rotation  stability  ................................ ................................ ...........................  5 
3. Stabilization accuracy  ................................ ................................ ................................  8 
3.1.  Satellite on near e quatorial orbit  ................................ .............................  8 
3.2.  Near polar satellite  ................................ ................................ ................  11 
4. Numerical simulation  ................................ ................................ ............................  14 
Conclusion  ................................ ................................ ................................ ...................  15 
Bibliography  ................................ ................................ ................................ ................  15 
Appendix. Some relations  ................................ ................................ ...........................  16 
 3 
 
Introduction  
Magnetic atti tude control system is implemented on almost every modern small 
satellite. Even big and complex spacecraft utilize this system quite frequently. 
Magnetic control system has two main tasks: angular velocity damping and reaction 
wheel angular moment um unload . This work is devoted to the first problem. Attitude 
acquisition phase was considered by authors in [1,2]  under  fast rotating  satellite  
assumption . In this paper satellite angular velocity is comparable with the orbital one. 
This attitude mode is relevant due to the most used magnetic damping algorithm  
«Bdot » [3,4] . Its name implies that the control dipole moment is opposite to the 
geomagnetic induction vector change. Satellite acquires approximate rotation 
information with respect to geomagnetic field. Control system should spin satellite in 
the opposite direction effectively cancelling the rotation. However geomagnetic 
induction vector motion with respect to the satellite is due to its vector rotation in 
inertial space also. So the satellite should end up spinning with approximately double 
orbital angular velocity. Here this rotation is proven to be about the p rincipal axis of 
the maximum mom ent of inertia. Spinning velocity value is refined, satellite attitude 
is assessed.  
1. Equations of motion and geomagnetic field models  
The satellite is considered to be a rigid body. Attitude is maintained using three 
orthogonal magnetorquers. Actual attitude is available without an y error. Four 
reference frames are used:  
Inertial  reference  frame  OaY1Y2Y3, Оa is Earth ’s center , OaY3 is directed along 
Earth’s spin axis , OaY1 lies in the equatorial plane and is directed to the ascending 
node , OaY2 is directed so the system to be a righ t handed . 
Inertial  reference  frame  OaZ1Z2Z3 is got from frame  OaY1Y2Y3 turning by angle  

 about  OaY1. This angle is a function of orbit inclination. It is defined with 
averaged geomagnetic field model . 
Inertial  reference  frame  OaS1S2S3 is tied to satellite’s orbit . OaS3 is normal  to the 
orbital  plane , OaS1 is directed to the ascending node , OaS2 is directed so the system to 
be a right handed . Frame  OaS1S2S3 attitude with respect to OaY1Y2Y3 is defined with 
rotation by angle  
i (inclination ) about  OaY1, rotation from  OaS1S2S3 to OaZ1Z2Z3 is 
defined with angle  
i   about  OaS1. Inertial reference frames are depicted in fig.  1. 4 
 
 
Fig. 1. Inertial reference frames  
 
Ox1x2x3 is bound reference with axes directed along the principal axes of inertia . 
Satellite  attitude with respect to any inertial frame  is defined  using  angles  
,,  
 (rotation sequence  312) and absolute angular velocity components is bound 
reference frame  
1 2 3,,   . Quaternions are used for numerical simulation. 
Direction cosines matrix is  
cos cos sin sin sin sin cos cos sin sin cos sin
sin cos cos cos sin
cos sin sin sin cos sin sin cos sin cos cos cos           
    
              
 A
.  (1.1) 
Dynamical equations of the satellite motion e with inertia tensor 
( , , )diag A B CJ
 are 
d
dt  ωJω Jω M
          (1.2) 
where  
M is control magnetic torque .  
These equations are complemented with kinematics  
 
 13
13
2 1 31sin cos ,cos
cos sin ,
tg sin cos .d
dt
d
dt
d
dt   
   
       

  
        (1.3) 5 
 
Geomagnetic field is represented  [5] with right dipole model and the averaged 
model (simplified dipole model). Right dipole implies Earth’s field to be of the dipole 
 0,0, 1k
 in OaY1Y2Y3 frame . Induction vector in frame  OaS1S2S3 is 
2
33 2sin 2 sin
3sin sin sin
cose
Sui
u i iri
  B
        (1.4) 
where  u is argument  of latitude ; 
0 4em    , 
m  is Earth’s dipole strength  
(currently  
e 7.7245∙106 T∙km3), 
7
04 10  kg∙m∙А2∙s2 is magnetic constant . 
Simplified dipole model provides the most compact field representation in 
inertial space. Induction vector has constant length and uniformly moves on the 
circular cone. Induct ion vector in frame  OaZ1Z2Z3 is  
0sin sin 2
sin cos 2
cosZu
Bu
B
         (1.5) 
where  
 23
01 1 3sin 2e B i r     , cone half opening angle is  
 223sin 2tg .
2 1 3sin 1 3sini
ii
  
 
Satellite is subjected to  «Bdot » control . Dipole moment of magnetorquers is 
given by  
xdkdtBm
. 
2. Satellite  rotation  stability  
Here  simplified  dipole  model  is used. Satellite  motion  is considered  in OaZ1Z2Z3 
frame . Control dipole moment of magnetorquers is  
12Z
Zdkkdt    Bm m m ω AB A
.       (2.1) 
Satellite angular velocity is always considered fast when «Bdot » algorithm is 
studied, 
0ωω
 . In this case second term in  (2.1) may be omitted . If only first part in 
(2.1) is implemented satellite angular velocity is asymptotically damped to zero. If 
second term is preserved angular velocity is damped approximately to double orbital 
velocity. In the end of damping process second term becomes of the same order as 
the first and cannot be omitted.  6 
 
Suppose the satellite is spun about its third axis and find conditions providing 
the existence  and stability of the motion  
0 , 
12 0 . Control dipole 
moment is  this case is  

30
30cos 2 2 cos 2
sin sin 2 2 sin 2
0uu
k u u   
      
    m
. 
This implies  
302  and 
0 2u . The satellite  and geomagnetic  induction  
vector  rotation  rates are exactly  the same . Suppose 
00  and obtain lineariz ed 
equations in the vicinity of motion 
2u , 
0 , 
12 0 , 
302 . 
Direction cosines matrix is  
cos2 sin 2 sin 2 cos2
sin 2 cos2 cos2 sin 2
cos2 sin 2 sin 2 cos2 1u u u u
u u u u
u u u u  
  
     
   A
, 
geomagnetic induction vector in bound frame  
0sin cos
sin cos
sin cosxB

 
    B
, 
control dipole moments components are  
2 3 0 0
1 0 0 0 1 2 0 0
1cos sin 2 sin 2 cos 1
2 sin 2 cos cos , 2 sin .
sinkB kB    
      
      
                     mm
  
Dimensionless linearized equations of motion are  

 
 1 2 1
22
2 1 2 3
2
3 2 3
3 1 22 2 ,
2 cos sin cos 2cos ,
cos sin sin 2sin cos ,
, 2 , 2 .AA
BB      
       
    
         
      
     
    
    (2.2) 
Here argument of latitude is used instead of time, angular velocity is referred to 
the orbital one, 
2
00kB C , 
ACA , 
BCB , 
AB C A , 
BC A B
. Equation for  
 is decomposed . It is omitted in ongoing analysis.  
Characteristic polynomial for  (2.2) is 
5
00j
j
jPC

,         (2.3) 7 
 
coefficients a re 
5
22
4
2 2 2 2
3
2 2 2
2
22
1
2
01,
cos sin ,
cos sin 4 4,
4 4 sin 4 sin 4 cos ,
4 sin 16 ,
16 sin .BA
A B A A B
A B A B A B
A B A B
ABC
C
C
C
C
C    
      
        
    
  
  
   
    
 
 
  
Necessary stability conditions are 
0jC . This is obviously true for 
4C  and 
5C. 
00 C
 if 
0AB , so 
C is either maximum or minimum moment of inertia . 
Remaining 
jC  are also positive in this case . Further investigation of polynomial  (2.3) 
is complicated by overburdened coefficients 
jC . Note that equations  (2.2) have the 
form  
01x A x A x
 
where  
 1 2 3, , , ,    x . Parameter  
 may be considered small since magnetic 
control system frequently employs weak magnetorquers . Write c haracteristic 
exponents  in the same form,  
j j j   . Zero app roximation  (
0 ) exponents are 
easily found , 
1,2
3
4,52,
0,
2.ABi
i  

 


  
Here  
i is imaginary unit . Here necessary stability condition  
0AB  was used . 
Characteristic polynomial coeffic ients are  
j j jC A B , 
5
4
3
2
1
01,
0,
4 4,
0,
16 ,
0.AB
ABA
A
A
A
A
A


 



  
5
22
4
3
2 2 2
2
1
2
00,
cos sin ,
0,
4 4 sin 4sin 4 cos ,
0,
16 sin .BA
A B A B A B
ABB
B
B
B
B
B
     

  

    

    
Terms of the order of  
2O  are omitted . Characteristic polynomial is  
5
00j
jj
jP A B    
    
. 8 
 
Taking  into account  that 
j satisfy  (2.3) first order approximation becomes  
5
0
4
1
01k
jk
k
j
k
jk
kB
kA






. 
Taking into account coefficients and zero order approximation this  yields  
 
2
1,21 cos 1
21A B A B A B
AB        
, 
2
3 sin 
, 
 
2
4,51 cos 1.21A B B A
AB      
  
Due to inertia properties  
1A  and hence  
4,5 0 . However  
1,2 0  if and  only 
if 
0, 0BA . So only rotation around the maximum axis of inertia is 
asymptotically stable . 
3. Stabilization accuracy  
Simplified dipole model provides general qualitative result – stable rotation with 
double angular velocity. Direct dipole model is more accurate and has one important 
peculiarity. Geomagnetic induction vector rotation is non uniform. We use this 
property to refine bo th direction of spinning satellite axis in inertial space and this 
rotation rate. Poincare method for periodical solutions of differential equation is used 
for this purpose [6].  
3.1. Satellite on near equatorial orbit  
Satellite  motion  is represented  with respect  to OaS1S2S3 frame . Small parameter 
is orbit inclination  
i. Geomagnetic induction vector is decomposed retaining the 
second order of small parameter  
22
3 3 30 3 2sin 2 0
0 1 3sin 0 .
1 0 1 2e e e
Su
u i ir r r       
                        B
 
Equation of motion have the form  
2
12ii  x f x g x g x
        (3.1) 
where  
 1 2 3, , , , ,     x . Periodical solution of  (3.1) is also of the form   
2
0 1 2 . ii  x x x x
          (3.2) 9 
 
Note  that 
0x is (3.1) solution  for 
0i  (generating periodical solution ). Asymptotical 
stability of solution 
 0 , 0, 0, 0, 0,u  x  may be proven just like in previous 
section, so this  is the only periodical  solutio n. Angular  velocity  
 is arbitrary . 
Substituting  (3.2) into (3.1) we obtain for different orders of magnitude of  
i  
0i
 
00 ,x f x
  
1i
 

01 1 1 0 ,xfx x g xx
  
2i
 

0002
1
2 2 1 1 1 2 0 211.22T        xx xf f gx x x x x g xx x x
  
First order approximation equations are decomposed into two systems  


113 2 2 sin 2 1 2sin
3 2 2 cos 2 1 2cos
0
0A
Buu
uu
      
z Fz
,    (3.3) 
  1 1 1
33 0,  
 
where  
 1 1 1 1
1 1 2 , , ,   z , 
23
0 ek r C    is a new parameter . 
0
0
1 0 0
0 1 0A A A
B B B   
      
   
 F
.   
First order does not allow the exact value  
 to be determin ed. Second order 
approximation equations are used,  
2 2 1 u z Fz G z
, 
 2 2 2
33 3 1 cos2 5 9, u        
 
where  
uG  is periodical  matrix . Equation  for 
2
3  provides condition of periodical 
solution existence  
1.8 . Satellite spins a little slower than in the simplified dipole 
magnetic field . 
Equilibria perturbation is characterized by equations  (3.3). Unperturbed system 
equilibrium position is asymptotically stable. General solution of (3.3) asymptotically 
tends to zero . Partial solution has gove rns system behavior. It may be written as  
 22 cos sin cos 2 sin 2p u u u u          z a b a b
.   (3.4) 10 
 
Constant  vectors  
a and 
b are obtained by substituting  (3.4) into (3.3), 
1
44
44,
  
                   a E F q
b F E p
 

1
44 22
44 222
2
  
               EF aq
FE bp
 
where  
  0, 1 2 , 0, 0Bq
, 
  1 2 , 0, 0, 0Bp , 
2 32  qq
, 
2 32  pp . 
Calculations  lead to 
  0, 0, 0, 1 2a
, 
  0, 0, 1 2, 0b . 
2q
 and 
2p  calculation involves block matrix inverse  
    
   112 2 2 2 1 1
4 4 4 4 4 444
111 2 2 1 2 2 1 44
4 4 4 41 
     
  
     
            E E F E F F EF
FEF E F F E F F
. (3.5) 
Since  
21
  (3.5) becomes  
12 2 1
44
12
44 
 


     EF FF
FE FF
. 
Therefore   
  3 2 1 1 2 2
10
03 cos 3 sin1 2sin
1 2cosuuu
u        
   

    
z F q F p F q F p
. 
Since  
 is small  solutions  
1  and 
1 are mainly governed by 
a  and 
b, 
11 2sin u 
, 
11 2cos u   . 
Rotation  axis deviates  by the angle  
33  from the orbit normal,  
  
  33acos cos 1 2 sin1.8 cos 1 2 cos1.8
1 cos 1 2 sin 9 5 cos 1 2 cos9 52asin2
2asin1 4 1 2 .i u i u
i u i u
ii    


  (3.6) 
Therefore  angle between  the maximum moment of inertia axis and normal to the 
orbit is approximately equal  to the  half of the inclination . 11 
 
3.2. Near polar satellite  
Near polar orbits are of more inte rest for magnetically actuated satellites. 
Consider this case and new small parameter 
2i . Geomagnetic induction 
vector is decomposed as  
2 2 2
3 3 33 2sin 2 0 3 2sin 2
1 3sin 0 1 3sin .20 1 0e e e
Suu
uur r r       
                        B
 
Generating solution equations are divided into two systems. Out of p lane motion 
allows trivial solution 
0 , 
12 0  again. Rotation  around  maximum  
moment  of inertia  persist . Rotation rate becomes varying. This rate is governed by the 
equation  
3 1 3 2f u f u
         (3.7) 
where  

2
1
2
21 3sin ,
3 1 sin .f u u
f u u


  
Solution  of (3.7) is (assume  
00u ), 

3 3 2
00u
F u F xe f x e dx

       (3.8) 
where  
1
053sin 224u
F u f x dx u u    
.      (3.9) 
Integral  in (3.8) poses a problem. Rewrite it as  
5 3 5 3sin 2 sin 22 2 4 2 4
2
0 0 0
53 53sin 2 sin 224 24
02 1 3sin
2.u u ux x x xFx
uuu xxg u f x e dx e dx x e dx
e e e dx
 
         
      
  

  
Hence  
53sin224
33
002uxxF u F ue e e e dx    

. 
Note  that 
1 sin2 1 x   . Angular velocity is bo unded by following relations  
 5 3 5 3 3 3 3 3sin2 sin2 sin2 sin22 4 2 4 4 4 4 4
3 3 3440 1 0 155u u u u uue e e e e e                         
. (3.10) 12 
 
Influence of the second  term in (3.9) vanishes as argument of latitude rises. This 
term may be omitted given appropriate time interval and  

  2 5 2
2
00
52
52
223 1 sin
sin 1 8 16 5 sin 4cos 1 .25 16 125 80 5uu
Fx x
u
ug u f x e dx x e dx
euu u e


     
         
  
Substituting  into (3.9) and (3.8) brings angular velocity of rotation around the 
maxi mum moment of inertia  
   53 52sin252 24
33 22sin 1 8 10 6 5 sin 4cos 125 16 125 80 5uuuu eue u u e                  
.(3.11) 
Angle  
 in genera ting solution is found integrating  (3.11).  
First order equations are  
11 uux F x g
 
where  
   3, 2 , 4 2 , 2 2 , 2 , 2ij ijF F u u u u             , 
  are 
trigonometric  functions  (sine and cosine ). They  appear  in relations  for 
F components 
linearly  (exact expression of  
F can be found in appendix ). These equations cannot be 
solved. Approximate solutio n of the first order equations is found using Poincare 
method again. Small parameter is 
  (control torque value) . Solution of the equations 
of motion is represented as  
0 1 0 0 1      x x x x y y
, 
   03 0,0, , ,0,0 uux
, matrix 
F is 
01 uuF F F . Generating  solution  
0y 
and first order approximation  
1y are found from equations  
0 0 0 ,z F z
            (3.12) 
1 0 1 1 0 1 uu   z F z F z g
         (3.13) 
and 
  0 0 0
33 0,  
, 
  1 0 1
33 3 2cos2 5 2 , 0 u     
 
where  
 1 1 1 1
1 1 2 , , ,   z . 
Independent equations y ield 
0
3 0 , 
 1 0 1
3,,    are constant . 
Expressions  in (3.12)(3.13) contain  
3u . We use (3.11) to find its 
approximate  value . This expression is decomposed assuming small parameter  
 and 
sufficient time interval,  13 
 
39 5 3 5 sin 2 u 
.         (3.14) 
This leads to  
00 9 5 0 0
9 5 0 0 0
1 0 0 9 5
0 1 9 5 0A
B



 F
, 
 
 
13 10sin 0.2 9 10sin1.8
3 10cos0.2 9 10cos1.8
0
0A
Buu
uuu
 


g . 
Matrix  
1uF  is written as  
1 1 2u u u F G G , 
15 1 1 9 9 9cos3.6 sin 3.6 sin 3.6 cos3.64 8 8 40 4 40
1 5 1 9 9 9sin 3.6 sin 3.6 cos3.6 sin 3.6 ,8 4 8 4 40 40
0 0 0 0
0 0 0 0A A A A A A
B B B B B Bu u u u
u u u u u     
         

   

G
  
components  
   22 0.2 , 0.4 , 1.6 , 2ij ijG G u u u u      (exact expression for  
1uF
 can be found in appendix ). 
Generating solution for  (3.12) is 
0
24
31cos sin
sin cos
cos1.8 sin1.8 cos sin
sin1.8 cos1.8 cos sinA u B u
A u B u
D u E u B u A u
D u E u A u B u
   
   
    
   
   y
 
where  
 1.8 , , ,A B B A i i               , 
, , ,A B D E  are constant . They 
are found from the existence conditions of periodical solution of equations  (3.13). 
This implies  that heterogeneous  part 
1 0 1uu F z g  does not con tain frequencies  
 
and 1.8 ( Eigen frequency of  
0F). 
1uF  and 
1ug  contain  only rational  numbers  so 
0 AB
. Constants  
,DE  are found  from  absence  of frequency  1.8 in  
1 0 1uu G z g
 (matrix  
2uG  may be omitted ) so 
0, 4 9ED . 
Approximate solution of equations of motions is  
 12 0,
4 9 2 cos1.8 , 4 9 2 sin1.8 , i u i u
   
   
  
3
 is governed by one of the expressions  (3.10), (3.11), (3.14), 
 can be found 
integrating  
3. Axis of the maximum moment of inertia deviates from the orbit 
normal by the angle  14 
 
    33acos cos 4 9 2 cos1.8 cos 4 9 2 sin1.8 i u i u        
. 
Decomposing this analogous to  (3.6) provides  
334 9 2 i    . Deviation is 
slightly less for near polar orbits . 
4. Numerical simulation  
Numerical simulation was carried out with following parameters : 
 Inertia tensor  
 1.4,1.6,2.0J  kg∙m2 
 Orbit inclination  75°, altitude  750 km 
 Initial  conditions : attitude angles  50°, angular velocity components  
0 1.1   
 Control gain  5∙
510  N∙m∙s/Т2∙kg∙m (approximately  
0.11 ) 
Fourth order Runge Kutta with constant time step 1 s was used. Fig . 2 brings 
simulation results for the right dipole model. Fi g. 3 presents analogous result for 
inclined dipole model .  
 
  
Fig. 2. Near polar  orbit, right dipole 
model  Fig. 3. Near polar  orbit, inclined dipole 
model  
 
Fig. 2 verifies analytical results. Axis of maximum moment of inertia is 
stabilized with 5.57° accuracy while analytical expression provides 6.5°. Inclined 
dipole model observes almost three times worse accuracy. Horizontal line on figures 
corresponds to angular velocity 
0 1.8 . Near  equatorial  orbit  yields  same  results ю 
Figures 4 and 5 provide results for orbit inclination 60°. Right dipole model is used in 
both cases . Gravitational torque is taken into account for Fig. 5.  15 
 
 
  
Fig. 4. Inclination  60°,  
right dipole model  Fig. 5. Inclination  60°, gravitational 
torque  
 
Arbitrary orbits that far from near polar or near equatorial yield spinning axis 
pointing accuracy of about 1012°. Gravitational torque acts as a restoring one. 
Moreover its magnitude is almost comparable with the control magnetic torque. As a 
result stab ilization accuracy is better.  
Conclusion  
Magnetically actuated satellite with «Bdot » damping algorithm is considered. 
Slow motion of the satellite is studied. Rotation around the maximum moment of 
inertia is proved to be asymptotically stable in simplifie d dipole geomagnetic field. 
Rotation velocity is found in right dipole field. Maximum moment of inertia axis 
attitude in inertial space is found.  
Bibliography  
1. Ovchinnikov M.Y. et al. Investigation of the ef fectiveness of an algorithm of 
active magnetic  damping // Cosm. Res. 2012. V . 50, №  2. pp. 170 –176. 
2. Ovchinnikov M.Y., Roldugin D.S. Dual spin satellite motion in magnetic and 
gravi tational fields // Keldysh Inst itute Prepr ints. 2015. № 22. 20 p. 
3. Stickler A.C. A Magnetic Control System for Attitude Acquisition // Ithaco, 
Inc., Rep. N 90345. 1972.  
4. Stickler A.C., Alfriend K.T. Elementary Magnetic Attitude Control System / / J. 
Spacecr. Rockets. 1976. V . 13, №  5. pp. 282 –287. 
5. Pichuzhkina A.V., Roldug in D.S. Geomagnetic field models for satellite 
angular motion // Keldysh Inst itute Prepr ints. 2016. №  87. 25 p. 
6. Malkin I.G. Some problems in the theory of nonlinear oscillations. Oak Ridge: 
U.S. Atomic Energy Commission, Technical Information Service, 1 959. 589 p.  Appendix . Some relations  
1 3 2 3 2 3
3 2 1 3 3 2
3
35004
5004
350 0 cos 2 0 0 022
0 0 1 0 0 0
1 0 0 0 0
0 1 0 0 0A A A A A
B B B B Bf f f f
f f f f
uu      
      


    
     
  


 F
, 
 


1
2
3 3 3 3
339 1 3 3cos 2 2 cos 2 cos 2 cos 2 ,8 8 4 4
3 9 1sin 2 sin 2 2 sin 2 ,4 8 8
3 3 5 3cos 2 cos 2 cos 24 2 4 4
9 1 9cos 2 2 cos 2 .8 8 2f u u u
f u u
f u u u
u  
  
   
        
    
     
   
 
 
1 2 2 3
2 1 3 2
15 3 9sin 24 5 5
3 5 9sin 25 4 5,
30 0 0 sin 25
30 0 sin 2 05A A A A A
B B B B Bg u g g g
u g g g g
u
u
u    
        
     



 F
  
 
1
2
339 1 3 3cos0.4 cos3.6 cos1.6 cos 2 ,8 8 4 4
3 9 1sin1.6 sin 0.4 sin 3.6 ,4 8 8
9 3 27 81 9cos 2 cos1.6 cos0.4 cos3.6 .4 20 20 40 40g u u u u
g u u u
g u u u u    
  
    
 MathNet.Ru
All Russian mathematical portal
D. S. Ivanov, M. Yu. Ovchinnikov, S. S. Tkachev, Testbench C OSMOS for
microsatellite control system mockups modeling and surve y,Keldysh Institute
preprints , 2016, 138
DOI: 10.20948/prepr2016138
Use of the allRussian mathematical portal MathNet.Ru imp lies that you have read and agreed to these terms of use
http://www.mathnet.ru/eng/agreement
Download details:
IP: 79.139.215.77
December 17, 2023, 00:59:24ИПМ им.М.В.Келдыша РАН   •  Электронная библиотека
Препринты ИПМ   •  Препринт № 138 за 2016 г.
ISSN 20712898 (Print)
ISSN 20712901 (Online)
Иванов Д. С. , Овчинников М.Ю. ,
Ткачев С.С.
Стенд КОСМОС для
моделирования движения
макетов системы
управления микроспутников
и обзор мировых аналогов
Рекомендуемая форма библиографической ссылки:   Иванов Д. С., Овчинников М.Ю.,
Ткачев С.С. Стенд КОСМОС для моделирования движения макетов системы управления
микроспутников и обзор мировых аналогов // Препринты ИПМ им.  М.В.Келдыша. 2016. №  138.
32 с. doi:10.20948/prepr2016138  
URL: http://library.keldysh.ru/preprint.asp?id=2016138О р д е н а  Л е н и н а  
ИНСТИТУТ ПРИКЛАДНОЙ МАТЕМАТИКИ  
имени М.В.  Келдыша  
Р о с с и й с к о й  а к а д е м и и  н а у к  
 
 
 
 
 
 
 
 
 
Д.С. Иванов , М.Ю. Овчи нников , С.С. Ткачев  
 
Стенд  КОСМОС  
для моделирования движения макетов 
системы управления микроспутников  
и обзор мировых аналогов  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Москва — 2016  
Иванов Д.С. , Овчинников  М.Ю. , Ткачев  С.С.  
Стенд  КОСМОС для моделирования движения макетов системы 
управления микроспутников и обзор мировых аналогов  
 
В работе представлено описание стенда  КОСМОС  для моделирования 
движения системы уп равления микроспутников , установленн ого в ИПМ им.  
М.В.Келдыша. Стенд состоит из аэродинамического стола  и макетов систем 
управления движением микроспутников. Благодаря воздушной подушке между 
поверхностью стола и дисками, на которых установлены макеты, становится 
возможным свободное движение  с тремя степенями свободы : две 
поступательные и одна вращательная. Проведен обзор мировых аналогов 
стенда, который выявил его преимущества и недостатки.  
 
Ключевые слова: микроспутник, аэродинамический стенд , управление 
движением  
 
Ivanov  D.S., Ovchinnikov  M.Yu., Tkachev  S.S. 
TestBench  COSMOS for Microsatellite Control System Mock Ups Modeling 
and Survey  
 
A description of the KIAM laboratory facility COSMOS is presented. The facil i
ty allows to simulate  microsatellite  free and controllable planar motion due to aer o
dynamic cushion. The overview of the similar facilities is provided in the paper.  
 
Key words:  microsatellite, air testbed, motion control  
 
Работа выполнена при поддержке Министер ства образования и науки Ро с
сийско й Федерации (соглашение  № 14.607.21.0144  , уникальный идентифик а
тор ПНИЭР – RFMEFI60716X0144) . 
 3 
Введение  
Наземн ое тестирование системы управления спутниками на с пециальных 
стендах позволяет отладить её работу, подтвердить работоспособность  
алгоритмов  и оц енить их точность и быстродействие . Кроме того, 
демонстрация реализованных в "железе" новых подходов к управлению и 
определению движения вызывает большее , по сравнению с математическим 
моделированием работы алгоритмов , доверие  как учёных , так и инженеров . 
Этим объясняется повсеместное распространение лабораторий, позволяющих 
моделировать движение  спутников в приближенных к орбитальным условиях . 
Растущая популярность малых, микро  и наноспутников  привела к идеям 
кластерного запуска , что приводит к необходимо сти управления 
относительным движением спутников в группе. В зарубежных университетах и 
исследовательских институтах стали возникать стенды, позволяющие 
имитировать относительное движение  макетов систем управления таких 
спутников.  Стенды состоят из плоской  поверхности  и макетов с о специальной 
системой, создающей воздушную  прослойку  между ножками макета и 
поверхность ю стола. Благодаря этому макеты двига ются по ней практически 
без трения , что позволяет имитировать свободное орбитальное движение. 
Однако для со здания воздушной подушки требуется наличие баллонов со 
сжатым газом на самом макете , что накладывает требования к безопасност и, а 
запас газа ограничивает время  проведения эксперимента. Поэтому в ИПМ 
им. М.В.  Келдыша  был создан стенд на основе аэродинамичес кого стола.  
Воздух, нагнетаемый в герметичную полость под столом, проходит через 
отверстия в его верхней горизонтальной поверхности  создает воздушную 
прослойку между столом и плоским диском, на который устанавливается макет.  
Это облегчает и упрощает констр укцию макета, а также снимает ограничения 
на продолжительность экспериментов . 
В настоящей работе приводится описание созданного стенда , описаны 
особенности его работы. Приводится обзор технических решений для 
зарубежных аналогов , что позволяет выявить преи мущества и недостатки 
стенда в ИПМ  и наметить направления его усовершенствования . 
 
1 Лабораторный стенд в ИПМ  
В состав стенда , названного  КОСМОС (КОмплекС для МОделирования 
движения Спутников) , входит аэродинамический стол, промышленный вент и
лятор с блоком у правления и системой трубопроводов, а также макеты системы 
управления микроспутников . Аэродинамический стол представляет собой 
плоское металлическое основание с отверстиями, через которые поступает во з
дух, нагнетаемый промышленным вентилятором по системе в оздуховодов. Та
ким образом создается воздушная подушка между поверхностью стола и дис4 
кообразной платформой, на которую устанавливается макет системы управл е
ния. Общий вид стенда представлен на рис. 1 . Промо ролик  про стенд  можно 
просмотреть при н ажатии на рис. 1 или пройти по  адресу: 
https://www.youtube.com/watch?v=jQR3luT75TY . 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Рис.1. Стенд КОСМОС в ИПМ им.  М.В. Келдыша  
1.1 Аэродинамический стол  
Рабочая поверхность аэродинамического стола выполнена из двух  
алюми ниевых пластин  толщи ной 1 см , соединенных “в стык ” между собой . С 
нижней стороны поверхност ь закреплена на специальном каркас е, 
препятствующем провисанию пластин под силой собственной тяжести или их 
выгибанию под действием избыточного давления воздуха сниз у, что 
обеспечивает  плоскостность стола на уровне 2  мм по всей поверхности.  Размер 
рабочей поверхности стола составляет 198х 148 см.  
На поверхности стола  выполнена сетка  из отверстий  с диаметром 1 мм  с 
шагом 20 мм  (рис.2) . Расстояние между  отверстиями  выбра но исходя из ра счёта 
для создания воздушной подушки  для макетов массой до 6 кг  при максимал ь
ных оборотах нагнетающего вентилятора . 
Основание аэродинамического стола установлено  на шести опор ах, регу
лируемых по высоте в заданных пределах и являющи хся частью  несущей ко н
струкции  (рис.3) . Благодаря ре гулировке удается  выровнять  средний ур овень 
стола с миллиметровой точностью.  
 5 
  
  
      Рис.2. Отверстия на поверхности стола          Рис. 3. Регулируемая опора ст ола 
 
К нижней части поверхности стола к репится кам ера статического давл е
ния, в которую с помощью промышленного вентилятора нагнетается во здух. 
Она является частью системы воздуховодов и служит для создания избыточн о
го давления под поверхностью стола.  Рабочая поверхность стола соедин яется с 
камерой статиче ского давления по средствам переходного фланца. Фланец с о
держит уплотнение, препятствующее утечке воздуха.  Для предотвращения п е
редачи вибраций  на стол  выходящий из промышленного вентил ятора воздух 
подается в гибкий воздуховод , который потом соединяется с воздуховодом п е
ременного сечения, как изображено на рис. 4.  
 
 
Рис. 4. Система воздуховодов на выходе из промышленного вентилятора  
 
1.2 Промышленный вентилятор  
Для нагнетания воздуха используется промышленный вентилятор , изобр а
женный на рис. 5 . Он установлен н а специальном фундаменте  через демпферы 
для снижения вибрации . Частота вращения вентилятора плавно рег улируется  с 
помощью блока управления  в диапазоне от 20 до 50 Гц , что позволяет плавно 
изменять грузоподъемность воздушной подушки  на поверхности стола . Для то6 
го чтобы избежать появл ения горизонтальных потоков воздуха в лаборатории, 
приводящих  к дополн ительным возмущения м на плоское движение макетов, 
забор воздуха вентилятором производится над столом (см. рис. 1).  Таким обр а
зом, выходящий из отверстий на пов ерхности стола воздух всасывается в ве н
тилятор све рху стола . 
 
  
Рис. 5. Промышленный вентилятор и блок управления  
 
1.3 Макеты систем управления  
Макеты систем управления крепятся к специальным плоским 
алюминиевым дискам  диаметром 30 см и толщиной 1 см  (рис. 6) . С одной 
стороны диск плоский для обеспечения создания воздушной подушки, а с 
другой находятся отверстия, через которы е основание макета  крепится к диску . 
 
 
Рис. 6. Диск на поверхности стола  (верхняя сторона)  7 
Корпус макетов  систем управления сделан  в фор ме восьмиугольной 
призмы высотой 40 см. Пластины, из которых сделан корпус , вырезаны из 
сендвич панели , состоящей  из двух алюминиевых пластин и пластикового 
наполнения между ними. В пластинах выполнена сетка из отверстий для 
крепления элементов системы упр авления, которые могут быть установлены 
как снаружи макета, так и внутри, как показано на рис. 7.  
 
Рис. 7. Макет системы управления  внешний вид и внутренее наполнение  
Система управления макетами строится на элементной основе  
конструктора Орбикрафт , разработанной компанией Спутникс  [1]. 
Функциональный макет системы управления содержит:  
 бортовой компьютер Raspberr y PI B+; 
 систему энергопитания, включающ ую в себя аккумулятор и блок 
управления питанием ; 
 систему передачи команд на управляющие элемент ы и сбора 
телементрии с датчиков ; 
 датчики для определения движения: набор солнечных датчиков, 
магнитометр, датчик угловой скорости, акселерометр ; 
 управяющие актюаторы: одноосный двгатель маховик, 4 
вентилятора, имитирующих двигатели тяги ; 
 бортовую веб каме ру, которая может быть использована для 
определения относительного движения макетов ; 
 WiFiканал связи.  
На верхней крышке каждого макета закреплена специальная контрастная 
метка в виде QRкода. Над столом установлена веб камера, по обработке 
снимков которо й на стационарном компьютере определяется положение и 
ориентация макетов на столе, а также их линейная и угловая скорость [2]. Эти 
измерения отсылаются по WiFi на бортовой компьютер макетов , и по ним 
рассчитываются управляющие команды на актюаторы. Эта система может быть 
использована также как система независимого определения движения макетов.  
Имитаторы двигателей  Метка для определения движения  
Выключатель 
питания  Элементы  
системы 
управления  8 
2 Обзор аналогов стенда  
Для выявлени я особенностей разработанного стенда был проведен обзор 
возможных реализаций аэродинамического стола  и способов определения дв и
жения на нем. Также обзор выявил задачи , которые реш аются или могут быть 
решены с помощью подобных стендов.  
2.1 Возможные реализации аэродинамического стола  
Существу ют два подхода для создания обезвешивающе й силы : с помощью 
избыточного давления воздуха, выходящего через специальные отверстия на 
поверхности  стола , и с по мощью установленного  на макете устройства для с оз
дания под ним автон омной воздушной подушки  с использованием  устано влен
ных на макете  баллонов со сжатым воздухом . Ниже рассматривается п одробно 
каждое из этих решений . 
Использование автономной воздушной подушки  
В случае использования автономной воздушной подушки воздух нагнет а
ется из баллонов , установленных на борту макета, и выпускается через спец и
альные отверстия на опорах макета (рис . 8). Для обеспечения длительной н е
прерывной работы (30 45 минут) давление воздуха в баках должно быть дост а
точно большим (в нек оторых реализац иях оно достигает 300 бар [3]), но, как 
правило, рабочее давление находится в пределах между 1 [4] и 12 [3] бар, и по
этому время активной работы обычно невелико . 
Схема опоры ма кета изображена на рис. 8  (справа) . Через канал подачи г а
за воздух проникает в пористую среду ножки и на выходе из неё создаёт газ о
вую прослойку между ножкой и гла дкой горизонтальной поверхн остью стола. 
Ножки макета также способны двигаться, так как стержень ножки снабжен 
“суставом ”, благодаря которому ножка может поворачиваться. Это необходимо 
для того, чтобы обеспечить касание ножки всей своей поверхностью ст ола, в 
случае если он имеет небольшие искривления.  
 
Рис. 8 Опора макета  и её схема  
Подача 
сжатого 
воздуха  9 
Толщина воздушного слоя между столом и макетом, как правило, не пр е
вышает долей миллиметра, что выливается в высокие требования к гладкости 
поверхнос ти стола. При этом в качестве материала рабочей поверхности нео б
ходимо выбирать те, которые не подвержены значительным деформациям под 
действием температуры , силы тяжести , других факторов . 
Популярным решением являются гранитные поверхности (рис . 9), напр и
мер, подобный стол размером 2.2 на 1.8 метра используется в Техническом 
университет Афин [5], 4 на 2.5 метра – в Институте космических систем Н е
мецкого центра авиации и космонавтики ( DLR ) [3], 2 на 3 метра  – в Центре 
космических исследований Польской академии наук [6]. Недостатк ами подо б
ных столов является их слабая масштабируемость (плита должна по возможн о
сти быть цельной), а также сложность монтажа и большой вес констру кции. 
Другим возможным решением является использование стеклянной п о
верхности (обычно это стекло тол щиной до 10 мм), подобные столы установл е
ны, например, в Центре прикладных космических технологий и микрогравит а
ции [7] и в Токийском технологическом институте [8]. Размер рабочей повер х
ности таких столов также ограничен возможностями по изготовлению и, как 
правило, меньше 
24м . 
 
 
Рис. 9.  Аэродинамический стол с гранитной плитой  
 
Наконец, изготовление рабочей поверхности возможно с использование м 
эпоксидной смолы. В этом случае размеры поверхности ограничены лишь ра з
мером помещения, в котором они создаются. Подобная поверхность использ у
ется, например, в Массачусетском технологическом институте [9]. Она имеет 
форму восьмиугольника диаметром 
5.1 м . Такой тип поверхности прост в мо н
таже и значительно дешевле гранита и стекла, но качество поверхности в этом 
случае заметно хуже, что требует большего давления в баках, установле нных н а 
макетах (рис . 10). Например, в [10] приведена форма поверхности стола, уст а10 
новленного в Технологическом институте Джорджии (США) , разница высот 
достигает 
2.5мм . Давление в баках при этом достигает 130 бар.  
 
 
Рис. 10. Стол из эпоксидной смолы (Технологический институт Д жорджии)  
В любом случае, вне зависимости от типа поверхности, на борту макета 
устанавливается дополнительное оборудование для создания воздушной п о
душки, обеспечивающей скольжение с минимальным трением. Это требует н а
личия не только баков с высоким давлени ем на борту макета, но и систем ы их 
заправки в лаборатории, что значительно усложняет эксплуатацию системы, а в 
некоторых и совсем исключает ее полностью (например, в учебных лабор ато
риях, где правилами техники безопасности может быть запрещено использ ова
ние подобного оборудования). В этом случае решением может быть испол ьзо
вание аэродинамического стола, в котором воздушная подушка создается неп о
средственно самим столом . 
Аэродинамический стол с воздушной подушкой  
В отличие от приведенной выше схемы в этом с лучае воздух подается сн и
зу, по аналогии со столом для аэрохоккея. Подобный стол создан по заказу 
ИПМ им.М.В.Келдыша РАН российской компанией ООО «Спутникс»  и описан 
в первом разделе настоящей работы . Под столом име ется камера (рис. 1 ), куда 
промы шленным в ентилятором нагнетается воздух под избыточным давление м. 
Воздух выходит через отверстия в горизонтальной поверхности стола, создавая 
таким о бразом обезвешивающ ую силу . Аналогичный стол находится в Лабор а
тории распределенных космических систем  университета Технион  в Израиле  
(рис. 11). Этот с тол состоит из 9 пластин  размером 1х1 м2 с отверстиями, скр е
пленных друг с другом  [11].  11 
 
Рис. 11. Аэродинамический стол с макетами  
в Лаборатории распределенных космических систем  
Подобное решение , с одной стороны, позволяет существенно облегчить и 
упростить конструкцию макет а за счет исключения из ее состава системы с оз
дания воздушной подушки, но , с другой – требует установки специальной с ис
темы для нагнетания воздуха.  
2.2 Методы определен ия движения на аэродинамическом столе  
Для управления макетами системы управления спутников необхо димо 
знать текущий вектор состояния объекта. Для макетов на аэродинамическом 
столе – это положение и скорость центра масс макета, угол  поворота  и угловая 
скорость относительно его центра масс.  
Для определения движения макетов могут использоваться как борт овые 
датчики, так и внешние измерители. В качестве бортовых датчиков, как прав и
ло, используются те же датчики, что и на реальных аппаратах. Внешние изм е
рители же могут использоваться для имитации системы глобального навигац и
онного позиционирования, а также  в качестве системы независимых измерений, 
которая необходима для сравнения реального движения макетов с оценкой эт о
го движения с помощью бортовых датчиков.  
Для определения вектора состояния макетов на столе используется шир о
кий набор измерительных средств  и методов обработки измерений. Большую 
популярность получили средства определения движения с помощью обработки 
видеоизображения. Видеокамера при этом может как располагаться на с амом 
подвижном макете и при этом работать как звездный датчик или датчик для оп
ределения относительного расстояния при стыковке, так и быть установлена 
над столом и представлять собой систему независимых измерений. Другим ч ас
то используемым средством для определения движения на аэродинам ическом 
столе является блок инерциальных датч иков, который представляет собой на
бор из двухосного акселерометр а и одноосного  датчик а угловой скор ости. 12 
Обработка видеоизображения  
Звездный датчик  
Определение движения макетов с помощью аналога звездного датчика 
проводилось на стенде в Центре космических  технологий и микрогравитации 
(ZARM) в г. Бремене.  Стенд состоит из гладкого стеклянного стола, двух мак е
тов, движущихся по поверхности стола без трения благодаря воздушной п о
душке, имитатора Солнца и имитатора звездного неба – набора светодиодов, 
установл енных на потолке над стеклянным столом ( рис. 12 ) [12,13] . 
 
Рис. 12 . Общий вид стенда в ZARM  
 
На верхней части макета была установлена веб камера, оптическая ось к о
торой направлена вертикально вверх на пото лок с имитацией звездного н еба, 
как показано на рис.13 . Положение 140 "звезд" на потолке считается известн ым 
и занесено в каталог. Веб камера делала снимки участк ов "звездного неба", к о
торые обрабатывались на бортовом компьютере. Блок схема алгоритма с о с
новными эта пами представлена на рис. 14 . 13 
 
 
 
 
После полу чения изображения производится сегментация изображения: 
картинка преобразуется в двоичный формат, фильтруется, чтобы оставить 
только яркие точки, после чего вычисляется центроид каждой звезды ( рис. 15 ). 
    
  
Оригинальная                      Отфильтрова нная                             Центроиды  
Рис. 15. Сегментирование изображения  
 
В процессе распознавания используется “planar angle method” , то есть  
строятся треугольники согласно разбиению Делоне, рассчитываются углы в 
них, которые потом используются в п оиске по таблице. Поиск ведется с учетом 
допуска из за возможных погрешностей. Оценка позиции звездного датчика 
строится на основе собранной информации.  Рис. 14. Ц иклограмма  процесса идентификации участка зве здного неба  
 Получение 
изображения  Фильтрация изображения 
и центрирование  Извлечение информации об 
участке неба на снимке  
Поиск по базе 
данных (каталогу)  Проверка на оши б
ку (валидация)  Вектор 
состояния 
аппарата  Рис.13. Веб камера на крышке макета  
 
14 
В работе [12] в качестве недостатков такой системы определения движения 
называются достаточно большие по времени вычислительные затраты на обр а
ботку снимка и поиск по базе данных (около 0.6 секунд на один  сним ок). Кр оме 
того, система определения плохо работает при боль ших (больше 0.3 м/ c) скор о
стях макета, так как изображение в этом случае размазывается и не удается д ос
таточно точно определить центр светимости звезд.  
Навигация по изображению объекта  
В работе [14] описан метод определения относительного положения и ор и
ентации подвижного макета на аэродинамическом столе, основанный на обр а
ботке фотоснимка опорного объекта с известными геометрическими параме т
рами. Основная идея метода заключается в следующем: по анал изу снимка вт о
рого макета (рис. 12 ), а именно  по размерам его освещенной части , вычисля ют
ся расстояние до этого тела и угол между направлением на тело и направл ением 
на источник света. В целях упрощения расчётов и увеличения точности в кач е
стве центральног о тела берется цилиндр. В эксперименте , изложенном в раб оте, 
на полом железном цилиндре была закреплена полоса белой ткани, остал ьная 
его часть была задрапирована ( рис. 16 ). Исходя из расстояния до источника 
света и его сравнительно небольших размеров, мож но считать в первом пр и
ближении, что центральное тело освещается параллельным пучком св ета. По 
мере движения м акета производимые с некоторой периодичностью ( t ≈ 2 сек) 
снимки обрабат ывались на бортовом компьютере макета. На их основе работал 
алгоритм подд ержания з аданног о типа движения . 
 
  
Рис. 16. Центральное тело и схема освещения (вид сверху)  
Существуют принципиальные недостатки этого метода определения дв и
жения. Во первых, имеется область засветки – область пространства, в которой 
в объектив камеры по падает источник света, что делает невозможным коррек т
ную обработку снимка. Размер этой области варьируется в завис имости от поля 
зрения камеры и углового размера источника и в проведённых экспериментах 
соответствует угловому размеру порядка 30 градусов. Вт орым, менее сущ ест
венным недостатком являет ся неоднозначность определения положения м акета, 
когда макет, центральное тело и источник света располагаются практич ески 
вдоль одной прямой.  15 
Другой подход для навигации по изображению второго макета (или фи к
сиров анного объекта) заключается в использовании алгоритмов, которые на в и
деоряде способны выделять реперные точки. Например, в работе [15] использ у
ется алгоритм IBVS  (Image  Based  Visual  Sensing ), оценивающий относительное 
движение макета PINOCCHIO  по видеоряду цели заранее неизвестной формы 
(рис. 17 ). Алгоритм на текущем изображении находит особенности (точки, л и
нии), выделяющиеся по контрасту, цвету и т .п., и соотносит с особенностями на 
предыдущих кадрах. После того как алгоритм находит совпадения на основе 
взаимного расположения реперных точек, становится возможным оценить п о
ложение камеры относительно системы координат, связанной с наблюдаемым 
объекто м. 
 
 
  
Рис. 17. Макет PINOCCHIO  и определение движения по изображению [15] 
Навигация по меткам на макете  
Чаще всего для осуществления навигации на  столе с помощью обработки 
видеоизображения на макеты (или составные части макетов) устанавливаются 
специальные метки особой формы или светящиеся светодиоды. Изобр ажение 
меток или положение светодиодов на макете заранее известны. Метки, как пр а
вило, являют ся плоскими и максимально контрастными. Например, в [16] в ка
честве меток использовались черные пятиугольники с уникальными бинарными 
символами внутри. Метки устанавливаются на все элементы мак ета, движение 
которых необх одимо определить, а также могут быть установлены на повер х
ность стола для определения положения камеры относительно стола. Поэтому, 
как показано на рис. 18 , метки находятся как на каждом элементе манипулят о
ра, на с амом макете, так и на поверхности стола.  16 
 
Рис. 18 . – Метки на макете с роботизированным манипулятором [16] 
 
Особая форма меток позволяет улучшить их распознавание. В работе [17] 
выбраны реперные точки с вложенной структурой, причем взаимное распол о
жение точек несимметрично и неоднородно , чтобы избежать неоднозначности 
распознавания ( рис. 19 ). 
 
Рис.19.  Реперные точки и их распознавание  
 
Улучшить распознавание и отсеять кандидатов на реперные точки можно 
также с помощью неоднородности распознаваемого изображения. Так , на мак е
тах SPHERES  для относительной навигации использовались достаточно пр о
стые круги, два из которых были выделены жирным контуром [18] (рис. 20) . 
 17 
 
Рис. 20. Макет SPHERES  и визуальная метка [18] 
Другой пример использования достаточно простой метки – белые точки на 
черном фоне – на макете SOSS  [19]. Однако эта метка не является плоской, как 
видно из рис. 21 . Четыре точки находятся в одной плоскости, а пятая, которая 
располагается посередине, возвышается на некоторое расстояние. При перем е
щении макета изображение пятой точки будет менять свое положен ие между 
четырьмя остальными , и это, похоже, позволяет получить дополнительную и н
формацию о движении.  
 
Рис.21. Макет SOSS  и визуальная метка [19] 
 
На макетах устанавливаются не только плоские контрастные метки, но и 
наборы специальных светящихся светодиодов. Использование светодиодов я в
ляется более надежным способом для идентификации объекта по изображению, 
так как распознавание реперных точек меньше  зависит от условий освещенн о
сти, затенения и т.п.  Это более приближено к применению в реальных ми ссиях 
группового полета спутников для определения относительного движения, как 
например, в миссии PRIZMA  на этапе сближения  [20]. Так , на макете лаборат о
рии ADAMUS , имеющ ем 6 степеней свободы, были установлены 72 свет одиода 
[21]. С помощью обработки изображений с ряда камер, установленных так, 18 
чтобы их поля зрения пересекались и охватывали всю поверхность стола, уд а
ется определить как положение центра масс макета, так  и пространственную 
ориентацию. Система, обеспечивающая навигацию макета , является коммерч е
ской и называется PhaseSpace Impulse System®. В состав системы входят наб о
ры из камер с бинокулярным зрением, которые соединяются через сеть Ethernet . 
Расположение к амер вокруг стола изображено на рис. 22 . 
 
 
Рис. 22.  Камеры для определения движения макета на стенде ADAMUS  
и их расположение [21] 
 
Другим примером использования коммерческого решения для определения 
движения на столе является система VICON ®, использующая набор монок у
лярных камер. Эта систем а использовалась в качестве системы независимых 
измерений для определения положения макета ASTROS  [17]. На верхнюю 
крышку макета, имеющего 5 степеней свободы, устанавливаются 6 специал ь
ных отражающих меток, а камеры располагаются над пове рхностью стола как 
показано на рис. 23 . 
 
Рис. 23 . Камеры для определения движения макета на стенде ASTROS  
и их располож ение [17] 19 
Лазерные дальномеры  
Лазерные дальномеры активно используются в задачах навигации робот и
зированных систем и органично вписываются в систему определения движения 
макетов систем управления спутников на аэродинамическом столе. Как прав и
ло, для навигации исполь зуются не точечные дальномеры, а лазерные сканеры, 
измеряющие дальность до сетки точек с некоторым угловым шагом.  
В работе [17] в качестве дополнительного средства определения полож е
ния макета используется лазерны й дальномер SICK LMS200, который с шагом 
0.25 град и с миллиметровой точностью  на частоте 2 Гц промеряет в плоскости 
расстояние до всех объектов, находя щихся в комнате со столом. Все точки, н а
ходящиеся вне периметра стола , отбрасываются , и остается полукруг точек до 
основания макета, положение которых находится над поверхностью стола ( рис. 
24). Для определения центра основания полукруг с помощью метода на имен ь
ших квадратов достраивается до окружности , и вычисляется полож ение её це н
тра. Следует отметить, что такой способ использования лазерного дальномера 
позволяет определить лишь 2 степени свободы из 5 на макете ASTROS.  
 
Рис. 24. Лазерный дальномер на стенде ASTROS  и его измерения [17] 
 
Лазерные сканеры также использовались в работах [22,23]  для определ е
ния колебательных движений гибкой конструкции, зафиксированной между 
двумя макетами ( рис. 25 ). Использование этих сенсоров для нахождения со бст
венных мод в этих работах представляется наиболее естественным, так как по 
измер ениям ла зерных дальномеров непосредственно можно определить формы 
колебаний и отклонение от положения равновесия.  
 
    Лазер  
Основание 
макета  20 
 
Рис. 25 . Лазерные дальномеры для определения  
колебательных движений гибких ко нструкции [23] 
Инфракрасные дальномеры  
Инфракрасные дальномеры позволяют с достаточно высокой ча стотой о п
ределить расстояние до объекта и даже составить  его 3D модель, что может 
быть полезно в задачах относительной навигации для стыковки макетов на ст о
ле. На макете ASTROS среди прочих сенсоров используется камера типа 
LiDAR (SwissRanger SR 3000) [17]. Инфракрасные светодиоды испускают м о
дулир ованную волну с частотой 20 Гц, отраженная от объекта волна попадае т 
на ма трицу дальномеров , и в каждом пикселе вычисляется дальность до точек 
объекта. Зная 3 D модель второго макета, можно вычислить его положение и 
ориентацию относительно макета с дальномерами.  
Другой вариант – использовать инфракрасные дальномеры как сис тему н е
зависимых измерений . Коммерческая система DTrack ® требует установки как 
минимум двух специальных инфракрасных камер и набора из специальных о т
ражающих в инфракрасном диапазоне маркеров. Так, на макете стенда FFT на 
верхней крышке закреплены т акие ма ркеры в виде небольших антенн ( рис. 26 ) 
[24]. На камерах установлены инфракрасные излучатели, которые испускают 
волны с частотой 60 Гц. Инфракрасные волны отражаются от маркеров и фи к
сируются камерами. По пересечению линий направления на маркер с двух к а
мер при известном взаимном положении и ориента ции камеры вычисляется п о
ложение точки в системе коо рдинат, связанной со столом.  
 
Рис. 26. Инфракрасные дальномеры и специальные метки на макете  21 
Псевдо GPS  
В работах [25,26]  для определения положения центра масс используется 
система iGPS , имитирующая систему глобального позицион ирования, спосо б
ную работать в помещении. Система состоит из излучателей и приемников. И з
лучатели производят 2 типа сигналов – лазерный и инфракрасный. Лазеры у с
тановлены на вращающемся основании и излучают в двух сходящихся пло ско
стях. С некоторым периодо м излучатель выдает инфракрасный импульс. И зме
ряя время между приходом сигналов разного типа, можно вычислить напра вле
ние на приемник. Для вычисления положения приемника на плоскости нео бхо
димо иметь минимум 2 излучателя и знать их расположение. Недостаток  ис
пользования системы iGPS  заключается в том, что если на макете установлен 
только один приемник (как на рис. 27 ), то определить угловое положение не 
представляется возможным.  
 
Рис. 27. Излучатель и приемник системы iGPS  
Инерциальные датчики  
Позиционные средства навигации – камеры, дальномеры – позволяют н а
прямую определить положение и ориентацию макетов. Другим вариантом для 
вычисления пространственного поло жения является интегрирование изм ерений 
инерциальных датчиков – датчика угловой скорости и акселерометра, устано в
ленных на самом макете. Однако для этого необходимо знать начал ьные усл о
вия – положение, ориентацию, линейную и угловую скорость макета в начал ь
ный момент времени. Другой проблемой использования блока инерц иальных 
датчиков ( IMU  – Inertial  Measurement  Unit) является неточное знание ноля и з
мерений, которое может в силу ряда причин меняться со временем. П оэтому, 
как правило, измерения датчика углово й скорости и акселерометра о брабат ы
ваются совместно с позиционными измерениями.  22 
В работе [12] блок IMU состоит из двух датчиков и микроконтроллера. В 
качестве датчика угловой скорости используется датчик ADIS 16100 произво д
ства фирмы Analog Devices. Точность составляет порядка 
0.1 /c
  при ч ас
тоте выдачи измерений порядка 
1000 Гц f . Двухосный инклинометр 
SCA103T D04 имеет диапазон измерений 
20.26 2.55 м/c g  . Точность опр е
деления уск орения составляет 
20.002 м/c  . На р ис. 28 изображен блок IMU  
и сравнение результата интегрирования измерений инклинометра с измерени я
ми положения с помощью звездного датчика. Спустя довольно короткое время 
оценка пол ожения начинает довольно сильно расходиться.  
 
Рис. 28. Блок IMU  на стенде LuVeX  и результаты интегрирования [12] 
 
Блоки IMU  используются почти на всех макетах. Так, на макетах стенда 
FFT блок IMU  состоит из 3 оптоволоконных датчиков угловой скорости и 3 
MEMS  акселерометров, которые установлены на верхней платформе макета 
[24]. На стенде ASTROS  также измеряются ускорения и угловая скорость.  
Акселерометры могут использоваться не только для измерения линейного 
ускорения макета на поверхности стола, но и для определения колебаний ги б
ких элементов конструкции. Например, в ра ботах [22,23]  акселерометры уст а
навливаются на гибкую планку между макетами (см. рис. 25 ). 
 
2.3 Использование  аэродинамического стола  
Аэродинамический стол позволяет решить большой спектр задач. Каждая 
из них имеет особенность в том числе и с точки зрения используемой элем ент
ной базы системы управления движением . Поэтому ниже приведены наиболее 
распространенные задачи, р ешаемые на столе [27]. 
Тестирование манипуляторов для космических систем  
Тестирование полномасштабных моделей космических систем было одним 
из первых приложений аэродинамических столов. Наземное тестирование мн о
гозвенных манипуляторов , разрабатываемых для работы в невесомости , прак
тически невозможно  в условиях земного притяжения без обезвешивающих м е
ханизмов. Аэродинамический стол дает возможность довольно точно имитир о23 
вать плоское движение манипулятора. Основной трудностью, с которой ста л
киваются разработчики, является то, что, как правило, тестируют макеты в н а
туральную величину, что требует создания больших поверхностей.  
Примечательной является задача имитации динамики многозвенного м а
нипулятора для Шаттла в натуральную величину – Shuttle  Remote  Manipulator  
System  [28], который достигал в длину 
15.2м , а его масса составляла 
410кг . 
Для этого была создана установка, которую помести ли в чистую комн ату (рис. 
29). 
 
 
Рис. 29. Установка для моделирования манипулятора Шаттла  
Китайский манипулятор тестировался схожим образом [29]. Здес ь тестир о
вание проводилось в две стадии, когда трехмерное движение разбивалось на 
два двухмерных движения, которые тестировались независимо.  
До этого речь шла о стендах для полноразмерных экспериментов. Такое 
далеко не всегда возможно , и в этом случае созд ается масштабная модель м а
нипулятора, с помощью которой проводится тестирование алгоритмов и чи с
ленное моделирование динамики. Можно отметить работу [30], где проводится 
верификация математической модели, заданной системой обыкновенных ди ф
ференциальных уравнений, гибкого манипулятора. В Университете Падуи [31] 
разработан макет для изучения влияния моментов сил реакции, возникающий 
при движении манипулятора  (рис. 30 ). Как видно из рис. 29 и рис. 30 манипул я
торы имеют несколько опор, обеспечивающих обезвешивание всего манипул я
тора. При этом один конец манипулятора  зафиксирован относительно стола. 
Такая фиксация фактически исключает тестирование алгоритмов упра вления 
КА, к которому подобный манипулятор крепится.  24 
 
Рис. 30. Макет манипулятора в Университете Падуи  
Использование манипулятора с двумя свободными концами приближает 
динамику макета на столе к динамике КА в условиях орбитального полета и 
привносит качественно новые особенности. По этой причине, по видимому, 
наибольшая группа работ посвящена разработке и использованию подобных 
систем. Еще в 80 х года х в Стэнд фордском университете были проведены эк с
перименты по тестированию стратегий управления для манипулятора со св о
бодными концами [32]. В работах [33,34]  рассматривается макет спутника с м а
нипуляторами для технического обслуживания других КА на орбите (рис . 31) . 
Рассматривают ся вопросы отработки и оптимизации управления с помощью 
маховиков и реактивных двигателей.  
 
 
Рис. 31. Макеты системы управления движ ением и захвата  
в Национальном техническом университете Афин  
Вопросы отработки взаимодействия группировки роботов с большой ги б
кой космической конструкцией также рассматривается в качестве объекта л а
бораторной отработки на аэродинамическом столе [9].  25 
Групповые полеты  
Говоря о группировке спутников , нельзя не упомянуть о задач ах управл е
ния спутник ами в групповом полете. Групповым полетом называется совмес т
ное движение спутников на небольшом (по сравнению с радиусом орбиты) ра с
стоянии. Использование аэро динамического стола дает широкие возможн ости 
по отработке управления относительным движением.  
Основными задачами здесь являются задачи создания, поддержания и и з
менения формации [35], [36]. При этом, как правило, р ассматриваются задачи 
лабораторной верификации методов и средств управления и определения дв и
жения. Например, в работе [37] было проведено тестирование а лгоритма опр е
деления 12 мерного вектора состояния двух близколетящих спутников с пом о
щью видеокамеры, а в [38] затрагиваются вопросы верификации робастного 
управления (
H ) для решения задачи сближения и стыковки.  При этом в лаб о
раторных условиях тестируется не только точность и быстродействие алгори т
мов, но и возможность их применимости в у словиях ограниченных вычисл и
тельных возможностей (иными словами – на бортовом компьютере). Например, 
в работе [39] показана возможность применения управления на основе уравн е
ния Риккати в системе реального времени на бортовом компьютере. А в [40] 
верифицируется техника управления с помощью широтно импульсного мод у
лятора реа ктивным двигателем  спутника, преследующего полуактивный КА.  
Работа [26] посвящена тестированию линейно квадратичного регулятора для 
группы макетов, а [41] – ляпуновского управления для реактивных двигателей 
нерегулируемой тяги. Таким образом, аэродинамические столы допускают т ес
тирование и верификацию практически всех групп алгоритмов управления , что 
позволяет использовать различное сочетание алгоритмов и сред ств упра вления 
макетами на аэродинамическом столе.  
Другие эксперименты  
Первые две задачи являются наиболее широко представленными в литер а
туре и проработанными на практике. Тем не менее, существует еще ряд задач, 
которые решаются на аэродинамическом столе и могут быть потенциально и н
тересны.  
Первый класс задач относится к тросовым спутниковым системам. К н а
стоящему моменту подобные миссии имеют высокую степень неудачи [42], та
ким образом, лабораторные эксперименты крайне необходимы. В работе [43] 
продемонстрирована на примере трех макетов, соединенных тросами , возмо ж
ность отработки в лаборатории подобных систем. Управление положением и 
ориентацией осуществ лялось с помощью реактивных двигателей. Для этой д е
монстрации использовался стол размером 3 x5 м2. В [44] исследуется динамика 
троса в лабораторных условиях. К сожалению, сама миссия оказалась неуда ч
ной, и трос удалось выпустить только на 22 метра. Причин ой неудачи оказался 
неучет температурной деформации на освещенной сторон е орбиты.  26 
Следующий класс задач относится к стыковке. Наибольший интерес здесь 
представляет стыковка с некооперирующей целью  [45], которой может являт ь
ся, например, объект космического мусора.  В ходе таких экспериментов тест и
руются не только алгоритмы управления движением, но и модели контактного 
взаимодействия и аппаратная часть, обеспечивающая захват целевого объекта. 
При этом кон ечная цель стыковки в таких случаях может быть или увод с орб и
ты, или же, напротив, ремонт и увеличение срока активного существования КА.  
Интересной является задача имитации посадки в лабораторных условиях. 
Общая схема такой экспериментальной установки при ведена на рис . 32 [27]. В 
подобных экспериментах тестируется оборудование для посадки на космич е
ские тела с малым уровнем гравитации.  Например, в [46] тестируется шасси для 
посадки на мягкий грунт.  
 
Рис. 32.  Схема отработки посадки  
 
В целом, как можно видеть, аэродин амические столы предоставляют ш и
рокий спектр возможностей по лабораторному тестированию космических ми с
сии. В Таблице  приведен перечень наиболее активно использующихся аэрод и
намических столов с основными характеристиками.  
 
Таблица  – Характеристики аэродина мических столов [27] 
Организация  Страна  Размер, 
2м
 Материал  
поверхн ости Степени  
свободы  Основная зад ача 
Университет  
Павии Италия  2x2 стекло  фиксирова н
ное  
основ ание управление  
нежесткими  
 манипулятор ами 
Харбинский  
технологический 
униве рситет  Кита й 4.2x3.6 гранит, с о
ставной  фиксирова н
ное  
основ ание тестирование  
манип уляторов  
Университет  
Тохоку  Япония  1x1 мрамор  3 манипулятор со 
свободными  
концами,  
стыко вка 27 
Организация  Страна  Размер, 
2м
 Материал  
поверхн ости Степени  
свободы  Основная зад ача 
Массачусетский 
технологический 
институт  США  1.3x2.2 гранит  3 манипулятор со 
свободными  
концами,  
нежесткие  
конструкции  
Токийский  
техн ологический  
инст итут Япония  1.8x1.8 стекло  3 манипулятор со 
свободными ко н
цами  
Комическое  
подразделение 
MDA  Канада  1.93x1.52 гранит  3 стыковка  
Национальный 
технический  
университет Афин  Греция  2.2x1.8 гранит  3 манипулятор со 
свободными  
концами  
Космический  
исследов ательский 
центр  Польша 2x3 гранит  3 манипулятор со 
свободными  
концами, поса дка 
Стэндфордский 
униве рситет  США  2.74x3.66  гранит  3 групповые п олеты  
Массачусетский 
технологический 
институт  США  8
угол ьник 
d=5.1  пол из эпо к
сидной см олы 3 манипулятор со 
свободными  
концами, нежес т
кие ко нструкции,  
групповые п олеты  
Школа повышения 
квалификации 
офицерских  
кадров ВМС США  США  4.9x4.3 пол из эпо к
сидной см олы 3 групповые п олеты  
Лаборатория  
реактивног о  
движения  США  7.3x8.5 металлические 
панели 3 групповые п олеты  
Технологич еский 
университет 
Джорджии  США  3.66x3.66 пол из эпо к
сидной см олы 5 групповые п олеты  
Институт  
космических  
систем  Герм ания 4x2.5 гранит  5 групповые п олеты  
Ливерморская н а
циональна я  
лаборатория  США  1.5x7.3 стекло  5 групповые п олеты  
Политехнический 
институт  
Ренсс елера  США  3.96x4.57 пол из эпо к
сидной см олы 6 групповые п олеты  
 
Из таблицы  видно, что основные приложения для подобного оборудов ания 
– это тестирование манипуляторов и гр упповые полеты (с ними тесто связана 
задача стыковки). Наиболее часто встречающееся число степеней свободы – 28 
три на один макет. Это связано с технической трудностью реализации б ольшего 
числа степеней. Обычно это комбинация аэродинамического стола и аэродин а
мического подвеса.  
 
Заключение  
Созданный по заказу ИПМ компанией Спутникс стенд КОСМОС для им и
тации движения макетов системы управления микроспутников является удо б
ным инструментом для тестирования алгоритмов управления движением. 
Спектр з адач, которые мо гут быть решены на стенде , охватывает области задач, 
связанных с групповыми полетами микроспутников, движен ием с тросом, им и
тацией движения гибких конструкций и космических манипуляторов. Обзор 
показал, что удобство разработанного стенда по сравнению с зар убежными 
аналогами заключается в том, что воздушная подушка создается не самими м а
кетами, а с помощью избыточного давления под поверхностью стола. Однако 
такой способ создания плоского невозмущенного движения обуславливает а э
родин амические возмущения, дейс твующие на макеты, которые должны быть 
иссл едованы и учтены в алгоритме управления.  29 
Литература  
1.  СПУТНИКС  Орбикрафт [ Электронный ресурс ]. URL: 
http://sputnix.ru/ru/products/eduru/orbikraft 10 (дата обращ ения : 02.12.2016).  
2.  Коптев М.Д., Прошунин Н.Н., Иванов Д.С. Определение движения 
макетов системы управления микроспутников на аэродинамическом столе с 
использованием видеокамеры // Препринты ИПМ им. М.В. Келдыша. 2015. № 
109. 32  с. 
3.  Schlotterer М., Theil S. Testbed for on orbit servicing and forma tion flying 
dynamics emulation // Proc. AIAA Guid. Navig. Control  Conf. Toronto, Canada. 
2010.  17 p. 
4.  Sabatini M., Farnocchia M., Palmerini G.B. Design and tests of a frictionless 
2D platform for studying space navigation and control subsystems // Proc. IEEE 
Aerosp. Conf. Big Sky. 2012.  12 p. 
5.  Papadopoulos E. et al. The NTUA space robot simulator: design and results 
// Proc. 10th ESA Work. Adv. Sp. Technol. Robot. A utom. ESTEC Noord wijk. 2008. 
8 p. 
6.  Rybus T. et al. New planar air bearing microgravity simulator for 
verification of space robotics numerical simulations and control algorithms // Proc. 
12th Symp. Adv. Sp. Technol. Robot. Au tom. ESTEC, Noordwijk. 2013. 8 p. 
7.  Ivanov D . et al. Laboratory Facility for Simulation and Verification of 
Formation Motion Control Algorithms // Small Satell. Mission. Earth Obs. New Dev. 
Trends. 2010. P.  267–277. 
8.  Yoshida K., Umetani Y. Control of space free flying robot // Proc. 29th 
Conf. De cis. Control. Hono  lulu, Hawaii. 1990.  6 p. 
9.  Boning P. et al. An experimental study of the control of space robot teams 
assembling large flexib lespace structures // Proc. 9th Int. Symp. Artif. In tell. Robot. 
Autom. Sp. 2008.  8 p. 
10.  Tsiotras P. ASTR OS: A 5 DOF experimental facility for research in space 
proximity operations // Proc. 37th AAS Guid. Cont rol Conf. Breckenridge. 2014.  
14 p. 
11.  Segal S., Carmi A., Gurfil P. Stereovision Based Estimation of Relative 
Dynamics Between Nonc ooperative Satell ites: Theory and Experiments // IEEE 
Trans. Control Syst. Technol. 2014. Vol. 22, № 2. P. 568 –584. 
12.  Иванов Д.С. et al. Система определения положения и ориентации 
макета спутника на основе блока инерциальных датчиков и звездного датчика // 
Препринт ы ИПМ  им. М.В.Келдыша. 2011. № 24. 30 с. 
13.  Биндель Д. et al. Лабораторный стенд для верификации алгоритмов 
управления группировкой спутников // Известия РАН. Теория  и системы 
управления. 2009. Т. 48, № 5. С . 109 –117. 
14.  Иванов Д.С., Овчинников М.Ю., Трофим ов С.П. Применение 
фотограмметрического метода в задаче автономного определения 
относительного движения группы макетов // Препринт ы ИПМ им. М.В. 30 
Келдыша. 2010. № 5.  22 с. 
15.  Sabatini M. et al. Image based control of the “PINOCCHIO” experimental 
free flyi ng platform // Acta Astronaut. Elsevier, 2014. Vol. 94, № 1. P. 480 –492. 
16.  Rybus T. et al. New planar air bearing microgravity simulator for 
verification of space robotics numerical simulations and control algorithms // 12th 
ESA Symp. Adv. Sp. Technol. Robot. Autom. 2013. Vol. 1, № 1. P. 1 –8. 
17.  Tsiotras P. A 5dof Experimental Platform for Research in Spacecraft 
Proximity Operations // AAS Guid. Control Conf. 2014. Vol. 14, № 114. P. 14.  
18.  Tweddle B.E., Saenz Otero A. Relative Computer Vision Based Navigation 
for Small Inspection Spacecraft // J. Guid. Control. Dyn. 2015. Vol. 38, № 5. P. 969 –
978. 
19.  Ma O., Yang G. Validation of a satellite docking simulator using the SOSS 
experimental testbed // IEEE Int. Conf. Intell. Robot. Syst. 2006. № Novembe r 2016. 
P. 4115 –4120.  
20.  Noteborn R. Flight Results from the PRISMA Optical Line of Sight Based 
Autonomous Rendezvous Experiment // Proc. 4th Int. Conf. Spacecr. Form. Fly. 
Mission. an Tech nol. May 2011, Montr. Canada.  10 p. 
21.  Saulnier K. et al. Opera tional Capabilities of a Six Degrees of Freedom 
Spacecraft Simulator // AIAA Guid. Navig. Control Conf. 2013. P. 1 –15. 
22.  Lichter M.D. Vibration Estimation of Flexible Space Structures using Range 
Imaging Sensors // Int. J. Rob. Res. 2006. Vol. 25, № 10.  P. 1001 –1012.  
23.  Bilton A. et al. Sensor architecture for the robotic control of large flexible 
space structures // J. F. Robot. 2007. Vol. 24, № 4. P. 297 –310. 
24.  Schlotterer M., Theil S. Testbed for on orbit servicing and formation flying 
dynamics e mulation // Proc. AIAA Gui d. Navig. Control Conf. 2010.  17 p. 
25.  Hall J.S., Romano M. Laboratory Experimentation of Guidance and Control 
of Spacecraft During On orbit Proximity Maneuvers // Mechatron. Syst. Simulation, 
Model. Control. 2007. P. 187 –222. 
26.  Bevilacqua R. et al. Guidance Navigation and Control for Autonomous 
Multiple Spacecraft Assembly: Analysis and Experimentation // Int. J. Aerosp. Eng. 
2011. Vol. 2011. P. 1 –18. 
27.  Rybus T., Seweryn K. Planar air bearing microgravity simulators: Revie w of 
applications, existing solutions and design parameters // Acta Astronaut. 2016. Vol. 
120. P. 239 –259. 
28.  Jorgensen G., Bains E. SRMS history, evolution and lessons learned // Proc. 
AIAA Sp. C onf. Expo. Long Beach. 2011. 24 p. 
29.  Gao X.H. et al. De velopment of the Chinese intelligent space robotic system 
// Proc. IEEE/RSJ Int. Conf . Intell. Robot. Syst. 2006. 8 p. 
30.  Payo I. et al. Experimental validation of nonlinear dynamic models for 
single link very flexible arms // Proc. 44th IEEE Conf. Decis . Control. E ur. Control 
Conf. Sev. 2005. 6 p. 
31.  Cocuzza S., Pretto I., Debei S. Novel reaction control techniques for 
redundant space manipulators: Theory and simulated microgravity tests // Acta 31 
Astronaut. 2011. Vol. 68, № 11. P. 1712 –1721.  
32.  Ullman  M.A., CannonJr R.H., Rock S.M. A modular system architecture for 
multimanipulator, free flying spacerobots // Proc. IEEE Int. Symp. In tell. Control. 
Chicago. 1993.  8 p. 
33.  Machairas K. et al. Extending the NTUA Space Robot Emulator for 
Validating Comple x On Orbit S ervicing Tasks // Proc. 12th Symp. Adv. Sp.  Technol. 
Robot. Autom. 2013.  7 p. 
34.  Papadopoulos E. et al. The NTUA Space Robotic Emulator: Design and 
Experiments // Int. Conf. Intell. Robot. Syst. IROS 11 Work. Sp. Robot. Simul. 2011 . 
14 p. 
35.  Robertson А., Inalhan G., How J.P. Spacecraft formation flying control 
design for the Orion mission // Proc. AIAA Gui d. Navig. Control Conf. 1999.  14 p. 
36.  Иванов Д.С., Овчинников М.Ю. Математическое моделирование 
управляемого движения многоэлементной системы // Препринт ы ИПМ им.  
М.В. Келдыша. 2008. № 72. С . 32. 
37.  Tweddle B.E. Relative computer vision based navigation for small 
inspection spacecraft // Proc. AIAA Gui d. Navig. Control Conf. 2011.  15 p. 
38.  Andrade C. et al. Robust Control Applied Tow ards Rendezvous and 
Docking // P roc. Eur. Control Conf. 2009.  6 p. 
39.  Di Mauro G. et al. Experimental Implementation of SDRE Method for 
Autonomous Rendezvous and Docking Maneuvering // Proc. 5th Int. Conf. Spacecr. 
Form. Fly. Mission. T echnol. 2013.  15 p. 
40.  Guglieri G. et al. Design and development of guidance navigation and 
control algorithms for spacecraft rendezvous and dock ing experimentation // Acta 
Astronaut. 2014. Vol. 94, № 1. P. 395 –408. 
41.  Curti F., Romano M., Bevilacqua R. Lyapunov Based T hrusters’ Selection 
for Spacecraft Control: Analysis and Experimentation // J. Guid. Control. Dyn. 2010. 
Vol. 33, № 4. P. 1143 –1160.  
42.  Chen Y. et al. History of the Tether Concept and Tether Missions: A Review 
// ISRN Astron. Astrophys. 2013. Vol. 2013.  P. 1–7. 
43.  Nakaya K. et al. On Formation Deployment For Spinning Tethered 
Formation Flying and Experimental Demonstration // Proc. 18th Int. Symp. Sp. Flight 
Dyn. 2004. P. 531 –536. 
44.  Gates S.S., Koss S.M., Zedd M.F. Advanced Tether Experiment Deploym ent 
Failure. 2001. Vol. 38, № 1. P. 60 68. 
45.  Uyama N. et al. Impedance based contact control of a free flying space 
robot with a compliant wrist for non cooperative satellite capture // IEEE Int. Conf. 
Intell. Robot. Syst. 2012. P. 4477 –4482.  
46.  Zhao Z., Zhao J., Liu H. Development of a landing mechanism for asteroids 
with soft surface // Int. J. Aerosp. Eng. 2013. Vol. 2013.  9 p. 
 
 
 32 
Оглавление  
Введение  ................................ ................................ ................................ .......................  3 
1 Лабораторный стенд в ИПМ  ................................ ................................ ................  3 
1.1 Аэродинамический стол  ................................ ................................ .........  4 
1.2 Промышленный вентилятор  ................................ ................................ .. 5 
1.3 Макеты систем управления  ................................ ................................ .... 6 
2 Обзор аналогов стенда ................................ ................................ ..........................  8 
2.1 Возможные реализаци и аэродинамического стола  .............................  8 
Использование  автономной  воздушной подушки  ................................ ... 8 
Аэродинамический стол с воздушной подушкой  ................................ .. 10 
2.2 Обзор методов определения движения  
на аэродинамическом столе  ................................ ................................ . 11 
Обработка видеоизображения  ................................ ................................ . 12 
Лазерные дальномеры ................................ ................................ ...............  19 
Инфракрасные дальномеры  ................................ ................................ ..... 20 
Псевдо GPS ................................ ................................ ................................  21 
Инерциальные датчики  ................................ ................................ .............  21 
2.3 Обзор задач, решаемый с помощью аэродинамического стола  ....... 22 
Тестирование ма нипуляторов для космических систем  .......................  22 
Групповые полеты  ................................ ................................ ....................  25 
Другие эксперименты  ................................ ................................ ...............  25 
Заключение  ................................ ................................ ................................ .................  28 
Литература  ................................ ................................ ................................ .................  29 
 MathNet.Ru
All Russian mathematical portal
G. K. Borovin, A. I. Petrov, A. A. Protopopov, N. Yu. Isaev, Th e dynamics of the rotor
of the low mass centrifugal pumps with the hydrostatic beari ngs and the driven by the
DC motors, Keldysh Institute preprints , 2016, 142
DOI: 10.20948/prepr2016142
Use of the allRussian mathematical portal MathNet.Ru imp lies that you have read and agreed to these terms of use
http://www.mathnet.ru/eng/agreement
Download details:
IP: 79.139.215.77
December 17, 2023, 00:59:12ИПМ им.М.В.Келдыша РАН   •  Электронная библиотека
Препринты ИПМ   •  Препринт № 142 за 2016 г.
ISSN 20712898 (Print)
ISSN 20712901 (Online)
Боровин Г.К. , Петров А.И.,
Протопопов А.А.,  Исаев Н.Ю.
Динамика роторов
малорасходных
центробежных насосов с
гидростатическими
подшипниками и приводом
от электродвигателей
постоянного тока
Рекомендуемая форма библиографической ссылки:   Динамика роторов малорасходных
центробежных насосов с гидростатическими подшипниками и приводом от электродвигателей
постоянного тока / Г.К.Боровин [и др.] // Препринты ИПМ им.  М.В.Келдыша. 2016. №  142. 24  с.
doi:10.20948/prepr2016142  
URL: http://library.keldysh.ru/preprint.asp?id=2016142О р д е н а  Л е н и н а  
ИНСТИТУТ ПРИКЛАДНОЙ МАТЕМАТИКИ  
имени М.В.Келдыша  
Р о с с и й с к о й  а к а д е м и и  н а у к  
 
 
 
 
 
 
 
 
Г.К. Боровин, А.И. Петров,  
А.А. Протопопов , Н.Ю.Исаев  
 
 
Динамика роторов  
малорасходных  центробежных насосов  
с гидростатическими подшипниками 
и приводом от электродвигателей  
постоянного тока  
 
 
 
 
 
 
 
 
 
 
 
Москва – 2016  Боровин Г.К., Петров А.И., Протопопов А.А. , Исаев Н.Ю.  
Динамика роторов  малорасходных центробежных насосов с 
гидростатическими подшипниками и приводом от электродвигателей 
постоянного тока  
В работе представлена математическая модель динамики ротора 
малорасходного центробежного насоса с гидростатическими 
подшипниками при его пуске. В результате математического 
моделирования определены зависимости от времени угловой скорости 
ротора и высоты его всплытия. Предложенная математическая модель 
может быть использована при проектировании малорасходных 
центробежных насосов с гидростати ческими подшипниками, применяемых 
в различных отраслях промышленности.  
Работа выполнена при частичной поддержке грантами РФФИ 16 01
00521 , РНФ 16 1910705 . 
Ключевые слова : математическая модель, центробежный насос, 
гидростатический подшипник.  
 
Borovin  G.K.,  Petrov A.I., Protopopov A.A. , Isaev N.Yu.  
The dynamics of the rotor of the low mass centrifugal pumps with the 
hydrostatic bearings and the driven by the DC motors  
The mathematical model of the rotor dynamics of the low mass 
centrifugal pump with th e hydrostatic bearings when starting it up were 
presented in this paper. The time dependent of the angular velocity of the rotor 
and the height of his ascent were determined as a result of the mathematical 
simulation. The proposed mathematical model can be used in the design of the 
low mass centrifugal pumps with the hydrostati c bearings used in various 
industries.  
This work was partially supported grants by RFBR 16 0100521  and by 
RSF 16 1910705 . 
Key words:  mathematical model, centrifugal pump, hydrostatic bearing.  
 
 
Оглавление  
Введение  ................................ ................................ ................................ ...............  3 
Математическая модель при пуске центробежного насоса  ............................  7 
Заключение  ................................ ................................ ................................ ........  22 
Литература  ................................ ................................ ................................ .........  23 
  
Введение  
Малорасходные центробежные насосы широко применяются в 
промышленности, в частности в робототехнике, в составе  летательных 
аппаратов , в качестве источников питания различных циркуляционных 
систем, например, в составе систем терморегулирования  космического 
аппарата . Для малорасходных центробежных насосов обычно характерны 
следующие  гидравлические параметры: подача насоса от 0 до 20 л/мин, 
напор – от 0 до 25 м.   
Вопросы, посвящённые  расчет ам центробежных насосов , достаточно 
хорошо освещены в  литературе [1]   [7]. Однако вопросы, связанные с 
самовсплытием роторов ц ентробежных насосов с  гидроподшипниками при 
их запуск е, недостаточно изучены , поэтому этот процесс требует 
тщательного исследования . 
В данной работе рассмотрены насосы системы терморегулирования 
космического аппарата с электродвигателем постоянного тока с 
постоянными магнитами. В таких насосах примен яются  гидроподшипник и 
с оппозитн ой схемой расположения рабочих колес (см. рис.1) .  4 
 
Рис. 1 – Принципиальная схема центробежног о насоса  
с оппозитной схемой с гидроподшипниками . 
 
Позициями на рис .1 обозначены:  
1 – Рабочее колесо  
2 – Гидроподшипник  
3 – Пара подпятников  
4 – Входной патрубок  
5 – Выходной патрубок  
6 – Вспомогательный насос  
7 – Ротор электродвигателя  
8 – Статор электродвигателя  
5 
9 – Корпус электродвигателя  
10 – Корпус одного из насосов электронасосного агрегата  
11 – Пунктирными линиями обозначены направ ления движения рабочей 
жидкости  
12 – Задроссельное пространство  
13 – Дроссель  
14 – Карман  
15 – Система отверстий в валу, обеспечивающая возврат рабочей 
жидкости назад на вход в рабочее колесо.  
 
Принцип работы исследуемого  насоса состоит в следующем : рабочая 
жидкост ь поступает в насос по оси с двух сторон на входные патрубки 
(рис.1, поз. 4) . Затем перед входом в рабочее колесо ( рис.1, поз.1) к 
основному потоку рабочей жидкости, поступившей на вход , добавляется  
поток рабочей жидкости, движущийся со стороны ротора  насоса. Далее  
рабочая жидкость поступает на вход в рабочее колесо ( рис.1, поз.1) и по д 
действием массовых  сил рабочая жидкость  попадает в отвод насоса ( рис.1, 
поз.5). При этом часть рабочей жидкости из отвода отбирается на работу  
гидроподшипника ( рис.1, поз.2).  
При необходимости  (например, при пуске насоса) подшипник  
питается рабочей жидкостью, поступающей  из вспомогательного насоса 
(рис.1, поз.6).  
В подшипнике имеется задроссельное пространство ( рис.1, поз.12 ), в 
котором  рабочая жидкость  распределяется между четырьмя  дросселями  
(рис.1, поз.13), имеющимися  в каждо м из подшипников. Рабочая жидкость, 
преодолев сопротивление этих дросселей , попадает в «карман » (рис.1, 
поз.14 ) и затем через зазоры между ротором  и подшипником поступает в 
област и слева и справа от подшипника, откуда через отверстия в роторе  
(рис.1, поз.15)  поступает на вход в рабочее колесо.  6 
Важной особенностью таких насосов являются процессы, 
возникающие в них при запуске. Эти процессы в насосе определяют его 
динамические характ еристики. В данной работ е для  рассматриваемого 
класса насосов была разработана методика расчета пусковых явлений  в 
таких насосах.   
Предлагаем ая методик а опробована  на опытном насосе, имеюще м 
следующие параметры:  плотность  рабочей  жидкости ρ=1000 кг/м3; 
диаметр выхода рабочего колеса  D2=0,05 м;  ширина рабочего колеса на 
выходе  b2=0,003 м;  суммарный КПД насоса  ηΣ=0,5;  радиус рабочего колеса 
на выходе  R2=0,025 м;  ширина подшипника  l=0,02 м;  диаметр ротора  
d=0,01 м;  вязкость рабочей жидкости  μ=0,01 Па ·с; средний зазор между 
подшипником и ротором  δ=104 м; коэффициент сухого трения  kт=0,1; 
передний осевой зазор между рабочим колесом и корпусом  a=0,001 м;  
коэффициент моментно механической характеристики электродвигателя  
K1=0,0015 Н ·м·с; коэффициент моментно механической характеристики 
электродвигателя  K=0,9 Н ·м; масса ротора  M=0,2 кг; момент инерции 
ротора I=105 Н·м·с2, диаметр сопла подшипника  dc=0,001 м,  толщина 
пленки рабочей жидкости в начальный момент   δ0=106 м. 
Полученные при моделировании зависимости в виде  график ов 
построены для  конкретного насоса  с приведенными выше параметрами . 
 
 
 
 
 
 
 
 
 
 
 
 
 
 7 
Математическая модель  при пуске  центробежного  насоса  
Рассмотрим  силы и моменты , действующие на ротор  насоса (см. 
рис. 2). 
 
Рис.2 – Силы и моменты , действующие на ротор  насоса.  
 
На ротор  насос а действуют следующие силы и моменты : вес ротора Mg, 
радиальная сила Pr, возникающая в рабочем колесе,  нормальная реакция 
опоры N, статическая Rc реакция гидроподши пника, м омент рабочего 
колеса Mрк, момент вязкого трения Мвт, момент  сухого трения Мст и 
момент двигателя Мд.  
На рис.  2 ротор насоса  изображен в начальном  состоянии  до запуска  
центробежного насоса . В качестве начала координат выбрано место 
касания ротора насоса  с внутренним кольцом подш ипника.  
 
Уравнения равновесия ротора  насоса  представим в следующем  виде : 
8 
{𝑀∙𝑑2𝑦
𝑑𝑡2=2∙𝑅𝑐(𝑡)+2∙𝑁(𝑡)−2∙𝑃𝑟(𝑡)−𝑀∙𝑔−2∙𝑃тр(𝑡)
𝐽∙𝑑𝜔
𝑑𝑡=𝑀д(𝑡)−2∙𝑀рк(𝑡)−2∙𝑀ст(𝑡)−2∙𝑀вт(𝑡)       ,            (1) 
где M – масса ротора, J – момент инерции ротора относ ительно его оси, ω 
– угловая скорость  вращения ротора  насоса, t – время с момента пуска 
насоса, g – ускорение свободного падения.  
Величины 𝑅𝑐(𝑡), 𝑃𝑟(𝑡), 𝑀рк(𝑡), 𝑀ст(𝑡), 𝑀вт(𝑡), N, Pтр(t) указаны с 
коэффи циентом 2, так как в насосе имею тся два рабочих колеса и два 
подшипника . В силу симметрии конструкции насоса их вклад в нагрузки 
на ротор одинаков.  
Рассмотрим слагаемые в уравнени ях (1). 
Радиальная сила  Pr(t), действующая на рабочее колесо  [1]: 
Pr(𝑡)=0,4∙𝜌∙𝑔∙𝐷2∙𝑏2∙𝐻(𝑡) ,                                                                            (2) 
где Н( t) – напор насоса , D2 – диаметр выхода из рабочего колеса, b2 –
ширина рабочего колеса на выходе, ρ – плотность рабочей жидкости . 
Для оценки напора насоса  воспольз уемся  формулой  из [2]: 
𝐻(𝑡)=𝜔2∙𝑅22∙𝜂
𝑔   .                                                                                                   (3) 
После соответствующих преобразований величину  Pr(t) представи м 
в виде:  
Pr(𝑡)=0,1∙𝜌∙𝐷23∙𝑏2∙𝜂∙𝜔(𝑡)2 .                                                                         (4) 
Статическ ую грузоподъемность ротора насоса вычисл им по 
формуле , приведенной в  [3]: 
𝑅𝑐(𝑡)=∆𝑃∙𝑙∙𝑑  ,                                                                                                      (5) 
где l – длина кармана подшипника, d – диаметр ротора насоса, ΔP – 
разность давлений  рабочей жидкости в верхней и нижней част ях кармана . 
Для определения  разности давлений рабочей жидкости ΔP необходимо 
сначала найти зависимость зазора между ротором  и подшипником от 
угла 𝜑 и высоты подъема ротора  𝑦. Для этого рассмотрим  схему 
расположения ротора относительно подшипника  (рис.3 ): 9 
 
Рис.3 – Схема определения  зависимости зазора между ротором   
и подшипником от высоты всплытия ротора  𝑦 и от угла  𝜑. 
 
Из рис.3 следует, что за зор определяется  по формуле:  
𝑎2(𝜑,𝑦)=√(𝑥1−𝑥2)2+(𝑦1−𝑦2)2   ,                                                               (6) 
где 
𝑥1=(𝑟+𝛿)∙sin𝜑 ,                                                                                                  (7) 
𝑥2=𝑟∙sin𝜑,                                                                                                               (8)  
𝑦1=(𝑟+𝛿)∙(1−cos𝜑) ,                                                                                      (9) 
𝑦2=𝑟+𝑦−𝑟∙cos𝜑.                                                                                           (10) 
Подставив (7) (10) в (6) , получ им: 
𝑎2(𝜑,𝑦)=√𝛿2sin2𝜑+(𝑦+𝛿(cos𝜑−1))2 .                                                 (11) 
10 
Схема определения  перепад а давлений ∆𝑃 представлена на рис. 4:  
 
Рис. 4  – Схема для определения перепада давлений ΔP между нижним  
и верхним карманами гидроп одшипника.  
 
Перепад давлений ΔP определяется  как разница давлений сверху и 
снизу кармана:  
∆𝑃=𝑃1−𝑃2.                                                                                                             (12) 
Давления P1 и P2 определяются  из баланса расходов  жидкости в насосе 
[см.9]: 
𝑄1=𝜇с∙𝜋∙𝑑𝑐2
4∙√2∙(𝑃н−𝑃1)
𝜌      ,                                                                    (13) 
𝑄1=2∙𝜇т∙𝑓1(𝑦)∙√2∙𝑃1
𝜌     .                                                                               (14) 
Аналогично для давления P2: 
𝑄2=𝜇с∙𝜋∙𝑑𝑐2
4∙√2∙(𝑃н−𝑃2)
𝜌     ,                                                                     (15) 
11 
𝑄2=2∙𝜇т∙𝑓2(𝑦)∙√2∙𝑃2
𝜌 ,                                                                                  (16) 
где μ с – коэффициент расхода сопла,  μт – коэффициент расхода чер ез 
торцы  подшипника , dc – диаметр сопла, Pн – давление на выходе из насоса, 
f1(y) и f2(y) – площади  нижней  и верхней  четверти бокового зазора  
соответственно  (см. рис.4).  
Давление на выходе насоса Pн: 
𝑃н=𝜌∙𝑔∙𝐻(𝑡)  ,                                                                                                        (17) 
где Н( t) находится из (3). 
Значения  площадей f1(y) и f2(y) определим вычислением интегралов  
(см. рис. 4):  
𝑓2(𝑦)=2∫√𝛿2sin2𝜑+(𝑦+𝛿(cos𝜑−1))2𝑑𝜑        ,                                (18)𝜋
4
0 
𝑓1(𝑦)2∫√𝛿2sin2𝜑+(2∙𝛿−𝑦+𝛿(cos𝜑−1))2𝑑𝜑.                                (19)𝜋
4
0 
Из (18) и (19 ) при различных значениях высоты всплытия y получаем 
следующие графики  зависимостей    𝑓1(𝑦) и 𝑓2(𝑦): 
 
Рис. 5  – График зависимости f2(y). 
12 
Аналогично для верхнего кармана:  
 
Рис. 6  – График зависимости f1(y). 
 
Для получения аналитической зависимости    𝑓1(𝑦) и 𝑓2(𝑦) аппрокси 
мируем  эти график и параболами вида  
𝑓2(𝑦)=𝛼1+𝛼2∙𝑦+𝛼3∙𝑦2,                                                                            (20) 
𝑓1(𝑦)=𝛼1+𝛼2∙(2∙𝛿−𝑦)+𝛼3∙(2∙𝛿−𝑦)2.                                           (21) 
Значения коэффициентов в этих формулах:  
𝛼1=3,05∙10−7 м2; 
𝛼2=0,0035 м; 
                                                   𝛼3=13,23  (безразмерный ). 
В результате  получаем графики  зависимостей 𝑓1(𝑦) и 𝑓2(𝑦)  (рис.7 и рис.8):  
13 
 
Рис. 7 – Аппроксимация зависимости площади бокового зазора  
от высоты всплытия ротора для нижнего  кармана.  
 
Аналогично для верхнего кармана:  
 
Рис.8 – Аппроксимация зависимости площади бокового зазора  
от высоты всплытия ротора для верхнего кармана.  
14 
С учетом формул (5), (12) (16), (20), (21) гидростатическ ая реакци я 
подшипника  𝑅𝑐 может быть определена  как: 
𝑅𝑐=𝑙∙𝑑∙[𝑝н∙(𝜇с∙𝜋∙𝑑𝑐2
4)2
(𝜇с∙𝜋∙𝑑𝑐2
4)2
+(𝜇т∙2∙𝑓2(𝑦))2−𝑝н∙(𝜇с∙𝜋∙𝑑𝑐2
4)2
(𝜇с∙𝜋∙𝑑𝑐2
4)2
+(𝜇т∙2∙𝑓1(𝑦))2] .  (22) 
Нормальная реакция опоры  из условия равновесия ротора : 
𝑁(𝑡)={𝑃𝑟+𝑀∙𝑔
2−𝑅𝑐 при 𝑦=0;
         0                     при 𝑦>0.                                                                  (23) 
Момент  от силы сухого трения : 
Мст={[2∙𝑃𝑟+𝑀∙𝑔−2∙𝑅𝑐]∙кт∙𝑑
4 при 𝑦=0,
                                0                           при 𝑦>0,                                         (24) 
где к т – коэффициент сухого трения.  
Момент  вязкого трения:  
Мвт=∑𝑟∙𝜏∙(𝑙∙𝑟∙𝑑𝜑),                                                                                    (25) 
где r – радиус (плечо силы), (𝑙∙𝑟∙𝑑𝜑) – площадь участка, τ – 
поверхностное напряжение  жидкости , определяемое по закону вязкого 
трения Ньютона:  
𝜏=−𝜇∙𝑑𝑉
𝑑𝑟1 ,                                                                                                               (26) 
где μ – динамическ ая вязкость, 𝑑𝑉
𝑑𝑟1−   градиент скорости.  
Полагаем, что режим течения жидкости в зазоре ламинарный и 
поэтому эпюра скоростей представляет собой линейную зависимость. 
Тогда зависимость скорости ротора от высоты  его всплытия  𝑦 примет вид:  15 
𝑉(𝑟1)=𝜔∙𝑑
∙𝑎2(𝜑,𝑦)−𝑟1
𝑎2(𝜑,𝑦) ,                                                                                  (27) 
где 𝑎2(𝜑,𝑦) вычисл им по формуле (11).  
  
 
Рис. 9  – Эпюра скоростей в зазоре.  
Момент от силы вязкого трения  с учетом формул (25), (26), (27)  определим  
как: 
Мвт(𝑦)=𝑙∙0,25∙𝑑3∙𝜇∙𝜔∙∫𝑑𝜑
√𝛿2sin2𝜑+(𝑦+𝛿(cos𝜑−1))2.                    (28)𝜋
0 
Для определения  зависимост и момента силы вязкого трения от 
величины всплытия  у следует  учитывать тот факт, что между ротором  и 
16 
подшипником имеется  тонкий слой жидкости, обусловленный 
поверхностными силами.  Обозначим  через  δ0 толщину этого слоя  и  
построим  график  зависимости момента от силы вязкого трения в 
диапазоне от значения δ0 до значения 2δ δ0. 
Графически  зависимо сть момента от силы вязкого  трения от 
величины  всплытия y ротора имеет такой вид, как показано на рис.10 : 
Рис.10 – График зависимости момента вязкого трения  
от высоты всплытия  ротора 𝑦. 
 
Представленная зависимость Мвт(𝑦) построен а при значении 
угловой скорости  ω=1 рад/с. Для опред еления  момента от силы вязкого 
трения при другом значении угловой скорости следует  умножить её на 
момент от силы вязкого трения при ω=1 рад/с . 
Получим аналитическую завис имост ь момента силы вязкого трения 
от величины всплытия  𝑦 ротора  параболой вида :  
17 
Мвт(𝑦)=𝛽1+𝛽2∙(𝑦−𝛿)6 .                                                                         (29) 
Коэффициенты в формуле (29 ): 
𝛽1=6,28∙10−5   Н∙м; 
𝛽2=7,15∙1019   Н∙м−5. 
 
Рис. 11 – Аппроксимация зависимости момента вязкого трения  
от высоты всплытия ротора 𝑦. 
 
Таким образом, момент от силы вязкого трения буде м вычислять по 
формуле:  
Мвт(𝑦)=(𝛽1+𝛽2∙(𝑦−𝛿)6)∙𝜔 .                                                                       (30) 
Сила вязкого трения:  
𝑃вт=∑𝜏∙(𝑙∙𝑟∙𝑑𝜑).                                                                                             (31) 
18 
 
Рис. 12 – Определение силы вязкого трения.  
Зависимость скорости от 𝑟1 в данном случае примет вид:  
𝑉(𝑟1)=𝑉∙sin𝜑∙𝑎2(𝜑,𝑦)−𝑟1
𝑎2(𝜑,𝑦) ,                                                                           (32) 
где V – вертикальная скорость вала.  
Зависимость силы вязкого трения от высоты всплытия  ротора   y: 
 
𝑃вт(𝑦)=𝑙∙0,5∙𝑑∙𝜇∙𝑉∙∫sin𝜑∙𝑑𝜑
√𝛿2sin2𝜑+(𝑦+𝛿(cos𝜑−1))2 .    (33)𝜋
0 
График этой зависимости при скорости V=1 м/ c представлен на рис .13: 
19 
 
Рис.13 – График зависимости силы вязкого трения  
от высоты всплытия ротора  y. 
Как следует из рис .13, силу вязкого трения  можно принять  за 
постоянную величину. Тогда окончательный вид зависимости силы 
вязкого трения примет вид:  
𝑃вт=0,4∙𝑉 .                                                                                                           (34) 
Момент на рабочем колесе:  
𝑀рк=𝑀ц+𝑀дт  ,                                                                                                       (35) 
где М ц – центробежный момент, М дт – момент дискового трения.  
Центробежный момент [ см.4]: 
𝑀ц=𝜌∙𝑄∙𝑅22∙𝜔    ,                                                                                               (36) 
где Q определится по формуле [ 2]: 
𝑄=𝜇п∙𝜋∙𝐷1∙𝑎√2∙𝑔∙𝐻(𝑡) ,                                                                              (37) 
здесь 𝜇п – коэффициент расхода в переднем осевом зазоре между рабочим 
колесом и корпусом насоса [ см.2]. 
20 
Момент дискового трения равен [ см.5]: 
Мдт(𝑡)=𝜔(𝑡)∙𝜋∙𝜇∙𝑅24
𝑎 ,                                                                                    (38) 
где 𝑎 – осевой зазор между рабочим колесом и корпусом насосом. Тогда 
момент на рабоче м колес е: 
𝑀рк(𝑡)=𝜔(𝑡)∙𝜋∙𝜇∙𝑅24
𝑎+𝜌∙𝑄∙𝑅22∙𝜔 .                                                     (39) 
Момент, создаваемый двигателем , описывается формулой [ см.8]: 
𝑀д(𝑡)=𝐾−𝐾1∙𝜔(𝑡),                                                                                         (40) 
где K и К 1 – коэффициенты моментно механической характеристики  
электродвигателя.  
Таким образом, математическая модель процесса запуска 
малорасходного  насоса  имеет следующи й вид : 
{        𝑀∙𝑑2𝑦
𝑑𝑡2=2∙𝑅𝑐(𝑡)+2∙𝑁(𝑡)−2∙𝑃𝑟(𝑡)−𝑀∙𝑔,
𝐽∙𝑑𝜔
𝑑𝑡=𝑀д(𝑡)−2∙𝑀рк(𝑡)−2∙𝑀ст(𝑡)−2∙𝑀вт(𝑡),
𝜔(0)=0,
𝑦(0)=0,
𝑑𝑦
𝑑𝑡(0)=0.                        (41) 
Для решения  систем ы уравнений (4 1) приведём её к нормальной форме 
Коши, а именно : 
{        𝑑𝑉
𝑑𝑡=2∙𝜌∙𝜔2∙𝑅22∙𝜂∙𝑙∙𝑑−0,2∙𝜌∙𝐷23∙𝑏2∙𝜂∙𝜔2−𝑀∙𝑔
𝑀
𝑑𝑦
𝑑𝑡=𝑉,
𝑑𝜔
𝑑𝑡=𝑀д(𝑡)−2∙𝑀рк(𝑡)−2∙𝑀ст(𝑡)−2∙𝑀вт(𝑡)
𝐽,
𝑉(0)=0,
𝑦(0)=0,
𝜔(0)=0.        (42) 
 21 
Реша я систему обыкновенных дифференциальных уравнений  в си стеме 
Mathcad  методом Рунге Кутты 4 го порядка , получаем график и 
зависимости  угловой скорости ротора и вертикальной координаты   𝑦 от 
времени (рис.14, 15) : 
 
Рис. 14  – График зависимости угловой скорости  ротора  от времени.  
 
 
Рис. 15 – График зависимости вертикальной координаты у от времени . 
22 
Заключение  
В работе п олучена математическая модель пуска ротора 
малорасходного центробежного насоса с гидростатическими 
подшипниками с двигателем постоянного тока с полуоткрытыми рабочими 
колесами для оппозитной схемы расположения рабочих колес.  
Представленная в работе  методика учитывает действующие на ротор 
силы и моменты: вес ротора Mg, радиальн ую силу Pr, возникающ ую в 
рабочем колесе, нормальн ую реакци ю опоры N, статическ ую Rc реакци ю 
гидроподшип ника, момент рабочего колеса Mрк, момент от силы вязкого 
трения Мвт, момент от силы сухого трения Мст и момент двигателя Мд.  
Полученные в результате моделирования различные зависимости, 
характеризующие динамические процессы ротора насоса при его запуске , 
были приведены к аналитическому виду аппроксимацией их 
многочленами. В качестве таких характеристик приведены:  зависимости 
площадей торцевых зазоров подшипника от величины всплытия y ротора 
насоса, зависимости момента вязкого трения от высоты всплытия y ротора  
насоса , зависимости силы вязкого трения от высоты y всплытия ротора  
насоса . При аппроксимации  двух  последних характеристик  был учтен 
такой фактор , как наличие жидких пленок в зазоре, обусловленных 
действием поверхностных сил.  
С использованием получен ных аналитических  зависимостей были 
решены дифференциальные уравнения движения ротора и получены 
графики зависимости угловой скорости и величины всплытия y ротора от 
времени. По этим графикам можно судить о качестве подбора 
конструктивных параметров насоса  и динамических свойствах роторов с 
гидростатическими подшипниками.  
Разработанная  методика динамического расчета ротора насоса может 
быть применена д ля проектирования малорасходных центробежных 
насосов, использующихся в космической технике и робототехнике .  23 
Литератур а 
1. Черкасский В.М. Насосы, вентиляторы, компрессоры. М., «Энергия»,  
1977 г. – 416 с.  
2. Боровин Г.К., Протопопов А.А. Расчет оптимального осевого зазора 
полуоткрытого рабочего колеса центробежного малорасходного насоса 
системы терморегулиров ания космического аппарата  // Препринты ИПМ 
им. М.В. Кел дыша. 2013. №  86. 16 с.  
3. Воскресенский В.А. , Дьяков В. И. , Зиле А. З. Расчет и проектирование 
опор жидкостного трения: Справочник – М.: Машиностроение. 1983,  232 с.  
4. Ломакин А.А. Центробежные и осевые насосы. М., «Машиностроение», 
1966 г.  – 354 с.  
5. Михайлов А.К., Малющенко В.В. Лопастные насосы. Теория, расчет и 
конструирование. М., «Машиностроение», 1977 г.  – 288 с.  
6. Ломакин В.О., Петров А.И., Кулешова М.С. Исследование двухфазного 
течения в осецентробежном колесе методами гидродинамического 
моделирования. Наука и образование: электронное научно техническое 
издание. 2014. № 9. С. 45 64. 
7. Ломакин В.О., Артемов А.В., Петров А.И. Определение влияния 
основных геометрических параметров отвода н асоса НМ 10000 210 на его 
характеристики  / Наука и образование: электронное научно техническое 
издание. 2012. № 8. с. 5. 
8. Мартынов И.О. Электротехника., М., «Кнорус», 2015 , 304 с.  
9. Чернавский С.А. Подшипники скольжения. М., «Машгиз», 1963 , 245 с.  
10. Боровин Г.К., Протопопов А.А. Динамика роторов малорасходных 
центробежных насосов с гидроподшипниками. Конференция 
«ГИДРАВЛИКА», посвященная вопросам гидромеханики, гидромашин, 
гидроприводов и гидропневмоавтом атики МГТУ им. Н.Э. Баумана. 
22 ноября 2016  г.  
 MathNet.Ru
All Russian mathematical portal
V. E. Pavlovsky, A. V. Savitsky, The solving of inverse probl em for the computation of
control action for quadrocopter, Keldysh Institute preprints , 2017, 017
DOI: 10.20948/prepr201717
Use of the allRussian mathematical portal MathNet.Ru imp lies that you have read and agreed to these terms of use
http://www.mathnet.ru/eng/agreement
Download details:
IP: 79.139.215.77
December 17, 2023, 00:51:52ИПМ им.М.В.Келдыша РАН   •  Электронная библиотека
Препринты ИПМ   •  Препринт № 17 за 2017 г.
ISSN 20712898 (Print)
ISSN 20712901 (Online)
Павловский В.Е. , Савицкий А.В.
Исследование обратной
задачи для вычисления
управляющих воздействий
для квадрокоптера
Рекомендуемая форма библиографической ссылки:   Павловский В.Е., Савицкий А.В.
Исследование обратной задачи для вычисления управляющих воздействий для квадрокоптера
// Препринты ИПМ им.  М.В.Келдыша. 2017. №  17. 20  с. doi:10.20948/prepr201717  
URL: http://library.keldysh.ru/preprint.asp?id=201717О р д е н а  Л е н и н а  
ИНСТИТУТ ПРИКЛАДНОЙ МАТЕМАТИКИ  
  имени М.В.Келдыша  
Р о с с и й с к о й  а к а д е м и и  н а у к  
 
 
 
 
 
 
 
 
 
В.Е.Павловский, А.В.Савицкий  
 
Исследование обратной задачи  
для вычисления управляющих 
воздействий для квадрокоптера  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Москва — 2017УДК 623.74 6519 
 
 
Павловский В.Е., Савицкий А.В.  
Исследование обратной задачи для вычисления управляющих 
воздействий для квадрокоптера  
Предметом исследования данной работы является решение обратной 
задачи динамики для беспилотного летательного аппарата – квадрокопте ра. За 
основу была выбрана описанная ранее система дифференциальных уравнений, 
описывающая движение робота. Исходя из ограниченности управляющих 
воздействий, были получены ограничения на возможные ускорения системы. 
Аналитически были изучены такие фигуры в ысшего пилотажа, как полет по 
вертикальной окружности, «горка», полёт по винтовой линии и другие. Описан 
алгоритм численного моделирования. С его помощью были получены графики 
движения квадрокоптера и управляющих воздействий для каждой траектории. 
Показано , что решением обратной задачи динамики можно находить 
управляющие воздействия для сложных траекторий, в том числе для фигур 
высшего пилотажа.  
Ключевые слова: квадрокоптер, обратная задача, алгоритм управления, 
полет по окружности.  
 
 
Vladimir E. Pavlovsky , Alexander V. Savitsky  
The solving of inverse problem for the computation of control action for 
quadrocopter  
This article is deals with a solution of the inverse problem of dynamics for an 
unmanned aerial vehicle  quadrocopter. This article is based on t he system of 
differential equations describing the motion of the robot which was published 
previously. Taking into account the limited control actions, we got the limits limits on 
the possible acceleration of the system. In this work we studied analyticall y such 
aerobatics as flight in a circle, slide, flying in a vertical spiral and others. Besides a 
numerical simulation algorithm was described. Using  this algorithm we obtained the  
graphics of quadrocopters motion and control actions for each trajectory. I t is shown 
that using the solution of inverse dynamics problem we can find the control for 
complex trajectory, including aerobatics.  
Key words:  quadrotor, inverse problem, algorithm of control, flight in a circle.  Введение. Состояние проблемы  
На протяжении последних лет среди летающих роботов наибольший 
интерес как с теоретической, так и с практической точки зрения вызывают 
мультироторные роботы. Развитие технологий постоянно открывает новые 
возможности для беспилот ных летательных аппаратов и позволяет переходить 
к более сложным задачам на автономном уровне. С каждым годом значительно 
возрастает количество областей, в которых используются БПЛА, однако 
наиболее востребованными отраслями на сегодняшний день являются 
аэрофотосъемка и мониторинг:  
 профессиональная кино  и фотосъемка;  
 картография и топографическая съемка;  
 исследование климата и экологический мониторинг;  
 точное сельское хозяйство (картирование земель для целей точного 
земледелия, мониторинг угодий, анализ ве гетативного индекса  и 
внесение веществ);  
 мониторинг транспортного потока;  
 борьба с пожарами и стихийными бедствиями;  
 исследование целостности и состояния зданий и сооружений, в т.ч. 
инфраструктурных объектов;  
 поиск полезных ископаемых и др.;  
 любительская фото  и видеосъемка.  
 
Также активно развиваются такие сферы применения, как транспортировка 
грузов, связь (использование БПЛА как платформ для ретрансляции сигналов), 
помощь в операциях по поддержанию правопорядка, поиск и спасение, охрана 
периметров, обра ботка сельскохозяйственных угодий путем внесения 
биопрепаратов и пестицидов и многие другие. При этом существует ряд 
технологических барьеров, которые сдерживают темпы развития индустрии 
БПЛА. Часть из них связана с материаловедческими и конструкционными 
вопросами: силовые и энергетические установки с высокой удельной 
мощностью и емкостью соответственно, мощные процессоры, высокоточная 
система датчиков и сенсоров. Ниже приведен ряд других барьеров, связанных с 
программно алгоритмическим блоком:  
 задачи оптим ального управления;  
 возможность адаптации к непрогнозируемым внешним 
воздействиям;  
 системы машинного зрения для распознавания целевых объектов и 
обнаружения препятствий;  
 обработка больших данных и оптимизация вычислений и др.  
 4 
В данной работе рассмотрен ал горитм синтеза управления, основанный на 
решении обратной задачи динамики для наиболее распространенного 
летательного робота  квадрокоптера.  
 
В настоящее время уже разработано и испытано множество различных 
методов управления квадрокоптером. Одним из них  является использование 
нейросетевого контроллера, описанного в работе [1], при этом построенная в 
ней теоретико механическая модель будет взята за основу исследования в 
настоящей публикации.  
Другим методом синтеза управляющих воздействия является метод 
построения динамической обратной связи. На его основе в работе [2] для такой 
базовой траектории, как взлёт посадка, решается задача стабилизации системы 
вблизи желаемой траектории.  
Также встречаются работы с исследованием плоских движений 
квадрокоптера. В частности, в работе [3] показано, что движение робота в 
горизонтальной плоскости является управляемым, и с помощью метода 
линеаризации с обратной связью построено программное управление 
движением.  
 
Стоит отметить, что мультироторные летательные роботы явл яются 
системами с дефицитом управляющих воздействий, так как имеют шесть 
степеней свободы и максимум четыре управления. Кроме того, управляющие 
воздействия имеют естественное ограничения, связанные с возможностями 
несущих винтов. В связи с этим в отдельный  класс задач стоит выделить 
изучение допустимых пространственных траекторий квадрокоптера и синтез 
управлений в имеющихся ограничениях. В работе [4] предложен метод 
разбиения требуемой траектории на отдельные участки таким образом, чтобы 
возможно было пост роить алгоритм движения по каждому из участков и 
алгоритм управления на каждом эшелоне.  
 
 Целью настоящей работы является исследование обратной задачи 
динамики квадрокоптера, изучение движения робота в вертикальной и 
горизонтальной плоскостях, построение таких фигур высшего пилотажа, как 
полет по вертикальной окружности, «горка», полет по винтовой линии и др. 
Также в настоящей работе получены ограничения на пространство возможных 
траекторий общей задачи.  
1. Ограничения на пространство возможных движений  
 1.1. Описание модели  
 
Теоретическая механическая модель квадрокоптера, взятая за основу в 
данной работе, предварительно описана в [1], представляет собой твердое тело 5 
с шестью степенями свободы q = (x, y, z, φ, ψ, θ).  Пусть {Oxyz}   правая 
инерциальная систем а координат, причем Oz соответствует вертикальному 
направлению. Положение центра масс тела определяется вектором ξ=(x, y, z).  
Ориентация робота задается с помощью углов Крылова ν=(φ, ψ, θ).  Система 
имеет четыре управления, соответствующие угловым скоростям  четырех 
винтов. Для дальнейших исследований за основу взята следующая система 
дифференциальных уравнений Лагранжа:  
 
. . . .
1 1 2 3 4
. . . .
1 1 2 3 4
. . . .
1 1 2 3 4
2 2 2 2 2( )( ),
( )( ),
()
( ) (,
)Mx k cos sin cos sin sin
My k sin sin cos cos sin
Mz Mg k cos cos
Asin Acos sin Dcos cos cos sin A D A sin        
        
     
          
    
    
    
     

2 2 2
.. .. .. ..2
3 1 2 3 4
. . . . . .
3 1 2 3 4 1 3 1
2122 ( ) 2 ( ) ( )
( 2 2 ) ( )
( )( ) ( )
cos(c
csin cos A D sin cos A D sin cos sin D A
cos Asin Dcos I cos cos
sinI sin cos cos sin k lcos
kcos        
         
           
     
       
       

. . . .
2 3 4
2 2 2
.. .. .. ..22
3 1 2 3 4
. . . . .
3 1 2 3 4 1 32 2 2),
( ) ( ) (2 2 )
( ) 2 ( ) ( )
( )( ) (c
ccos sin cos A D Acos Dsin cos Acos Dcos
sin cos cos D A sin D A I sin
I cos sin cos k l  
          
          
            
     
        
      
. . . . .
1 2 1 2 3 4
2 2 22 2 2 2
2. . . . . .2
3 1 2 3 4 1 2 4
..
1 3 1 2 1) ( ),
( 2 2 ) ( )
( ) ( )( ) ( )
[ ( ) (csin k
A sin A cos Dcos Acos cos sin cos D A
sin cos A D I cos sin cos k l
tg lk sin cos k    
          
             
         
      
          
   
. . .
22
22.
34 )],   



























   
 
 
где используются следующие обозначения:  
. . . .
1 2 3 4,, и   
  угловые скорости несущих винтов, которы е являются 
управлениями,  
k1  коэффициент подъемной силы,   
k2  коэффициент момента сопротивления, который создается вращением 
несущего винта,  
l  длина «луча» квадрокоптера,  
М  масса квадрокоптера,  
1aI
   момент инерции квардо коптера относительно оси, направленной по 
одному из «лучей»,  6 
3aI
  момент инерции квадрокоптера относительно оси, перпендикулярной 
его плоскости,  
1сI
 момент инерции диска несущего винта относительно оси, 
направленной по одному из «лучей»,  
3cI
 момент инерции диска несущего винта относительно оси, 
перпендикулярной его плоскости,  
334acD I I
, 
114acA I I .  
 
Введем новые переменные функций управления Г1, Г 2, Г 3, F, вместо 
1 2 3 4( , , , ) :
 
3 1 11 ( )lkГ
, 
24 2 1 ( )lk  Г
,  
1 2 3 4 3 3()cI Г    
,  
1
1 2 3 4()Fk
M
, 
 
Стоит отметить, что данная замена является линейной с матрицей перехода 

, имеющей следующий вид:  
 
 
В связи с тем, что 
det( ) const 0   , замена является невырожденной. Таким 
образом, дальнейшее исследование обратной задачи будем проводить для 
переменных Г1, Г2, Г3, F. 
Также введем дополнительное обозначение дл я суммарного момента 
сопротивления: 
2 2 2 2
1 2 3 2 4 () Sk    
 . Отметим, что S однозначно выражается 
через переменные Г1, Г2, Г3, F:  
 
22
3 2 2 1
3 12 2
1 3 1,  ,  (2,)cFГГ Г Г FМ k ГГSk I k l   

. 
 
В результате получаем следующую систему дифференциальных 
уравнений:  
 7 
2 2 2 2 2
2 2 2( ),
( ),
( ) ( )
2 ( ) 2 ( (,
)Mx F cos sin cos sin sin
My F sin sin cos cos sin
Mz Mg Fcos cos
Asin Acos sin Dcos cos cos sin A D A sin
sin cos A D sin cos A D sin cos sin D    
    

          
         

 
     
     
2
3
3
2 2 2
22
31)
( 2 2 )
cos( ) ,
( ) ( ) (2 2 )
( ) 2 ( )A
cos Asin Dcos Г cos cos
sinГ sin cos cos sin Scos cos
cos sin cos A D Acos Dsin cos Acos Dcos
sin cos cos D A sin D A Г sinГ     
     
          
      
    
   
     
    
31
2 2 2
2
3 2
1( ) ,
( 2 2 ) ( )
( ) ( )
[ ].Г cos sin cos Г sin S
A sin A cos Dcos Acos cos sin cos D A
sin cos A D Г cos sin cos Г
tg sin c s Г oS     
          
       
  
















   

      
     

 
 
1.2. Ограничения на пространство возможных траекторий  
для общей задачи  
Заметим, что исходная система состоит из шести дифференциальных 
уравнений второго порядка и имеет шесть неизвестных функций координат q = 
(x, y, z, φ, ψ, θ) и четыре функции управления Г1, Г 2, Г 3, F. Таким образом в 
конфигурационном пространстве достижима не любая траектория. Однако 
обратная задача может быть решена частично: например, можно найти функции 
управления Г1, Г2, Г3, F для заданной кривой движения 
1 2 3( ), y ( ),z ( ) x f t f t f t    и 
при дополнительном соотношении на φ, ψ, θ . При этом функции 
1 2 3 4( , , , )
 , 
как было отмечено выше, находятся однозначно.  
Кроме того, перепишем первые три уравнения Лагранжа в следующем 
виде:  
13
23
33,x Fa
y Fa
z g Fa




                                                                                                        (1) 
где 
13 23 33 ,, a cos sin cos sin sin a sin sin cos cos sin a cos cos                . 
Так как компоненты 
3ai  являются элементами третьего столбца матрицы углов 8 
Крылова, то выполнено соотно шение: 
2 2 2
13 23 33 1 a a a   . Используя это 
соотношение, возведем в квадрат первые три уравнения Лагранжа и сложим их. 
В результате имеем:  
.. ..
22..2
12
23 ( ) ( ) ( ( ) ) F f t f t f t g   
. 
Таким образом, достижимы только такие движения, для которых 
выполнено данное соотн ошение. Также результирующее ускорение ограничено 
суммарной силой тяги четырех винтов.  
 
1.3. Постановка задачи  
 
 Целью настоящей работы является построение алгоритма нахождения 
управляющих воздействий Г1, Г2, Г3, F, позволяющих реализовать движение по 
заданной траектории 
1 2 3( ), y ( ),z ( ) x f t f t f t   . В частности, необходимо решить 
обратную задачу динамики для движения по некоторым фигурам высшего 
пилотажа.  
 
2. Решение обратной задачи  
 
2.1. Общий случай  
 
Далее опишем решение обратной задачи для общего случая. Из за 
дефицита управляющих воздействий в конфигурационном пространстве 
достижима не любая траектория. Имея шесть уравнений и десять неизвестных 
(четыре управляющих воздействия и шесть координат), в общем случае 
необходимо минимум четыре соотношения для разрешени я системы. С другой 
стороны, в подсистему из первых трех уравнений входит управляющее 
воздействие F и шесть обобщенных координат. Поэтому при задании любых 
четырех координат остается три уравнения и три неизвестных, что в общем 
случае делает подсистему раз решимой.  
 
Предположим, необходимо найти функции управления Г1, Г 2, Г 3, F для 
некоторого заданного закона движения 
1 2 3( ), y ( ),z ( ) x f t f t f t   . Для начала 
рассмотрим первые три уравнения Лагранжа общей системы:   
( ),
( ),
.x F cos sin cos sin sin
y F sin sin cos cos sin
z g Fcos cos    
    





                                                                        (2) 
 Слева от знака равенства стоят заданные функции времени, отсюда 
находим управляющее воздействие  F: 
 9 
 
2 2 2
1 2 3(t) (t) ( (t) ) F f f f g   
  
 
В результате остается два независимых уравнения на углы и оставшие ся 
три последних уравнения общей системы дифференциальных уравнений. Но 
система является неразрешимой, так как неизвестных на одну больше: три угла 
и три оставшиеся три управления. Таким образом, необходимо добавить еще 
одно вспомогательное соотношение на углы. После этого из первых двух 
уравнений выражаются оставшиеся два угла. В результате чего остается три 
уравнения на три неизвестных.  
Стоит отметить, что последнее уравнение не является дифференциальным 
и из него явно можно выразить Г 2 через Г 1, Г3 и углы, которые представляют из 
себя уже найденные функции времени. Кроме того, первые оставшиеся два 
уравнения являются дифференциальными только относительно Г 3. Поэтому при 
рассмотрении некоторых движений решение обратной задачи будет сводится к 
решению о дного дифференциального и двух полиномиальных уравнений.  
Далее будут рассмотрены некоторые траектории.  
 
2.2. Движение квадрокоптера в вертикальной плоскости.  
Движение  по окружности  
Для нахождения закона движения в вертикальной плоскости без 
ограничения об щности будем считать, что
0x . Кроме того, как было показано 
в разделе 2.1, предположим, что 
0 . Тогда из первого уравнения общей 
системы дифференциальных уравнений следует, что 
0 . В результате имеем 
следующую систему уравнений:  
 
3 3 1
3 3 1
2,
,
cos sin sin cos 0,
sin cos cos sin 0,
.y Fsin
z g Fcos
Г Г Г S
Г Г Г S
A Г

    
    


    
   






                                                              (3) 
 
 Третье и четвертое уравнения этой системы можно преобразовать, 
поочередно умножая их на 
sin  и 
cos . В итоге имеем:  
 
31
3 1 2 4
2,
,
0,
,  ,  , 0,()
.y Fsin
z g Fcos
ГГ
Г S Г Г Г F
A Г












                                                                  (4) 
                                                                                       10 
Таким образом, из пе рвых двух уравнений (4) находим 
  и F, а выражения 
для Г1 и Г2 из третьего и пятого уравнений (4) соответственно подставляем в 
четвертое уравнение (4) и получаем следующее дифференциальное уравнение 
на Г3:  
 
22
33 2
2
1 3 13(A ) ( )02cFГ М Г k
k I k lГ     

 
 
Данное уравнение позволяет найти все управляющее воздействие Г3, и, 
следовательно, оставшиеся две функции управления  Г1, Г2. 
 Далее для верификации найденных функций управления подставим 
полученные управления в исходную систему и решим прямую задачу  
динамики. Ввиду сложности рассматриваемых систем в данной работе было 
задействовано численное моделирование с помощью программы MATLAB  
R2013 a. Суть проверки заключается в решении задачи Коши из 12 уравнений 
первого порядка для определенных начальных услов ий и найденных функций 
управления Г1, Г2, Г3, F. 
 Рассмотрим случай движения по горизонтальной окружности, радиусом 
R. Запишем закон движения следующим образом:  
 
 
cos ,
sin ,y R R
zR



  
где 
2
0sin ( t),    
0 и 
  параметры скорости движения по окружности. 
Параметр 
  выбран таким образом, чтобы в начальный момент времени были 
выполнены следующие условия:  
max
max
max
max(0) 0,
(0) 0,
(0) 0,
(0) 0,
(T ) 0,
(T ) 0,
(T ) 0,
(T ) 0.y
z
y
z
y
z
y
z







 
Пусть 
02 , 
10R м и 
max2T , 
maxT =18 c – время одного полного 
оборота. С помощью численного интегрирования находим функции Г1, Г2, Г3, F 
(рис. 1).  
 11 
     
  
Рис.1. Функции управления Г2 и F для полёт а квадрокоптера  
по окружности в плоскости Oyz. 
На рисунках 2 и 3 показана траектория движения, которой соответствует 
найденные функции управлений, причет на рисунке 3 схематично изображен 
квадрокоптер, летящий по вертикальной окружности, и график найденно й 
координаты 
()t . 
    
  
Рис.2. Функции  
()zt  и 
y( )t  для полёта квадрокоптера  
по окружности в плоскости Oyz. 
    
  
Рис.3. Функции  
(x, y)z  и 
()t  для полёта квадрокоптера  
по окружности в плоскости Oyz. 12 
Из полученной на рисунке 3 функции для угла крена получаем, что  
max(T ) 0
. Таким образом, совершив полет по вертикальной окружности, 
квадрокоптер вернулся в начальное положени е.  
 
2.3. Движение квадрокоптера в вертикальной плоскости. «Горка»  
Аналогично рассмотрим такую фигуру высшего пилотажа, как 
прохождение горки с высотой zm. Запишем закон движения следующим 
образом:  
 
2,
sin ,my
zz



  
где параметр 
  выбран таким же образом, как и в предыдущем случае. 
Аналогично для этого случая с помощью численного интегрирования находим 
Г1, Г2, Г3, F (рис. 4).  
 
   
  
Рис.4. Функции управления Г2 и F для маневра «горка».  
 
   
  
Рис.5. Функции 
()zt  и 
y( )t  для маневра «горка».  
 13 
   
  
Рис.6. Функции 
(y)z  и 
()t  для маневра «горка».  
 
Отметим, что параметры горки выбраны следующим образом: высота 
5mz
м, ширина 
0 м.   
 
2.4. Движение квадрокоптера в горизонтальной плоскости.  
Полёт по окружности  
Случай движения квадрокоптера по горизонтальной окружности 
описывается следующим соотношением:  
 
cos ,
sin .x R R
yR




 
 
Аналог ичным образом находим управляющие воздействия и оставшиеся 
два угла (рис. 7 10). 
 
 
  14 
 
Рис.7. Функции управления Г1, Г2, Г3  и F для полёта квадрокоптера  
по горизонтальной окружности.  
 
 
Рис.8. Траектория
y(x)  для полёта квадрокопт ера  
по горизонтальной окружности.  
 
   
  
Рис.9. Функции 
(x)  и 
()t  для полёта квадрокоптера  
по горизонтальной окружности.  
 15 
   
     
Рис.10. Функции 
x( )t  и 
y( )t  для полёта квадрокоптера  
по горизонтальной окружности.  
2.5. Пространственные траектории. Движение квадрокоптера  
по винтовой линии  
Для нахождения закона движения для движения по винтовой линии, 
заменим в предыдущем разделе закон движения по вертикальной ос и на 
2
0sin ( t),z zz 
 где 
0zи 
z   параметры скорости подъема. В результате получаем 
законы управления и траекторию, изображенную на рисунках 11 15. 
 
   
 
  
  
Рис.11. Функции управления Г1, Г2, Г3  и F для полёта квадрокоптера  
по винтовой линии.  16 
 
 
Рис.12. Траектория 
z(x, y)  для полёта квадрокоптера по винтовой линии.  
 
   
  
Рис.13. Функции 
(x)  и 
()t  для полёта квадрокоптера по винтовой линии.  
 
   
  
Рис.14. Функции 
x( )t  и 
y( )t  для полёта квадрокоптера по винтовой линии.  
 17 
 
Рис.15. Функция 
z(t)  для полёта квадрокоптера по винтовой линии.  
 
Таким образом, найдено решение обратной задачи динамики для движения 
квадрокоптера по некоторым плоским и пространственным траекториям, 
включая такие фигуры высшего пилотажа, как полет по вертикальной 
окружности и полёт по винтовой линии . 
 
Заключение  
 
На основе построенной теоре тико механической модели были получены 
ограничения на пространство возможных движений квадрокоптера. В 
настоящей работе предложено решение обратной задачи динамики и 
представлен алгоритм вычисления управляющих воздействий. Отдельно 
рассмотрено движение в г оризонтальной и вертикальных плоскостях, 
построены графики управлений для полета по «мёртвой петле», «горке» и 
другим траекториям.  
Также для верификации найденных управлений была решена прямая 
задача динамики. При этом полученные результаты полностью соотв етствовали 
требуемым траекториям. С помощью полученного метода возможно вычислять 
функции управления для любой достаточно гладкой траектории. Кроме того, 
исходя из анализа уравнений движения можно сделать вывод о том,  что 
обратная задача динамики может быт ь решена также в том случае, если заданы 
2 координаты и 2 угла, либо 3 координаты и один угол.  
 
Настоящая работа выполнена при частичной финансовой поддержке 
гранта РФФИ 15 0707483 А.  18 
 
 
Библиографический  список  
 
1. Павловский В.Е., Савицкий А.В., Нейросетев ой алгоритм управления 
квадрокоптером на типовых траекториях, журнал «Нелинейный мир», изд. 
«Радиотехника », Москва , 2015. №6, С. 4751.   
2. Белинская Ю.С., Четвериков В.Н., Управление четырехвинтовым 
вертолетом, Научное издание МГТУ им. Н.Э. Баумана «Наука и  
образование», №5, 2012. С. 157 171.  
3. Канатников А.Н., Акопян К.Р., Управление плоским движением 
квадрокомптера, Математика и математическое моделирование. МГТУ им. 
Н.Э. Баумана. Электронный журнал. 2015. №2. С. 23 36. 
4. Канатников А.Н., Крищенко А.П., Ткаче в С.Б., Допустимые 
пространственные траектории беспилотного летательного аппарата в 
вертикальной плоскости, Научное издание МГТУ им. Н.Э. Баумана «Наука и 
образование», №3, 2012. С. 1 15.  
5. Фантони И., Лозано Р. Нелинейное управление механическими системами  с 
дефицитом управляющих воздействий. Москва Ижевск. ООО 
"Компьютерная динамика", 2012. 312 стр.  
6. Bresciani T., Modelling, Identification and Control of a Quadrotor Helicopter, 
Department of Automatic Control, Lund University, 2008.  
7. Dzul P. A. and Lozano R.  Realtime stabilization and tracking of a four rotor mini 
rotorcraft. IEEE Transaction on Control System Technology, July 2004, 12(4). P. 
510 – 516. 
8. Paul Pounds, Robert Mahony, Peter Corke, Modelling and Control of a Quad 
Rotor Robot, Canberra, Australian  National University, 2008, 10 p.  
9. Dierks T., Jagannathan S., Neural Network Control and Wireless Sensor Network 
based Localization of Quadrotor UAV Formations. Aerial Vehicles. 2009. P. 601 
620. 
10. Munoz R. S. M., Rossi C., Cruz A. B., Modelling and Identific ation of Flight 
Dynamics in Mini Helicopters Using Neural Networks. Aerial Vehicles. 2009. P. 
287312. 
11. Lavi B., An Adaptive Neuro PID for Controlling the Altitude of quadcopter 
Robot. International Conference on Methods and Models in Automation and 
Robotic s. Poland. Volume: 18th. 2014. P. 662 665. 
 
 
 
 19 
 
 
 
 
 
 
 
 
Оглавление  
 
Введение. Состояние проблемы  ................................ ................................ ................  3 
1. Ограничения на пространство возмо жных движений  ................................ ...... 4 
1.1. Описание модели  ................................ ................................ ..........................  4 
1.2.  Ограничения на пространство  возможных траекторий  
для общей задачи  ................................ ................................ .........................  7 
1.3.  Постановка задачи  ................................ ................................ .......................  8 
2. Решение обратной задачи  ................................ ................................ .....................  8 
2.1. Общий случай  ................................ ................................ ...............................  8 
2.2.  Движение квадрокоптера в верт икальной плоскости.  
Движение по окружности  ................................ ................................ ...........  9 
2.3. Движение квадрокоптера в вертикальной плоскости.  «Горка»  ............  12 
2.4.  Движение квадрокоптера в горизонтальной плоскости.   
Полёт по окружности  ................................ ................................ ................  13 
2.5.  Пространственные траектории. Д вижение квадрокоптера   
по винтовой линии  ................................ ................................ .....................  15 
Заключение  ................................ ................................ ................................ .................  17 
Библиографический  список  ................................ ................................ ......................  18 
Оглавление  ................................ ................................ ................................ .................  19 
 
 